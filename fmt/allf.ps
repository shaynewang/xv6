%!PS-Adobe-2.0
%%DocumentFonts: Courier Times-Bold
%%Title: <stdin> (mpage)
%%Creator: mpage 2.5.6 Januari 2008
%%CreationDate: Mon Nov  7 00:11:03 2016
%%Orientation: Landscape
%%DocumentMedia: letter 612 792
%%BoundingBox: 18 50 594 742
%%Pages: (atend)
%%EndComments

%%BeginProlog

/mp_stm usertime def
/mp_pgc statusdict begin pagecount end def
statusdict begin /jobname (<stdin>) def end
/reencsmalldict 12 dict def /ReEncodeSmall { reencsmalldict begin
/newcodesandnames exch def /newfontname exch def /basefontname exch def
/basefontdict basefontname findfont def /newfont basefontdict maxlength dict def
basefontdict { exch dup /FID ne { dup /Encoding eq { exch dup length array copy newfont 3 1 roll put } { exch newfont 3 1 roll put }
ifelse }
  { pop pop }
  ifelse } forall
newfont /FontName newfontname put
newcodesandnames aload pop newcodesandnames length 2 idiv
{ newfont /Encoding get 3 1 roll put } repeat
newfontname newfont definefont pop end } def
/charvec [
026 /Scaron
027 /Ydieresis
028 /Zcaron
029 /scaron
030 /trademark
031 /zcaron
032 /space
033 /exclam
034 /quotedbl
035 /numbersign
036 /dollar
037 /percent
038 /ampersand
039 /quoteright
040 /parenleft
041 /parenright
042 /asterisk
043 /plus
044 /comma
045 /minus
046 /period
047 /slash
048 /zero
049 /one
050 /two
051 /three
052 /four
053 /five
054 /six
055 /seven
056 /eight
057 /nine
058 /colon
059 /semicolon
060 /less
061 /equal
062 /greater
063 /question
064 /at
065 /A
066 /B
067 /C
068 /D
069 /E
070 /F
071 /G
072 /H
073 /I
074 /J
075 /K
076 /L
077 /M
078 /N
079 /O
080 /P
081 /Q
082 /R
083 /S
084 /T
085 /U
086 /V
087 /W
088 /X
089 /Y
090 /Z
091 /bracketleft
092 /backslash
093 /bracketright
094 /asciicircum
095 /underscore
096 /quoteleft
097 /a
098 /b
099 /c
100 /d
101 /e
102 /f
103 /g
104 /h
105 /i
106 /j
107 /k
108 /l
109 /m
110 /n
111 /o
112 /p
113 /q
114 /r
115 /s
116 /t
117 /u
118 /v
119 /w
120 /x
121 /y
122 /z
123 /braceleft
124 /bar
125 /braceright
126 /asciitilde
127 /.notdef
128 /fraction
129 /florin
130 /quotesingle
131 /quotedblleft
132 /guilsinglleft
133 /guilsinglright
134 /fi
135 /fl
136 /endash
137 /dagger
138 /daggerdbl
139 /bullet
140 /quotesinglbase
141 /quotedblbase
142 /quotedblright
143 /ellipsis
144 /dotlessi
145 /grave
146 /acute
147 /circumflex
148 /tilde
149 /oe
150 /breve
151 /dotaccent
152 /perthousand
153 /emdash
154 /ring
155 /Lslash
156 /OE
157 /hungarumlaut
158 /ogonek
159 /caron
160 /lslash
161 /exclamdown
162 /cent
163 /sterling
164 /currency
165 /yen
166 /brokenbar
167 /section
168 /dieresis
169 /copyright
170 /ordfeminine
171 /guillemotleft
172 /logicalnot
173 /hyphen
174 /registered
175 /macron
176 /degree
177 /plusminus
178 /twosuperior
179 /threesuperior
180 /acute
181 /mu
182 /paragraph
183 /periodcentered
184 /cedilla
185 /onesuperior
186 /ordmasculine
187 /guillemotright
188 /onequarter
189 /onehalf
190 /threequarters
191 /questiondown
192 /Agrave
193 /Aacute
194 /Acircumflex
195 /Atilde
196 /Adieresis
197 /Aring
198 /AE
199 /Ccedilla
200 /Egrave
201 /Eacute
202 /Ecircumflex
203 /Edieresis
204 /Igrave
205 /Iacute
206 /Icircumflex
207 /Idieresis
208 /Eth
209 /Ntilde
210 /Ograve
211 /Oacute
212 /Ocircumflex
213 /Otilde
214 /Odieresis
215 /multiply
216 /Oslash
217 /Ugrave
218 /Uacute
219 /Ucircumflex
220 /Udieresis
221 /Yacute
222 /Thorn
223 /germandbls
224 /agrave
225 /aacute
226 /acircumflex
227 /atilde
228 /adieresis
229 /aring
230 /ae
231 /ccedilla
232 /egrave
233 /eacute
234 /ecircumflex
235 /edieresis
236 /igrave
237 /iacute
238 /icircumflex
239 /idieresis
240 /eth
241 /ntilde
242 /ograve
243 /oacute
244 /ocircumflex
245 /otilde
246 /odieresis
247 /divide
248 /oslash
249 /ugrave
250 /uacute
251 /ucircumflex
252 /udieresis
253 /yacute
254 /thorn
255 /ydieresis
] def
/Courier /OurCharSet charvec ReEncodeSmall
/textfont /OurCharSet findfont 11 scalefont def
/textfontbold /OurCharSet-Bold findfont 11 scalefont def
/fnamefont /Times-Bold findfont 14 scalefont def
/headerfont /Times-Bold findfont 12 scalefont def
textfont setfont
(a) stringwidth pop /mp_a_x exch def
%%EndProlog
%%Page: 1 1
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  README  Page 1) show
0 648 moveto (xv6 is a re-implementation of Dennis Ritchie's and Ken Thompson's Unix) show
0 636 moveto (Version 6 \(v6\).  xv6 loosely follows the structure and style of v6,) show
0 624 moveto (but is implemented for a modern x86-based multiprocessor using ANSI C.) show
0 600 moveto (ACKNOWLEDGMENTS) show
0 576 moveto (xv6 is inspired by John Lions's Commentary on UNIX 6th Edition \(Peer) show
0 564 moveto (to Peer Communications; ISBN: 1-57398-013-7; 1st edition \(June 14,) show
0 552 moveto (2000\)\). See also http://pdos.csail.mit.edu/6.828/2014/xv6.html, which) show
0 540 moveto (provides pointers to on-line resources for v6.) show
0 516 moveto (xv6 borrows code from the following sources:) show
4 mp_a_x mul 504 moveto (JOS \(asm.h, elf.h, mmu.h, bootasm.S, ide.c, console.c, and others\)) show
4 mp_a_x mul 492 moveto (Plan 9 \(entryother.S, mp.h, mp.c, lapic.c\)) show
4 mp_a_x mul 480 moveto (FreeBSD \(ioapic.c\)) show
4 mp_a_x mul 468 moveto (NetBSD \(console.c\)) show
0 444 moveto (The following people have made contributions:) show
4 mp_a_x mul 432 moveto (Russ Cox \(context switching, locking\)) show
4 mp_a_x mul 420 moveto (Cliff Frey \(MP\)) show
4 mp_a_x mul 408 moveto (Xiao Yu \(MP\)) show
4 mp_a_x mul 396 moveto (Nickolai Zeldovich) show
4 mp_a_x mul 384 moveto (Austin Clements) show
0 360 moveto (In addition, we are grateful for the bug reports and patches contributed by) show
0 348 moveto (Silas Boyd-Wickizer, Peter Froehlich, Shivam Handa, Anders Kaseorg, Eddie) show
0 336 moveto (Kohler, Yandong Mao, Hitoshi Mitake, Carmi Merimovich, Joel Nider, Greg Price,) show
0 324 moveto (Eldar Sehayek, Yongming Shen, Stephen Tu, and Zouchangwei.) show
0 300 moveto (The code in the files that constitute xv6 is) show
0 288 moveto (Copyright 2006-2014 Frans Kaashoek, Robert Morris, and Russ Cox.) show
0 264 moveto (ERROR REPORTS) show
0 240 moveto (If you spot errors or have suggestions for improvement, please send) show
0 228 moveto (email to Frans Kaashoek and Robert Morris \(kaashoek,rtm@csail.mit.edu\). ) show
0 204 moveto (BUILDING AND RUNNING XV6) show
0 180 moveto (To build xv6 on an x86 ELF machine \(like Linux or FreeBSD\), run "make".) show
0 168 moveto (On non-x86 or non-ELF machines \(like OS X, even on x86\), you will) show
0 156 moveto (need to install a cross-compiler gcc suite capable of producing x86 ELF) show
0 144 moveto (binaries.  See http://pdos.csail.mit.edu/6.828/2014/tools.html.) show
0 132 moveto (Then run "make TOOLPREFIX=i386-jos-elf-".) show
0 108 moveto (To run xv6, install the QEMU PC simulators.  To run in QEMU, run "make qemu".) show
0 84 moveto (To create a typeset version of the code, run "make xv6.pdf".  This) show
0 72 moveto (requires the "mpage" utility.  See http://www.mesa.nl/pub/mpage/.) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  table of contents  Page 1) show
0 648 moveto (The numbers to the left of the file names in the table are sheet numbers.) show
0 636 moveto (The source code has been printed in a double column format with fifty) show
0 624 moveto (lines per column, giving one hundred lines per sheet \(or page\).) show
0 612 moveto (Thus there is a convenient relationship between line numbers and sheet numbers.) show
0 576 moveto (# basic headers) show
24 mp_a_x mul 576 moveto (32 vectors.pl) show
48 mp_a_x mul 576 moveto (68 mp.h) show
0 564 moveto (01 types.h) show
24 mp_a_x mul 564 moveto (33 trapasm.S) show
48 mp_a_x mul 564 moveto (69 mp.c) show
0 552 moveto (01 param.h) show
24 mp_a_x mul 552 moveto (33 trap.c) show
48 mp_a_x mul 552 moveto (71 lapic.c) show
0 540 moveto (02 memlayout.h) show
24 mp_a_x mul 540 moveto (35 syscall.h) show
48 mp_a_x mul 540 moveto (73 ioapic.c) show
0 528 moveto (02 date.h) show
24 mp_a_x mul 528 moveto (35 syscall.c) show
48 mp_a_x mul 528 moveto (74 picirq.c) show
0 516 moveto (03 defs.h) show
24 mp_a_x mul 516 moveto (38 sysproc.c) show
48 mp_a_x mul 516 moveto (75 kbd.h) show
0 504 moveto (05 x86.h) show
24 mp_a_x mul 504 moveto (40 halt.c) show
48 mp_a_x mul 504 moveto (77 kbd.c) show
0 492 moveto (07 asm.h) show
48 mp_a_x mul 492 moveto (77 console.c) show
0 480 moveto (07 mmu.h) show
24 mp_a_x mul 480 moveto (# file system) show
48 mp_a_x mul 480 moveto (80 timer.c) show
0 468 moveto (10 elf.h) show
24 mp_a_x mul 468 moveto (41 buf.h) show
48 mp_a_x mul 468 moveto (81 uart.c) show
24 mp_a_x mul 456 moveto (41 fcntl.h) show
0 444 moveto (# entering xv6) show
24 mp_a_x mul 444 moveto (42 stat.h) show
48 mp_a_x mul 444 moveto (# user-level) show
0 432 moveto (10 entry.S) show
24 mp_a_x mul 432 moveto (42 fs.h) show
48 mp_a_x mul 432 moveto (82 initcode.S) show
0 420 moveto (11 entryother.S) show
24 mp_a_x mul 420 moveto (43 file.h) show
48 mp_a_x mul 420 moveto (82 usys.S) show
0 408 moveto (12 main.c) show
24 mp_a_x mul 408 moveto (44 ide.c) show
48 mp_a_x mul 408 moveto (83 init.c) show
24 mp_a_x mul 396 moveto (46 bio.c) show
48 mp_a_x mul 396 moveto (83 sh.c) show
0 384 moveto (# locks) show
24 mp_a_x mul 384 moveto (47 log.c) show
0 372 moveto (14 spinlock.h) show
24 mp_a_x mul 372 moveto (50 fs.c) show
48 mp_a_x mul 372 moveto (# bootloader) show
0 360 moveto (14 spinlock.c) show
24 mp_a_x mul 360 moveto (57 file.c) show
48 mp_a_x mul 360 moveto (90 bootasm.S) show
24 mp_a_x mul 348 moveto (59 sysfile.c) show
48 mp_a_x mul 348 moveto (91 bootmain.c) show
0 336 moveto (# processes) show
24 mp_a_x mul 336 moveto (63 exec.c) show
0 324 moveto (16 vm.c) show
48 mp_a_x mul 324 moveto (# add student files her) show
0 312 moveto (20 proc.h) show
24 mp_a_x mul 312 moveto (# pipes) show
48 mp_a_x mul 312 moveto (92 print_mode.c) show
0 300 moveto (22 proc.c) show
24 mp_a_x mul 300 moveto (65 pipe.c) show
48 mp_a_x mul 300 moveto (93 date.c) show
0 288 moveto (30 swtch.S) show
48 mp_a_x mul 288 moveto (93 uproc.h) show
0 276 moveto (31 kalloc.c) show
24 mp_a_x mul 276 moveto (# string operations) show
48 mp_a_x mul 276 moveto (94 testgiduid.c) show
24 mp_a_x mul 264 moveto (66 string.c) show
48 mp_a_x mul 264 moveto (94 ps.c) show
0 252 moveto (# system calls) show
48 mp_a_x mul 252 moveto (95 time.c) show
0 240 moveto (32 traps.h) show
24 mp_a_x mul 240 moveto (# low-level hardware) show
48 mp_a_x mul 240 moveto (96 testSched.c) show
0 204 moveto (The source listing is preceded by a cross-reference that lists every defined ) show
0 192 moveto (constant, struct, global variable, and function in xv6.  Each entry gives,) show
0 180 moveto (on the same line as the name, the line number \(or, in a few cases, numbers\)) show
0 168 moveto (where the name is defined.  Successive lines in an entry list the line) show
0 156 moveto (numbers where the name is used.  For example, this entry:) show
4 mp_a_x mul 132 moveto (swtch 2658) show
8 mp_a_x mul 120 moveto (0374 2428 2466 2657 2658) show
0 96 moveto (indicates that swtch is defined on line 2658 and is mentioned on five lines) show
0 84 moveto (on sheets 03, 24, and 26.) show
grestore
restore
showpage
%%Page: 2 2
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  cross-references  Page 1) show
0 648 moveto (acquire 1474) show
40 mp_a_x mul 648 moveto (4109 4539 4671 4672 4685) show
4 mp_a_x mul 636 moveto (0432 1474 1478 2296 2323) show
40 mp_a_x mul 636 moveto (4688 4717 4728 4740) show
4 mp_a_x mul 624 moveto (2330 2346 2367 2384 2410) show
36 mp_a_x mul 624 moveto (B_DIRTY 4111) show
4 mp_a_x mul 612 moveto (2444 2522 2563 2591 2651) show
40 mp_a_x mul 612 moveto (4111 4493 4516 4521 4541) show
4 mp_a_x mul 600 moveto (2663 2692 2739 2776 2804) show
40 mp_a_x mul 600 moveto (4561 4685 4719 4989) show
4 mp_a_x mul 588 moveto (2849 2864 2891 2908 3019) show
36 mp_a_x mul 588 moveto (begin_op 4878) show
4 mp_a_x mul 576 moveto (3034 3175 3192 3400 3872) show
40 mp_a_x mul 576 moveto (0388 2558 4878 5783 5857) show
4 mp_a_x mul 564 moveto (3892 4507 4546 4665 4731) show
40 mp_a_x mul 564 moveto (6021 6088 6190 6235 6258) show
4 mp_a_x mul 552 moveto (4880 4907 4924 4981 5229) show
40 mp_a_x mul 552 moveto (6277 6370) show
4 mp_a_x mul 540 moveto (5265 5282 5311 5327 5337) show
36 mp_a_x mul 540 moveto (bfree 5079) show
4 mp_a_x mul 528 moveto (5729 5754 5768 6563 6583) show
40 mp_a_x mul 528 moveto (5079 5414 5424 5427) show
4 mp_a_x mul 516 moveto (6605 7810 7944 7990 8026) show
36 mp_a_x mul 516 moveto (bget 4661) show
0 504 moveto (allocproc 2317) show
40 mp_a_x mul 504 moveto (4661 4693 4706) show
4 mp_a_x mul 492 moveto (2317 2424 2486) show
36 mp_a_x mul 492 moveto (binit 4639) show
0 480 moveto (allocuvm 1853) show
40 mp_a_x mul 480 moveto (0316 1281 4639) show
4 mp_a_x mul 468 moveto (0478 1853 1867 2465 6396) show
36 mp_a_x mul 468 moveto (bmap 5368) show
4 mp_a_x mul 456 moveto (6408) show
40 mp_a_x mul 456 moveto (5172 5368 5394 5469 5496) show
0 444 moveto (alltraps 3304) show
36 mp_a_x mul 444 moveto (bootmain 9117) show
4 mp_a_x mul 432 moveto (3259 3267 3280 3285 3303) show
40 mp_a_x mul 432 moveto (9063 9117) show
4 mp_a_x mul 420 moveto (3304) show
36 mp_a_x mul 420 moveto (BPB 4307) show
0 408 moveto (ALT 7560) show
40 mp_a_x mul 408 moveto (4307 4310 5060 5062 5086) show
4 mp_a_x mul 396 moveto (7560 7588 7590) show
36 mp_a_x mul 396 moveto (bread 4702) show
0 384 moveto (argfd 5919) show
40 mp_a_x mul 384 moveto (0317 4702 4827 4828 4840) show
4 mp_a_x mul 372 moveto (5919 5956 5971 5983 5994) show
40 mp_a_x mul 372 moveto (4856 4938 4939 5032 5043) show
4 mp_a_x mul 360 moveto (6006) show
40 mp_a_x mul 360 moveto (5061 5085 5188 5209 5289) show
0 348 moveto (argint 3595) show
40 mp_a_x mul 348 moveto (5384 5420 5469 5496) show
4 mp_a_x mul 336 moveto (0451 3595 3608 3624 3834) show
36 mp_a_x mul 336 moveto (brelse 4726) show
4 mp_a_x mul 324 moveto (3856 3870 3926 3939 3981) show
40 mp_a_x mul 324 moveto (0318 4726 4729 4831 4832) show
4 mp_a_x mul 312 moveto (4008 4010 5924 5971 5983) show
40 mp_a_x mul 312 moveto (4847 4864 4942 4943 5034) show
4 mp_a_x mul 300 moveto (6187 6260 6261 6307) show
40 mp_a_x mul 300 moveto (5046 5067 5072 5092 5194) show
0 288 moveto (argptr 3604) show
40 mp_a_x mul 288 moveto (5197 5218 5297 5390 5426) show
4 mp_a_x mul 276 moveto (0452 3604 3914 3983 5971) show
40 mp_a_x mul 276 moveto (5472 5500) show
4 mp_a_x mul 264 moveto (5983 6006 6333) show
36 mp_a_x mul 264 moveto (BSIZE 4255) show
0 252 moveto (argstr 3621) show
40 mp_a_x mul 252 moveto (4107 4255 4273 4301 4307) show
4 mp_a_x mul 240 moveto (0453 3621 6018 6085 6187) show
40 mp_a_x mul 240 moveto (4481 4495 4517 4808 4829) show
4 mp_a_x mul 228 moveto (6236 6259 6278 6307) show
40 mp_a_x mul 228 moveto (4940 5044 5469 5470 5471) show
0 216 moveto (__attribute__ 1360) show
40 mp_a_x mul 216 moveto (5492 5496 5497 5498) show
4 mp_a_x mul 204 moveto (0324 0414 1259 1360) show
36 mp_a_x mul 204 moveto (BUDGET 2066) show
0 192 moveto (BACK 8362) show
40 mp_a_x mul 192 moveto (2066 2301 2526 2699 2711) show
4 mp_a_x mul 180 moveto (8362 8477 8733 8989) show
40 mp_a_x mul 180 moveto (2790) show
0 168 moveto (backcmd 8400 8727) show
36 mp_a_x mul 168 moveto (buf 4100) show
4 mp_a_x mul 156 moveto (8400 8414 8478 8727 8729) show
40 mp_a_x mul 156 moveto (0300 0317 0318 0319 0360) show
4 mp_a_x mul 144 moveto (8842 8955 8990) show
40 mp_a_x mul 144 moveto (0387 2006 2009 2018 2020) show
0 132 moveto (BACKSPACE 7873) show
40 mp_a_x mul 132 moveto (4100 4104 4105 4106 4412) show
4 mp_a_x mul 120 moveto (7873 7890 7922 7954 7960) show
40 mp_a_x mul 120 moveto (4428 4431 4475 4504 4535) show
0 108 moveto (balloc 5054) show
40 mp_a_x mul 108 moveto (4537 4540 4627 4631 4635) show
4 mp_a_x mul 96 moveto (5054 5074 5375 5383 5387) show
40 mp_a_x mul 96 moveto (4641 4648 4660 4663 4701) show
0 84 moveto (BBLOCK 4310) show
40 mp_a_x mul 84 moveto (4704 4715 4726 4755 4827) show
4 mp_a_x mul 72 moveto (4310 5061 5085) show
40 mp_a_x mul 72 moveto (4828 4840 4841 4847 4856) show
0 60 moveto (B_BUSY 4109) show
40 mp_a_x mul 60 moveto (4857 4863 4864 4938 4939) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  cross-references  Page 2) show
4 mp_a_x mul 648 moveto (4972 5019 5030 5041 5057) show
40 mp_a_x mul 648 moveto (8951 8952 8961 8964 8966) show
4 mp_a_x mul 636 moveto (5081 5184 5206 5276 5371) show
40 mp_a_x mul 636 moveto (8972 8973 8978 8984 8990) show
4 mp_a_x mul 624 moveto (5409 5455 5482 7779 7790) show
40 mp_a_x mul 624 moveto (8991 8994) show
4 mp_a_x mul 612 moveto (7794 7797 7931 7952 7966) show
36 mp_a_x mul 612 moveto (CMOS_PORT 7235) show
4 mp_a_x mul 600 moveto (8000 8021 8028 8487 8490) show
40 mp_a_x mul 600 moveto (7235 7249 7250 7288) show
4 mp_a_x mul 588 moveto (8491 8492 8606 8618 8620) show
36 mp_a_x mul 588 moveto (CMOS_RETURN 7236) show
4 mp_a_x mul 576 moveto (8623 8624 8625 8629 8630) show
40 mp_a_x mul 576 moveto (7236 7291) show
4 mp_a_x mul 564 moveto (8635) show
36 mp_a_x mul 564 moveto (CMOS_STATA 7275) show
0 552 moveto (B_VALID 4110) show
40 mp_a_x mul 552 moveto (7275 7323) show
4 mp_a_x mul 540 moveto (4110 4520 4541 4561 4707) show
36 mp_a_x mul 540 moveto (CMOS_STATB 7276) show
0 528 moveto (bwrite 4715) show
40 mp_a_x mul 528 moveto (7276 7316) show
4 mp_a_x mul 516 moveto (0319 4715 4718 4830 4863) show
36 mp_a_x mul 516 moveto (CMOS_UIP 7277) show
4 mp_a_x mul 504 moveto (4941) show
40 mp_a_x mul 504 moveto (7277 7323) show
0 492 moveto (bzero 5039) show
36 mp_a_x mul 492 moveto (COM1 8113) show
4 mp_a_x mul 480 moveto (5039 5068) show
40 mp_a_x mul 480 moveto (8113 8123 8126 8127 8128) show
0 468 moveto (C 7581 7937) show
40 mp_a_x mul 468 moveto (8129 8130 8131 8134 8140) show
4 mp_a_x mul 456 moveto (7581 7629 7654 7655 7656) show
40 mp_a_x mul 456 moveto (8141 8157 8159 8167 8169) show
4 mp_a_x mul 444 moveto (7657 7658 7660 7937 7947) show
36 mp_a_x mul 444 moveto (commit 4951) show
4 mp_a_x mul 432 moveto (7950 7957 7968 8001) show
40 mp_a_x mul 432 moveto (4803 4923 4951) show
0 420 moveto (CAPSLOCK 7562) show
36 mp_a_x mul 420 moveto (CONSOLE 4387) show
4 mp_a_x mul 408 moveto (7562 7595 7736) show
40 mp_a_x mul 408 moveto (4387 8040 8041) show
0 396 moveto (cgaputc 7878) show
36 mp_a_x mul 396 moveto (consoleinit 8036) show
4 mp_a_x mul 384 moveto (7878 7926) show
40 mp_a_x mul 384 moveto (0321 1277 8036) show
0 372 moveto (clearpteu 1929) show
36 mp_a_x mul 372 moveto (consoleintr 7940) show
4 mp_a_x mul 360 moveto (0487 1929 1935 6410) show
40 mp_a_x mul 360 moveto (0323 7748 7940 8175) show
0 348 moveto (cli 0607) show
36 mp_a_x mul 348 moveto (consoleread 7983) show
4 mp_a_x mul 336 moveto (0607 0609 1176 1560 7860) show
40 mp_a_x mul 336 moveto (7983 8041) show
4 mp_a_x mul 324 moveto (7917 9012) show
36 mp_a_x mul 324 moveto (consolewrite 8021) show
0 312 moveto (cmd 8366) show
40 mp_a_x mul 312 moveto (8021 8040) show
4 mp_a_x mul 300 moveto (8366 8378 8387 8388 8393) show
36 mp_a_x mul 300 moveto (consputc 7914) show
4 mp_a_x mul 288 moveto (8394 8402 8407 8411 8420) show
40 mp_a_x mul 288 moveto (7766 7797 7818 7836 7839) show
4 mp_a_x mul 276 moveto (8423 8428 8436 8442 8446) show
40 mp_a_x mul 276 moveto (7843 7844 7914 7954 7960) show
4 mp_a_x mul 264 moveto (8454 8478 8480 8569 8581) show
40 mp_a_x mul 264 moveto (7967 8028) show
4 mp_a_x mul 252 moveto (8585 8586 8663 8666 8668) show
36 mp_a_x mul 252 moveto (context 2110) show
4 mp_a_x mul 240 moveto (8669 8670 8671 8674 8675) show
40 mp_a_x mul 240 moveto (0301 0429 2071 2110 2129) show
4 mp_a_x mul 228 moveto (8677 8679 8680 8681 8682) show
40 mp_a_x mul 228 moveto (2362 2363 2364 2365 2667) show
4 mp_a_x mul 216 moveto (8683 8684 8685 8686 8687) show
40 mp_a_x mul 216 moveto (2743 2795 2990) show
4 mp_a_x mul 204 moveto (8700 8701 8703 8705 8706) show
36 mp_a_x mul 204 moveto (CONV 7332) show
4 mp_a_x mul 192 moveto (8707 8708 8709 8710 8713) show
40 mp_a_x mul 192 moveto (7332 7333 7334 7335 7336) show
4 mp_a_x mul 180 moveto (8714 8716 8718 8719 8720) show
40 mp_a_x mul 180 moveto (7337 7338 7339) show
4 mp_a_x mul 168 moveto (8721 8722 8723 8726 8727) show
36 mp_a_x mul 168 moveto (copyout 2004) show
4 mp_a_x mul 156 moveto (8729 8731 8732 8733 8734) show
40 mp_a_x mul 156 moveto (0486 2004 6418 6429) show
4 mp_a_x mul 144 moveto (8735 8812 8813 8814 8815) show
36 mp_a_x mul 144 moveto (copyuvm 1953) show
4 mp_a_x mul 132 moveto (8817 8821 8824 8830 8831) show
40 mp_a_x mul 132 moveto (0483 1953 1964 1966 2490) show
4 mp_a_x mul 120 moveto (8834 8837 8839 8842 8846) show
36 mp_a_x mul 120 moveto (countForever 9611) show
4 mp_a_x mul 108 moveto (8848 8850 8853 8855 8858) show
40 mp_a_x mul 108 moveto (9611 9639 9643) show
4 mp_a_x mul 96 moveto (8860 8863 8864 8875 8878) show
36 mp_a_x mul 96 moveto (cprintf 7802) show
4 mp_a_x mul 84 moveto (8881 8885 8900 8903 8908) show
40 mp_a_x mul 84 moveto (0322 1274 1314 1867 2292) show
4 mp_a_x mul 72 moveto (8912 8913 8916 8921 8922) show
40 mp_a_x mul 72 moveto (2305 2706 2939 2941 2942) show
4 mp_a_x mul 60 moveto (8928 8937 8938 8944 8945) show
40 mp_a_x mul 60 moveto (2943 2945 2947 2949 2971) show
grestore
restore
showpage
%%Page: 3 3
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  cross-references  Page 3) show
4 mp_a_x mul 648 moveto (2974 2976 2987 2992 2994) show
40 mp_a_x mul 648 moveto (6041 6167 6171 6172) show
4 mp_a_x mul 636 moveto (3424 3432 3437 3762 3765) show
36 mp_a_x mul 636 moveto (dirlookup 5521) show
4 mp_a_x mul 624 moveto (3902 5172 7019 7039 7211) show
40 mp_a_x mul 624 moveto (0341 5521 5527 5559 5644) show
4 mp_a_x mul 612 moveto (7412 7802 7862 7863 7864) show
40 mp_a_x mul 612 moveto (6100 6145) show
4 mp_a_x mul 600 moveto (7867) show
36 mp_a_x mul 600 moveto (DIRSIZ 4313) show
0 588 moveto (cpu 2069) show
40 mp_a_x mul 588 moveto (4313 4317 5515 5572 5608) show
4 mp_a_x mul 576 moveto (0363 1274 1314 1316 1328) show
40 mp_a_x mul 576 moveto (5609 5661 6015 6082 6139) show
4 mp_a_x mul 564 moveto (1406 1466 1487 1508 1546) show
36 mp_a_x mul 564 moveto (dobuiltin 8581) show
4 mp_a_x mul 552 moveto (1561 1562 1570 1572 1618) show
40 mp_a_x mul 552 moveto (8581 8630) show
4 mp_a_x mul 540 moveto (1631 1637 1776 1777 1778) show
36 mp_a_x mul 540 moveto (DPL_USER 0829) show
4 mp_a_x mul 528 moveto (1779 2069 2079 2083 2094) show
40 mp_a_x mul 528 moveto (0829 1627 1628 2431 2432) show
4 mp_a_x mul 516 moveto (2667 2743 2768 2774 2795) show
40 mp_a_x mul 516 moveto (3373 3447 3456) show
4 mp_a_x mul 504 moveto (2796 3399 3424 3425 3432) show
36 mp_a_x mul 504 moveto (E0ESC 7566) show
4 mp_a_x mul 492 moveto (3433 3437 3439 6913 6914) show
40 mp_a_x mul 492 moveto (7566 7720 7724 7725 7727) show
4 mp_a_x mul 480 moveto (7211 7862) show
40 mp_a_x mul 480 moveto (7730) show
0 468 moveto (cpunum 7201) show
36 mp_a_x mul 468 moveto (elfhdr 1005) show
4 mp_a_x mul 456 moveto (0378 1338 1624 7201 7423) show
40 mp_a_x mul 456 moveto (1005 6365 9119 9124) show
4 mp_a_x mul 444 moveto (7432) show
36 mp_a_x mul 444 moveto (ELF_MAGIC 1002) show
0 432 moveto (CR0_PE 0777) show
40 mp_a_x mul 432 moveto (1002 6381 9130) show
4 mp_a_x mul 420 moveto (0777 1185 1209 9043) show
36 mp_a_x mul 420 moveto (ELF_PROG_LOAD 1036) show
0 408 moveto (CR0_PG 0787) show
40 mp_a_x mul 408 moveto (1036 6392) show
4 mp_a_x mul 396 moveto (0787 1100 1209) show
36 mp_a_x mul 396 moveto (end_op 4903) show
0 384 moveto (CR0_WP 0783) show
40 mp_a_x mul 384 moveto (0389 2560 4903 5785 5862) show
4 mp_a_x mul 372 moveto (0783 1100 1209) show
40 mp_a_x mul 372 moveto (6023 6030 6048 6057 6090) show
0 360 moveto (CR4_PSE 0789) show
40 mp_a_x mul 360 moveto (6124 6130 6195 6200 6206) show
4 mp_a_x mul 348 moveto (0789 1093 1202) show
40 mp_a_x mul 348 moveto (6215 6219 6237 6241 6263) show
0 336 moveto (create 6135) show
40 mp_a_x mul 336 moveto (6267 6279 6285 6290 6372) show
4 mp_a_x mul 324 moveto (6135 6155 6168 6172 6193) show
40 mp_a_x mul 324 moveto (6402 6455) show
4 mp_a_x mul 312 moveto (6236 6262) show
36 mp_a_x mul 312 moveto (entry 1090) show
0 300 moveto (CRTPORT 7874) show
40 mp_a_x mul 300 moveto (1011 1086 1089 1090 3252) show
4 mp_a_x mul 288 moveto (7874 7883 7884 7885 7886) show
40 mp_a_x mul 288 moveto (3253 6442 6821 9121 9145) show
4 mp_a_x mul 276 moveto (7906 7907 7908 7909) show
40 mp_a_x mul 276 moveto (9146) show
0 264 moveto (CTL 7559) show
36 mp_a_x mul 264 moveto (EOI 7116) show
4 mp_a_x mul 252 moveto (7559 7585 7589 7735) show
40 mp_a_x mul 252 moveto (7116 7186 7225) show
0 240 moveto (DAY 7282) show
36 mp_a_x mul 240 moveto (ERROR 7137) show
4 mp_a_x mul 228 moveto (7282 7305) show
40 mp_a_x mul 228 moveto (7137 7179) show
0 216 moveto (deallocuvm 1882) show
36 mp_a_x mul 216 moveto (ESR 7119) show
4 mp_a_x mul 204 moveto (0479 1868 1882 1916 2468) show
40 mp_a_x mul 204 moveto (7119 7182 7183) show
0 192 moveto (DEVSPACE 0204) show
36 mp_a_x mul 192 moveto (exec 6360) show
4 mp_a_x mul 180 moveto (0204 1732 1745) show
40 mp_a_x mul 180 moveto (0327 3709 6323 6360 8268) show
0 168 moveto (devsw 4380) show
40 mp_a_x mul 168 moveto (8329 8330 8431 8432 9570) show
4 mp_a_x mul 156 moveto (4380 4385 5458 5460 5485) show
36 mp_a_x mul 156 moveto (EXEC 8358) show
4 mp_a_x mul 144 moveto (5487 5711 8040 8041) show
40 mp_a_x mul 144 moveto (8358 8427 8670 8965) show
0 132 moveto (dinode 4277) show
36 mp_a_x mul 132 moveto (execcmd 8370 8664) show
4 mp_a_x mul 120 moveto (4277 4301 5185 5189 5207) show
40 mp_a_x mul 120 moveto (8370 8415 8428 8664 8666) show
4 mp_a_x mul 108 moveto (5210 5277 5290) show
40 mp_a_x mul 108 moveto (8921 8927 8928 8956 8966) show
0 96 moveto (dirent 4315) show
36 mp_a_x mul 96 moveto (exit 2538) show
4 mp_a_x mul 84 moveto (4315 5524 5555 6066 6081) show
40 mp_a_x mul 84 moveto (0408 2538 2580 3389 3393) show
0 72 moveto (dirlink 5552) show
40 mp_a_x mul 72 moveto (3448 3457 3704 3819 8216) show
4 mp_a_x mul 60 moveto (0340 5531 5552 5567 5575) show
40 mp_a_x mul 60 moveto (8219 8261 8326 8331 8421) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  cross-references  Page 4) show
4 mp_a_x mul 648 moveto (8430 8440 8483 8638 8645) show
40 mp_a_x mul 648 moveto (3111 3134 3140 3151) show
4 mp_a_x mul 636 moveto (9311 9315 9435 9442 9466) show
36 mp_a_x mul 636 moveto (freevm 1910) show
4 mp_a_x mul 624 moveto (9498 9505 9572 9577 9584) show
40 mp_a_x mul 624 moveto (0480 1910 1915 1978 2604) show
4 mp_a_x mul 612 moveto (9591 9644) show
40 mp_a_x mul 612 moveto (6445 6452) show
0 600 moveto (EXTMEM 0202) show
36 mp_a_x mul 600 moveto (FSSIZE 0162) show
4 mp_a_x mul 588 moveto (0202 0208 1729) show
40 mp_a_x mul 588 moveto (0162 4479) show
0 576 moveto (fdalloc 5938) show
36 mp_a_x mul 576 moveto (gatedesc 0951) show
4 mp_a_x mul 564 moveto (5938 5958 6211 6338) show
40 mp_a_x mul 564 moveto (0573 0576 0951 3361) show
0 552 moveto (fetchint 3567) show
36 mp_a_x mul 552 moveto (getbuiltin 8551) show
4 mp_a_x mul 540 moveto (0454 3567 3597 6314) show
40 mp_a_x mul 540 moveto (8551 8576) show
0 528 moveto (fetchstr 3579) show
36 mp_a_x mul 528 moveto (getcallerpcs 1526) show
4 mp_a_x mul 516 moveto (0455 3579 3626 6320) show
40 mp_a_x mul 516 moveto (0433 1488 1526 2990 7865) show
0 504 moveto (file 4350) show
36 mp_a_x mul 504 moveto (getcmd 8487) show
4 mp_a_x mul 492 moveto (0302 0330 0331 0332 0334) show
40 mp_a_x mul 492 moveto (8487 8618) show
4 mp_a_x mul 480 moveto (0335 0336 0401 2132 4350) show
36 mp_a_x mul 480 moveto (getprocs 3003) show
4 mp_a_x mul 468 moveto (5020 5708 5714 5724 5727) show
40 mp_a_x mul 468 moveto (0422 3003 3732 3985 8288) show
4 mp_a_x mul 456 moveto (5730 5751 5752 5764 5766) show
40 mp_a_x mul 456 moveto (9463) show
4 mp_a_x mul 444 moveto (5802 5815 5835 5913 5919) show
36 mp_a_x mul 444 moveto (gettoken 8756) show
4 mp_a_x mul 432 moveto (5922 5938 5953 5967 5979) show
40 mp_a_x mul 432 moveto (8756 8841 8845 8857 8870) show
4 mp_a_x mul 420 moveto (5992 6003 6184 6330 6506) show
40 mp_a_x mul 420 moveto (8871 8907 8911 8933) show
4 mp_a_x mul 408 moveto (6521 7760 8108 8379 8438) show
36 mp_a_x mul 408 moveto (growproc 2459) show
4 mp_a_x mul 396 moveto (8439 8675 8683 8872) show
40 mp_a_x mul 396 moveto (0410 2459 3859) show
0 384 moveto (filealloc 5725) show
36 mp_a_x mul 384 moveto (havedisk1 4430) show
4 mp_a_x mul 372 moveto (0330 5725 6211 6527) show
40 mp_a_x mul 372 moveto (4430 4464 4543) show
0 360 moveto (fileclose 5764) show
36 mp_a_x mul 360 moveto (holding 1544) show
4 mp_a_x mul 348 moveto (0331 2553 5764 5770 5997) show
40 mp_a_x mul 348 moveto (0434 1477 1504 1544 2240) show
4 mp_a_x mul 336 moveto (6213 6341 6342 6554 6556) show
40 mp_a_x mul 336 moveto (2254 2266 2382 2766) show
0 324 moveto (filedup 5752) show
36 mp_a_x mul 324 moveto (HOURS 7281) show
4 mp_a_x mul 312 moveto (0332 2514 5752 5756 5960) show
40 mp_a_x mul 312 moveto (7281 7304) show
0 300 moveto (fileinit 5718) show
36 mp_a_x mul 300 moveto (ialloc 5181) show
4 mp_a_x mul 288 moveto (0333 1282 5718) show
40 mp_a_x mul 288 moveto (0342 5181 5199 6154 6155) show
0 276 moveto (fileread 5815) show
36 mp_a_x mul 276 moveto (IBLOCK 4304) show
4 mp_a_x mul 264 moveto (0334 5815 5830 5973) show
40 mp_a_x mul 264 moveto (4304 5188 5209 5289) show
0 252 moveto (filestat 5802) show
36 mp_a_x mul 252 moveto (I_BUSY 4375) show
4 mp_a_x mul 240 moveto (0335 5802 6008) show
40 mp_a_x mul 240 moveto (4375 5283 5285 5308 5312) show
0 228 moveto (filewrite 5835) show
40 mp_a_x mul 228 moveto (5330 5332) show
4 mp_a_x mul 216 moveto (0336 5835 5867 5872 5985) show
36 mp_a_x mul 216 moveto (ICRHI 7130) show
0 204 moveto (FL_IF 0760) show
40 mp_a_x mul 204 moveto (7130 7189 7257 7269) show
4 mp_a_x mul 192 moveto (0760 1562 1568 2435 2772) show
36 mp_a_x mul 192 moveto (ICRLO 7120) show
4 mp_a_x mul 180 moveto (7208) show
40 mp_a_x mul 180 moveto (7120 7190 7191 7258 7260) show
0 168 moveto (fork 2480) show
40 mp_a_x mul 168 moveto (7270) show
4 mp_a_x mul 156 moveto (0409 2480 3703 3813 8260) show
36 mp_a_x mul 156 moveto (ID 7113) show
4 mp_a_x mul 144 moveto (8323 8325 8655 8657 9563) show
40 mp_a_x mul 144 moveto (7113 7149 7216) show
4 mp_a_x mul 132 moveto (9637) show
36 mp_a_x mul 132 moveto (IDE_BSY 4415) show
0 120 moveto (fork1 8651) show
40 mp_a_x mul 120 moveto (4415 4439) show
4 mp_a_x mul 108 moveto (8405 8447 8457 8464 8479) show
36 mp_a_x mul 108 moveto (IDE_CMD_READ 4420) show
4 mp_a_x mul 96 moveto (8634 8651) show
40 mp_a_x mul 96 moveto (4420 4497) show
0 84 moveto (forkret 2813) show
36 mp_a_x mul 84 moveto (IDE_CMD_WRITE 4421) show
4 mp_a_x mul 72 moveto (2223 2365 2813) show
40 mp_a_x mul 72 moveto (4421 4494) show
0 60 moveto (freerange 3151) show
36 mp_a_x mul 60 moveto (IDE_DF 4417) show
grestore
restore
showpage
%%Page: 4 4
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  cross-references  Page 5) show
4 mp_a_x mul 648 moveto (4417 4441) show
36 mp_a_x mul 648 moveto (inituvm 1803) show
0 636 moveto (IDE_DRDY 4416) show
40 mp_a_x mul 636 moveto (0481 1803 1808 2428) show
4 mp_a_x mul 624 moveto (4416 4439) show
36 mp_a_x mul 624 moveto (inode 4362) show
0 612 moveto (IDE_ERR 4418) show
40 mp_a_x mul 612 moveto (0303 0340 0341 0342 0343) show
4 mp_a_x mul 600 moveto (4418 4441) show
40 mp_a_x mul 600 moveto (0345 0346 0347 0348 0349) show
0 588 moveto (ideinit 4451) show
40 mp_a_x mul 588 moveto (0351 0352 0353 0354 0355) show
4 mp_a_x mul 576 moveto (0358 1283 4451) show
40 mp_a_x mul 576 moveto (0482 1818 2133 4356 4362) show
0 564 moveto (ideintr 4502) show
40 mp_a_x mul 564 moveto (4381 4382 5023 5164 5176) show
4 mp_a_x mul 552 moveto (0359 3408 4502) show
40 mp_a_x mul 552 moveto (5180 5204 5224 5227 5233) show
0 540 moveto (idelock 4427) show
40 mp_a_x mul 540 moveto (5262 5263 5274 5306 5325) show
4 mp_a_x mul 528 moveto (4427 4455 4507 4509 4528) show
40 mp_a_x mul 528 moveto (5352 5368 5406 5437 5452) show
4 mp_a_x mul 516 moveto (4546 4562 4565) show
40 mp_a_x mul 516 moveto (5479 5520 5521 5552 5556) show
0 504 moveto (iderw 4535) show
40 mp_a_x mul 504 moveto (5623 5626 5658 5665 6016) show
4 mp_a_x mul 492 moveto (0360 4535 4540 4542 4544) show
40 mp_a_x mul 492 moveto (6063 6080 6134 6138 6185) show
4 mp_a_x mul 480 moveto (4708 4720) show
40 mp_a_x mul 480 moveto (6233 6253 6275 6366 7983) show
0 468 moveto (idestart 4475) show
40 mp_a_x mul 468 moveto (8021) show
4 mp_a_x mul 456 moveto (4431 4475 4478 4484 4526) show
36 mp_a_x mul 456 moveto (INPUT_BUF 7929) show
4 mp_a_x mul 444 moveto (4558) show
40 mp_a_x mul 444 moveto (7929 7931 7952 7964 7966) show
0 432 moveto (idewait 4435) show
40 mp_a_x mul 432 moveto (7968 8000) show
4 mp_a_x mul 420 moveto (4435 4458 4486 4516) show
36 mp_a_x mul 420 moveto (insl 0512) show
0 408 moveto (idtinit 3379) show
40 mp_a_x mul 408 moveto (0512 0514 4517 9173) show
4 mp_a_x mul 396 moveto (0462 1315 3379) show
36 mp_a_x mul 396 moveto (install_trans 4822) show
0 384 moveto (idup 5263) show
40 mp_a_x mul 384 moveto (4822 4871 4956) show
4 mp_a_x mul 372 moveto (0343 2515 5263 5631) show
36 mp_a_x mul 372 moveto (INT_DISABLED 7369) show
0 360 moveto (iget 5225) show
40 mp_a_x mul 360 moveto (7369 7417) show
4 mp_a_x mul 348 moveto (5176 5195 5225 5245 5539) show
36 mp_a_x mul 348 moveto (ioapic 7377) show
4 mp_a_x mul 336 moveto (5629) show
40 mp_a_x mul 336 moveto (7007 7029 7030 7374 7377) show
0 324 moveto (iinit 5168) show
40 mp_a_x mul 324 moveto (7386 7387 7393 7394 7408) show
4 mp_a_x mul 312 moveto (0344 2824 5168) show
36 mp_a_x mul 312 moveto (IOAPIC 7358) show
0 300 moveto (ilock 5274) show
40 mp_a_x mul 300 moveto (7358 7408) show
4 mp_a_x mul 288 moveto (0345 5274 5280 5300 5634) show
36 mp_a_x mul 288 moveto (ioapicenable 7423) show
4 mp_a_x mul 276 moveto (5805 5824 5858 6027 6040) show
40 mp_a_x mul 276 moveto (0363 4457 7423 8045 8143) show
4 mp_a_x mul 264 moveto (6053 6094 6102 6143 6147) show
36 mp_a_x mul 264 moveto (ioapicid 6917) show
4 mp_a_x mul 252 moveto (6157 6203 6282 6375 7995) show
40 mp_a_x mul 252 moveto (0364 6917 7030 7047 7411) show
4 mp_a_x mul 240 moveto (8015 8030) show
40 mp_a_x mul 240 moveto (7412) show
0 228 moveto (inb 0503) show
36 mp_a_x mul 228 moveto (ioapicinit 7401) show
4 mp_a_x mul 216 moveto (0503 4439 4463 7054 7291) show
40 mp_a_x mul 216 moveto (0365 1276 7401 7412) show
4 mp_a_x mul 204 moveto (7714 7717 7884 7886 8134) show
36 mp_a_x mul 204 moveto (ioapicread 7384) show
4 mp_a_x mul 192 moveto (8140 8141 8157 8167 8169) show
40 mp_a_x mul 192 moveto (7384 7409 7410) show
4 mp_a_x mul 180 moveto (9023 9031 9154) show
36 mp_a_x mul 180 moveto (ioapicwrite 7391) show
0 168 moveto (INITGID 2055) show
40 mp_a_x mul 168 moveto (7391 7417 7418 7431 7432) show
4 mp_a_x mul 156 moveto (2055 2452) show
36 mp_a_x mul 156 moveto (IO_PIC1 7457) show
0 144 moveto (initlock 1462) show
40 mp_a_x mul 144 moveto (7457 7470 7485 7494 7497) show
4 mp_a_x mul 132 moveto (0435 1462 2231 3132 3375) show
40 mp_a_x mul 132 moveto (7502 7512 7526 7527) show
4 mp_a_x mul 120 moveto (4455 4643 4812 5170 5720) show
36 mp_a_x mul 120 moveto (IO_PIC2 7458) show
4 mp_a_x mul 108 moveto (6535 8038) show
40 mp_a_x mul 108 moveto (7458 7471 7486 7515 7516) show
0 96 moveto (initlog 4806) show
40 mp_a_x mul 96 moveto (7517 7520 7529 7530) show
4 mp_a_x mul 84 moveto (0386 2825 4806 4809) show
36 mp_a_x mul 84 moveto (IO_TIMER1 8059) show
0 72 moveto (INITUID 2054) show
40 mp_a_x mul 72 moveto (8059 8068 8078 8079) show
4 mp_a_x mul 60 moveto (2054 2451) show
36 mp_a_x mul 60 moveto (IPB 4301) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  cross-references  Page 6) show
4 mp_a_x mul 648 moveto (4301 4304 5189 5210 5290) show
36 mp_a_x mul 648 moveto (KBS_DIB 7553) show
0 636 moveto (iput 5325) show
40 mp_a_x mul 636 moveto (7553 7715) show
4 mp_a_x mul 624 moveto (0346 2559 5325 5331 5355) show
36 mp_a_x mul 624 moveto (KBSTATP 7552) show
4 mp_a_x mul 612 moveto (5560 5652 5784 6046 6289) show
40 mp_a_x mul 612 moveto (7552 7714) show
0 600 moveto (IRQ_COM1 3233) show
36 mp_a_x mul 600 moveto (KERNBASE 0207) show
4 mp_a_x mul 588 moveto (3233 3418 8142 8143) show
40 mp_a_x mul 588 moveto (0207 0208 0212 0213 0217) show
0 576 moveto (IRQ_ERROR 3235) show
40 mp_a_x mul 576 moveto (0218 0220 0221 1365 1533) show
4 mp_a_x mul 564 moveto (3235 7179) show
40 mp_a_x mul 564 moveto (1729 1858 1916) show
0 552 moveto (IRQ_IDE 3234) show
36 mp_a_x mul 552 moveto (KERNLINK 0208) show
4 mp_a_x mul 540 moveto (3234 3407 3411 4456 4457) show
40 mp_a_x mul 540 moveto (0208 1730) show
0 528 moveto (IRQ_KBD 3232) show
36 mp_a_x mul 528 moveto (KEY_DEL 7578) show
4 mp_a_x mul 516 moveto (3232 3414 8044 8045) show
40 mp_a_x mul 516 moveto (7578 7619 7641 7665) show
0 504 moveto (IRQ_SLAVE 7460) show
36 mp_a_x mul 504 moveto (KEY_DN 7572) show
4 mp_a_x mul 492 moveto (7460 7464 7502 7517) show
40 mp_a_x mul 492 moveto (7572 7615 7637 7661) show
0 480 moveto (IRQ_SPURIOUS 3236) show
36 mp_a_x mul 480 moveto (KEY_END 7570) show
4 mp_a_x mul 468 moveto (3236 3423 7159) show
40 mp_a_x mul 468 moveto (7570 7618 7640 7664) show
0 456 moveto (IRQ_TIMER 3231) show
36 mp_a_x mul 456 moveto (KEY_HOME 7569) show
4 mp_a_x mul 444 moveto (3231 3398 3452 7166 8080) show
40 mp_a_x mul 444 moveto (7569 7618 7640 7664) show
0 432 moveto (isdirempty 6063) show
36 mp_a_x mul 432 moveto (KEY_INS 7577) show
4 mp_a_x mul 420 moveto (6063 6070 6106) show
40 mp_a_x mul 420 moveto (7577 7619 7641 7665) show
0 408 moveto (ismp 6915) show
36 mp_a_x mul 408 moveto (KEY_LF 7573) show
4 mp_a_x mul 396 moveto (0392 1284 6915 7012 7020) show
40 mp_a_x mul 396 moveto (7573 7617 7639 7663) show
4 mp_a_x mul 384 moveto (7040 7043 7405 7425) show
36 mp_a_x mul 384 moveto (KEY_PGDN 7576) show
0 372 moveto (itrunc 5406) show
40 mp_a_x mul 372 moveto (7576 7616 7638 7662) show
4 mp_a_x mul 360 moveto (5023 5334 5406) show
36 mp_a_x mul 360 moveto (KEY_PGUP 7575) show
0 348 moveto (iunlock 5306) show
40 mp_a_x mul 348 moveto (7575 7616 7638 7662) show
4 mp_a_x mul 336 moveto (0347 5306 5309 5354 5641) show
36 mp_a_x mul 336 moveto (KEY_RT 7574) show
4 mp_a_x mul 324 moveto (5807 5827 5861 6036 6218) show
40 mp_a_x mul 324 moveto (7574 7617 7639 7663) show
4 mp_a_x mul 312 moveto (6288 7988 8025) show
36 mp_a_x mul 312 moveto (KEY_UP 7571) show
0 300 moveto (iunlockput 5352) show
40 mp_a_x mul 300 moveto (7571 7615 7637 7661) show
4 mp_a_x mul 288 moveto (0348 5352 5636 5645 5648) show
36 mp_a_x mul 288 moveto (kfree 3164) show
4 mp_a_x mul 276 moveto (6029 6042 6045 6056 6107) show
40 mp_a_x mul 276 moveto (0369 1898 1900 1920 1923) show
4 mp_a_x mul 264 moveto (6118 6122 6129 6146 6150) show
40 mp_a_x mul 264 moveto (2491 2602 3156 3164 3169) show
4 mp_a_x mul 252 moveto (6174 6205 6214 6240 6266) show
40 mp_a_x mul 252 moveto (6552 6573) show
4 mp_a_x mul 240 moveto (6284 6401 6454) show
36 mp_a_x mul 240 moveto (kill 2904) show
0 228 moveto (iupdate 5204) show
40 mp_a_x mul 228 moveto (0411 2904 3438 3708 3836) show
4 mp_a_x mul 216 moveto (0349 5204 5336 5432 5505) show
40 mp_a_x mul 216 moveto (8267) show
4 mp_a_x mul 204 moveto (6035 6055 6116 6121 6161) show
36 mp_a_x mul 204 moveto (kinit1 3130) show
4 mp_a_x mul 192 moveto (6165) show
40 mp_a_x mul 192 moveto (0370 1269 3130) show
0 180 moveto (I_VALID 4376) show
36 mp_a_x mul 180 moveto (kinit2 3138) show
4 mp_a_x mul 168 moveto (4376 5288 5298 5328) show
40 mp_a_x mul 168 moveto (0371 1287 3138) show
0 156 moveto (kalloc 3187) show
36 mp_a_x mul 156 moveto (KSTACKSIZE 0151) show
4 mp_a_x mul 144 moveto (0368 1344 1663 1742 1809) show
40 mp_a_x mul 144 moveto (0151 1104 1113 1345 1779) show
4 mp_a_x mul 132 moveto (1865 1969 2344 3187 6529) show
40 mp_a_x mul 132 moveto (2351) show
0 120 moveto (KBDATAP 7554) show
36 mp_a_x mul 120 moveto (kvmalloc 1757) show
4 mp_a_x mul 108 moveto (7554 7717) show
40 mp_a_x mul 108 moveto (0474 1270 1757) show
0 96 moveto (kbdgetc 7706) show
36 mp_a_x mul 96 moveto (lapiceoi 7222) show
4 mp_a_x mul 84 moveto (7706 7748) show
40 mp_a_x mul 84 moveto (0380 3405 3409 3416 3420) show
0 72 moveto (kbdintr 7746) show
40 mp_a_x mul 72 moveto (3426 7222) show
4 mp_a_x mul 60 moveto (0374 3415 7746) show
36 mp_a_x mul 60 moveto (lapicinit 7153) show
grestore
restore
showpage
%%Page: 5 5
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  cross-references  Page 7) show
4 mp_a_x mul 648 moveto (0381 1272 1306 7153) show
36 mp_a_x mul 648 moveto (makeint 8514) show
0 636 moveto (lapicstartap 7241) show
40 mp_a_x mul 636 moveto (8514 8535 8541) show
4 mp_a_x mul 624 moveto (0382 1349 7241) show
36 mp_a_x mul 624 moveto (mappages 1679) show
0 612 moveto (lapicw 7146) show
40 mp_a_x mul 612 moveto (1679 1748 1811 1872 1972) show
4 mp_a_x mul 600 moveto (7146 7159 7165 7166 7167) show
36 mp_a_x mul 600 moveto (MAXARG 0158) show
4 mp_a_x mul 588 moveto (7170 7171 7176 7179 7182) show
40 mp_a_x mul 588 moveto (0158 6303 6364 6415) show
4 mp_a_x mul 576 moveto (7183 7186 7189 7190 7195) show
36 mp_a_x mul 576 moveto (MAXARGS 8364) show
4 mp_a_x mul 564 moveto (7225 7257 7258 7260 7269) show
40 mp_a_x mul 564 moveto (8364 8372 8373 8940) show
4 mp_a_x mul 552 moveto (7270) show
36 mp_a_x mul 552 moveto (MAXFILE 4274) show
0 540 moveto (lcr3 0640) show
40 mp_a_x mul 540 moveto (4274 5492) show
4 mp_a_x mul 528 moveto (0640 1768 1783) show
36 mp_a_x mul 528 moveto (MAXOPBLOCKS 0159) show
0 516 moveto (lgdt 0562) show
40 mp_a_x mul 516 moveto (0159 0160 0161 4884) show
4 mp_a_x mul 504 moveto (0562 0570 1183 1633 9041) show
36 mp_a_x mul 504 moveto (memcmp 6665) show
0 492 moveto (lidt 0576) show
40 mp_a_x mul 492 moveto (0441 6665 6945 6988 7326) show
4 mp_a_x mul 480 moveto (0576 0584 3381) show
36 mp_a_x mul 480 moveto (memmove 6681) show
0 468 moveto (LINT0 7135) show
40 mp_a_x mul 468 moveto (0442 1335 1812 1971 2018) show
4 mp_a_x mul 456 moveto (7135 7170) show
40 mp_a_x mul 456 moveto (4829 4940 5033 5216 5296) show
0 444 moveto (LINT1 7136) show
40 mp_a_x mul 444 moveto (5471 5498 5609 5611 6681) show
4 mp_a_x mul 432 moveto (7136 7171) show
40 mp_a_x mul 432 moveto (6704 7901) show
0 420 moveto (LIST 8361) show
36 mp_a_x mul 420 moveto (memset 6654) show
4 mp_a_x mul 408 moveto (8361 8445 8720 8983) show
40 mp_a_x mul 408 moveto (0443 1666 1744 1810 1871) show
0 396 moveto (listcmd 8391 8714) show
40 mp_a_x mul 396 moveto (2364 2430 3172 5044 5191) show
4 mp_a_x mul 384 moveto (8391 8416 8446 8714 8716) show
40 mp_a_x mul 384 moveto (6111 6310 6654 7903 8490) show
4 mp_a_x mul 372 moveto (8846 8957 8984) show
40 mp_a_x mul 372 moveto (8669 8680 8706 8719 8732) show
0 360 moveto (loadgs 0601) show
36 mp_a_x mul 360 moveto (microdelay 7231) show
4 mp_a_x mul 348 moveto (0601 1634) show
40 mp_a_x mul 348 moveto (0383 7231 7259 7261 7271) show
0 336 moveto (loaduvm 1818) show
40 mp_a_x mul 336 moveto (7289 8158) show
4 mp_a_x mul 324 moveto (0482 1818 1824 1827 6398) show
36 mp_a_x mul 324 moveto (min 5022) show
0 312 moveto (log 4787 4800) show
40 mp_a_x mul 312 moveto (5022 5470 5497) show
4 mp_a_x mul 300 moveto (4787 4800 4812 4814 4815) show
36 mp_a_x mul 300 moveto (MINS 7280) show
4 mp_a_x mul 288 moveto (4816 4826 4827 4828 4840) show
40 mp_a_x mul 288 moveto (7280 7303) show
4 mp_a_x mul 276 moveto (4843 4844 4845 4856 4859) show
36 mp_a_x mul 276 moveto (MONTH 7283) show
4 mp_a_x mul 264 moveto (4860 4861 4872 4880 4882) show
40 mp_a_x mul 264 moveto (7283 7306) show
4 mp_a_x mul 252 moveto (4883 4884 4886 4888 4889) show
36 mp_a_x mul 252 moveto (mp 6802) show
4 mp_a_x mul 240 moveto (4907 4908 4909 4910 4911) show
40 mp_a_x mul 240 moveto (6802 6908 6937 6944 6945) show
4 mp_a_x mul 228 moveto (4913 4916 4918 4924 4925) show
40 mp_a_x mul 228 moveto (6946 6955 6960 6964 6965) show
4 mp_a_x mul 216 moveto (4926 4927 4937 4938 4939) show
40 mp_a_x mul 216 moveto (6968 6969 6980 6983 6985) show
4 mp_a_x mul 204 moveto (4953 4957 4976 4978 4981) show
40 mp_a_x mul 204 moveto (6987 6994 7004 7010 7050) show
4 mp_a_x mul 192 moveto (4982 4983 4986 4987 4988) show
36 mp_a_x mul 192 moveto (mpbcpu 6920) show
4 mp_a_x mul 180 moveto (4990) show
40 mp_a_x mul 180 moveto (0393 6920) show
0 168 moveto (logheader 4782) show
36 mp_a_x mul 168 moveto (MPBUS 6852) show
4 mp_a_x mul 156 moveto (4782 4794 4808 4809 4841) show
40 mp_a_x mul 156 moveto (6852 7033) show
4 mp_a_x mul 144 moveto (4857) show
36 mp_a_x mul 144 moveto (mpconf 6813) show
0 132 moveto (LOGSIZE 0160) show
40 mp_a_x mul 132 moveto (6813 6979 6982 6987 7005) show
4 mp_a_x mul 120 moveto (0160 4784 4884 4976 5850) show
36 mp_a_x mul 120 moveto (mpconfig 6980) show
0 108 moveto (log_write 4972) show
40 mp_a_x mul 108 moveto (6980 7010) show
4 mp_a_x mul 96 moveto (0387 4972 4979 5045 5066) show
36 mp_a_x mul 96 moveto (mpenter 1302) show
4 mp_a_x mul 84 moveto (5091 5193 5217 5388 5499) show
40 mp_a_x mul 84 moveto (1302 1346) show
0 72 moveto (ltr 0588) show
36 mp_a_x mul 72 moveto (mpinit 7001) show
4 mp_a_x mul 60 moveto (0588 0590 1780) show
40 mp_a_x mul 60 moveto (0394 1271 7001 7019 7039) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  cross-references  Page 8) show
0 648 moveto (mpioapic 6839) show
36 mp_a_x mul 648 moveto (NINDIRECT 4273) show
4 mp_a_x mul 636 moveto (6839 7007 7029 7031) show
40 mp_a_x mul 636 moveto (4273 4274 5380 5422) show
0 624 moveto (MPIOAPIC 6853) show
36 mp_a_x mul 624 moveto (NINODE 0155) show
4 mp_a_x mul 612 moveto (6853 7028) show
40 mp_a_x mul 612 moveto (0155 5164 5233) show
0 600 moveto (MPIOINTR 6854) show
36 mp_a_x mul 600 moveto (NO 7556) show
4 mp_a_x mul 588 moveto (6854 7034) show
40 mp_a_x mul 588 moveto (7556 7602 7605 7607 7608) show
0 576 moveto (MPLINTR 6855) show
40 mp_a_x mul 576 moveto (7609 7610 7612 7624 7627) show
4 mp_a_x mul 564 moveto (6855 7035) show
40 mp_a_x mul 564 moveto (7629 7630 7631 7632 7634) show
0 552 moveto (mpmain 1312) show
40 mp_a_x mul 552 moveto (7652 7653 7655 7656 7657) show
4 mp_a_x mul 540 moveto (1259 1290 1307 1312) show
40 mp_a_x mul 540 moveto (7658) show
0 528 moveto (mpproc 6828) show
36 mp_a_x mul 528 moveto (NOFILE 0153) show
4 mp_a_x mul 516 moveto (6828 7006 7017 7026) show
40 mp_a_x mul 516 moveto (0153 2132 2512 2551 5926) show
0 504 moveto (MPPROC 6851) show
40 mp_a_x mul 504 moveto (5942) show
4 mp_a_x mul 492 moveto (6851 7016) show
36 mp_a_x mul 492 moveto (NPDENTRIES 0871) show
0 480 moveto (mpsearch 6956) show
40 mp_a_x mul 480 moveto (0871 1361 1917) show
4 mp_a_x mul 468 moveto (6956 6985) show
36 mp_a_x mul 468 moveto (NPROC 0150) show
0 456 moveto (mpsearch1 6938) show
40 mp_a_x mul 456 moveto (0150 2212 2298 2324 2413) show
4 mp_a_x mul 444 moveto (6938 6964 6968 6971) show
40 mp_a_x mul 444 moveto (2569 2595 2652 2695 2875) show
0 432 moveto (multiboot_header 1075) show
40 mp_a_x mul 432 moveto (2909 2980 3017 3018 3020) show
4 mp_a_x mul 420 moveto (1074 1075) show
36 mp_a_x mul 420 moveto (NPTENTRIES 0872) show
0 408 moveto (namecmp 5513) show
40 mp_a_x mul 408 moveto (0872 1894) show
4 mp_a_x mul 396 moveto (0350 5513 5534 6097) show
36 mp_a_x mul 396 moveto (NSEGS 2051) show
0 384 moveto (namei 5659) show
40 mp_a_x mul 384 moveto (1611 2051 2073) show
4 mp_a_x mul 372 moveto (0351 2440 5659 6022 6199) show
36 mp_a_x mul 372 moveto (nulterminate 8952) show
4 mp_a_x mul 360 moveto (6278 6371) show
40 mp_a_x mul 360 moveto (8815 8830 8952 8973 8979) show
0 348 moveto (nameiparent 5666) show
40 mp_a_x mul 348 moveto (8980 8985 8986 8991) show
4 mp_a_x mul 336 moveto (0352 5624 5639 5651 5666) show
36 mp_a_x mul 336 moveto (numChildren 9608) show
4 mp_a_x mul 324 moveto (6038 6089 6141) show
40 mp_a_x mul 324 moveto (9608 9636) show
0 312 moveto (namex 5624) show
36 mp_a_x mul 312 moveto (NUMLOCK 7563) show
4 mp_a_x mul 300 moveto (5624 5662 5668) show
40 mp_a_x mul 300 moveto (7563 7596) show
0 288 moveto (NBUF 0161) show
36 mp_a_x mul 288 moveto (NUM_READY_LISTS 2058) show
4 mp_a_x mul 276 moveto (0161 4631 4648) show
40 mp_a_x mul 276 moveto (2058 2062 2214 2418) show
0 264 moveto (ncpu 6916) show
36 mp_a_x mul 264 moveto (O_CREATE 4153) show
4 mp_a_x mul 252 moveto (1274 1337 2084 4457 6916) show
40 mp_a_x mul 252 moveto (4153 6192 8878 8881) show
4 mp_a_x mul 240 moveto (7018 7019 7023 7024 7025) show
36 mp_a_x mul 240 moveto (O_RDONLY 4150) show
4 mp_a_x mul 228 moveto (7045) show
40 mp_a_x mul 228 moveto (4150 6204 8875) show
0 216 moveto (NCPU 0152) show
36 mp_a_x mul 216 moveto (O_RDWR 4152) show
4 mp_a_x mul 204 moveto (0152 2083 6913) show
40 mp_a_x mul 204 moveto (4152 6225 8314 8316 8610) show
0 192 moveto (NDEV 0156) show
36 mp_a_x mul 192 moveto (outb 0521) show
4 mp_a_x mul 180 moveto (0156 5458 5485 5711) show
40 mp_a_x mul 180 moveto (0521 4461 4470 4487 4488) show
0 168 moveto (NDIRECT 4272) show
40 mp_a_x mul 168 moveto (4489 4490 4491 4492 4494) show
4 mp_a_x mul 156 moveto (4272 4274 4283 4373 5373) show
40 mp_a_x mul 156 moveto (4497 7053 7054 7249 7250) show
4 mp_a_x mul 144 moveto (5378 5382 5383 5412 5419) show
40 mp_a_x mul 144 moveto (7288 7470 7471 7485 7486) show
4 mp_a_x mul 132 moveto (5420 5427 5428) show
40 mp_a_x mul 132 moveto (7494 7497 7502 7512 7515) show
0 120 moveto (NELEM 0490) show
40 mp_a_x mul 120 moveto (7516 7517 7520 7526 7527) show
4 mp_a_x mul 108 moveto (0490 1747 2983 3758 6312) show
40 mp_a_x mul 108 moveto (7529 7530 7883 7885 7906) show
0 96 moveto (nextpid 2222) show
40 mp_a_x mul 96 moveto (7907 7908 7909 8077 8078) show
4 mp_a_x mul 84 moveto (2222 2340) show
40 mp_a_x mul 84 moveto (8079 8123 8126 8127 8128) show
0 72 moveto (NFILE 0154) show
40 mp_a_x mul 72 moveto (8129 8130 8131 8159 9028) show
4 mp_a_x mul 60 moveto (0154 5714 5730) show
40 mp_a_x mul 60 moveto (9036 9164 9165 9166 9167) show
grestore
restore
showpage
%%Page: 6 6
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  cross-references  Page 9) show
4 mp_a_x mul 648 moveto (9168 9169) show
40 mp_a_x mul 648 moveto (1742 1803 1818 1853 1882) show
0 636 moveto (outsl 0533) show
40 mp_a_x mul 636 moveto (1910 1929 1952 1953 1955) show
4 mp_a_x mul 624 moveto (0533 0535 4495) show
40 mp_a_x mul 624 moveto (1984 2004 2123 6368) show
0 612 moveto (outw 0527) show
36 mp_a_x mul 612 moveto (PDX 0862) show
4 mp_a_x mul 600 moveto (0527 1219 1221 3904 9069) show
40 mp_a_x mul 600 moveto (0862 1659) show
4 mp_a_x mul 588 moveto (9071) show
36 mp_a_x mul 588 moveto (PDXSHIFT 0877) show
0 576 moveto (O_WRONLY 4151) show
40 mp_a_x mul 576 moveto (0862 0868 0877 1365) show
4 mp_a_x mul 564 moveto (4151 6224 6225 8878 8881) show
36 mp_a_x mul 564 moveto (peek 8801) show
0 552 moveto (P2V 0218) show
40 mp_a_x mul 552 moveto (8801 8825 8840 8844 8856) show
4 mp_a_x mul 540 moveto (0218 1269 1287 6962 7251) show
40 mp_a_x mul 540 moveto (8869 8905 8909 8924 8932) show
4 mp_a_x mul 528 moveto (7875) show
36 mp_a_x mul 528 moveto (PGROUNDDOWN 0880) show
0 516 moveto (panic 7855 8642) show
40 mp_a_x mul 516 moveto (0880 1684 1685 2011) show
4 mp_a_x mul 504 moveto (0324 1478 1505 1569 1571) show
36 mp_a_x mul 504 moveto (PGROUNDUP 0879) show
4 mp_a_x mul 492 moveto (1690 1746 1782 1808 1824) show
40 mp_a_x mul 492 moveto (0879 1863 1890 3154 6407) show
4 mp_a_x mul 480 moveto (1827 1898 1915 1935 1964) show
36 mp_a_x mul 480 moveto (PGSIZE 0873) show
4 mp_a_x mul 468 moveto (1966 2241 2255 2267 2290) show
40 mp_a_x mul 468 moveto (0873 0879 0880 1360 1666) show
4 mp_a_x mul 456 moveto (2383 2427 2544 2580 2729) show
40 mp_a_x mul 456 moveto (1694 1695 1744 1807 1810) show
4 mp_a_x mul 444 moveto (2767 2769 2771 2773 2837) show
40 mp_a_x mul 444 moveto (1811 1823 1825 1829 1832) show
4 mp_a_x mul 432 moveto (2840 3169 3434 4478 4480) show
40 mp_a_x mul 432 moveto (1864 1871 1872 1891 1894) show
4 mp_a_x mul 420 moveto (4484 4540 4542 4544 4693) show
40 mp_a_x mul 420 moveto (1962 1971 1972 2015 2021) show
4 mp_a_x mul 408 moveto (4718 4729 4809 4910 4977) show
40 mp_a_x mul 408 moveto (2429 2436 3155 3168 3172) show
4 mp_a_x mul 396 moveto (4979 5074 5089 5199 5245) show
40 mp_a_x mul 396 moveto (6408 6410) show
4 mp_a_x mul 384 moveto (5280 5300 5309 5331 5394) show
36 mp_a_x mul 384 moveto (PHYSTOP 0203) show
4 mp_a_x mul 372 moveto (5527 5531 5567 5575 5756) show
40 mp_a_x mul 372 moveto (0203 1287 1731 1745 1746) show
4 mp_a_x mul 360 moveto (5770 5830 5867 5872 6070) show
40 mp_a_x mul 360 moveto (3168) show
4 mp_a_x mul 348 moveto (6105 6113 6155 6168 6172) show
36 mp_a_x mul 348 moveto (picenable 7475) show
4 mp_a_x mul 336 moveto (7813 7855 7862 7896 8406) show
40 mp_a_x mul 336 moveto (0398 4456 7475 8044 8080) show
4 mp_a_x mul 324 moveto (8425 8456 8642 8657 8828) show
40 mp_a_x mul 324 moveto (8142) show
4 mp_a_x mul 312 moveto (8872 8906 8910 8936 8941) show
36 mp_a_x mul 312 moveto (picinit 7482) show
0 300 moveto (panicked 7768) show
40 mp_a_x mul 300 moveto (0399 1275 7482) show
4 mp_a_x mul 288 moveto (7768 7868 7916) show
36 mp_a_x mul 288 moveto (picsetmask 7467) show
0 276 moveto (parseblock 8901) show
40 mp_a_x mul 276 moveto (7467 7477 7533) show
4 mp_a_x mul 264 moveto (8901 8906 8925) show
36 mp_a_x mul 264 moveto (pinit 2229) show
0 252 moveto (parsecmd 8818) show
40 mp_a_x mul 252 moveto (0412 1279 2229) show
4 mp_a_x mul 240 moveto (8407 8635 8818) show
36 mp_a_x mul 240 moveto (pipe 6511) show
0 228 moveto (parseexec 8917) show
40 mp_a_x mul 228 moveto (0304 0402 0403 0404 3706) show
4 mp_a_x mul 216 moveto (8814 8855 8917) show
40 mp_a_x mul 216 moveto (4355 5781 5822 5842 6511) show
0 204 moveto (parseline 8835) show
40 mp_a_x mul 204 moveto (6523 6529 6535 6539 6543) show
4 mp_a_x mul 192 moveto (8812 8824 8835 8846 8908) show
40 mp_a_x mul 192 moveto (6561 6579 6601 8263 8455) show
0 180 moveto (parsepipe 8851) show
40 mp_a_x mul 180 moveto (8456) show
4 mp_a_x mul 168 moveto (8813 8839 8851 8858) show
36 mp_a_x mul 168 moveto (PIPE 8360) show
0 156 moveto (parseredirs 8864) show
40 mp_a_x mul 156 moveto (8360 8453 8707 8977) show
4 mp_a_x mul 144 moveto (8864 8912 8931 8942) show
36 mp_a_x mul 144 moveto (pipealloc 6521) show
0 132 moveto (PCINT 7134) show
40 mp_a_x mul 132 moveto (0401 6335 6521) show
4 mp_a_x mul 120 moveto (7134 7176) show
36 mp_a_x mul 120 moveto (pipeclose 6561) show
0 108 moveto (pde_t 0103) show
40 mp_a_x mul 108 moveto (0402 5781 6561) show
4 mp_a_x mul 96 moveto (0103 0476 0477 0478 0479) show
36 mp_a_x mul 96 moveto (pipecmd 8385 8701) show
4 mp_a_x mul 84 moveto (0480 0481 0482 0483 0486) show
40 mp_a_x mul 84 moveto (8385 8417 8454 8701 8703) show
4 mp_a_x mul 72 moveto (0487 1260 1320 1361 1610) show
40 mp_a_x mul 72 moveto (8858 8958 8978) show
4 mp_a_x mul 60 moveto (1654 1656 1679 1736 1739) show
36 mp_a_x mul 60 moveto (piperead 6601) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  cross-references  Page 10) show
4 mp_a_x mul 648 moveto (0403 5822 6601) show
40 mp_a_x mul 648 moveto (3971 3972 4407 5016 5631) show
0 636 moveto (PIPESIZE 6509) show
40 mp_a_x mul 636 moveto (5911 5926 5943 5944 5996) show
4 mp_a_x mul 624 moveto (6509 6513 6585 6593 6616) show
40 mp_a_x mul 624 moveto (6289 6291 6340 6354 6436) show
0 612 moveto (pipewrite 6579) show
40 mp_a_x mul 612 moveto (6439 6440 6441 6442 6443) show
4 mp_a_x mul 600 moveto (0404 5842 6579) show
40 mp_a_x mul 600 moveto (6444 6504 6586 6607 6911) show
0 588 moveto (popcli 1566) show
40 mp_a_x mul 588 moveto (7006 7017 7018 7019 7022) show
4 mp_a_x mul 576 moveto (0438 1521 1566 1569 1571) show
40 mp_a_x mul 576 moveto (7763 7993 8110) show
4 mp_a_x mul 564 moveto (1784) show
36 mp_a_x mul 564 moveto (procdump 2955) show
0 552 moveto (popq 2238) show
40 mp_a_x mul 552 moveto (0413 2955 7978) show
4 mp_a_x mul 540 moveto (2238 2241 2331 2708 2726) show
36 mp_a_x mul 540 moveto (proghdr 1024) show
0 528 moveto (print_elapsed 2935) show
40 mp_a_x mul 528 moveto (1024 6367 9120 9134) show
4 mp_a_x mul 516 moveto (2935 2988) show
36 mp_a_x mul 516 moveto (PTE_ADDR 0894) show
0 504 moveto (printint 7776) show
40 mp_a_x mul 504 moveto (0894 1661 1828 1896 1919) show
4 mp_a_x mul 492 moveto (7776 7826 7830) show
40 mp_a_x mul 492 moveto (1967 1993) show
0 480 moveto (PrioCount 9607) show
36 mp_a_x mul 480 moveto (PTE_FLAGS 0895) show
4 mp_a_x mul 468 moveto (9607 9617 9624) show
40 mp_a_x mul 468 moveto (0895 1968) show
0 456 moveto (PRIORITY_HIGH 2060) show
36 mp_a_x mul 456 moveto (PTE_P 0883) show
4 mp_a_x mul 444 moveto (2060 2062 2291 2292 2418) show
40 mp_a_x mul 444 moveto (0883 1363 1365 1660 1670) show
4 mp_a_x mul 432 moveto (2445 2525 2527 2696 2705) show
40 mp_a_x mul 432 moveto (1689 1691 1895 1918 1965) show
4 mp_a_x mul 420 moveto (2721) show
40 mp_a_x mul 420 moveto (1989) show
0 408 moveto (PRIORITY_LOW 2062) show
36 mp_a_x mul 408 moveto (PTE_PS 0890) show
4 mp_a_x mul 396 moveto (2062 2291 2292 2705 2721) show
40 mp_a_x mul 396 moveto (0890 1363 1365) show
4 mp_a_x mul 384 moveto (2788) show
36 mp_a_x mul 384 moveto (pte_t 0898) show
0 372 moveto (proc 2121) show
40 mp_a_x mul 372 moveto (0898 1653 1657 1661 1663) show
4 mp_a_x mul 360 moveto (0305 0407 0484 1255 1458) show
40 mp_a_x mul 360 moveto (1682 1821 1884 1931 1956) show
4 mp_a_x mul 348 moveto (1606 1638 1773 1779 2080) show
40 mp_a_x mul 348 moveto (1986) show
4 mp_a_x mul 336 moveto (2095 2121 2127 2146 2206) show
36 mp_a_x mul 336 moveto (PTE_U 0885) show
4 mp_a_x mul 324 moveto (2212 2214 2215 2220 2237) show
40 mp_a_x mul 324 moveto (0885 1670 1811 1872 1936) show
4 mp_a_x mul 312 moveto (2238 2243 2252 2264 2275) show
40 mp_a_x mul 312 moveto (1991) show
4 mp_a_x mul 300 moveto (2297 2298 2316 2319 2324) show
36 mp_a_x mul 300 moveto (PTE_W 0884) show
4 mp_a_x mul 288 moveto (2406 2413 2463 2465 2468) show
40 mp_a_x mul 288 moveto (0884 1363 1365 1670 1729) show
4 mp_a_x mul 276 moveto (2471 2472 2483 2490 2499) show
40 mp_a_x mul 276 moveto (1731 1732 1811 1872) show
4 mp_a_x mul 264 moveto (2500 2501 2505 2506 2513) show
36 mp_a_x mul 264 moveto (PTX 0865) show
4 mp_a_x mul 252 moveto (2514 2515 2517 2540 2543) show
40 mp_a_x mul 252 moveto (0865 1672) show
4 mp_a_x mul 240 moveto (2552 2553 2554 2559 2561) show
36 mp_a_x mul 240 moveto (PTXSHIFT 0876) show
4 mp_a_x mul 228 moveto (2566 2569 2570 2578 2588) show
40 mp_a_x mul 228 moveto (0865 0868 0876) show
4 mp_a_x mul 216 moveto (2595 2596 2619 2625 2641) show
36 mp_a_x mul 216 moveto (pushcli 1555) show
4 mp_a_x mul 204 moveto (2652 2659 2667 2672 2684) show
40 mp_a_x mul 204 moveto (0437 1476 1555 1775) show
4 mp_a_x mul 192 moveto (2695 2735 2743 2752 2770) show
36 mp_a_x mul 192 moveto (pushfreeq 2252) show
4 mp_a_x mul 180 moveto (2777 2779 2788 2789 2790) show
40 mp_a_x mul 180 moveto (2252 2255 2347 2415 2495) show
4 mp_a_x mul 168 moveto (2792 2793 2795 2805 2836) show
40 mp_a_x mul 168 moveto (2607) show
4 mp_a_x mul 156 moveto (2854 2855 2859 2873 2875) show
36 mp_a_x mul 156 moveto (pushreadyq 2264) show
4 mp_a_x mul 144 moveto (2906 2909 2935 2966 2980) show
40 mp_a_x mul 144 moveto (2264 2267 2527 2712 2793) show
4 mp_a_x mul 132 moveto (3016 3020 3355 3388 3390) show
40 mp_a_x mul 132 moveto (2882 2919) show
4 mp_a_x mul 120 moveto (3392 3430 3438 3439 3441) show
36 mp_a_x mul 120 moveto (rcr2 0632) show
4 mp_a_x mul 108 moveto (3447 3452 3456 3555 3569) show
40 mp_a_x mul 108 moveto (0632 3433 3440) show
4 mp_a_x mul 96 moveto (3583 3586 3597 3610 3757) show
36 mp_a_x mul 96 moveto (readeflags 0594) show
4 mp_a_x mul 84 moveto (3759 3762 3766 3767 3807) show
40 mp_a_x mul 84 moveto (0594 1559 1568 2772 7208) show
4 mp_a_x mul 72 moveto (3842 3858 3875 3930 3943) show
36 mp_a_x mul 72 moveto (read_head 4838) show
4 mp_a_x mul 60 moveto (3954 3961 3968 3969 3970) show
40 mp_a_x mul 60 moveto (4838 4870) show
grestore
restore
showpage
%%Page: 7 7
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  cross-references  Page 11) show
0 648 moveto (readi 5452) show
36 mp_a_x mul 648 moveto (RUNNING 2118) show
4 mp_a_x mul 636 moveto (0353 1833 5452 5530 5566) show
40 mp_a_x mul 636 moveto (2118 2661 2698 2737 2770) show
4 mp_a_x mul 624 moveto (5825 6069 6070 6379 6390) show
40 mp_a_x mul 624 moveto (2962 3011 3452) show
0 612 moveto (readsb 5028) show
36 mp_a_x mul 612 moveto (safestrcpy 6732) show
4 mp_a_x mul 600 moveto (0339 4813 5028 5084 5171) show
40 mp_a_x mul 600 moveto (0444 2439 2517 3038 3040) show
0 588 moveto (readsect 9160) show
40 mp_a_x mul 588 moveto (6436 6732) show
4 mp_a_x mul 576 moveto (9160 9195) show
36 mp_a_x mul 576 moveto (sb 5024) show
0 564 moveto (readseg 9179) show
40 mp_a_x mul 564 moveto (0339 4304 4310 4811 4813) show
4 mp_a_x mul 552 moveto (9114 9127 9138 9179) show
40 mp_a_x mul 552 moveto (4814 4815 5024 5028 5033) show
0 540 moveto (recover_from_log 4868) show
40 mp_a_x mul 540 moveto (5060 5061 5062 5084 5085) show
4 mp_a_x mul 528 moveto (4802 4817 4868) show
40 mp_a_x mul 528 moveto (5171 5172 5173 5187 5188) show
0 516 moveto (REDIR 8359) show
40 mp_a_x mul 516 moveto (5209 5289 7314 7316 7318) show
4 mp_a_x mul 504 moveto (8359 8435 8681 8971) show
36 mp_a_x mul 504 moveto (sched 2762) show
0 492 moveto (redircmd 8376 8675) show
40 mp_a_x mul 492 moveto (0415 2579 2762 2767 2769) show
4 mp_a_x mul 480 moveto (8376 8418 8436 8675 8677) show
40 mp_a_x mul 480 moveto (2771 2773 2806 2856) show
4 mp_a_x mul 468 moveto (8875 8878 8881 8959 8972) show
36 mp_a_x mul 468 moveto (scheduler 2639 2682) show
0 456 moveto (REG_ID 7360) show
40 mp_a_x mul 456 moveto (0414 1317 2071 2639 2667) show
4 mp_a_x mul 444 moveto (7360 7410) show
40 mp_a_x mul 444 moveto (2682 2743 2795) show
0 432 moveto (REG_TABLE 7362) show
36 mp_a_x mul 432 moveto (SCROLLLOCK 7564) show
4 mp_a_x mul 420 moveto (7362 7417 7418 7431 7432) show
40 mp_a_x mul 420 moveto (7564 7597) show
0 408 moveto (REG_VER 7361) show
36 mp_a_x mul 408 moveto (SECS 7279) show
4 mp_a_x mul 396 moveto (7361 7409) show
40 mp_a_x mul 396 moveto (7279 7302) show
0 384 moveto (release 1502) show
36 mp_a_x mul 384 moveto (SECTOR_SIZE 4414) show
4 mp_a_x mul 372 moveto (0436 1502 1505 2302 2306) show
40 mp_a_x mul 372 moveto (4414 4481) show
4 mp_a_x mul 360 moveto (2327 2334 2341 2348 2369) show
36 mp_a_x mul 360 moveto (SECTSIZE 9112) show
4 mp_a_x mul 348 moveto (2386 2390 2421 2447 2529) show
40 mp_a_x mul 348 moveto (9112 9173 9186 9189 9194) show
4 mp_a_x mul 336 moveto (2613 2620 2665 2674 2741) show
36 mp_a_x mul 336 moveto (SEG 0819) show
4 mp_a_x mul 324 moveto (2754 2781 2807 2817 2850) show
40 mp_a_x mul 324 moveto (0819 1625 1626 1627 1628) show
4 mp_a_x mul 312 moveto (2863 2893 2923 2927 3037) show
40 mp_a_x mul 312 moveto (1631) show
4 mp_a_x mul 300 moveto (3045 3180 3197 3402 3876) show
36 mp_a_x mul 300 moveto (SEG16 0823) show
4 mp_a_x mul 288 moveto (3881 3894 4509 4528 4565) show
40 mp_a_x mul 288 moveto (0823 1776) show
4 mp_a_x mul 276 moveto (4673 4689 4743 4889 4918) show
36 mp_a_x mul 276 moveto (SEG_ASM 0710) show
4 mp_a_x mul 264 moveto (4927 4990 5236 5255 5267) show
40 mp_a_x mul 264 moveto (0710 1228 1229 9079 9080) show
4 mp_a_x mul 252 moveto (5286 5314 5333 5342 5733) show
36 mp_a_x mul 252 moveto (segdesc 0802) show
4 mp_a_x mul 240 moveto (5737 5758 5772 5778 6572) show
40 mp_a_x mul 240 moveto (0559 0562 0802 0819 0823) show
4 mp_a_x mul 228 moveto (6575 6587 6596 6608 6619) show
40 mp_a_x mul 228 moveto (1611 2073) show
4 mp_a_x mul 216 moveto (7851 7976 7994 8014 8029) show
36 mp_a_x mul 216 moveto (seginit 1616) show
0 204 moveto (ROOTDEV 0157) show
40 mp_a_x mul 204 moveto (0473 1273 1305 1616) show
4 mp_a_x mul 192 moveto (0157 2824 2825 5629) show
36 mp_a_x mul 192 moveto (SEG_KCODE 0791) show
0 180 moveto (ROOTINO 4254) show
40 mp_a_x mul 180 moveto (0791 1188 1625 3372 3373) show
4 mp_a_x mul 168 moveto (4254 5629) show
40 mp_a_x mul 168 moveto (9049) show
0 156 moveto (rtcdate 0250) show
36 mp_a_x mul 156 moveto (SEG_KCPU 0793) show
4 mp_a_x mul 144 moveto (0250 0306 0377 3913 7300) show
40 mp_a_x mul 144 moveto (0793 1631 1634 3316) show
4 mp_a_x mul 132 moveto (7311 7313 9308) show
36 mp_a_x mul 132 moveto (SEG_KDATA 0792) show
0 120 moveto (run 3114) show
40 mp_a_x mul 120 moveto (0792 1192 1626 1778 3313) show
4 mp_a_x mul 108 moveto (2962 3011 3114 3115 3121) show
40 mp_a_x mul 108 moveto (9053) show
4 mp_a_x mul 96 moveto (3166 3176 3189) show
36 mp_a_x mul 96 moveto (SEG_NULLASM 0704) show
0 84 moveto (runcmd 8411) show
40 mp_a_x mul 84 moveto (0704 1227 9078) show
4 mp_a_x mul 72 moveto (8411 8425 8442 8448 8450) show
36 mp_a_x mul 72 moveto (SEG_TSS 0796) show
4 mp_a_x mul 60 moveto (8462 8469 8480 8635) show
40 mp_a_x mul 60 moveto (0796 1776 1777 1780) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  cross-references  Page 12) show
0 648 moveto (SEG_UCODE 0794) show
36 mp_a_x mul 648 moveto (STA_X 0715 0832) show
4 mp_a_x mul 636 moveto (0794 1627 2431) show
40 mp_a_x mul 636 moveto (0715 0832 1228 1625 1627) show
0 624 moveto (SEG_UDATA 0795) show
40 mp_a_x mul 624 moveto (9079) show
4 mp_a_x mul 612 moveto (0795 1628 2432) show
36 mp_a_x mul 612 moveto (sti 0613) show
0 600 moveto (setbuiltin 8526) show
40 mp_a_x mul 600 moveto (0613 0615 1573 2645 2688) show
4 mp_a_x mul 588 moveto (8526 8575) show
36 mp_a_x mul 588 moveto (stosb 0542) show
0 576 moveto (SETGATE 0971) show
40 mp_a_x mul 576 moveto (0542 0544 6660 9140) show
4 mp_a_x mul 564 moveto (0971 3372 3373) show
36 mp_a_x mul 564 moveto (stosl 0551) show
0 552 moveto (setpriority 2287) show
40 mp_a_x mul 552 moveto (0551 0553 6658) show
4 mp_a_x mul 540 moveto (0425 2287 3735 4012 8289) show
36 mp_a_x mul 540 moveto (strlen 6751) show
4 mp_a_x mul 528 moveto (9618 9625) show
40 mp_a_x mul 528 moveto (0445 6417 6418 6751 8530) show
0 516 moveto (setupkvm 1737) show
40 mp_a_x mul 516 moveto (8533 8539 8553 8585 8623) show
4 mp_a_x mul 504 moveto (0476 1737 1759 1960 2426) show
40 mp_a_x mul 504 moveto (8823) show
4 mp_a_x mul 492 moveto (6384) show
36 mp_a_x mul 492 moveto (STRMAX 9350) show
0 480 moveto (SHIFT 7558) show
40 mp_a_x mul 480 moveto (9350 9359 9361) show
4 mp_a_x mul 468 moveto (7558 7586 7587 7735) show
36 mp_a_x mul 468 moveto (strncmp 6708 8504) show
0 456 moveto (skipelem 5595) show
40 mp_a_x mul 456 moveto (0446 5515 6708 8504 8531) show
4 mp_a_x mul 444 moveto (5595 5633) show
40 mp_a_x mul 444 moveto (8532 8534 8538 8540 8554) show
0 432 moveto (sleep 2834) show
40 mp_a_x mul 432 moveto (8555 8559 8585) show
4 mp_a_x mul 420 moveto (0416 2625 2834 2837 2840) show
36 mp_a_x mul 420 moveto (strncpy 6718) show
4 mp_a_x mul 408 moveto (2960 3009 3715 3879 4562) show
40 mp_a_x mul 408 moveto (0447 5572 6718) show
4 mp_a_x mul 396 moveto (4676 4883 4886 5284 6591) show
36 mp_a_x mul 396 moveto (STS_IG32 0850) show
4 mp_a_x mul 384 moveto (6611 7998 8279) show
40 mp_a_x mul 384 moveto (0850 0977) show
0 372 moveto (spinlock 1401) show
36 mp_a_x mul 372 moveto (STS_T32A 0847) show
4 mp_a_x mul 360 moveto (0307 0416 0432 0434 0435) show
40 mp_a_x mul 360 moveto (0847 1776) show
4 mp_a_x mul 348 moveto (0436 0465 1401 1459 1462) show
36 mp_a_x mul 348 moveto (STS_TG32 0851) show
4 mp_a_x mul 336 moveto (1474 1502 1544 2207 2211) show
40 mp_a_x mul 336 moveto (0851 0977) show
4 mp_a_x mul 324 moveto (2834 3109 3119 3358 3363) show
36 mp_a_x mul 324 moveto (sum 6926) show
4 mp_a_x mul 312 moveto (4410 4427 4625 4630 4753) show
40 mp_a_x mul 312 moveto (6926 6928 6930 6932 6933) show
4 mp_a_x mul 300 moveto (4788 5017 5163 5709 5713) show
40 mp_a_x mul 300 moveto (6945 6992) show
4 mp_a_x mul 288 moveto (6507 6512 7758 7771 8106) show
36 mp_a_x mul 288 moveto (superblock 4262) show
0 276 moveto (STA_R 0719 0836) show
40 mp_a_x mul 276 moveto (0309 0339 4262 4811 5024) show
4 mp_a_x mul 264 moveto (0719 0836 1228 1625 1627) show
40 mp_a_x mul 264 moveto (5028) show
4 mp_a_x mul 252 moveto (9079) show
36 mp_a_x mul 252 moveto (SVR 7117) show
0 240 moveto (start 1175 8208 9011) show
40 mp_a_x mul 240 moveto (7117 7159) show
4 mp_a_x mul 228 moveto (1174 1175 1205 1213 1215) show
36 mp_a_x mul 228 moveto (switchkvm 1766) show
4 mp_a_x mul 216 moveto (4789 4814 4827 4840 4856) show
40 mp_a_x mul 216 moveto (0485 1304 1760 1766 2668) show
4 mp_a_x mul 204 moveto (4938 5172 8207 8208 9010) show
40 mp_a_x mul 204 moveto (2744) show
4 mp_a_x mul 192 moveto (9011 9062 9619) show
36 mp_a_x mul 192 moveto (switchuvm 1773) show
0 180 moveto (startothers 1324) show
40 mp_a_x mul 180 moveto (0484 1773 1782 2472 2660) show
4 mp_a_x mul 168 moveto (1258 1286 1324) show
40 mp_a_x mul 168 moveto (2736 6444) show
0 156 moveto (stat 4204) show
36 mp_a_x mul 156 moveto (swtch 3058) show
4 mp_a_x mul 144 moveto (0308 0335 0354 4204 5014) show
40 mp_a_x mul 144 moveto (0429 2667 2743 2795 3057) show
4 mp_a_x mul 132 moveto (5437 5802 5909 6004 8303) show
40 mp_a_x mul 132 moveto (3058) show
4 mp_a_x mul 120 moveto (9203) show
36 mp_a_x mul 120 moveto (syscall 3753) show
0 108 moveto (stati 5437) show
40 mp_a_x mul 108 moveto (0456 3391 3557 3753) show
4 mp_a_x mul 96 moveto (0354 5437 5806) show
36 mp_a_x mul 96 moveto (SYSCALL 8253 8260 8261 8262 8263 82) show
0 84 moveto (STA_W 0718 0835) show
40 mp_a_x mul 84 moveto (8260 8261 8262 8263 8264) show
4 mp_a_x mul 72 moveto (0718 0835 1229 1626 1628) show
40 mp_a_x mul 72 moveto (8265 8266 8267 8268 8269) show
4 mp_a_x mul 60 moveto (1631 9080) show
40 mp_a_x mul 60 moveto (8270 8271 8272 8273 8274) show
grestore
restore
showpage
%%Page: 8 8
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  cross-references  Page 13) show
4 mp_a_x mul 648 moveto (8275 8276 8277 8278 8279) show
40 mp_a_x mul 648 moveto (3530 3531 3694 3732) show
4 mp_a_x mul 636 moveto (8280 8281 8282 8283 8284) show
36 mp_a_x mul 636 moveto (sys_getuid 3952) show
4 mp_a_x mul 624 moveto (8285 8286 8287 8288 8289) show
40 mp_a_x mul 624 moveto (3653 3689 3952) show
0 612 moveto (sys_chdir 6272) show
36 mp_a_x mul 612 moveto (SYS_getuid 3525) show
4 mp_a_x mul 600 moveto (3629 3673 6272) show
40 mp_a_x mul 600 moveto (3525 3526 3689 3728) show
0 588 moveto (SYS_chdir 3509) show
36 mp_a_x mul 588 moveto (SYS_halt 3522) show
4 mp_a_x mul 576 moveto (3509 3510 3673 3711) show
40 mp_a_x mul 576 moveto (3522 3524 3686 3724) show
0 564 moveto (sys_close 5989) show
36 mp_a_x mul 564 moveto (sys_kill 3830) show
4 mp_a_x mul 552 moveto (3630 3685 5989) show
40 mp_a_x mul 552 moveto (3637 3670 3830) show
0 540 moveto (SYS_close 3521) show
36 mp_a_x mul 540 moveto (SYS_kill 3506) show
4 mp_a_x mul 528 moveto (3521 3522 3685 3723) show
40 mp_a_x mul 528 moveto (3506 3507 3670 3708) show
0 516 moveto (sys_date 3911) show
36 mp_a_x mul 516 moveto (sys_link 6013) show
4 mp_a_x mul 504 moveto (3651 3687 3911) show
40 mp_a_x mul 504 moveto (3638 3683 6013) show
0 492 moveto (SYS_date 3524) show
36 mp_a_x mul 492 moveto (SYS_link 3519) show
4 mp_a_x mul 480 moveto (3524 3525 3687 3725) show
40 mp_a_x mul 480 moveto (3519 3520 3683 3721) show
0 468 moveto (sys_dup 5951) show
36 mp_a_x mul 468 moveto (sys_mkdir 6230) show
4 mp_a_x mul 456 moveto (3631 3674 5951) show
40 mp_a_x mul 456 moveto (3639 3684 6230) show
0 444 moveto (SYS_dup 3510) show
36 mp_a_x mul 444 moveto (SYS_mkdir 3520) show
4 mp_a_x mul 432 moveto (3510 3511 3674 3712) show
40 mp_a_x mul 432 moveto (3520 3521 3684 3722) show
0 420 moveto (sys_exec 6301) show
36 mp_a_x mul 420 moveto (sys_mknod 6251) show
4 mp_a_x mul 408 moveto (3632 3671 6301) show
40 mp_a_x mul 408 moveto (3640 3681 6251) show
0 396 moveto (SYS_exec 3507) show
36 mp_a_x mul 396 moveto (SYS_mknod 3517) show
4 mp_a_x mul 384 moveto (3507 3508 3671 3709 8212) show
40 mp_a_x mul 384 moveto (3517 3518 3681 3719) show
0 372 moveto (sys_exit 3817) show
36 mp_a_x mul 372 moveto (sys_open 6180) show
4 mp_a_x mul 360 moveto (3633 3666 3817) show
40 mp_a_x mul 360 moveto (3641 3679 6180) show
0 348 moveto (SYS_exit 3502) show
36 mp_a_x mul 348 moveto (SYS_open 3515) show
4 mp_a_x mul 336 moveto (3502 3503 3666 3704 8217) show
40 mp_a_x mul 336 moveto (3515 3516 3679 3717) show
0 324 moveto (sys_fork 3811) show
36 mp_a_x mul 324 moveto (sys_pipe 6327) show
4 mp_a_x mul 312 moveto (3634 3665 3811) show
40 mp_a_x mul 312 moveto (3642 3668 6327) show
0 300 moveto (SYS_fork 3501) show
36 mp_a_x mul 300 moveto (SYS_pipe 3504) show
4 mp_a_x mul 288 moveto (3501 3502 3665 3703) show
40 mp_a_x mul 288 moveto (3504 3505 3668 3706) show
0 276 moveto (sys_fstat 6001) show
36 mp_a_x mul 276 moveto (sys_read 5965) show
4 mp_a_x mul 264 moveto (3635 3672 6001) show
40 mp_a_x mul 264 moveto (3643 3669 5965) show
0 252 moveto (SYS_fstat 3508) show
36 mp_a_x mul 252 moveto (SYS_read 3505) show
4 mp_a_x mul 240 moveto (3508 3509 3672 3710) show
40 mp_a_x mul 240 moveto (3505 3506 3669 3707) show
0 228 moveto (sys_getgid 3959) show
36 mp_a_x mul 228 moveto (sys_sbrk 3851) show
4 mp_a_x mul 216 moveto (3654 3690 3959) show
40 mp_a_x mul 216 moveto (3644 3676 3851) show
0 204 moveto (SYS_getgid 3526) show
36 mp_a_x mul 204 moveto (SYS_sbrk 3512) show
4 mp_a_x mul 192 moveto (3526 3527 3690 3727) show
40 mp_a_x mul 192 moveto (3512 3513 3676 3714) show
0 180 moveto (sys_getpid 3840) show
36 mp_a_x mul 180 moveto (sys_setgid 3936) show
4 mp_a_x mul 168 moveto (3636 3675 3840) show
40 mp_a_x mul 168 moveto (3657 3693 3936) show
0 156 moveto (SYS_getpid 3511) show
36 mp_a_x mul 156 moveto (SYS_setgid 3529) show
4 mp_a_x mul 144 moveto (3511 3512 3675 3713) show
40 mp_a_x mul 144 moveto (3529 3530 3693 3730) show
0 132 moveto (sys_getppid 3966) show
36 mp_a_x mul 132 moveto (sys_setpriority 4004) show
4 mp_a_x mul 120 moveto (3655 3691 3966) show
40 mp_a_x mul 120 moveto (3661 3697 4004) show
0 108 moveto (SYS_getppid 3527) show
36 mp_a_x mul 108 moveto (SYS_setpriority 3531) show
4 mp_a_x mul 96 moveto (3527 3528 3691 3729) show
40 mp_a_x mul 96 moveto (3531 3697 3735) show
0 84 moveto (sys_getprocs 3977) show
36 mp_a_x mul 84 moveto (sys_setuid 3923) show
4 mp_a_x mul 72 moveto (3658 3694 3977) show
40 mp_a_x mul 72 moveto (3656 3692 3923) show
0 60 moveto (SYS_getprocs 3530) show
36 mp_a_x mul 60 moveto (SYS_setuid 3528) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  cross-references  Page 14) show
4 mp_a_x mul 648 moveto (3528 3529 3692 3731) show
36 mp_a_x mul 648 moveto (TIMER 7131) show
0 636 moveto (sys_sleep 3865) show
40 mp_a_x mul 636 moveto (7131 7166) show
4 mp_a_x mul 624 moveto (3645 3677 3865) show
36 mp_a_x mul 624 moveto (TIMER_16BIT 8071) show
0 612 moveto (SYS_sleep 3513) show
40 mp_a_x mul 612 moveto (8071 8077) show
4 mp_a_x mul 600 moveto (3513 3514 3677 3715) show
36 mp_a_x mul 600 moveto (TIMER_DIV 8066) show
0 588 moveto (sys_unlink 6078) show
40 mp_a_x mul 588 moveto (8066 8078 8079) show
4 mp_a_x mul 576 moveto (3646 3682 6078) show
36 mp_a_x mul 576 moveto (TIMER_FREQ 8065) show
0 564 moveto (SYS_unlink 3518) show
40 mp_a_x mul 564 moveto (8065 8066) show
4 mp_a_x mul 552 moveto (3518 3519 3682 3720) show
36 mp_a_x mul 552 moveto (timerinit 8074) show
0 540 moveto (sys_uptime 3888) show
40 mp_a_x mul 540 moveto (0459 1285 8074) show
4 mp_a_x mul 528 moveto (3649 3678 3888) show
36 mp_a_x mul 528 moveto (TIMER_MODE 8068) show
0 516 moveto (SYS_uptime 3514) show
40 mp_a_x mul 516 moveto (8068 8077) show
4 mp_a_x mul 504 moveto (3514 3515 3678 3716) show
36 mp_a_x mul 504 moveto (TIMER_RATEGEN 8070) show
0 492 moveto (sys_wait 3824) show
40 mp_a_x mul 492 moveto (8070 8077) show
4 mp_a_x mul 480 moveto (3647 3667 3824) show
36 mp_a_x mul 480 moveto (TIMER_SEL0 8069) show
0 468 moveto (SYS_wait 3503) show
40 mp_a_x mul 468 moveto (8069 8077) show
4 mp_a_x mul 456 moveto (3503 3504 3667 3705) show
36 mp_a_x mul 456 moveto (timetopromote 2380) show
0 444 moveto (sys_write 5977) show
40 mp_a_x mul 444 moveto (2380 2383 2693) show
4 mp_a_x mul 432 moveto (3648 3680 5977) show
36 mp_a_x mul 432 moveto (T_IRQ0 3229) show
0 420 moveto (SYS_write 3516) show
40 mp_a_x mul 420 moveto (3229 3398 3407 3411 3414) show
4 mp_a_x mul 408 moveto (3516 3517 3680 3718) show
40 mp_a_x mul 408 moveto (3418 3422 3423 3452 7159) show
0 396 moveto (taskstate 0901) show
40 mp_a_x mul 396 moveto (7166 7179 7417 7431 7497) show
4 mp_a_x mul 384 moveto (0901 2072) show
40 mp_a_x mul 384 moveto (7516) show
0 372 moveto (TDCR 7141) show
36 mp_a_x mul 372 moveto (TPR 7115) show
4 mp_a_x mul 360 moveto (7141 7165) show
40 mp_a_x mul 360 moveto (7115 7195) show
0 348 moveto (T_DEV 4202) show
36 mp_a_x mul 348 moveto (trap 3385) show
4 mp_a_x mul 336 moveto (4202 5457 5484 6262 9208) show
40 mp_a_x mul 336 moveto (3252 3254 3322 3385 3432) show
0 324 moveto (T_DIR 4200) show
40 mp_a_x mul 324 moveto (3434 3437) show
4 mp_a_x mul 312 moveto (4200 5526 5635 6028 6106) show
36 mp_a_x mul 312 moveto (trapframe 0652) show
4 mp_a_x mul 300 moveto (6114 6163 6204 6236 6283) show
40 mp_a_x mul 300 moveto (0652 2128 2355 3385) show
4 mp_a_x mul 288 moveto (9206) show
36 mp_a_x mul 288 moveto (trapret 3327) show
0 276 moveto (testgiduid 9406) show
40 mp_a_x mul 276 moveto (2224 2360 3326 3327) show
4 mp_a_x mul 264 moveto (9406 9434) show
36 mp_a_x mul 264 moveto (T_SYSCALL 3226) show
0 252 moveto (T_FILE 4201) show
40 mp_a_x mul 252 moveto (3226 3373 3387 8213 8218) show
4 mp_a_x mul 240 moveto (4201 6148 6193 9207) show
40 mp_a_x mul 240 moveto (8257) show
0 228 moveto (ticks 3364) show
36 mp_a_x mul 228 moveto (tvinit 3367) show
4 mp_a_x mul 216 moveto (0463 2368 2385 2389 2664) show
40 mp_a_x mul 216 moveto (0464 1280 3367) show
4 mp_a_x mul 204 moveto (2740 2777 2779 2938 3035) show
36 mp_a_x mul 204 moveto (uart 8115) show
4 mp_a_x mul 192 moveto (3364 3401 3403 3873 3874) show
40 mp_a_x mul 192 moveto (8115 8136 8155 8165) show
4 mp_a_x mul 180 moveto (3879 3893) show
36 mp_a_x mul 180 moveto (uartgetc 8163) show
0 168 moveto (tickslock 3363) show
40 mp_a_x mul 168 moveto (8163 8175) show
4 mp_a_x mul 156 moveto (0465 2367 2369 2384 2386) show
36 mp_a_x mul 156 moveto (uartinit 8118) show
4 mp_a_x mul 144 moveto (2390 2663 2665 2739 2741) show
40 mp_a_x mul 144 moveto (0468 1278 8118) show
4 mp_a_x mul 132 moveto (2776 2781 3034 3037 3363) show
36 mp_a_x mul 132 moveto (uartintr 8173) show
4 mp_a_x mul 120 moveto (3375 3400 3402 3872 3876) show
40 mp_a_x mul 120 moveto (0469 3419 8173) show
4 mp_a_x mul 108 moveto (3879 3881 3892 3894) show
36 mp_a_x mul 108 moveto (uartputc 8151) show
0 96 moveto (TICKS_TO_PROMOTE 2064) show
40 mp_a_x mul 96 moveto (0470 7923 7925 8147 8151) show
4 mp_a_x mul 84 moveto (2064 2389) show
36 mp_a_x mul 84 moveto (uproc 9352) show
0 72 moveto (TICR 7139) show
40 mp_a_x mul 72 moveto (0311 0422 2208 3003 3808) show
4 mp_a_x mul 60 moveto (7139 7167) show
40 mp_a_x mul 60 moveto (3980 9352 9451 9461 9462) show
grestore
restore
showpage
%%Page: 9 9
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  cross-references  Page 15) show
0 648 moveto (userinit 2404) show
40 mp_a_x mul 648 moveto (6569 6590 6595 6618 7970) show
4 mp_a_x mul 636 moveto (0417 1288 2404 2427) show
36 mp_a_x mul 636 moveto (wakeup1 2871) show
0 624 moveto (uva2ka 1984) show
40 mp_a_x mul 624 moveto (2226 2566 2573 2871 2892) show
4 mp_a_x mul 612 moveto (0477 1984 2012) show
36 mp_a_x mul 612 moveto (walkpgdir 1654) show
0 600 moveto (V2P 0217) show
40 mp_a_x mul 600 moveto (1654 1687 1826 1892 1933) show
4 mp_a_x mul 588 moveto (0217 1730 1731) show
40 mp_a_x mul 588 moveto (1963 1988) show
0 576 moveto (V2P_WO 0220) show
36 mp_a_x mul 576 moveto (write_head 4854) show
4 mp_a_x mul 564 moveto (0220 1086 1096) show
40 mp_a_x mul 564 moveto (4854 4873 4955 4958) show
0 552 moveto (VER 7114) show
36 mp_a_x mul 552 moveto (writei 5479) show
4 mp_a_x mul 540 moveto (7114 7175) show
40 mp_a_x mul 540 moveto (0355 5479 5574 5859 6112) show
0 528 moveto (wait 2586) show
40 mp_a_x mul 528 moveto (6113) show
4 mp_a_x mul 516 moveto (0418 2586 3705 3826 8262) show
36 mp_a_x mul 516 moveto (write_log 4933) show
4 mp_a_x mul 504 moveto (8333 8449 8473 8474 8636) show
40 mp_a_x mul 504 moveto (4933 4954) show
4 mp_a_x mul 492 moveto (9565) show
36 mp_a_x mul 492 moveto (xchg 0619) show
0 480 moveto (waitdisk 9151) show
40 mp_a_x mul 480 moveto (0619 1316 1483 1519) show
4 mp_a_x mul 468 moveto (9151 9163 9172) show
36 mp_a_x mul 468 moveto (YEAR 7284) show
0 456 moveto (wakeup 2889) show
40 mp_a_x mul 456 moveto (7284 7307) show
4 mp_a_x mul 444 moveto (0419 2889 3403 4522 4741) show
36 mp_a_x mul 444 moveto (yield 2802) show
4 mp_a_x mul 432 moveto (4916 4926 5313 5339 6566) show
40 mp_a_x mul 432 moveto (0420 2802 3453) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
grestore
restore
showpage
%%Page: 10 10
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/types.h  Page 1) show
0 648 moveto (0100 typedef unsigned int   uint;) show
0 636 moveto (0101 typedef unsigned short ushort;) show
0 624 moveto (0102 typedef unsigned char  uchar;) show
0 612 moveto (0103 typedef uint pde_t;) show
0 600 moveto (0104 ) show
0 588 moveto (0105 ) show
0 576 moveto (0106 ) show
0 564 moveto (0107 ) show
0 552 moveto (0108 ) show
0 540 moveto (0109 ) show
0 528 moveto (0110 ) show
0 516 moveto (0111 ) show
0 504 moveto (0112 ) show
0 492 moveto (0113 ) show
0 480 moveto (0114 ) show
0 468 moveto (0115 ) show
0 456 moveto (0116 ) show
0 444 moveto (0117 ) show
0 432 moveto (0118 ) show
0 420 moveto (0119 ) show
0 408 moveto (0120 ) show
0 396 moveto (0121 ) show
0 384 moveto (0122 ) show
0 372 moveto (0123 ) show
0 360 moveto (0124 ) show
0 348 moveto (0125 ) show
0 336 moveto (0126 ) show
0 324 moveto (0127 ) show
0 312 moveto (0128 ) show
0 300 moveto (0129 ) show
0 288 moveto (0130 ) show
0 276 moveto (0131 ) show
0 264 moveto (0132 ) show
0 252 moveto (0133 ) show
0 240 moveto (0134 ) show
0 228 moveto (0135 ) show
0 216 moveto (0136 ) show
0 204 moveto (0137 ) show
0 192 moveto (0138 ) show
0 180 moveto (0139 ) show
0 168 moveto (0140 ) show
0 156 moveto (0141 ) show
0 144 moveto (0142 ) show
0 132 moveto (0143 ) show
0 120 moveto (0144 ) show
0 108 moveto (0145 ) show
0 96 moveto (0146 ) show
0 84 moveto (0147 ) show
0 72 moveto (0148 ) show
0 60 moveto (0149 ) show
0 24 moveto (Sheet 01) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/param.h  Page 1) show
0 648 moveto (0150 #define NPROC        64  // maximum number of processes) show
0 636 moveto (0151 #define KSTACKSIZE 4096  // size of per-process kernel stack) show
0 624 moveto (0152 #define NCPU          8  // maximum number of CPUs) show
0 612 moveto (0153 #define NOFILE       16  // open files per process) show
0 600 moveto (0154 #define NFILE       100  // open files per system) show
0 588 moveto (0155 #define NINODE       50  // maximum number of active i-nodes) show
0 576 moveto (0156 #define NDEV         10  // maximum major device number) show
0 564 moveto (0157 #define ROOTDEV       1  // device number of file system root disk) show
0 552 moveto (0158 #define MAXARG       32  // max exec arguments) show
0 540 moveto (0159 #define MAXOPBLOCKS  10  // max # of blocks any FS op writes) show
0 528 moveto (0160 #define LOGSIZE      \(MAXOPBLOCKS*3\)  // max data blocks in on-disk log) show
0 516 moveto (0161 #define NBUF         \(MAXOPBLOCKS*3\)  // size of disk block cache) show
0 504 moveto (0162 #define FSSIZE       1000  // size of file system in blocks) show
0 492 moveto (0163 ) show
0 480 moveto (0164 ) show
0 468 moveto (0165 ) show
0 456 moveto (0166 ) show
0 444 moveto (0167 ) show
0 432 moveto (0168 ) show
0 420 moveto (0169 ) show
0 408 moveto (0170 ) show
0 396 moveto (0171 ) show
0 384 moveto (0172 ) show
0 372 moveto (0173 ) show
0 360 moveto (0174 ) show
0 348 moveto (0175 ) show
0 336 moveto (0176 ) show
0 324 moveto (0177 ) show
0 312 moveto (0178 ) show
0 300 moveto (0179 ) show
0 288 moveto (0180 ) show
0 276 moveto (0181 ) show
0 264 moveto (0182 ) show
0 252 moveto (0183 ) show
0 240 moveto (0184 ) show
0 228 moveto (0185 ) show
0 216 moveto (0186 ) show
0 204 moveto (0187 ) show
0 192 moveto (0188 ) show
0 180 moveto (0189 ) show
0 168 moveto (0190 ) show
0 156 moveto (0191 ) show
0 144 moveto (0192 ) show
0 132 moveto (0193 ) show
0 120 moveto (0194 ) show
0 108 moveto (0195 ) show
0 96 moveto (0196 ) show
0 84 moveto (0197 ) show
0 72 moveto (0198 ) show
0 60 moveto (0199 ) show
0 24 moveto (Sheet 01) show
grestore
restore
showpage
%%Page: 11 11
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/memlayout.h  Page 1) show
0 648 moveto (0200 // Memory layout) show
0 636 moveto (0201 ) show
0 624 moveto (0202 #define EXTMEM  0x100000            // Start of extended memory) show
0 612 moveto (0203 #define PHYSTOP 0xE000000           // Top physical memory) show
0 600 moveto (0204 #define DEVSPACE 0xFE000000         // Other devices are at high addresses) show
0 588 moveto (0205 ) show
0 576 moveto (0206 // Key addresses for address space layout \(see kmap in vm.c for layout\)) show
0 564 moveto (0207 #define KERNBASE 0x80000000         // First kernel virtual address) show
0 552 moveto (0208 #define KERNLINK \(KERNBASE+EXTMEM\)  // Address where kernel is linked) show
0 540 moveto (0209 ) show
0 528 moveto (0210 #ifndef __ASSEMBLER__) show
0 516 moveto (0211 ) show
0 504 moveto (0212 static inline uint v2p\(void *a\) { return \(\(uint\) \(a\)\)  - KERNBASE; }) show
0 492 moveto (0213 static inline void *p2v\(uint a\) { return \(void *\) \(\(a\) + KERNBASE\); }) show
0 480 moveto (0214 ) show
0 468 moveto (0215 #endif) show
0 456 moveto (0216 ) show
0 444 moveto (0217 #define V2P\(a\) \(\(\(uint\) \(a\)\) - KERNBASE\)) show
0 432 moveto (0218 #define P2V\(a\) \(\(\(void *\) \(a\)\) + KERNBASE\)) show
0 420 moveto (0219 ) show
0 408 moveto (0220 #define V2P_WO\(x\) \(\(x\) - KERNBASE\)    // same as V2P, but without casts) show
0 396 moveto (0221 #define P2V_WO\(x\) \(\(x\) + KERNBASE\)    // same as P2V, but without casts) show
0 384 moveto (0222 ) show
0 372 moveto (0223 ) show
0 360 moveto (0224 ) show
0 348 moveto (0225 ) show
0 336 moveto (0226 ) show
0 324 moveto (0227 ) show
0 312 moveto (0228 ) show
0 300 moveto (0229 ) show
0 288 moveto (0230 ) show
0 276 moveto (0231 ) show
0 264 moveto (0232 ) show
0 252 moveto (0233 ) show
0 240 moveto (0234 ) show
0 228 moveto (0235 ) show
0 216 moveto (0236 ) show
0 204 moveto (0237 ) show
0 192 moveto (0238 ) show
0 180 moveto (0239 ) show
0 168 moveto (0240 ) show
0 156 moveto (0241 ) show
0 144 moveto (0242 ) show
0 132 moveto (0243 ) show
0 120 moveto (0244 ) show
0 108 moveto (0245 ) show
0 96 moveto (0246 ) show
0 84 moveto (0247 ) show
0 72 moveto (0248 ) show
0 60 moveto (0249 ) show
0 24 moveto (Sheet 02) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/date.h  Page 1) show
0 648 moveto (0250 struct rtcdate {) show
0 636 moveto (0251   uint second;) show
0 624 moveto (0252   uint minute;) show
0 612 moveto (0253   uint hour;) show
0 600 moveto (0254   uint day;) show
0 588 moveto (0255   uint month;) show
0 576 moveto (0256   uint year;) show
0 564 moveto (0257 };) show
0 552 moveto (0258 ) show
0 540 moveto (0259 ) show
0 528 moveto (0260 ) show
0 516 moveto (0261 ) show
0 504 moveto (0262 ) show
0 492 moveto (0263 ) show
0 480 moveto (0264 ) show
0 468 moveto (0265 ) show
0 456 moveto (0266 ) show
0 444 moveto (0267 ) show
0 432 moveto (0268 ) show
0 420 moveto (0269 ) show
0 408 moveto (0270 ) show
0 396 moveto (0271 ) show
0 384 moveto (0272 ) show
0 372 moveto (0273 ) show
0 360 moveto (0274 ) show
0 348 moveto (0275 ) show
0 336 moveto (0276 ) show
0 324 moveto (0277 ) show
0 312 moveto (0278 ) show
0 300 moveto (0279 ) show
0 288 moveto (0280 ) show
0 276 moveto (0281 ) show
0 264 moveto (0282 ) show
0 252 moveto (0283 ) show
0 240 moveto (0284 ) show
0 228 moveto (0285 ) show
0 216 moveto (0286 ) show
0 204 moveto (0287 ) show
0 192 moveto (0288 ) show
0 180 moveto (0289 ) show
0 168 moveto (0290 ) show
0 156 moveto (0291 ) show
0 144 moveto (0292 ) show
0 132 moveto (0293 ) show
0 120 moveto (0294 ) show
0 108 moveto (0295 ) show
0 96 moveto (0296 ) show
0 84 moveto (0297 ) show
0 72 moveto (0298 ) show
0 60 moveto (0299 ) show
0 24 moveto (Sheet 02) show
grestore
restore
showpage
%%Page: 12 12
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/defs.h  Page 1) show
0 648 moveto (0300 struct buf;) show
0 636 moveto (0301 struct context;) show
0 624 moveto (0302 struct file;) show
0 612 moveto (0303 struct inode;) show
0 600 moveto (0304 struct pipe;) show
0 588 moveto (0305 struct proc;) show
0 576 moveto (0306 struct rtcdate;) show
0 564 moveto (0307 struct spinlock;) show
0 552 moveto (0308 struct stat;) show
0 540 moveto (0309 struct superblock;) show
0 528 moveto (0310 #ifdef CS333_P2) show
0 516 moveto (0311 struct uproc;) show
0 504 moveto (0312 #endif) show
0 492 moveto (0313 ) show
0 480 moveto (0314 ) show
0 468 moveto (0315 // bio.c) show
0 456 moveto (0316 void            binit\(void\);) show
0 444 moveto (0317 struct buf*     bread\(uint, uint\);) show
0 432 moveto (0318 void            brelse\(struct buf*\);) show
0 420 moveto (0319 void            bwrite\(struct buf*\);) show
0 408 moveto (0320 // console.c) show
0 396 moveto (0321 void            consoleinit\(void\);) show
0 384 moveto (0322 void            cprintf\(char*, ...\);) show
0 372 moveto (0323 void            consoleintr\(int\(*\)\(void\)\);) show
0 360 moveto (0324 void            panic\(char*\) __attribute__\(\(noreturn\)\);) show
0 348 moveto (0325 ) show
0 336 moveto (0326 // exec.c) show
0 324 moveto (0327 int             exec\(char*, char**\);) show
0 312 moveto (0328 ) show
0 300 moveto (0329 // file.c) show
0 288 moveto (0330 struct file*    filealloc\(void\);) show
0 276 moveto (0331 void            fileclose\(struct file*\);) show
0 264 moveto (0332 struct file*    filedup\(struct file*\);) show
0 252 moveto (0333 void            fileinit\(void\);) show
0 240 moveto (0334 int             fileread\(struct file*, char*, int n\);) show
0 228 moveto (0335 int             filestat\(struct file*, struct stat*\);) show
0 216 moveto (0336 int             filewrite\(struct file*, char*, int n\);) show
0 204 moveto (0337 ) show
0 192 moveto (0338 // fs.c) show
0 180 moveto (0339 void            readsb\(int dev, struct superblock *sb\);) show
0 168 moveto (0340 int             dirlink\(struct inode*, char*, uint\);) show
0 156 moveto (0341 struct inode*   dirlookup\(struct inode*, char*, uint*\);) show
0 144 moveto (0342 struct inode*   ialloc\(uint, short\);) show
0 132 moveto (0343 struct inode*   idup\(struct inode*\);) show
0 120 moveto (0344 void            iinit\(int dev\);) show
0 108 moveto (0345 void            ilock\(struct inode*\);) show
0 96 moveto (0346 void            iput\(struct inode*\);) show
0 84 moveto (0347 void            iunlock\(struct inode*\);) show
0 72 moveto (0348 void            iunlockput\(struct inode*\);) show
0 60 moveto (0349 void            iupdate\(struct inode*\);) show
0 24 moveto (Sheet 03) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/defs.h  Page 2) show
0 648 moveto (0350 int             namecmp\(const char*, const char*\);) show
0 636 moveto (0351 struct inode*   namei\(char*\);) show
0 624 moveto (0352 struct inode*   nameiparent\(char*, char*\);) show
0 612 moveto (0353 int             readi\(struct inode*, char*, uint, uint\);) show
0 600 moveto (0354 void            stati\(struct inode*, struct stat*\);) show
0 588 moveto (0355 int             writei\(struct inode*, char*, uint, uint\);) show
0 576 moveto (0356 ) show
0 564 moveto (0357 // ide.c) show
0 552 moveto (0358 void            ideinit\(void\);) show
0 540 moveto (0359 void            ideintr\(void\);) show
0 528 moveto (0360 void            iderw\(struct buf*\);) show
0 516 moveto (0361 ) show
0 504 moveto (0362 // ioapic.c) show
0 492 moveto (0363 void            ioapicenable\(int irq, int cpu\);) show
0 480 moveto (0364 extern uchar    ioapicid;) show
0 468 moveto (0365 void            ioapicinit\(void\);) show
0 456 moveto (0366 ) show
0 444 moveto (0367 // kalloc.c) show
0 432 moveto (0368 char*           kalloc\(void\);) show
0 420 moveto (0369 void            kfree\(char*\);) show
0 408 moveto (0370 void            kinit1\(void*, void*\);) show
0 396 moveto (0371 void            kinit2\(void*, void*\);) show
0 384 moveto (0372 ) show
0 372 moveto (0373 // kbd.c) show
0 360 moveto (0374 void            kbdintr\(void\);) show
0 348 moveto (0375 ) show
0 336 moveto (0376 // lapic.c) show
0 324 moveto (0377 void            cmostime\(struct rtcdate *r\);) show
0 312 moveto (0378 int             cpunum\(void\);) show
0 300 moveto (0379 extern volatile uint*    lapic;) show
0 288 moveto (0380 void            lapiceoi\(void\);) show
0 276 moveto (0381 void            lapicinit\(void\);) show
0 264 moveto (0382 void            lapicstartap\(uchar, uint\);) show
0 252 moveto (0383 void            microdelay\(int\);) show
0 240 moveto (0384 ) show
0 228 moveto (0385 // log.c) show
0 216 moveto (0386 void            initlog\(int dev\);) show
0 204 moveto (0387 void            log_write\(struct buf*\);) show
0 192 moveto (0388 void            begin_op\(\);) show
0 180 moveto (0389 void            end_op\(\);) show
0 168 moveto (0390 ) show
0 156 moveto (0391 // mp.c) show
0 144 moveto (0392 extern int      ismp;) show
0 132 moveto (0393 int             mpbcpu\(void\);) show
0 120 moveto (0394 void            mpinit\(void\);) show
0 108 moveto (0395 void            mpstartthem\(void\);) show
0 96 moveto (0396 ) show
0 84 moveto (0397 // picirq.c) show
0 72 moveto (0398 void            picenable\(int\);) show
0 60 moveto (0399 void            picinit\(void\);) show
0 24 moveto (Sheet 03) show
grestore
restore
showpage
%%Page: 13 13
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/defs.h  Page 3) show
0 648 moveto (0400 // pipe.c) show
0 636 moveto (0401 int             pipealloc\(struct file**, struct file**\);) show
0 624 moveto (0402 void            pipeclose\(struct pipe*, int\);) show
0 612 moveto (0403 int             piperead\(struct pipe*, char*, int\);) show
0 600 moveto (0404 int             pipewrite\(struct pipe*, char*, int\);) show
0 588 moveto (0405 ) show
0 576 moveto (0406 // proc.c) show
0 564 moveto (0407 struct proc*    copyproc\(struct proc*\);) show
0 552 moveto (0408 void            exit\(void\);) show
0 540 moveto (0409 int             fork\(void\);) show
0 528 moveto (0410 int             growproc\(int\);) show
0 516 moveto (0411 int             kill\(int\);) show
0 504 moveto (0412 void            pinit\(void\);) show
0 492 moveto (0413 void            procdump\(void\);) show
0 480 moveto (0414 void            scheduler\(void\) __attribute__\(\(noreturn\)\);) show
0 468 moveto (0415 void            sched\(void\);) show
0 456 moveto (0416 void            sleep\(void*, struct spinlock*\);) show
0 444 moveto (0417 void            userinit\(void\);) show
0 432 moveto (0418 int             wait\(void\);) show
0 420 moveto (0419 void            wakeup\(void*\);) show
0 408 moveto (0420 void            yield\(void\);) show
0 396 moveto (0421 #ifdef CS333_P2) show
0 384 moveto (0422 int) show
64 mp_a_x mul 384 moveto (getprocs\(uint max, struct uproc*\);) show
0 372 moveto (0423 #endif) show
0 360 moveto (0424 #ifdef CS333_P3) show
0 348 moveto (0425 int) show
64 mp_a_x mul 348 moveto (setpriority\(int pid, int priority\);) show
0 336 moveto (0426 #endif) show
0 324 moveto (0427 ) show
0 312 moveto (0428 // swtch.S) show
0 300 moveto (0429 void            swtch\(struct context**, struct context*\);) show
0 288 moveto (0430 ) show
0 276 moveto (0431 // spinlock.c) show
0 264 moveto (0432 void            acquire\(struct spinlock*\);) show
0 252 moveto (0433 void            getcallerpcs\(void*, uint*\);) show
0 240 moveto (0434 int             holding\(struct spinlock*\);) show
0 228 moveto (0435 void            initlock\(struct spinlock*, char*\);) show
0 216 moveto (0436 void            release\(struct spinlock*\);) show
0 204 moveto (0437 void            pushcli\(void\);) show
0 192 moveto (0438 void            popcli\(void\);) show
0 180 moveto (0439 ) show
0 168 moveto (0440 // string.c) show
0 156 moveto (0441 int             memcmp\(const void*, const void*, uint\);) show
0 144 moveto (0442 void*           memmove\(void*, const void*, uint\);) show
0 132 moveto (0443 void*           memset\(void*, int, uint\);) show
0 120 moveto (0444 char*           safestrcpy\(char*, const char*, int\);) show
0 108 moveto (0445 int             strlen\(const char*\);) show
0 96 moveto (0446 int             strncmp\(const char*, const char*, uint\);) show
0 84 moveto (0447 char*           strncpy\(char*, const char*, int\);) show
0 72 moveto (0448 ) show
0 60 moveto (0449 ) show
0 24 moveto (Sheet 04) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/defs.h  Page 4) show
0 648 moveto (0450 // syscall.c) show
0 636 moveto (0451 int             argint\(int, int*\);) show
0 624 moveto (0452 int             argptr\(int, char**, int\);) show
0 612 moveto (0453 int             argstr\(int, char**\);) show
0 600 moveto (0454 int             fetchint\(uint, int*\);) show
0 588 moveto (0455 int             fetchstr\(uint, char**\);) show
0 576 moveto (0456 void            syscall\(void\);) show
0 564 moveto (0457 ) show
0 552 moveto (0458 // timer.c) show
0 540 moveto (0459 void            timerinit\(void\);) show
0 528 moveto (0460 ) show
0 516 moveto (0461 // trap.c) show
0 504 moveto (0462 void            idtinit\(void\);) show
0 492 moveto (0463 extern uint     ticks;) show
0 480 moveto (0464 void            tvinit\(void\);) show
0 468 moveto (0465 extern struct spinlock tickslock;) show
0 456 moveto (0466 ) show
0 444 moveto (0467 // uart.c) show
0 432 moveto (0468 void            uartinit\(void\);) show
0 420 moveto (0469 void            uartintr\(void\);) show
0 408 moveto (0470 void            uartputc\(int\);) show
0 396 moveto (0471 ) show
0 384 moveto (0472 // vm.c) show
0 372 moveto (0473 void            seginit\(void\);) show
0 360 moveto (0474 void            kvmalloc\(void\);) show
0 348 moveto (0475 void            vmenable\(void\);) show
0 336 moveto (0476 pde_t*          setupkvm\(void\);) show
0 324 moveto (0477 char*           uva2ka\(pde_t*, char*\);) show
0 312 moveto (0478 int             allocuvm\(pde_t*, uint, uint\);) show
0 300 moveto (0479 int             deallocuvm\(pde_t*, uint, uint\);) show
0 288 moveto (0480 void            freevm\(pde_t*\);) show
0 276 moveto (0481 void            inituvm\(pde_t*, char*, uint\);) show
0 264 moveto (0482 int             loaduvm\(pde_t*, char*, struct inode*, uint, uint\);) show
0 252 moveto (0483 pde_t*          copyuvm\(pde_t*, uint\);) show
0 240 moveto (0484 void            switchuvm\(struct proc*\);) show
0 228 moveto (0485 void            switchkvm\(void\);) show
0 216 moveto (0486 int             copyout\(pde_t*, uint, void*, uint\);) show
0 204 moveto (0487 void            clearpteu\(pde_t *pgdir, char *uva\);) show
0 192 moveto (0488 ) show
0 180 moveto (0489 // number of elements in fixed-size array) show
0 168 moveto (0490 #define NELEM\(x\) \(sizeof\(x\)/sizeof\(\(x\)[0]\)\)) show
0 156 moveto (0491 ) show
0 144 moveto (0492 ) show
0 132 moveto (0493 ) show
0 120 moveto (0494 ) show
0 108 moveto (0495 ) show
0 96 moveto (0496 ) show
0 84 moveto (0497 ) show
0 72 moveto (0498 ) show
0 60 moveto (0499 ) show
0 24 moveto (Sheet 04) show
grestore
restore
showpage
%%Page: 14 14
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/x86.h  Page 1) show
0 648 moveto (0500 // Routines to let C code use special x86 instructions.) show
0 636 moveto (0501 ) show
0 624 moveto (0502 static inline uchar) show
0 612 moveto (0503 inb\(ushort port\)) show
0 600 moveto (0504 {) show
0 588 moveto (0505   uchar data;) show
0 576 moveto (0506 ) show
0 564 moveto (0507   asm volatile\("in %1,%0" : "=a" \(data\) : "d" \(port\)\);) show
0 552 moveto (0508   return data;) show
0 540 moveto (0509 }) show
0 528 moveto (0510 ) show
0 516 moveto (0511 static inline void) show
0 504 moveto (0512 insl\(int port, void *addr, int cnt\)) show
0 492 moveto (0513 {) show
0 480 moveto (0514   asm volatile\("cld; rep insl" :) show
0 468 moveto (0515                "=D" \(addr\), "=c" \(cnt\) :) show
0 456 moveto (0516                "d" \(port\), "0" \(addr\), "1" \(cnt\) :) show
0 444 moveto (0517                "memory", "cc"\);) show
0 432 moveto (0518 }) show
0 420 moveto (0519 ) show
0 408 moveto (0520 static inline void) show
0 396 moveto (0521 outb\(ushort port, uchar data\)) show
0 384 moveto (0522 {) show
0 372 moveto (0523   asm volatile\("out %0,%1" : : "a" \(data\), "d" \(port\)\);) show
0 360 moveto (0524 }) show
0 348 moveto (0525 ) show
0 336 moveto (0526 static inline void) show
0 324 moveto (0527 outw\(ushort port, ushort data\)) show
0 312 moveto (0528 {) show
0 300 moveto (0529   asm volatile\("out %0,%1" : : "a" \(data\), "d" \(port\)\);) show
0 288 moveto (0530 }) show
0 276 moveto (0531 ) show
0 264 moveto (0532 static inline void) show
0 252 moveto (0533 outsl\(int port, const void *addr, int cnt\)) show
0 240 moveto (0534 {) show
0 228 moveto (0535   asm volatile\("cld; rep outsl" :) show
0 216 moveto (0536                "=S" \(addr\), "=c" \(cnt\) :) show
0 204 moveto (0537                "d" \(port\), "0" \(addr\), "1" \(cnt\) :) show
0 192 moveto (0538                "cc"\);) show
0 180 moveto (0539 }) show
0 168 moveto (0540 ) show
0 156 moveto (0541 static inline void) show
0 144 moveto (0542 stosb\(void *addr, int data, int cnt\)) show
0 132 moveto (0543 {) show
0 120 moveto (0544   asm volatile\("cld; rep stosb" :) show
0 108 moveto (0545                "=D" \(addr\), "=c" \(cnt\) :) show
0 96 moveto (0546                "0" \(addr\), "1" \(cnt\), "a" \(data\) :) show
0 84 moveto (0547                "memory", "cc"\);) show
0 72 moveto (0548 }) show
0 60 moveto (0549 ) show
0 24 moveto (Sheet 05) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/x86.h  Page 2) show
0 648 moveto (0550 static inline void) show
0 636 moveto (0551 stosl\(void *addr, int data, int cnt\)) show
0 624 moveto (0552 {) show
0 612 moveto (0553   asm volatile\("cld; rep stosl" :) show
0 600 moveto (0554                "=D" \(addr\), "=c" \(cnt\) :) show
0 588 moveto (0555                "0" \(addr\), "1" \(cnt\), "a" \(data\) :) show
0 576 moveto (0556                "memory", "cc"\);) show
0 564 moveto (0557 }) show
0 552 moveto (0558 ) show
0 540 moveto (0559 struct segdesc;) show
0 528 moveto (0560 ) show
0 516 moveto (0561 static inline void) show
0 504 moveto (0562 lgdt\(struct segdesc *p, int size\)) show
0 492 moveto (0563 {) show
0 480 moveto (0564   volatile ushort pd[3];) show
0 468 moveto (0565 ) show
0 456 moveto (0566   pd[0] = size-1;) show
0 444 moveto (0567   pd[1] = \(uint\)p;) show
0 432 moveto (0568   pd[2] = \(uint\)p >> 16;) show
0 420 moveto (0569 ) show
0 408 moveto (0570   asm volatile\("lgdt \(%0\)" : : "r" \(pd\)\);) show
0 396 moveto (0571 }) show
0 384 moveto (0572 ) show
0 372 moveto (0573 struct gatedesc;) show
0 360 moveto (0574 ) show
0 348 moveto (0575 static inline void) show
0 336 moveto (0576 lidt\(struct gatedesc *p, int size\)) show
0 324 moveto (0577 {) show
0 312 moveto (0578   volatile ushort pd[3];) show
0 300 moveto (0579 ) show
0 288 moveto (0580   pd[0] = size-1;) show
0 276 moveto (0581   pd[1] = \(uint\)p;) show
0 264 moveto (0582   pd[2] = \(uint\)p >> 16;) show
0 252 moveto (0583 ) show
0 240 moveto (0584   asm volatile\("lidt \(%0\)" : : "r" \(pd\)\);) show
0 228 moveto (0585 }) show
0 216 moveto (0586 ) show
0 204 moveto (0587 static inline void) show
0 192 moveto (0588 ltr\(ushort sel\)) show
0 180 moveto (0589 {) show
0 168 moveto (0590   asm volatile\("ltr %0" : : "r" \(sel\)\);) show
0 156 moveto (0591 }) show
0 144 moveto (0592 ) show
0 132 moveto (0593 static inline uint) show
0 120 moveto (0594 readeflags\(void\)) show
0 108 moveto (0595 {) show
0 96 moveto (0596   uint eflags;) show
0 84 moveto (0597   asm volatile\("pushfl; popl %0" : "=r" \(eflags\)\);) show
0 72 moveto (0598   return eflags;) show
0 60 moveto (0599 }) show
0 24 moveto (Sheet 05) show
grestore
restore
showpage
%%Page: 15 15
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/x86.h  Page 3) show
0 648 moveto (0600 static inline void) show
0 636 moveto (0601 loadgs\(ushort v\)) show
0 624 moveto (0602 {) show
0 612 moveto (0603   asm volatile\("movw %0, %%gs" : : "r" \(v\)\);) show
0 600 moveto (0604 }) show
0 588 moveto (0605 ) show
0 576 moveto (0606 static inline void) show
0 564 moveto (0607 cli\(void\)) show
0 552 moveto (0608 {) show
0 540 moveto (0609   asm volatile\("cli"\);) show
0 528 moveto (0610 }) show
0 516 moveto (0611 ) show
0 504 moveto (0612 static inline void) show
0 492 moveto (0613 sti\(void\)) show
0 480 moveto (0614 {) show
0 468 moveto (0615   asm volatile\("sti"\);) show
0 456 moveto (0616 }) show
0 444 moveto (0617 ) show
0 432 moveto (0618 static inline uint) show
0 420 moveto (0619 xchg\(volatile uint *addr, uint newval\)) show
0 408 moveto (0620 {) show
0 396 moveto (0621   uint result;) show
0 384 moveto (0622 ) show
0 372 moveto (0623   // The + in "+m" denotes a read-modify-write operand.) show
0 360 moveto (0624   asm volatile\("lock; xchgl %0, %1" :) show
0 348 moveto (0625                "+m" \(*addr\), "=a" \(result\) :) show
0 336 moveto (0626                "1" \(newval\) :) show
0 324 moveto (0627                "cc"\);) show
0 312 moveto (0628   return result;) show
0 300 moveto (0629 }) show
0 288 moveto (0630 ) show
0 276 moveto (0631 static inline uint) show
0 264 moveto (0632 rcr2\(void\)) show
0 252 moveto (0633 {) show
0 240 moveto (0634   uint val;) show
0 228 moveto (0635   asm volatile\("movl %%cr2,%0" : "=r" \(val\)\);) show
0 216 moveto (0636   return val;) show
0 204 moveto (0637 }) show
0 192 moveto (0638 ) show
0 180 moveto (0639 static inline void) show
0 168 moveto (0640 lcr3\(uint val\)) show
0 156 moveto (0641 {) show
0 144 moveto (0642   asm volatile\("movl %0,%%cr3" : : "r" \(val\)\);) show
0 132 moveto (0643 }) show
0 120 moveto (0644 ) show
0 108 moveto (0645 ) show
0 96 moveto (0646 ) show
0 84 moveto (0647 ) show
0 72 moveto (0648 ) show
0 60 moveto (0649 ) show
0 24 moveto (Sheet 06) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/x86.h  Page 4) show
0 648 moveto (0650 // Layout of the trap frame built on the stack by the) show
0 636 moveto (0651 // hardware and by trapasm.S, and passed to trap\(\).) show
0 624 moveto (0652 struct trapframe {) show
0 612 moveto (0653   // registers as pushed by pusha) show
0 600 moveto (0654   uint edi;) show
0 588 moveto (0655   uint esi;) show
0 576 moveto (0656   uint ebp;) show
0 564 moveto (0657   uint oesp;      // useless & ignored) show
0 552 moveto (0658   uint ebx;) show
0 540 moveto (0659   uint edx;) show
0 528 moveto (0660   uint ecx;) show
0 516 moveto (0661   uint eax;) show
0 504 moveto (0662 ) show
0 492 moveto (0663   // rest of trap frame) show
0 480 moveto (0664   ushort gs;) show
0 468 moveto (0665   ushort padding1;) show
0 456 moveto (0666   ushort fs;) show
0 444 moveto (0667   ushort padding2;) show
0 432 moveto (0668   ushort es;) show
0 420 moveto (0669   ushort padding3;) show
0 408 moveto (0670   ushort ds;) show
0 396 moveto (0671   ushort padding4;) show
0 384 moveto (0672   uint trapno;) show
0 372 moveto (0673 ) show
0 360 moveto (0674   // below here defined by x86 hardware) show
0 348 moveto (0675   uint err;) show
0 336 moveto (0676   uint eip;) show
0 324 moveto (0677   ushort cs;) show
0 312 moveto (0678   ushort padding5;) show
0 300 moveto (0679   uint eflags;) show
0 288 moveto (0680 ) show
0 276 moveto (0681   // below here only when crossing rings, such as from user to kernel) show
0 264 moveto (0682   uint esp;) show
0 252 moveto (0683   ushort ss;) show
0 240 moveto (0684   ushort padding6;) show
0 228 moveto (0685 };) show
0 216 moveto (0686 ) show
0 204 moveto (0687 ) show
0 192 moveto (0688 ) show
0 180 moveto (0689 ) show
0 168 moveto (0690 ) show
0 156 moveto (0691 ) show
0 144 moveto (0692 ) show
0 132 moveto (0693 ) show
0 120 moveto (0694 ) show
0 108 moveto (0695 ) show
0 96 moveto (0696 ) show
0 84 moveto (0697 ) show
0 72 moveto (0698 ) show
0 60 moveto (0699 ) show
0 24 moveto (Sheet 06) show
grestore
restore
showpage
%%Page: 16 16
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/asm.h  Page 1) show
0 648 moveto (0700 //) show
0 636 moveto (0701 // assembler macros to create x86 segments) show
0 624 moveto (0702 //) show
0 612 moveto (0703 ) show
0 600 moveto (0704 #define SEG_NULLASM                                             \\) show
0 588 moveto (0705         .word 0, 0;                                             \\) show
0 576 moveto (0706         .byte 0, 0, 0, 0) show
0 564 moveto (0707 ) show
0 552 moveto (0708 // The 0xC0 means the limit is in 4096-byte units) show
0 540 moveto (0709 // and \(for executable segments\) 32-bit mode.) show
0 528 moveto (0710 #define SEG_ASM\(type,base,lim\)                                  \\) show
0 516 moveto (0711         .word \(\(\(lim\) >> 12\) & 0xffff\), \(\(base\) & 0xffff\);      \\) show
0 504 moveto (0712         .byte \(\(\(base\) >> 16\) & 0xff\), \(0x90 | \(type\)\),         \\) show
0 492 moveto (0713                 \(0xC0 | \(\(\(lim\) >> 28\) & 0xf\)\), \(\(\(base\) >> 24\) & 0xff\)) show
0 480 moveto (0714 ) show
0 468 moveto (0715 #define STA_X     0x8       // Executable segment) show
0 456 moveto (0716 #define STA_E     0x4       // Expand down \(non-executable segments\)) show
0 444 moveto (0717 #define STA_C     0x4       // Conforming code segment \(executable only\)) show
0 432 moveto (0718 #define STA_W     0x2       // Writeable \(non-executable segments\)) show
0 420 moveto (0719 #define STA_R     0x2       // Readable \(executable segments\)) show
0 408 moveto (0720 #define STA_A     0x1       // Accessed) show
0 396 moveto (0721 ) show
0 384 moveto (0722 ) show
0 372 moveto (0723 ) show
0 360 moveto (0724 ) show
0 348 moveto (0725 ) show
0 336 moveto (0726 ) show
0 324 moveto (0727 ) show
0 312 moveto (0728 ) show
0 300 moveto (0729 ) show
0 288 moveto (0730 ) show
0 276 moveto (0731 ) show
0 264 moveto (0732 ) show
0 252 moveto (0733 ) show
0 240 moveto (0734 ) show
0 228 moveto (0735 ) show
0 216 moveto (0736 ) show
0 204 moveto (0737 ) show
0 192 moveto (0738 ) show
0 180 moveto (0739 ) show
0 168 moveto (0740 ) show
0 156 moveto (0741 ) show
0 144 moveto (0742 ) show
0 132 moveto (0743 ) show
0 120 moveto (0744 ) show
0 108 moveto (0745 ) show
0 96 moveto (0746 ) show
0 84 moveto (0747 ) show
0 72 moveto (0748 ) show
0 60 moveto (0749 ) show
0 24 moveto (Sheet 07) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/mmu.h  Page 1) show
0 648 moveto (0750 // This file contains definitions for the) show
0 636 moveto (0751 // x86 memory management unit \(MMU\).) show
0 624 moveto (0752 ) show
0 612 moveto (0753 // Eflags register) show
0 600 moveto (0754 #define FL_CF           0x00000001      // Carry Flag) show
0 588 moveto (0755 #define FL_PF           0x00000004      // Parity Flag) show
0 576 moveto (0756 #define FL_AF           0x00000010      // Auxiliary carry Flag) show
0 564 moveto (0757 #define FL_ZF           0x00000040      // Zero Flag) show
0 552 moveto (0758 #define FL_SF           0x00000080      // Sign Flag) show
0 540 moveto (0759 #define FL_TF           0x00000100      // Trap Flag) show
0 528 moveto (0760 #define FL_IF           0x00000200      // Interrupt Enable) show
0 516 moveto (0761 #define FL_DF           0x00000400      // Direction Flag) show
0 504 moveto (0762 #define FL_OF           0x00000800      // Overflow Flag) show
0 492 moveto (0763 #define FL_IOPL_MASK    0x00003000      // I/O Privilege Level bitmask) show
0 480 moveto (0764 #define FL_IOPL_0       0x00000000      //   IOPL == 0) show
0 468 moveto (0765 #define FL_IOPL_1       0x00001000      //   IOPL == 1) show
0 456 moveto (0766 #define FL_IOPL_2       0x00002000      //   IOPL == 2) show
0 444 moveto (0767 #define FL_IOPL_3       0x00003000      //   IOPL == 3) show
0 432 moveto (0768 #define FL_NT           0x00004000      // Nested Task) show
0 420 moveto (0769 #define FL_RF           0x00010000      // Resume Flag) show
0 408 moveto (0770 #define FL_VM           0x00020000      // Virtual 8086 mode) show
0 396 moveto (0771 #define FL_AC           0x00040000      // Alignment Check) show
0 384 moveto (0772 #define FL_VIF          0x00080000      // Virtual Interrupt Flag) show
0 372 moveto (0773 #define FL_VIP          0x00100000      // Virtual Interrupt Pending) show
0 360 moveto (0774 #define FL_ID           0x00200000      // ID flag) show
0 348 moveto (0775 ) show
0 336 moveto (0776 // Control Register flags) show
0 324 moveto (0777 #define CR0_PE          0x00000001      // Protection Enable) show
0 312 moveto (0778 #define CR0_MP          0x00000002      // Monitor coProcessor) show
0 300 moveto (0779 #define CR0_EM          0x00000004      // Emulation) show
0 288 moveto (0780 #define CR0_TS          0x00000008      // Task Switched) show
0 276 moveto (0781 #define CR0_ET          0x00000010      // Extension Type) show
0 264 moveto (0782 #define CR0_NE          0x00000020      // Numeric Errror) show
0 252 moveto (0783 #define CR0_WP          0x00010000      // Write Protect) show
0 240 moveto (0784 #define CR0_AM          0x00040000      // Alignment Mask) show
0 228 moveto (0785 #define CR0_NW          0x20000000      // Not Writethrough) show
0 216 moveto (0786 #define CR0_CD          0x40000000      // Cache Disable) show
0 204 moveto (0787 #define CR0_PG          0x80000000      // Paging) show
0 192 moveto (0788 ) show
0 180 moveto (0789 #define CR4_PSE         0x00000010      // Page size extension) show
0 168 moveto (0790 ) show
0 156 moveto (0791 #define SEG_KCODE 1  // kernel code) show
0 144 moveto (0792 #define SEG_KDATA 2  // kernel data+stack) show
0 132 moveto (0793 #define SEG_KCPU  3  // kernel per-cpu data) show
0 120 moveto (0794 #define SEG_UCODE 4  // user code) show
0 108 moveto (0795 #define SEG_UDATA 5  // user data+stack) show
0 96 moveto (0796 #define SEG_TSS   6  // this process's task state) show
0 84 moveto (0797 ) show
0 72 moveto (0798 ) show
0 60 moveto (0799 ) show
0 24 moveto (Sheet 07) show
grestore
restore
showpage
%%Page: 17 17
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/mmu.h  Page 2) show
0 648 moveto (0800 #ifndef __ASSEMBLER__) show
0 636 moveto (0801 // Segment Descriptor) show
0 624 moveto (0802 struct segdesc {) show
0 612 moveto (0803   uint lim_15_0 : 16;  // Low bits of segment limit) show
0 600 moveto (0804   uint base_15_0 : 16; // Low bits of segment base address) show
0 588 moveto (0805   uint base_23_16 : 8; // Middle bits of segment base address) show
0 576 moveto (0806   uint type : 4;       // Segment type \(see STS_ constants\)) show
0 564 moveto (0807   uint s : 1;          // 0 = system, 1 = application) show
0 552 moveto (0808   uint dpl : 2;        // Descriptor Privilege Level) show
0 540 moveto (0809   uint p : 1;          // Present) show
0 528 moveto (0810   uint lim_19_16 : 4;  // High bits of segment limit) show
0 516 moveto (0811   uint avl : 1;        // Unused \(available for software use\)) show
0 504 moveto (0812   uint rsv1 : 1;       // Reserved) show
0 492 moveto (0813   uint db : 1;         // 0 = 16-bit segment, 1 = 32-bit segment) show
0 480 moveto (0814   uint g : 1;          // Granularity: limit scaled by 4K when set) show
0 468 moveto (0815   uint base_31_24 : 8; // High bits of segment base address) show
0 456 moveto (0816 };) show
0 444 moveto (0817 ) show
0 432 moveto (0818 // Normal segment) show
0 420 moveto (0819 #define SEG\(type, base, lim, dpl\) \(struct segdesc\)    \\) show
0 408 moveto (0820 { \(\(lim\) >> 12\) & 0xffff, \(uint\)\(base\) & 0xffff,      \\) show
0 396 moveto (0821   \(\(uint\)\(base\) >> 16\) & 0xff, type, 1, dpl, 1,       \\) show
0 384 moveto (0822   \(uint\)\(lim\) >> 28, 0, 0, 1, 1, \(uint\)\(base\) >> 24 }) show
0 372 moveto (0823 #define SEG16\(type, base, lim, dpl\) \(struct segdesc\)  \\) show
0 360 moveto (0824 { \(lim\) & 0xffff, \(uint\)\(base\) & 0xffff,              \\) show
0 348 moveto (0825   \(\(uint\)\(base\) >> 16\) & 0xff, type, 1, dpl, 1,       \\) show
0 336 moveto (0826   \(uint\)\(lim\) >> 16, 0, 0, 1, 0, \(uint\)\(base\) >> 24 }) show
0 324 moveto (0827 #endif) show
0 312 moveto (0828 ) show
0 300 moveto (0829 #define DPL_USER    0x3     // User DPL) show
0 288 moveto (0830 ) show
0 276 moveto (0831 // Application segment type bits) show
0 264 moveto (0832 #define STA_X       0x8     // Executable segment) show
0 252 moveto (0833 #define STA_E       0x4     // Expand down \(non-executable segments\)) show
0 240 moveto (0834 #define STA_C       0x4     // Conforming code segment \(executable only\)) show
0 228 moveto (0835 #define STA_W       0x2     // Writeable \(non-executable segments\)) show
0 216 moveto (0836 #define STA_R       0x2     // Readable \(executable segments\)) show
0 204 moveto (0837 #define STA_A       0x1     // Accessed) show
0 192 moveto (0838 ) show
0 180 moveto (0839 // System segment type bits) show
0 168 moveto (0840 #define STS_T16A    0x1     // Available 16-bit TSS) show
0 156 moveto (0841 #define STS_LDT     0x2     // Local Descriptor Table) show
0 144 moveto (0842 #define STS_T16B    0x3     // Busy 16-bit TSS) show
0 132 moveto (0843 #define STS_CG16    0x4     // 16-bit Call Gate) show
0 120 moveto (0844 #define STS_TG      0x5     // Task Gate / Coum Transmitions) show
0 108 moveto (0845 #define STS_IG16    0x6     // 16-bit Interrupt Gate) show
0 96 moveto (0846 #define STS_TG16    0x7     // 16-bit Trap Gate) show
0 84 moveto (0847 #define STS_T32A    0x9     // Available 32-bit TSS) show
0 72 moveto (0848 #define STS_T32B    0xB     // Busy 32-bit TSS) show
0 60 moveto (0849 #define STS_CG32    0xC     // 32-bit Call Gate) show
0 24 moveto (Sheet 08) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/mmu.h  Page 3) show
0 648 moveto (0850 #define STS_IG32    0xE     // 32-bit Interrupt Gate) show
0 636 moveto (0851 #define STS_TG32    0xF     // 32-bit Trap Gate) show
0 624 moveto (0852 ) show
0 612 moveto (0853 // A virtual address 'la' has a three-part structure as follows:) show
0 600 moveto (0854 //) show
0 588 moveto (0855 // +--------10------+-------10-------+---------12----------+) show
0 576 moveto (0856 // | Page Directory |   Page Table   | Offset within Page  |) show
0 564 moveto (0857 // |      Index     |      Index     |                     |) show
0 552 moveto (0858 // +----------------+----------------+---------------------+) show
0 540 moveto (0859 //  \\--- PDX\(va\) --/ \\--- PTX\(va\) --/) show
0 528 moveto (0860 ) show
0 516 moveto (0861 // page directory index) show
0 504 moveto (0862 #define PDX\(va\)         \(\(\(uint\)\(va\) >> PDXSHIFT\) & 0x3FF\)) show
0 492 moveto (0863 ) show
0 480 moveto (0864 // page table index) show
0 468 moveto (0865 #define PTX\(va\)         \(\(\(uint\)\(va\) >> PTXSHIFT\) & 0x3FF\)) show
0 456 moveto (0866 ) show
0 444 moveto (0867 // construct virtual address from indexes and offset) show
0 432 moveto (0868 #define PGADDR\(d, t, o\) \(\(uint\)\(\(d\) << PDXSHIFT | \(t\) << PTXSHIFT | \(o\)\)\)) show
0 420 moveto (0869 ) show
0 408 moveto (0870 // Page directory and page table constants.) show
0 396 moveto (0871 #define NPDENTRIES      1024    // # directory entries per page directory) show
0 384 moveto (0872 #define NPTENTRIES      1024    // # PTEs per page table) show
0 372 moveto (0873 #define PGSIZE          4096    // bytes mapped by a page) show
0 360 moveto (0874 ) show
0 348 moveto (0875 #define PGSHIFT         12      // log2\(PGSIZE\)) show
0 336 moveto (0876 #define PTXSHIFT        12      // offset of PTX in a linear address) show
0 324 moveto (0877 #define PDXSHIFT        22      // offset of PDX in a linear address) show
0 312 moveto (0878 ) show
0 300 moveto (0879 #define PGROUNDUP\(sz\)  \(\(\(sz\)+PGSIZE-1\) & ~\(PGSIZE-1\)\)) show
0 288 moveto (0880 #define PGROUNDDOWN\(a\) \(\(\(a\)\) & ~\(PGSIZE-1\)\)) show
0 276 moveto (0881 ) show
0 264 moveto (0882 // Page table/directory entry flags.) show
0 252 moveto (0883 #define PTE_P           0x001   // Present) show
0 240 moveto (0884 #define PTE_W           0x002   // Writeable) show
0 228 moveto (0885 #define PTE_U           0x004   // User) show
0 216 moveto (0886 #define PTE_PWT         0x008   // Write-Through) show
0 204 moveto (0887 #define PTE_PCD         0x010   // Cache-Disable) show
0 192 moveto (0888 #define PTE_A           0x020   // Accessed) show
0 180 moveto (0889 #define PTE_D           0x040   // Dirty) show
0 168 moveto (0890 #define PTE_PS          0x080   // Page Size) show
0 156 moveto (0891 #define PTE_MBZ         0x180   // Bits must be zero) show
0 144 moveto (0892 ) show
0 132 moveto (0893 // Address in page table or page directory entry) show
0 120 moveto (0894 #define PTE_ADDR\(pte\)   \(\(uint\)\(pte\) & ~0xFFF\)) show
0 108 moveto (0895 #define PTE_FLAGS\(pte\)  \(\(uint\)\(pte\) &  0xFFF\)) show
0 96 moveto (0896 ) show
0 84 moveto (0897 #ifndef __ASSEMBLER__) show
0 72 moveto (0898 typedef uint pte_t;) show
0 60 moveto (0899 ) show
0 24 moveto (Sheet 08) show
grestore
restore
showpage
%%Page: 18 18
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/mmu.h  Page 4) show
0 648 moveto (0900 // Task state segment format) show
0 636 moveto (0901 struct taskstate {) show
0 624 moveto (0902   uint link;         // Old ts selector) show
0 612 moveto (0903   uint esp0;         // Stack pointers and segment selectors) show
0 600 moveto (0904   ushort ss0;        //   after an increase in privilege level) show
0 588 moveto (0905   ushort padding1;) show
0 576 moveto (0906   uint *esp1;) show
0 564 moveto (0907   ushort ss1;) show
0 552 moveto (0908   ushort padding2;) show
0 540 moveto (0909   uint *esp2;) show
0 528 moveto (0910   ushort ss2;) show
0 516 moveto (0911   ushort padding3;) show
0 504 moveto (0912   void *cr3;         // Page directory base) show
0 492 moveto (0913   uint *eip;         // Saved state from last task switch) show
0 480 moveto (0914   uint eflags;) show
0 468 moveto (0915   uint eax;          // More saved state \(registers\)) show
0 456 moveto (0916   uint ecx;) show
0 444 moveto (0917   uint edx;) show
0 432 moveto (0918   uint ebx;) show
0 420 moveto (0919   uint *esp;) show
0 408 moveto (0920   uint *ebp;) show
0 396 moveto (0921   uint esi;) show
0 384 moveto (0922   uint edi;) show
0 372 moveto (0923   ushort es;         // Even more saved state \(segment selectors\)) show
0 360 moveto (0924   ushort padding4;) show
0 348 moveto (0925   ushort cs;) show
0 336 moveto (0926   ushort padding5;) show
0 324 moveto (0927   ushort ss;) show
0 312 moveto (0928   ushort padding6;) show
0 300 moveto (0929   ushort ds;) show
0 288 moveto (0930   ushort padding7;) show
0 276 moveto (0931   ushort fs;) show
0 264 moveto (0932   ushort padding8;) show
0 252 moveto (0933   ushort gs;) show
0 240 moveto (0934   ushort padding9;) show
0 228 moveto (0935   ushort ldt;) show
0 216 moveto (0936   ushort padding10;) show
0 204 moveto (0937   ushort t;          // Trap on task switch) show
0 192 moveto (0938   ushort iomb;       // I/O map base address) show
0 180 moveto (0939 };) show
0 168 moveto (0940 ) show
0 156 moveto (0941 ) show
0 144 moveto (0942 ) show
0 132 moveto (0943 ) show
0 120 moveto (0944 ) show
0 108 moveto (0945 ) show
0 96 moveto (0946 ) show
0 84 moveto (0947 ) show
0 72 moveto (0948 ) show
0 60 moveto (0949 ) show
0 24 moveto (Sheet 09) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/mmu.h  Page 5) show
0 648 moveto (0950 // Gate descriptors for interrupts and traps) show
0 636 moveto (0951 struct gatedesc {) show
0 624 moveto (0952   uint off_15_0 : 16;   // low 16 bits of offset in segment) show
0 612 moveto (0953   uint cs : 16;         // code segment selector) show
0 600 moveto (0954   uint args : 5;        // # args, 0 for interrupt/trap gates) show
0 588 moveto (0955   uint rsv1 : 3;        // reserved\(should be zero I guess\)) show
0 576 moveto (0956   uint type : 4;        // type\(STS_{TG,IG32,TG32}\)) show
0 564 moveto (0957   uint s : 1;           // must be 0 \(system\)) show
0 552 moveto (0958   uint dpl : 2;         // descriptor\(meaning new\) privilege level) show
0 540 moveto (0959   uint p : 1;           // Present) show
0 528 moveto (0960   uint off_31_16 : 16;  // high bits of offset in segment) show
0 516 moveto (0961 };) show
0 504 moveto (0962 ) show
0 492 moveto (0963 // Set up a normal interrupt/trap gate descriptor.) show
0 480 moveto (0964 // - istrap: 1 for a trap \(= exception\) gate, 0 for an interrupt gate.) show
0 468 moveto (0965 //   interrupt gate clears FL_IF, trap gate leaves FL_IF alone) show
0 456 moveto (0966 // - sel: Code segment selector for interrupt/trap handler) show
0 444 moveto (0967 // - off: Offset in code segment for interrupt/trap handler) show
0 432 moveto (0968 // - dpl: Descriptor Privilege Level -) show
0 420 moveto (0969 //        the privilege level required for software to invoke) show
0 408 moveto (0970 //        this interrupt/trap gate explicitly using an int instruction.) show
0 396 moveto (0971 #define SETGATE\(gate, istrap, sel, off, d\)                \\) show
0 384 moveto (0972 {                                                         \\) show
0 372 moveto (0973   \(gate\).off_15_0 = \(uint\)\(off\) & 0xffff;                \\) show
0 360 moveto (0974   \(gate\).cs = \(sel\);                                      \\) show
0 348 moveto (0975   \(gate\).args = 0;                                        \\) show
0 336 moveto (0976   \(gate\).rsv1 = 0;                                        \\) show
0 324 moveto (0977   \(gate\).type = \(istrap\) ? STS_TG32 : STS_IG32;           \\) show
0 312 moveto (0978   \(gate\).s = 0;                                           \\) show
0 300 moveto (0979   \(gate\).dpl = \(d\);                                       \\) show
0 288 moveto (0980   \(gate\).p = 1;                                           \\) show
0 276 moveto (0981   \(gate\).off_31_16 = \(uint\)\(off\) >> 16;                  \\) show
0 264 moveto (0982 }) show
0 252 moveto (0983 ) show
0 240 moveto (0984 #endif) show
0 228 moveto (0985 ) show
0 216 moveto (0986 ) show
0 204 moveto (0987 ) show
0 192 moveto (0988 ) show
0 180 moveto (0989 ) show
0 168 moveto (0990 ) show
0 156 moveto (0991 ) show
0 144 moveto (0992 ) show
0 132 moveto (0993 ) show
0 120 moveto (0994 ) show
0 108 moveto (0995 ) show
0 96 moveto (0996 ) show
0 84 moveto (0997 ) show
0 72 moveto (0998 ) show
0 60 moveto (0999 ) show
0 24 moveto (Sheet 09) show
grestore
restore
showpage
%%Page: 19 19
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/elf.h  Page 1) show
0 648 moveto (1000 // Format of an ELF executable file) show
0 636 moveto (1001 ) show
0 624 moveto (1002 #define ELF_MAGIC 0x464C457FU  // "\\x7FELF" in little endian) show
0 612 moveto (1003 ) show
0 600 moveto (1004 // File header) show
0 588 moveto (1005 struct elfhdr {) show
0 576 moveto (1006   uint magic;  // must equal ELF_MAGIC) show
0 564 moveto (1007   uchar elf[12];) show
0 552 moveto (1008   ushort type;) show
0 540 moveto (1009   ushort machine;) show
0 528 moveto (1010   uint version;) show
0 516 moveto (1011   uint entry;) show
0 504 moveto (1012   uint phoff;) show
0 492 moveto (1013   uint shoff;) show
0 480 moveto (1014   uint flags;) show
0 468 moveto (1015   ushort ehsize;) show
0 456 moveto (1016   ushort phentsize;) show
0 444 moveto (1017   ushort phnum;) show
0 432 moveto (1018   ushort shentsize;) show
0 420 moveto (1019   ushort shnum;) show
0 408 moveto (1020   ushort shstrndx;) show
0 396 moveto (1021 };) show
0 384 moveto (1022 ) show
0 372 moveto (1023 // Program section header) show
0 360 moveto (1024 struct proghdr {) show
0 348 moveto (1025   uint type;) show
0 336 moveto (1026   uint off;) show
0 324 moveto (1027   uint vaddr;) show
0 312 moveto (1028   uint paddr;) show
0 300 moveto (1029   uint filesz;) show
0 288 moveto (1030   uint memsz;) show
0 276 moveto (1031   uint flags;) show
0 264 moveto (1032   uint align;) show
0 252 moveto (1033 };) show
0 240 moveto (1034 ) show
0 228 moveto (1035 // Values for Proghdr type) show
0 216 moveto (1036 #define ELF_PROG_LOAD           1) show
0 204 moveto (1037 ) show
0 192 moveto (1038 // Flag bits for Proghdr flags) show
0 180 moveto (1039 #define ELF_PROG_FLAG_EXEC      1) show
0 168 moveto (1040 #define ELF_PROG_FLAG_WRITE     2) show
0 156 moveto (1041 #define ELF_PROG_FLAG_READ      4) show
0 144 moveto (1042 ) show
0 132 moveto (1043 ) show
0 120 moveto (1044 ) show
0 108 moveto (1045 ) show
0 96 moveto (1046 ) show
0 84 moveto (1047 ) show
0 72 moveto (1048 ) show
0 60 moveto (1049 ) show
0 24 moveto (Sheet 10) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/entry.S  Page 1) show
0 648 moveto (1050 # Multiboot header, for multiboot boot loaders like GNU Grub.) show
0 636 moveto (1051 # http://www.gnu.org/software/grub/manual/multiboot/multiboot.html) show
0 624 moveto (1052 #) show
0 612 moveto (1053 # Using GRUB 2, you can boot xv6 from a file stored in a) show
0 600 moveto (1054 # Linux file system by copying kernel or kernelmemfs to /boot) show
0 588 moveto (1055 # and then adding this menu entry:) show
0 576 moveto (1056 #) show
0 564 moveto (1057 # menuentry "xv6" {) show
0 552 moveto (1058 # ) show
8 mp_a_x mul 552 moveto (insmod ext2) show
0 540 moveto (1059 # ) show
8 mp_a_x mul 540 moveto (set root='\(hd0,msdos1\)') show
0 528 moveto (1060 # ) show
8 mp_a_x mul 528 moveto (set kernel='/boot/kernel') show
0 516 moveto (1061 # ) show
8 mp_a_x mul 516 moveto (echo "Loading ${kernel}...") show
0 504 moveto (1062 # ) show
8 mp_a_x mul 504 moveto (multiboot ${kernel} ${kernel}) show
0 492 moveto (1063 # ) show
8 mp_a_x mul 492 moveto (boot) show
0 480 moveto (1064 # }) show
0 468 moveto (1065 ) show
0 456 moveto (1066 #include "asm.h") show
0 444 moveto (1067 #include "memlayout.h") show
0 432 moveto (1068 #include "mmu.h") show
0 420 moveto (1069 #include "param.h") show
0 408 moveto (1070 ) show
0 396 moveto (1071 # Multiboot header.  Data to direct multiboot loader.) show
0 384 moveto (1072 .p2align 2) show
0 372 moveto (1073 .text) show
0 360 moveto (1074 .globl multiboot_header) show
0 348 moveto (1075 multiboot_header:) show
0 336 moveto (1076   #define magic 0x1badb002) show
0 324 moveto (1077   #define flags 0) show
0 312 moveto (1078   .long magic) show
0 300 moveto (1079   .long flags) show
0 288 moveto (1080   .long \(-magic-flags\)) show
0 276 moveto (1081 ) show
0 264 moveto (1082 # By convention, the _start symbol specifies the ELF entry point.) show
0 252 moveto (1083 # Since we haven't set up virtual memory yet, our entry point is) show
0 240 moveto (1084 # the physical address of 'entry'.) show
0 228 moveto (1085 .globl _start) show
0 216 moveto (1086 _start = V2P_WO\(entry\)) show
0 204 moveto (1087 ) show
0 192 moveto (1088 # Entering xv6 on boot processor, with paging off.) show
0 180 moveto (1089 .globl entry) show
0 168 moveto (1090 entry:) show
0 156 moveto (1091   # Turn on page size extension for 4Mbyte pages) show
0 144 moveto (1092   movl    %cr4, %eax) show
0 132 moveto (1093   orl     $\(CR4_PSE\), %eax) show
0 120 moveto (1094   movl    %eax, %cr4) show
0 108 moveto (1095   # Set page directory) show
0 96 moveto (1096   movl    $\(V2P_WO\(entrypgdir\)\), %eax) show
0 84 moveto (1097   movl    %eax, %cr3) show
0 72 moveto (1098   # Turn on paging.) show
0 60 moveto (1099   movl    %cr0, %eax) show
0 24 moveto (Sheet 10) show
grestore
restore
showpage
%%Page: 20 20
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/entry.S  Page 2) show
0 648 moveto (1100   orl     $\(CR0_PG|CR0_WP\), %eax) show
0 636 moveto (1101   movl    %eax, %cr0) show
0 624 moveto (1102 ) show
0 612 moveto (1103   # Set up the stack pointer.) show
0 600 moveto (1104   movl $\(stack + KSTACKSIZE\), %esp) show
0 588 moveto (1105 ) show
0 576 moveto (1106   # Jump to main\(\), and switch to executing at) show
0 564 moveto (1107   # high addresses. The indirect call is needed because) show
0 552 moveto (1108   # the assembler produces a PC-relative instruction) show
0 540 moveto (1109   # for a direct jump.) show
0 528 moveto (1110   mov $main, %eax) show
0 516 moveto (1111   jmp *%eax) show
0 504 moveto (1112 ) show
0 492 moveto (1113 .comm stack, KSTACKSIZE) show
0 480 moveto (1114 ) show
0 468 moveto (1115 ) show
0 456 moveto (1116 ) show
0 444 moveto (1117 ) show
0 432 moveto (1118 ) show
0 420 moveto (1119 ) show
0 408 moveto (1120 ) show
0 396 moveto (1121 ) show
0 384 moveto (1122 ) show
0 372 moveto (1123 ) show
0 360 moveto (1124 ) show
0 348 moveto (1125 ) show
0 336 moveto (1126 ) show
0 324 moveto (1127 ) show
0 312 moveto (1128 ) show
0 300 moveto (1129 ) show
0 288 moveto (1130 ) show
0 276 moveto (1131 ) show
0 264 moveto (1132 ) show
0 252 moveto (1133 ) show
0 240 moveto (1134 ) show
0 228 moveto (1135 ) show
0 216 moveto (1136 ) show
0 204 moveto (1137 ) show
0 192 moveto (1138 ) show
0 180 moveto (1139 ) show
0 168 moveto (1140 ) show
0 156 moveto (1141 ) show
0 144 moveto (1142 ) show
0 132 moveto (1143 ) show
0 120 moveto (1144 ) show
0 108 moveto (1145 ) show
0 96 moveto (1146 ) show
0 84 moveto (1147 ) show
0 72 moveto (1148 ) show
0 60 moveto (1149 ) show
0 24 moveto (Sheet 11) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/entryother.S  Page 1) show
0 648 moveto (1150 #include "asm.h") show
0 636 moveto (1151 #include "memlayout.h") show
0 624 moveto (1152 #include "mmu.h") show
0 612 moveto (1153 ) show
0 600 moveto (1154 # Each non-boot CPU \("AP"\) is started up in response to a STARTUP) show
0 588 moveto (1155 # IPI from the boot CPU.  Section B.4.2 of the Multi-Processor) show
0 576 moveto (1156 # Specification says that the AP will start in real mode with CS:IP) show
0 564 moveto (1157 # set to XY00:0000, where XY is an 8-bit value sent with the) show
0 552 moveto (1158 # STARTUP. Thus this code must start at a 4096-byte boundary.) show
0 540 moveto (1159 #) show
0 528 moveto (1160 # Because this code sets DS to zero, it must sit) show
0 516 moveto (1161 # at an address in the low 2^16 bytes.) show
0 504 moveto (1162 #) show
0 492 moveto (1163 # Startothers \(in main.c\) sends the STARTUPs one at a time.) show
0 480 moveto (1164 # It copies this code \(start\) at 0x7000.  It puts the address of) show
0 468 moveto (1165 # a newly allocated per-core stack in start-4,the address of the) show
0 456 moveto (1166 # place to jump to \(mpenter\) in start-8, and the physical address) show
0 444 moveto (1167 # of entrypgdir in start-12.) show
0 432 moveto (1168 #) show
0 420 moveto (1169 # This code is identical to bootasm.S except:) show
0 408 moveto (1170 #   - it does not need to enable A20) show
0 396 moveto (1171 #   - it uses the address at start-4, start-8, and start-12) show
0 384 moveto (1172 ) show
0 372 moveto (1173 .code16) show
0 360 moveto (1174 .globl start) show
0 348 moveto (1175 start:) show
0 336 moveto (1176   cli) show
0 324 moveto (1177 ) show
0 312 moveto (1178   xorw    %ax,%ax) show
0 300 moveto (1179   movw    %ax,%ds) show
0 288 moveto (1180   movw    %ax,%es) show
0 276 moveto (1181   movw    %ax,%ss) show
0 264 moveto (1182 ) show
0 252 moveto (1183   lgdt    gdtdesc) show
0 240 moveto (1184   movl    %cr0, %eax) show
0 228 moveto (1185   orl     $CR0_PE, %eax) show
0 216 moveto (1186   movl    %eax, %cr0) show
0 204 moveto (1187 ) show
0 192 moveto (1188   ljmpl    $\(SEG_KCODE<<3\), $\(start32\)) show
0 180 moveto (1189 ) show
0 168 moveto (1190 .code32) show
0 156 moveto (1191 start32:) show
0 144 moveto (1192   movw    $\(SEG_KDATA<<3\), %ax) show
0 132 moveto (1193   movw    %ax, %ds) show
0 120 moveto (1194   movw    %ax, %es) show
0 108 moveto (1195   movw    %ax, %ss) show
0 96 moveto (1196   movw    $0, %ax) show
0 84 moveto (1197   movw    %ax, %fs) show
0 72 moveto (1198   movw    %ax, %gs) show
0 60 moveto (1199 ) show
0 24 moveto (Sheet 11) show
grestore
restore
showpage
%%Page: 21 21
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/entryother.S  Page 2) show
0 648 moveto (1200   # Turn on page size extension for 4Mbyte pages) show
0 636 moveto (1201   movl    %cr4, %eax) show
0 624 moveto (1202   orl     $\(CR4_PSE\), %eax) show
0 612 moveto (1203   movl    %eax, %cr4) show
0 600 moveto (1204   # Use enterpgdir as our initial page table) show
0 588 moveto (1205   movl    \(start-12\), %eax) show
0 576 moveto (1206   movl    %eax, %cr3) show
0 564 moveto (1207   # Turn on paging.) show
0 552 moveto (1208   movl    %cr0, %eax) show
0 540 moveto (1209   orl     $\(CR0_PE|CR0_PG|CR0_WP\), %eax) show
0 528 moveto (1210   movl    %eax, %cr0) show
0 516 moveto (1211 ) show
0 504 moveto (1212   # Switch to the stack allocated by startothers\(\)) show
0 492 moveto (1213   movl    \(start-4\), %esp) show
0 480 moveto (1214   # Call mpenter\(\)) show
0 468 moveto (1215   call) show
17 mp_a_x mul 468 moveto (*\(start-8\)) show
0 456 moveto (1216 ) show
0 444 moveto (1217   movw    $0x8a00, %ax) show
0 432 moveto (1218   movw    %ax, %dx) show
0 420 moveto (1219   outw    %ax, %dx) show
0 408 moveto (1220   movw    $0x8ae0, %ax) show
0 396 moveto (1221   outw    %ax, %dx) show
0 384 moveto (1222 spin:) show
0 372 moveto (1223   jmp     spin) show
0 360 moveto (1224 ) show
0 348 moveto (1225 .p2align 2) show
0 336 moveto (1226 gdt:) show
0 324 moveto (1227   SEG_NULLASM) show
0 312 moveto (1228   SEG_ASM\(STA_X|STA_R, 0, 0xffffffff\)) show
0 300 moveto (1229   SEG_ASM\(STA_W, 0, 0xffffffff\)) show
0 288 moveto (1230 ) show
0 276 moveto (1231 ) show
0 264 moveto (1232 gdtdesc:) show
0 252 moveto (1233   .word   \(gdtdesc - gdt - 1\)) show
0 240 moveto (1234   .long   gdt) show
0 228 moveto (1235 ) show
0 216 moveto (1236 ) show
0 204 moveto (1237 ) show
0 192 moveto (1238 ) show
0 180 moveto (1239 ) show
0 168 moveto (1240 ) show
0 156 moveto (1241 ) show
0 144 moveto (1242 ) show
0 132 moveto (1243 ) show
0 120 moveto (1244 ) show
0 108 moveto (1245 ) show
0 96 moveto (1246 ) show
0 84 moveto (1247 ) show
0 72 moveto (1248 ) show
0 60 moveto (1249 ) show
0 24 moveto (Sheet 12) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/main.c  Page 1) show
0 648 moveto (1250 #include "types.h") show
0 636 moveto (1251 #include "defs.h") show
0 624 moveto (1252 #include "param.h") show
0 612 moveto (1253 #include "memlayout.h") show
0 600 moveto (1254 #include "mmu.h") show
0 588 moveto (1255 #include "proc.h") show
0 576 moveto (1256 #include "x86.h") show
0 564 moveto (1257 ) show
0 552 moveto (1258 static void startothers\(void\);) show
0 540 moveto (1259 static void mpmain\(void\)  __attribute__\(\(noreturn\)\);) show
0 528 moveto (1260 extern pde_t *kpgdir;) show
0 516 moveto (1261 extern char end[]; // first address after kernel loaded from ELF file) show
0 504 moveto (1262 ) show
0 492 moveto (1263 // Bootstrap processor starts running C code here.) show
0 480 moveto (1264 // Allocate a real stack and switch to it, first) show
0 468 moveto (1265 // doing some setup required for memory allocator to work.) show
0 456 moveto (1266 int) show
0 444 moveto (1267 main\(void\)) show
0 432 moveto (1268 {) show
0 420 moveto (1269   kinit1\(end, P2V\(4*1024*1024\)\); // phys page allocator) show
0 408 moveto (1270   kvmalloc\(\);      // kernel page table) show
0 396 moveto (1271   mpinit\(\);        // collect info about this machine) show
0 384 moveto (1272   lapicinit\(\);) show
0 372 moveto (1273   seginit\(\);       // set up segments) show
0 360 moveto (1274   cprintf\("\\ncpu%d: starting xv6\\n\\n", cpu->id\);) show
0 348 moveto (1275   picinit\(\);       // interrupt controller) show
0 336 moveto (1276   ioapicinit\(\);    // another interrupt controller) show
0 324 moveto (1277   consoleinit\(\);   // I/O devices & their interrupts) show
0 312 moveto (1278   uartinit\(\);      // serial port) show
0 300 moveto (1279   pinit\(\);         // process table) show
0 288 moveto (1280   tvinit\(\);        // trap vectors) show
0 276 moveto (1281   binit\(\);         // buffer cache) show
0 264 moveto (1282   fileinit\(\);      // file table) show
0 252 moveto (1283   ideinit\(\);       // disk) show
0 240 moveto (1284   if\(!ismp\)) show
0 228 moveto (1285     timerinit\(\);   // uniprocessor timer) show
0 216 moveto (1286   startothers\(\);   // start other processors) show
0 204 moveto (1287   kinit2\(P2V\(4*1024*1024\), P2V\(PHYSTOP\)\); // must come after startothers\(\)) show
0 192 moveto (1288   userinit\(\);      // first user process) show
0 180 moveto (1289   // Finish setting up this processor in mpmain.) show
0 168 moveto (1290   mpmain\(\);) show
0 156 moveto (1291 }) show
0 144 moveto (1292 ) show
0 132 moveto (1293 ) show
0 120 moveto (1294 ) show
0 108 moveto (1295 ) show
0 96 moveto (1296 ) show
0 84 moveto (1297 ) show
0 72 moveto (1298 ) show
0 60 moveto (1299 ) show
0 24 moveto (Sheet 12) show
grestore
restore
showpage
%%Page: 22 22
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/main.c  Page 2) show
0 648 moveto (1300 // Other CPUs jump here from entryother.S.) show
0 636 moveto (1301 static void) show
0 624 moveto (1302 mpenter\(void\)) show
0 612 moveto (1303 {) show
0 600 moveto (1304   switchkvm\(\);) show
0 588 moveto (1305   seginit\(\);) show
0 576 moveto (1306   lapicinit\(\);) show
0 564 moveto (1307   mpmain\(\);) show
0 552 moveto (1308 }) show
0 540 moveto (1309 ) show
0 528 moveto (1310 // Common CPU setup code.) show
0 516 moveto (1311 static void) show
0 504 moveto (1312 mpmain\(void\)) show
0 492 moveto (1313 {) show
0 480 moveto (1314   cprintf\("cpu%d: starting\\n", cpu->id\);) show
0 468 moveto (1315   idtinit\(\);       // load idt register) show
0 456 moveto (1316   xchg\(&cpu->started, 1\); // tell startothers\(\) we're up) show
0 444 moveto (1317   scheduler\(\);     // start running processes) show
0 432 moveto (1318 }) show
0 420 moveto (1319 ) show
0 408 moveto (1320 pde_t entrypgdir[];  // For entry.S) show
0 396 moveto (1321 ) show
0 384 moveto (1322 // Start the non-boot \(AP\) processors.) show
0 372 moveto (1323 static void) show
0 360 moveto (1324 startothers\(void\)) show
0 348 moveto (1325 {) show
0 336 moveto (1326   extern uchar _binary_entryother_start[], _binary_entryother_size[];) show
0 324 moveto (1327   uchar *code;) show
0 312 moveto (1328   struct cpu *c;) show
0 300 moveto (1329   char *stack;) show
0 288 moveto (1330 ) show
0 276 moveto (1331   // Write entry code to unused memory at 0x7000.) show
0 264 moveto (1332   // The linker has placed the image of entryother.S in) show
0 252 moveto (1333   // _binary_entryother_start.) show
0 240 moveto (1334   code = p2v\(0x7000\);) show
0 228 moveto (1335   memmove\(code, _binary_entryother_start, \(uint\)_binary_entryother_size\);) show
0 216 moveto (1336 ) show
0 204 moveto (1337   for\(c = cpus; c < cpus+ncpu; c++\){) show
0 192 moveto (1338     if\(c == cpus+cpunum\(\)\)  // We've started already.) show
0 180 moveto (1339       continue;) show
0 168 moveto (1340 ) show
0 156 moveto (1341     // Tell entryother.S what stack to use, where to enter, and what) show
0 144 moveto (1342     // pgdir to use. We cannot use kpgdir yet, because the AP processor) show
0 132 moveto (1343     // is running in low  memory, so we use entrypgdir for the APs too.) show
0 120 moveto (1344     stack = kalloc\(\);) show
0 108 moveto (1345     *\(void**\)\(code-4\) = stack + KSTACKSIZE;) show
0 96 moveto (1346     *\(void**\)\(code-8\) = mpenter;) show
0 84 moveto (1347     *\(int**\)\(code-12\) = \(void *\) v2p\(entrypgdir\);) show
0 72 moveto (1348 ) show
0 60 moveto (1349     lapicstartap\(c->id, v2p\(code\)\);) show
0 24 moveto (Sheet 13) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/main.c  Page 3) show
0 648 moveto (1350     // wait for cpu to finish mpmain\(\)) show
0 636 moveto (1351     while\(c->started == 0\)) show
0 624 moveto (1352       ;) show
0 612 moveto (1353   }) show
0 600 moveto (1354 }) show
0 588 moveto (1355 ) show
0 576 moveto (1356 // Boot page table used in entry.S and entryother.S.) show
0 564 moveto (1357 // Page directories \(and page tables\), must start on a page boundary,) show
0 552 moveto (1358 // hence the "__aligned__" attribute.) show
0 540 moveto (1359 // Use PTE_PS in page directory entry to enable 4Mbyte pages.) show
0 528 moveto (1360 __attribute__\(\(__aligned__\(PGSIZE\)\)\)) show
0 516 moveto (1361 pde_t entrypgdir[NPDENTRIES] = {) show
0 504 moveto (1362   // Map VA's [0, 4MB\) to PA's [0, 4MB\)) show
0 492 moveto (1363   [0] = \(0\) | PTE_P | PTE_W | PTE_PS,) show
0 480 moveto (1364   // Map VA's [KERNBASE, KERNBASE+4MB\) to PA's [0, 4MB\)) show
0 468 moveto (1365   [KERNBASE>>PDXSHIFT] = \(0\) | PTE_P | PTE_W | PTE_PS,) show
0 456 moveto (1366 };) show
0 444 moveto (1367 ) show
0 432 moveto (1368 // Blank page.) show
0 420 moveto (1369 // Blank page.) show
0 408 moveto (1370 // Blank page.) show
0 396 moveto (1371 ) show
0 384 moveto (1372 ) show
0 372 moveto (1373 ) show
0 360 moveto (1374 ) show
0 348 moveto (1375 ) show
0 336 moveto (1376 ) show
0 324 moveto (1377 ) show
0 312 moveto (1378 ) show
0 300 moveto (1379 ) show
0 288 moveto (1380 ) show
0 276 moveto (1381 ) show
0 264 moveto (1382 ) show
0 252 moveto (1383 ) show
0 240 moveto (1384 ) show
0 228 moveto (1385 ) show
0 216 moveto (1386 ) show
0 204 moveto (1387 ) show
0 192 moveto (1388 ) show
0 180 moveto (1389 ) show
0 168 moveto (1390 ) show
0 156 moveto (1391 ) show
0 144 moveto (1392 ) show
0 132 moveto (1393 ) show
0 120 moveto (1394 ) show
0 108 moveto (1395 ) show
0 96 moveto (1396 ) show
0 84 moveto (1397 ) show
0 72 moveto (1398 ) show
0 60 moveto (1399 ) show
0 24 moveto (Sheet 13) show
grestore
restore
showpage
%%Page: 23 23
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/spinlock.h  Page 1) show
0 648 moveto (1400 // Mutual exclusion lock.) show
0 636 moveto (1401 struct spinlock {) show
0 624 moveto (1402   uint locked;       // Is the lock held?) show
0 612 moveto (1403 ) show
0 600 moveto (1404   // For debugging:) show
0 588 moveto (1405   char *name;        // Name of lock.) show
0 576 moveto (1406   struct cpu *cpu;   // The cpu holding the lock.) show
0 564 moveto (1407   uint pcs[10];      // The call stack \(an array of program counters\)) show
0 552 moveto (1408                      // that locked the lock.) show
0 540 moveto (1409 };) show
0 528 moveto (1410 ) show
0 516 moveto (1411 ) show
0 504 moveto (1412 ) show
0 492 moveto (1413 ) show
0 480 moveto (1414 ) show
0 468 moveto (1415 ) show
0 456 moveto (1416 ) show
0 444 moveto (1417 ) show
0 432 moveto (1418 ) show
0 420 moveto (1419 ) show
0 408 moveto (1420 ) show
0 396 moveto (1421 ) show
0 384 moveto (1422 ) show
0 372 moveto (1423 ) show
0 360 moveto (1424 ) show
0 348 moveto (1425 ) show
0 336 moveto (1426 ) show
0 324 moveto (1427 ) show
0 312 moveto (1428 ) show
0 300 moveto (1429 ) show
0 288 moveto (1430 ) show
0 276 moveto (1431 ) show
0 264 moveto (1432 ) show
0 252 moveto (1433 ) show
0 240 moveto (1434 ) show
0 228 moveto (1435 ) show
0 216 moveto (1436 ) show
0 204 moveto (1437 ) show
0 192 moveto (1438 ) show
0 180 moveto (1439 ) show
0 168 moveto (1440 ) show
0 156 moveto (1441 ) show
0 144 moveto (1442 ) show
0 132 moveto (1443 ) show
0 120 moveto (1444 ) show
0 108 moveto (1445 ) show
0 96 moveto (1446 ) show
0 84 moveto (1447 ) show
0 72 moveto (1448 ) show
0 60 moveto (1449 ) show
0 24 moveto (Sheet 14) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/spinlock.c  Page 1) show
0 648 moveto (1450 // Mutual exclusion spin locks.) show
0 636 moveto (1451 ) show
0 624 moveto (1452 #include "types.h") show
0 612 moveto (1453 #include "defs.h") show
0 600 moveto (1454 #include "param.h") show
0 588 moveto (1455 #include "x86.h") show
0 576 moveto (1456 #include "memlayout.h") show
0 564 moveto (1457 #include "mmu.h") show
0 552 moveto (1458 #include "proc.h") show
0 540 moveto (1459 #include "spinlock.h") show
0 528 moveto (1460 ) show
0 516 moveto (1461 void) show
0 504 moveto (1462 initlock\(struct spinlock *lk, char *name\)) show
0 492 moveto (1463 {) show
0 480 moveto (1464   lk->name = name;) show
0 468 moveto (1465   lk->locked = 0;) show
0 456 moveto (1466   lk->cpu = 0;) show
0 444 moveto (1467 }) show
0 432 moveto (1468 ) show
0 420 moveto (1469 // Acquire the lock.) show
0 408 moveto (1470 // Loops \(spins\) until the lock is acquired.) show
0 396 moveto (1471 // Holding a lock for a long time may cause) show
0 384 moveto (1472 // other CPUs to waste time spinning to acquire it.) show
0 372 moveto (1473 void) show
0 360 moveto (1474 acquire\(struct spinlock *lk\)) show
0 348 moveto (1475 {) show
0 336 moveto (1476   pushcli\(\); // disable interrupts to avoid deadlock.) show
0 324 moveto (1477   if\(holding\(lk\)\)) show
0 312 moveto (1478     panic\("acquire"\);) show
0 300 moveto (1479 ) show
0 288 moveto (1480   // The xchg is atomic.) show
0 276 moveto (1481   // It also serializes, so that reads after acquire are not) show
0 264 moveto (1482   // reordered before it.) show
0 252 moveto (1483   while\(xchg\(&lk->locked, 1\) != 0\)) show
0 240 moveto (1484     ;) show
0 228 moveto (1485 ) show
0 216 moveto (1486   // Record info about lock acquisition for debugging.) show
0 204 moveto (1487   lk->cpu = cpu;) show
0 192 moveto (1488   getcallerpcs\(&lk, lk->pcs\);) show
0 180 moveto (1489 }) show
0 168 moveto (1490 ) show
0 156 moveto (1491 ) show
0 144 moveto (1492 ) show
0 132 moveto (1493 ) show
0 120 moveto (1494 ) show
0 108 moveto (1495 ) show
0 96 moveto (1496 ) show
0 84 moveto (1497 ) show
0 72 moveto (1498 ) show
0 60 moveto (1499 ) show
0 24 moveto (Sheet 14) show
grestore
restore
showpage
%%Page: 24 24
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/spinlock.c  Page 2) show
0 648 moveto (1500 // Release the lock.) show
0 636 moveto (1501 void) show
0 624 moveto (1502 release\(struct spinlock *lk\)) show
0 612 moveto (1503 {) show
0 600 moveto (1504   if\(!holding\(lk\)\)) show
0 588 moveto (1505     panic\("release"\);) show
0 576 moveto (1506 ) show
0 564 moveto (1507   lk->pcs[0] = 0;) show
0 552 moveto (1508   lk->cpu = 0;) show
0 540 moveto (1509 ) show
0 528 moveto (1510   // The xchg serializes, so that reads before release are) show
0 516 moveto (1511   // not reordered after it.  The 1996 PentiumPro manual \(Volume 3,) show
0 504 moveto (1512   // 7.2\) says reads can be carried out speculatively and in) show
0 492 moveto (1513   // any order, which implies we need to serialize here.) show
0 480 moveto (1514   // But the 2007 Intel 64 Architecture Memory Ordering White) show
0 468 moveto (1515   // Paper says that Intel 64 and IA-32 will not move a load) show
0 456 moveto (1516   // after a store. So lock->locked = 0 would work here.) show
0 444 moveto (1517   // The xchg being asm volatile ensures gcc emits it after) show
0 432 moveto (1518   // the above assignments \(and after the critical section\).) show
0 420 moveto (1519   xchg\(&lk->locked, 0\);) show
0 408 moveto (1520 ) show
0 396 moveto (1521   popcli\(\);) show
0 384 moveto (1522 }) show
0 372 moveto (1523 ) show
0 360 moveto (1524 // Record the current call stack in pcs[] by following the %ebp chain.) show
0 348 moveto (1525 void) show
0 336 moveto (1526 getcallerpcs\(void *v, uint pcs[]\)) show
0 324 moveto (1527 {) show
0 312 moveto (1528   uint *ebp;) show
0 300 moveto (1529   int i;) show
0 288 moveto (1530 ) show
0 276 moveto (1531   ebp = \(uint*\)v - 2;) show
0 264 moveto (1532   for\(i = 0; i < 10; i++\){) show
0 252 moveto (1533     if\(ebp == 0 || ebp < \(uint*\)KERNBASE || ebp == \(uint*\)0xffffffff\)) show
0 240 moveto (1534       break;) show
0 228 moveto (1535     pcs[i] = ebp[1];     // saved %eip) show
0 216 moveto (1536     ebp = \(uint*\)ebp[0]; // saved %ebp) show
0 204 moveto (1537   }) show
0 192 moveto (1538   for\(; i < 10; i++\)) show
0 180 moveto (1539     pcs[i] = 0;) show
0 168 moveto (1540 }) show
0 156 moveto (1541 ) show
0 144 moveto (1542 // Check whether this cpu is holding the lock.) show
0 132 moveto (1543 int) show
0 120 moveto (1544 holding\(struct spinlock *lock\)) show
0 108 moveto (1545 {) show
0 96 moveto (1546   return lock->locked && lock->cpu == cpu;) show
0 84 moveto (1547 }) show
0 72 moveto (1548 ) show
0 60 moveto (1549 ) show
0 24 moveto (Sheet 15) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/spinlock.c  Page 3) show
0 648 moveto (1550 // Pushcli/popcli are like cli/sti except that they are matched:) show
0 636 moveto (1551 // it takes two popcli to undo two pushcli.  Also, if interrupts) show
0 624 moveto (1552 // are off, then pushcli, popcli leaves them off.) show
0 612 moveto (1553 ) show
0 600 moveto (1554 void) show
0 588 moveto (1555 pushcli\(void\)) show
0 576 moveto (1556 {) show
0 564 moveto (1557   int eflags;) show
0 552 moveto (1558 ) show
0 540 moveto (1559   eflags = readeflags\(\);) show
0 528 moveto (1560   cli\(\);) show
0 516 moveto (1561   if\(cpu->ncli++ == 0\)) show
0 504 moveto (1562     cpu->intena = eflags & FL_IF;) show
0 492 moveto (1563 }) show
0 480 moveto (1564 ) show
0 468 moveto (1565 void) show
0 456 moveto (1566 popcli\(void\)) show
0 444 moveto (1567 {) show
0 432 moveto (1568   if\(readeflags\(\)&FL_IF\)) show
0 420 moveto (1569     panic\("popcli - interruptible"\);) show
0 408 moveto (1570   if\(--cpu->ncli < 0\)) show
0 396 moveto (1571     panic\("popcli"\);) show
0 384 moveto (1572   if\(cpu->ncli == 0 && cpu->intena\)) show
0 372 moveto (1573     sti\(\);) show
0 360 moveto (1574 }) show
0 348 moveto (1575 ) show
0 336 moveto (1576 ) show
0 324 moveto (1577 ) show
0 312 moveto (1578 ) show
0 300 moveto (1579 ) show
0 288 moveto (1580 ) show
0 276 moveto (1581 ) show
0 264 moveto (1582 ) show
0 252 moveto (1583 ) show
0 240 moveto (1584 ) show
0 228 moveto (1585 ) show
0 216 moveto (1586 ) show
0 204 moveto (1587 ) show
0 192 moveto (1588 ) show
0 180 moveto (1589 ) show
0 168 moveto (1590 ) show
0 156 moveto (1591 ) show
0 144 moveto (1592 ) show
0 132 moveto (1593 ) show
0 120 moveto (1594 ) show
0 108 moveto (1595 ) show
0 96 moveto (1596 ) show
0 84 moveto (1597 ) show
0 72 moveto (1598 ) show
0 60 moveto (1599 ) show
0 24 moveto (Sheet 15) show
grestore
restore
showpage
%%Page: 25 25
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/vm.c  Page 1) show
0 648 moveto (1600 #include "param.h") show
0 636 moveto (1601 #include "types.h") show
0 624 moveto (1602 #include "defs.h") show
0 612 moveto (1603 #include "x86.h") show
0 600 moveto (1604 #include "memlayout.h") show
0 588 moveto (1605 #include "mmu.h") show
0 576 moveto (1606 #include "proc.h") show
0 564 moveto (1607 #include "elf.h") show
0 552 moveto (1608 ) show
0 540 moveto (1609 extern char data[];  // defined by kernel.ld) show
0 528 moveto (1610 pde_t *kpgdir;  // for use in scheduler\(\)) show
0 516 moveto (1611 struct segdesc gdt[NSEGS];) show
0 504 moveto (1612 ) show
0 492 moveto (1613 // Set up CPU's kernel segment descriptors.) show
0 480 moveto (1614 // Run once on entry on each CPU.) show
0 468 moveto (1615 void) show
0 456 moveto (1616 seginit\(void\)) show
0 444 moveto (1617 {) show
0 432 moveto (1618   struct cpu *c;) show
0 420 moveto (1619 ) show
0 408 moveto (1620   // Map "logical" addresses to virtual addresses using identity map.) show
0 396 moveto (1621   // Cannot share a CODE descriptor for both kernel and user) show
0 384 moveto (1622   // because it would have to have DPL_USR, but the CPU forbids) show
0 372 moveto (1623   // an interrupt from CPL=0 to DPL=3.) show
0 360 moveto (1624   c = &cpus[cpunum\(\)];) show
0 348 moveto (1625   c->gdt[SEG_KCODE] = SEG\(STA_X|STA_R, 0, 0xffffffff, 0\);) show
0 336 moveto (1626   c->gdt[SEG_KDATA] = SEG\(STA_W, 0, 0xffffffff, 0\);) show
0 324 moveto (1627   c->gdt[SEG_UCODE] = SEG\(STA_X|STA_R, 0, 0xffffffff, DPL_USER\);) show
0 312 moveto (1628   c->gdt[SEG_UDATA] = SEG\(STA_W, 0, 0xffffffff, DPL_USER\);) show
0 300 moveto (1629 ) show
0 288 moveto (1630   // Map cpu, and curproc) show
0 276 moveto (1631   c->gdt[SEG_KCPU] = SEG\(STA_W, &c->cpu, 8, 0\);) show
0 264 moveto (1632 ) show
0 252 moveto (1633   lgdt\(c->gdt, sizeof\(c->gdt\)\);) show
0 240 moveto (1634   loadgs\(SEG_KCPU << 3\);) show
0 228 moveto (1635 ) show
0 216 moveto (1636   // Initialize cpu-local storage.) show
0 204 moveto (1637   cpu = c;) show
0 192 moveto (1638   proc = 0;) show
0 180 moveto (1639 }) show
0 168 moveto (1640 ) show
0 156 moveto (1641 ) show
0 144 moveto (1642 ) show
0 132 moveto (1643 ) show
0 120 moveto (1644 ) show
0 108 moveto (1645 ) show
0 96 moveto (1646 ) show
0 84 moveto (1647 ) show
0 72 moveto (1648 ) show
0 60 moveto (1649 ) show
0 24 moveto (Sheet 16) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/vm.c  Page 2) show
0 648 moveto (1650 // Return the address of the PTE in page table pgdir) show
0 636 moveto (1651 // that corresponds to virtual address va.  If alloc!=0,) show
0 624 moveto (1652 // create any required page table pages.) show
0 612 moveto (1653 static pte_t *) show
0 600 moveto (1654 walkpgdir\(pde_t *pgdir, const void *va, int alloc\)) show
0 588 moveto (1655 {) show
0 576 moveto (1656   pde_t *pde;) show
0 564 moveto (1657   pte_t *pgtab;) show
0 552 moveto (1658 ) show
0 540 moveto (1659   pde = &pgdir[PDX\(va\)];) show
0 528 moveto (1660   if\(*pde & PTE_P\){) show
0 516 moveto (1661     pgtab = \(pte_t*\)p2v\(PTE_ADDR\(*pde\)\);) show
0 504 moveto (1662   } else {) show
0 492 moveto (1663     if\(!alloc || \(pgtab = \(pte_t*\)kalloc\(\)\) == 0\)) show
0 480 moveto (1664       return 0;) show
0 468 moveto (1665     // Make sure all those PTE_P bits are zero.) show
0 456 moveto (1666     memset\(pgtab, 0, PGSIZE\);) show
0 444 moveto (1667     // The permissions here are overly generous, but they can) show
0 432 moveto (1668     // be further restricted by the permissions in the page table) show
0 420 moveto (1669     // entries, if necessary.) show
0 408 moveto (1670     *pde = v2p\(pgtab\) | PTE_P | PTE_W | PTE_U;) show
0 396 moveto (1671   }) show
0 384 moveto (1672   return &pgtab[PTX\(va\)];) show
0 372 moveto (1673 }) show
0 360 moveto (1674 ) show
0 348 moveto (1675 // Create PTEs for virtual addresses starting at va that refer to) show
0 336 moveto (1676 // physical addresses starting at pa. va and size might not) show
0 324 moveto (1677 // be page-aligned.) show
0 312 moveto (1678 static int) show
0 300 moveto (1679 mappages\(pde_t *pgdir, void *va, uint size, uint pa, int perm\)) show
0 288 moveto (1680 {) show
0 276 moveto (1681   char *a, *last;) show
0 264 moveto (1682   pte_t *pte;) show
0 252 moveto (1683 ) show
0 240 moveto (1684   a = \(char*\)PGROUNDDOWN\(\(uint\)va\);) show
0 228 moveto (1685   last = \(char*\)PGROUNDDOWN\(\(\(uint\)va\) + size - 1\);) show
0 216 moveto (1686   for\(;;\){) show
0 204 moveto (1687     if\(\(pte = walkpgdir\(pgdir, a, 1\)\) == 0\)) show
0 192 moveto (1688       return -1;) show
0 180 moveto (1689     if\(*pte & PTE_P\)) show
0 168 moveto (1690       panic\("remap"\);) show
0 156 moveto (1691     *pte = pa | perm | PTE_P;) show
0 144 moveto (1692     if\(a == last\)) show
0 132 moveto (1693       break;) show
0 120 moveto (1694     a += PGSIZE;) show
0 108 moveto (1695     pa += PGSIZE;) show
0 96 moveto (1696   }) show
0 84 moveto (1697   return 0;) show
0 72 moveto (1698 }) show
0 60 moveto (1699 ) show
0 24 moveto (Sheet 16) show
grestore
restore
showpage
%%Page: 26 26
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/vm.c  Page 3) show
0 648 moveto (1700 // There is one page table per process, plus one that's used when) show
0 636 moveto (1701 // a CPU is not running any process \(kpgdir\). The kernel uses the) show
0 624 moveto (1702 // current process's page table during system calls and interrupts;) show
0 612 moveto (1703 // page protection bits prevent user code from using the kernel's) show
0 600 moveto (1704 // mappings.) show
0 588 moveto (1705 //) show
0 576 moveto (1706 // setupkvm\(\) and exec\(\) set up every page table like this:) show
0 564 moveto (1707 //) show
0 552 moveto (1708 //   0..KERNBASE: user memory \(text+data+stack+heap\), mapped to) show
0 540 moveto (1709 //                phys memory allocated by the kernel) show
0 528 moveto (1710 //   KERNBASE..KERNBASE+EXTMEM: mapped to 0..EXTMEM \(for I/O space\)) show
0 516 moveto (1711 //   KERNBASE+EXTMEM..data: mapped to EXTMEM..V2P\(data\)) show
0 504 moveto (1712 //                for the kernel's instructions and r/o data) show
0 492 moveto (1713 //   data..KERNBASE+PHYSTOP: mapped to V2P\(data\)..PHYSTOP,) show
0 480 moveto (1714 //                                  rw data + free physical memory) show
0 468 moveto (1715 //   0xfe000000..0: mapped direct \(devices such as ioapic\)) show
0 456 moveto (1716 //) show
0 444 moveto (1717 // The kernel allocates physical memory for its heap and for user memory) show
0 432 moveto (1718 // between V2P\(end\) and the end of physical memory \(PHYSTOP\)) show
0 420 moveto (1719 // \(directly addressable from end..P2V\(PHYSTOP\)\).) show
0 408 moveto (1720 ) show
0 396 moveto (1721 // This table defines the kernel's mappings, which are present in) show
0 384 moveto (1722 // every process's page table.) show
0 372 moveto (1723 static struct kmap {) show
0 360 moveto (1724   void *virt;) show
0 348 moveto (1725   uint phys_start;) show
0 336 moveto (1726   uint phys_end;) show
0 324 moveto (1727   int perm;) show
0 312 moveto (1728 } kmap[] = {) show
0 300 moveto (1729  { \(void*\)KERNBASE, 0,             EXTMEM,    PTE_W}, // I/O space) show
0 288 moveto (1730  { \(void*\)KERNLINK, V2P\(KERNLINK\), V2P\(data\), 0},     // kern text+rodata) show
0 276 moveto (1731  { \(void*\)data,     V2P\(data\),     PHYSTOP,   PTE_W}, // kern data+memory) show
0 264 moveto (1732  { \(void*\)DEVSPACE, DEVSPACE,      0,         PTE_W}, // more devices) show
0 252 moveto (1733 };) show
0 240 moveto (1734 ) show
0 228 moveto (1735 // Set up kernel part of a page table.) show
0 216 moveto (1736 pde_t*) show
0 204 moveto (1737 setupkvm\(void\)) show
0 192 moveto (1738 {) show
0 180 moveto (1739   pde_t *pgdir;) show
0 168 moveto (1740   struct kmap *k;) show
0 156 moveto (1741 ) show
0 144 moveto (1742   if\(\(pgdir = \(pde_t*\)kalloc\(\)\) == 0\)) show
0 132 moveto (1743     return 0;) show
0 120 moveto (1744   memset\(pgdir, 0, PGSIZE\);) show
0 108 moveto (1745   if \(p2v\(PHYSTOP\) > \(void*\)DEVSPACE\)) show
0 96 moveto (1746     panic\("PHYSTOP too high"\);) show
0 84 moveto (1747   for\(k = kmap; k < &kmap[NELEM\(kmap\)]; k++\)) show
0 72 moveto (1748     if\(mappages\(pgdir, k->virt, k->phys_end - k->phys_start,) show
0 60 moveto (1749                 \(uint\)k->phys_start, k->perm\) < 0\)) show
0 24 moveto (Sheet 17) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/vm.c  Page 4) show
0 648 moveto (1750       return 0;) show
0 636 moveto (1751   return pgdir;) show
0 624 moveto (1752 }) show
0 612 moveto (1753 ) show
0 600 moveto (1754 // Allocate one page table for the machine for the kernel address) show
0 588 moveto (1755 // space for scheduler processes.) show
0 576 moveto (1756 void) show
0 564 moveto (1757 kvmalloc\(void\)) show
0 552 moveto (1758 {) show
0 540 moveto (1759   kpgdir = setupkvm\(\);) show
0 528 moveto (1760   switchkvm\(\);) show
0 516 moveto (1761 }) show
0 504 moveto (1762 ) show
0 492 moveto (1763 // Switch h/w page table register to the kernel-only page table,) show
0 480 moveto (1764 // for when no process is running.) show
0 468 moveto (1765 void) show
0 456 moveto (1766 switchkvm\(void\)) show
0 444 moveto (1767 {) show
0 432 moveto (1768   lcr3\(v2p\(kpgdir\)\);   // switch to the kernel page table) show
0 420 moveto (1769 }) show
0 408 moveto (1770 ) show
0 396 moveto (1771 // Switch TSS and h/w page table to correspond to process p.) show
0 384 moveto (1772 void) show
0 372 moveto (1773 switchuvm\(struct proc *p\)) show
0 360 moveto (1774 {) show
0 348 moveto (1775   pushcli\(\);) show
0 336 moveto (1776   cpu->gdt[SEG_TSS] = SEG16\(STS_T32A, &cpu->ts, sizeof\(cpu->ts\)-1, 0\);) show
0 324 moveto (1777   cpu->gdt[SEG_TSS].s = 0;) show
0 312 moveto (1778   cpu->ts.ss0 = SEG_KDATA << 3;) show
0 300 moveto (1779   cpu->ts.esp0 = \(uint\)proc->kstack + KSTACKSIZE;) show
0 288 moveto (1780   ltr\(SEG_TSS << 3\);) show
0 276 moveto (1781   if\(p->pgdir == 0\)) show
0 264 moveto (1782     panic\("switchuvm: no pgdir"\);) show
0 252 moveto (1783   lcr3\(v2p\(p->pgdir\)\);  // switch to new address space) show
0 240 moveto (1784   popcli\(\);) show
0 228 moveto (1785 }) show
0 216 moveto (1786 ) show
0 204 moveto (1787 ) show
0 192 moveto (1788 ) show
0 180 moveto (1789 ) show
0 168 moveto (1790 ) show
0 156 moveto (1791 ) show
0 144 moveto (1792 ) show
0 132 moveto (1793 ) show
0 120 moveto (1794 ) show
0 108 moveto (1795 ) show
0 96 moveto (1796 ) show
0 84 moveto (1797 ) show
0 72 moveto (1798 ) show
0 60 moveto (1799 ) show
0 24 moveto (Sheet 17) show
grestore
restore
showpage
%%Page: 27 27
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/vm.c  Page 5) show
0 648 moveto (1800 // Load the initcode into address 0 of pgdir.) show
0 636 moveto (1801 // sz must be less than a page.) show
0 624 moveto (1802 void) show
0 612 moveto (1803 inituvm\(pde_t *pgdir, char *init, uint sz\)) show
0 600 moveto (1804 {) show
0 588 moveto (1805   char *mem;) show
0 576 moveto (1806 ) show
0 564 moveto (1807   if\(sz >= PGSIZE\)) show
0 552 moveto (1808     panic\("inituvm: more than a page"\);) show
0 540 moveto (1809   mem = kalloc\(\);) show
0 528 moveto (1810   memset\(mem, 0, PGSIZE\);) show
0 516 moveto (1811   mappages\(pgdir, 0, PGSIZE, v2p\(mem\), PTE_W|PTE_U\);) show
0 504 moveto (1812   memmove\(mem, init, sz\);) show
0 492 moveto (1813 }) show
0 480 moveto (1814 ) show
0 468 moveto (1815 // Load a program segment into pgdir.  addr must be page-aligned) show
0 456 moveto (1816 // and the pages from addr to addr+sz must already be mapped.) show
0 444 moveto (1817 int) show
0 432 moveto (1818 loaduvm\(pde_t *pgdir, char *addr, struct inode *ip, uint offset, uint sz\)) show
0 420 moveto (1819 {) show
0 408 moveto (1820   uint i, pa, n;) show
0 396 moveto (1821   pte_t *pte;) show
0 384 moveto (1822 ) show
0 372 moveto (1823   if\(\(uint\) addr % PGSIZE != 0\)) show
0 360 moveto (1824     panic\("loaduvm: addr must be page aligned"\);) show
0 348 moveto (1825   for\(i = 0; i < sz; i += PGSIZE\){) show
0 336 moveto (1826     if\(\(pte = walkpgdir\(pgdir, addr+i, 0\)\) == 0\)) show
0 324 moveto (1827       panic\("loaduvm: address should exist"\);) show
0 312 moveto (1828     pa = PTE_ADDR\(*pte\);) show
0 300 moveto (1829     if\(sz - i < PGSIZE\)) show
0 288 moveto (1830       n = sz - i;) show
0 276 moveto (1831     else) show
0 264 moveto (1832       n = PGSIZE;) show
0 252 moveto (1833     if\(readi\(ip, p2v\(pa\), offset+i, n\) != n\)) show
0 240 moveto (1834       return -1;) show
0 228 moveto (1835   }) show
0 216 moveto (1836   return 0;) show
0 204 moveto (1837 }) show
0 192 moveto (1838 ) show
0 180 moveto (1839 ) show
0 168 moveto (1840 ) show
0 156 moveto (1841 ) show
0 144 moveto (1842 ) show
0 132 moveto (1843 ) show
0 120 moveto (1844 ) show
0 108 moveto (1845 ) show
0 96 moveto (1846 ) show
0 84 moveto (1847 ) show
0 72 moveto (1848 ) show
0 60 moveto (1849 ) show
0 24 moveto (Sheet 18) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/vm.c  Page 6) show
0 648 moveto (1850 // Allocate page tables and physical memory to grow process from oldsz to) show
0 636 moveto (1851 // newsz, which need not be page aligned.  Returns new size or 0 on error.) show
0 624 moveto (1852 int) show
0 612 moveto (1853 allocuvm\(pde_t *pgdir, uint oldsz, uint newsz\)) show
0 600 moveto (1854 {) show
0 588 moveto (1855   char *mem;) show
0 576 moveto (1856   uint a;) show
0 564 moveto (1857 ) show
0 552 moveto (1858   if\(newsz >= KERNBASE\)) show
0 540 moveto (1859     return 0;) show
0 528 moveto (1860   if\(newsz < oldsz\)) show
0 516 moveto (1861     return oldsz;) show
0 504 moveto (1862 ) show
0 492 moveto (1863   a = PGROUNDUP\(oldsz\);) show
0 480 moveto (1864   for\(; a < newsz; a += PGSIZE\){) show
0 468 moveto (1865     mem = kalloc\(\);) show
0 456 moveto (1866     if\(mem == 0\){) show
0 444 moveto (1867       cprintf\("allocuvm out of memory\\n"\);) show
0 432 moveto (1868       deallocuvm\(pgdir, newsz, oldsz\);) show
0 420 moveto (1869       return 0;) show
0 408 moveto (1870     }) show
0 396 moveto (1871     memset\(mem, 0, PGSIZE\);) show
0 384 moveto (1872     mappages\(pgdir, \(char*\)a, PGSIZE, v2p\(mem\), PTE_W|PTE_U\);) show
0 372 moveto (1873   }) show
0 360 moveto (1874   return newsz;) show
0 348 moveto (1875 }) show
0 336 moveto (1876 ) show
0 324 moveto (1877 // Deallocate user pages to bring the process size from oldsz to) show
0 312 moveto (1878 // newsz.  oldsz and newsz need not be page-aligned, nor does newsz) show
0 300 moveto (1879 // need to be less than oldsz.  oldsz can be larger than the actual) show
0 288 moveto (1880 // process size.  Returns the new process size.) show
0 276 moveto (1881 int) show
0 264 moveto (1882 deallocuvm\(pde_t *pgdir, uint oldsz, uint newsz\)) show
0 252 moveto (1883 {) show
0 240 moveto (1884   pte_t *pte;) show
0 228 moveto (1885   uint a, pa;) show
0 216 moveto (1886 ) show
0 204 moveto (1887   if\(newsz >= oldsz\)) show
0 192 moveto (1888     return oldsz;) show
0 180 moveto (1889 ) show
0 168 moveto (1890   a = PGROUNDUP\(newsz\);) show
0 156 moveto (1891   for\(; a  < oldsz; a += PGSIZE\){) show
0 144 moveto (1892     pte = walkpgdir\(pgdir, \(char*\)a, 0\);) show
0 132 moveto (1893     if\(!pte\)) show
0 120 moveto (1894       a += \(NPTENTRIES - 1\) * PGSIZE;) show
0 108 moveto (1895     else if\(\(*pte & PTE_P\) != 0\){) show
0 96 moveto (1896       pa = PTE_ADDR\(*pte\);) show
0 84 moveto (1897       if\(pa == 0\)) show
0 72 moveto (1898         panic\("kfree"\);) show
0 60 moveto (1899       char *v = p2v\(pa\);) show
0 24 moveto (Sheet 18) show
grestore
restore
showpage
%%Page: 28 28
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/vm.c  Page 7) show
0 648 moveto (1900       kfree\(v\);) show
0 636 moveto (1901       *pte = 0;) show
0 624 moveto (1902     }) show
0 612 moveto (1903   }) show
0 600 moveto (1904   return newsz;) show
0 588 moveto (1905 }) show
0 576 moveto (1906 ) show
0 564 moveto (1907 // Free a page table and all the physical memory pages) show
0 552 moveto (1908 // in the user part.) show
0 540 moveto (1909 void) show
0 528 moveto (1910 freevm\(pde_t *pgdir\)) show
0 516 moveto (1911 {) show
0 504 moveto (1912   uint i;) show
0 492 moveto (1913 ) show
0 480 moveto (1914   if\(pgdir == 0\)) show
0 468 moveto (1915     panic\("freevm: no pgdir"\);) show
0 456 moveto (1916   deallocuvm\(pgdir, KERNBASE, 0\);) show
0 444 moveto (1917   for\(i = 0; i < NPDENTRIES; i++\){) show
0 432 moveto (1918     if\(pgdir[i] & PTE_P\){) show
0 420 moveto (1919       char * v = p2v\(PTE_ADDR\(pgdir[i]\)\);) show
0 408 moveto (1920       kfree\(v\);) show
0 396 moveto (1921     }) show
0 384 moveto (1922   }) show
0 372 moveto (1923   kfree\(\(char*\)pgdir\);) show
0 360 moveto (1924 }) show
0 348 moveto (1925 ) show
0 336 moveto (1926 // Clear PTE_U on a page. Used to create an inaccessible) show
0 324 moveto (1927 // page beneath the user stack.) show
0 312 moveto (1928 void) show
0 300 moveto (1929 clearpteu\(pde_t *pgdir, char *uva\)) show
0 288 moveto (1930 {) show
0 276 moveto (1931   pte_t *pte;) show
0 264 moveto (1932 ) show
0 252 moveto (1933   pte = walkpgdir\(pgdir, uva, 0\);) show
0 240 moveto (1934   if\(pte == 0\)) show
0 228 moveto (1935     panic\("clearpteu"\);) show
0 216 moveto (1936   *pte &= ~PTE_U;) show
0 204 moveto (1937 }) show
0 192 moveto (1938 ) show
0 180 moveto (1939 ) show
0 168 moveto (1940 ) show
0 156 moveto (1941 ) show
0 144 moveto (1942 ) show
0 132 moveto (1943 ) show
0 120 moveto (1944 ) show
0 108 moveto (1945 ) show
0 96 moveto (1946 ) show
0 84 moveto (1947 ) show
0 72 moveto (1948 ) show
0 60 moveto (1949 ) show
0 24 moveto (Sheet 19) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/vm.c  Page 8) show
0 648 moveto (1950 // Given a parent process's page table, create a copy) show
0 636 moveto (1951 // of it for a child.) show
0 624 moveto (1952 pde_t*) show
0 612 moveto (1953 copyuvm\(pde_t *pgdir, uint sz\)) show
0 600 moveto (1954 {) show
0 588 moveto (1955   pde_t *d;) show
0 576 moveto (1956   pte_t *pte;) show
0 564 moveto (1957   uint pa, i, flags;) show
0 552 moveto (1958   char *mem;) show
0 540 moveto (1959 ) show
0 528 moveto (1960   if\(\(d = setupkvm\(\)\) == 0\)) show
0 516 moveto (1961     return 0;) show
0 504 moveto (1962   for\(i = 0; i < sz; i += PGSIZE\){) show
0 492 moveto (1963     if\(\(pte = walkpgdir\(pgdir, \(void *\) i, 0\)\) == 0\)) show
0 480 moveto (1964       panic\("copyuvm: pte should exist"\);) show
0 468 moveto (1965     if\(!\(*pte & PTE_P\)\)) show
0 456 moveto (1966       panic\("copyuvm: page not present"\);) show
0 444 moveto (1967     pa = PTE_ADDR\(*pte\);) show
0 432 moveto (1968     flags = PTE_FLAGS\(*pte\);) show
0 420 moveto (1969     if\(\(mem = kalloc\(\)\) == 0\)) show
0 408 moveto (1970       goto bad;) show
0 396 moveto (1971     memmove\(mem, \(char*\)p2v\(pa\), PGSIZE\);) show
0 384 moveto (1972     if\(mappages\(d, \(void*\)i, PGSIZE, v2p\(mem\), flags\) < 0\)) show
0 372 moveto (1973       goto bad;) show
0 360 moveto (1974   }) show
0 348 moveto (1975   return d;) show
0 336 moveto (1976 ) show
0 324 moveto (1977 bad:) show
0 312 moveto (1978   freevm\(d\);) show
0 300 moveto (1979   return 0;) show
0 288 moveto (1980 }) show
0 276 moveto (1981 ) show
0 264 moveto (1982 // Map user virtual address to kernel address.) show
0 252 moveto (1983 char*) show
0 240 moveto (1984 uva2ka\(pde_t *pgdir, char *uva\)) show
0 228 moveto (1985 {) show
0 216 moveto (1986   pte_t *pte;) show
0 204 moveto (1987 ) show
0 192 moveto (1988   pte = walkpgdir\(pgdir, uva, 0\);) show
0 180 moveto (1989   if\(\(*pte & PTE_P\) == 0\)) show
0 168 moveto (1990     return 0;) show
0 156 moveto (1991   if\(\(*pte & PTE_U\) == 0\)) show
0 144 moveto (1992     return 0;) show
0 132 moveto (1993   return \(char*\)p2v\(PTE_ADDR\(*pte\)\);) show
0 120 moveto (1994 }) show
0 108 moveto (1995 ) show
0 96 moveto (1996 ) show
0 84 moveto (1997 ) show
0 72 moveto (1998 ) show
0 60 moveto (1999 ) show
0 24 moveto (Sheet 19) show
grestore
restore
showpage
%%Page: 29 29
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/vm.c  Page 9) show
0 648 moveto (2000 // Copy len bytes from p to user address va in page table pgdir.) show
0 636 moveto (2001 // Most useful when pgdir is not the current page table.) show
0 624 moveto (2002 // uva2ka ensures this only works for PTE_U pages.) show
0 612 moveto (2003 int) show
0 600 moveto (2004 copyout\(pde_t *pgdir, uint va, void *p, uint len\)) show
0 588 moveto (2005 {) show
0 576 moveto (2006   char *buf, *pa0;) show
0 564 moveto (2007   uint n, va0;) show
0 552 moveto (2008 ) show
0 540 moveto (2009   buf = \(char*\)p;) show
0 528 moveto (2010   while\(len > 0\){) show
0 516 moveto (2011     va0 = \(uint\)PGROUNDDOWN\(va\);) show
0 504 moveto (2012     pa0 = uva2ka\(pgdir, \(char*\)va0\);) show
0 492 moveto (2013     if\(pa0 == 0\)) show
0 480 moveto (2014       return -1;) show
0 468 moveto (2015     n = PGSIZE - \(va - va0\);) show
0 456 moveto (2016     if\(n > len\)) show
0 444 moveto (2017       n = len;) show
0 432 moveto (2018     memmove\(pa0 + \(va - va0\), buf, n\);) show
0 420 moveto (2019     len -= n;) show
0 408 moveto (2020     buf += n;) show
0 396 moveto (2021     va = va0 + PGSIZE;) show
0 384 moveto (2022   }) show
0 372 moveto (2023   return 0;) show
0 360 moveto (2024 }) show
0 348 moveto (2025 ) show
0 336 moveto (2026 // Blank page.) show
0 324 moveto (2027 // Blank page.) show
0 312 moveto (2028 // Blank page.) show
0 300 moveto (2029 ) show
0 288 moveto (2030 ) show
0 276 moveto (2031 ) show
0 264 moveto (2032 ) show
0 252 moveto (2033 ) show
0 240 moveto (2034 ) show
0 228 moveto (2035 ) show
0 216 moveto (2036 ) show
0 204 moveto (2037 ) show
0 192 moveto (2038 ) show
0 180 moveto (2039 ) show
0 168 moveto (2040 ) show
0 156 moveto (2041 ) show
0 144 moveto (2042 ) show
0 132 moveto (2043 ) show
0 120 moveto (2044 ) show
0 108 moveto (2045 ) show
0 96 moveto (2046 ) show
0 84 moveto (2047 ) show
0 72 moveto (2048 ) show
0 60 moveto (2049 ) show
0 24 moveto (Sheet 20) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/proc.h  Page 1) show
0 648 moveto (2050 // Segments in proc->gdt.) show
0 636 moveto (2051 #define NSEGS     7) show
0 624 moveto (2052 ) show
0 612 moveto (2053 // Default UID and GID for init) show
0 600 moveto (2054 #define INITUID     0) show
0 588 moveto (2055 #define INITGID     0) show
0 576 moveto (2056 ) show
0 564 moveto (2057 // Default number of ready processes list) show
0 552 moveto (2058 #define NUM_READY_LISTS) show
32 mp_a_x mul 552 moveto (7) show
0 540 moveto (2059 // Default starting priority number) show
0 528 moveto (2060 #define PRIORITY_HIGH) show
32 mp_a_x mul 528 moveto (0) show
0 516 moveto (2061 // Default lowest priority number) show
0 504 moveto (2062 #define PRIORITY_LOW) show
32 mp_a_x mul 504 moveto (PRIORITY_HIGH+NUM_READY_LISTS-1) show
0 492 moveto (2063 // Default promotion interval) show
0 480 moveto (2064 #define TICKS_TO_PROMOTE 200) show
0 468 moveto (2065 // Default process budget) show
0 456 moveto (2066 #define BUDGET 400) show
0 444 moveto (2067 ) show
0 432 moveto (2068 // Per-CPU state) show
0 420 moveto (2069 struct cpu {) show
0 408 moveto (2070   uchar id;                    // Local APIC ID; index into cpus[] below) show
0 396 moveto (2071   struct context *scheduler;   // swtch\(\) here to enter scheduler) show
0 384 moveto (2072   struct taskstate ts;         // Used by x86 to find stack for interrupt) show
0 372 moveto (2073   struct segdesc gdt[NSEGS];   // x86 global descriptor table) show
0 360 moveto (2074   volatile uint started;       // Has the CPU started?) show
0 348 moveto (2075   int ncli;                    // Depth of pushcli nesting.) show
0 336 moveto (2076   int intena;                  // Were interrupts enabled before pushcli?) show
0 324 moveto (2077 ) show
0 312 moveto (2078   // Cpu-local storage variables; see below) show
0 300 moveto (2079   struct cpu *cpu;) show
0 288 moveto (2080   struct proc *proc;           // The currently-running process.) show
0 276 moveto (2081 };) show
0 264 moveto (2082 ) show
0 252 moveto (2083 extern struct cpu cpus[NCPU];) show
0 240 moveto (2084 extern int ncpu;) show
0 228 moveto (2085 ) show
0 216 moveto (2086 // Per-CPU variables, holding pointers to the) show
0 204 moveto (2087 // current cpu and to the current process.) show
0 192 moveto (2088 // The asm suffix tells gcc to use "%gs:0" to refer to cpu) show
0 180 moveto (2089 // and "%gs:4" to refer to proc.  seginit sets up the) show
0 168 moveto (2090 // %gs segment register so that %gs refers to the memory) show
0 156 moveto (2091 // holding those two variables in the local cpu's struct cpu.) show
0 144 moveto (2092 // This is similar to how thread-local variables are implemented) show
0 132 moveto (2093 // in thread libraries such as Linux pthreads.) show
0 120 moveto (2094 extern struct cpu *cpu asm\("%gs:0"\);       // &cpus[cpunum\(\)]) show
0 108 moveto (2095 extern struct proc *proc asm\("%gs:4"\);     // cpus[cpunum\(\)].proc) show
0 96 moveto (2096 ) show
0 84 moveto (2097 ) show
0 72 moveto (2098 ) show
0 60 moveto (2099 ) show
0 24 moveto (Sheet 20) show
grestore
restore
showpage
%%Page: 30 30
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/proc.h  Page 2) show
0 648 moveto (2100 // Saved registers for kernel context switches.) show
0 636 moveto (2101 // Don't need to save all the segment registers \(%cs, etc\),) show
0 624 moveto (2102 // because they are constant across kernel contexts.) show
0 612 moveto (2103 // Don't need to save %eax, %ecx, %edx, because the) show
0 600 moveto (2104 // x86 convention is that the caller has saved them.) show
0 588 moveto (2105 // Contexts are stored at the bottom of the stack they) show
0 576 moveto (2106 // describe; the stack pointer is the address of the context.) show
0 564 moveto (2107 // The layout of the context matches the layout of the stack in swtch.S) show
0 552 moveto (2108 // at the "Switch stacks" comment. Switch doesn't save eip explicitly,) show
0 540 moveto (2109 // but it is on the stack and allocproc\(\) manipulates it.) show
0 528 moveto (2110 struct context {) show
0 516 moveto (2111   uint edi;) show
0 504 moveto (2112   uint esi;) show
0 492 moveto (2113   uint ebx;) show
0 480 moveto (2114   uint ebp;) show
0 468 moveto (2115   uint eip;) show
0 456 moveto (2116 };) show
0 444 moveto (2117 ) show
0 432 moveto (2118 enum procstate { UNUSED, EMBRYO, SLEEPING, RUNNABLE, RUNNING, ZOMBIE };) show
0 420 moveto (2119 ) show
0 408 moveto (2120 // Per-process state) show
0 396 moveto (2121 struct proc {) show
0 384 moveto (2122   uint sz;                     // Size of process memory \(bytes\)) show
0 372 moveto (2123   pde_t* pgdir;                // Page table) show
0 360 moveto (2124   char *kstack;                // Bottom of kernel stack for this process) show
0 348 moveto (2125   enum procstate state;        // Process state) show
0 336 moveto (2126   uint pid;                    // Process ID) show
0 324 moveto (2127   struct proc *parent;         // Parent process) show
0 312 moveto (2128   struct trapframe *tf;        // Trap frame for current syscall) show
0 300 moveto (2129   struct context *context;     // swtch\(\) here to run process) show
0 288 moveto (2130   void *chan;                  // If non-zero, sleeping on chan) show
0 276 moveto (2131   int killed;                  // If non-zero, have been killed) show
0 264 moveto (2132   struct file *ofile[NOFILE];  // Open files) show
0 252 moveto (2133   struct inode *cwd;           // Current directory) show
0 240 moveto (2134   char name[16];               // Process name \(debugging\)) show
0 228 moveto (2135   uint start_ticks;) show
43 mp_a_x mul 228 moveto (// Start ticks \(debugging\)) show
0 216 moveto (2136 #ifdef CS333_P2) show
0 204 moveto (2137 ) show
8 mp_a_x mul 204 moveto (uint cpu_ticks_total;) show
57 mp_a_x mul 204 moveto (// Total elapsed ticks in CPU) show
0 192 moveto (2138 ) show
8 mp_a_x mul 192 moveto (uint cpu_ticks_in;) show
57 mp_a_x mul 192 moveto (// Ticks when scheduled) show
0 180 moveto (2139   uint uid;                    // Process owner's user id) show
0 168 moveto (2140   uint gid;                    // Process owner's group id) show
0 156 moveto (2141 #endif) show
0 144 moveto (2142 ) show
0 132 moveto (2143 #ifdef CS333_P3) show
0 120 moveto (2144 ) show
8 mp_a_x mul 120 moveto (int priority;) show
65 mp_a_x mul 120 moveto (// Process priority 0 being the highest) show
0 108 moveto (2145 ) show
8 mp_a_x mul 108 moveto (int budget;) show
73 mp_a_x mul 108 moveto (// A process's budget time) show
0 96 moveto (2146 ) show
8 mp_a_x mul 96 moveto (struct proc *next;) show
49 mp_a_x mul 96 moveto (// Next process in the process list) show
0 84 moveto (2147 #endif) show
0 72 moveto (2148 };) show
0 60 moveto (2149 ) show
0 24 moveto (Sheet 21) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/proc.h  Page 3) show
0 648 moveto (2150 // Process memory is laid out contiguously, low addresses first:) show
0 636 moveto (2151 //   text) show
0 624 moveto (2152 //   original data and bss) show
0 612 moveto (2153 //   fixed-size stack) show
0 600 moveto (2154 //   expandable heap) show
0 588 moveto (2155 ) show
0 576 moveto (2156 ) show
0 564 moveto (2157 ) show
0 552 moveto (2158 ) show
0 540 moveto (2159 ) show
0 528 moveto (2160 ) show
0 516 moveto (2161 ) show
0 504 moveto (2162 ) show
0 492 moveto (2163 ) show
0 480 moveto (2164 ) show
0 468 moveto (2165 ) show
0 456 moveto (2166 ) show
0 444 moveto (2167 ) show
0 432 moveto (2168 ) show
0 420 moveto (2169 ) show
0 408 moveto (2170 ) show
0 396 moveto (2171 ) show
0 384 moveto (2172 ) show
0 372 moveto (2173 ) show
0 360 moveto (2174 ) show
0 348 moveto (2175 ) show
0 336 moveto (2176 ) show
0 324 moveto (2177 ) show
0 312 moveto (2178 ) show
0 300 moveto (2179 ) show
0 288 moveto (2180 ) show
0 276 moveto (2181 ) show
0 264 moveto (2182 ) show
0 252 moveto (2183 ) show
0 240 moveto (2184 ) show
0 228 moveto (2185 ) show
0 216 moveto (2186 ) show
0 204 moveto (2187 ) show
0 192 moveto (2188 ) show
0 180 moveto (2189 ) show
0 168 moveto (2190 ) show
0 156 moveto (2191 ) show
0 144 moveto (2192 ) show
0 132 moveto (2193 ) show
0 120 moveto (2194 ) show
0 108 moveto (2195 ) show
0 96 moveto (2196 ) show
0 84 moveto (2197 ) show
0 72 moveto (2198 ) show
0 60 moveto (2199 ) show
0 24 moveto (Sheet 21) show
grestore
restore
showpage
%%Page: 31 31
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/proc.c  Page 1) show
0 648 moveto (2200 #include "types.h") show
0 636 moveto (2201 #include "defs.h") show
0 624 moveto (2202 #include "param.h") show
0 612 moveto (2203 #include "memlayout.h") show
0 600 moveto (2204 #include "mmu.h") show
0 588 moveto (2205 #include "x86.h") show
0 576 moveto (2206 #include "proc.h") show
0 564 moveto (2207 #include "spinlock.h") show
0 552 moveto (2208 #include "uproc.h") show
0 540 moveto (2209 ) show
0 528 moveto (2210 struct {) show
0 516 moveto (2211   struct spinlock lock;) show
0 504 moveto (2212   struct proc proc[NPROC];) show
0 492 moveto (2213 #ifdef CS333_P3) show
0 480 moveto (2214 ) show
8 mp_a_x mul 480 moveto (struct proc *pReadyList[NUM_READY_LISTS];) show
0 468 moveto (2215 ) show
8 mp_a_x mul 468 moveto (struct proc *pFreeList;) show
0 456 moveto (2216 ) show
8 mp_a_x mul 456 moveto (uint PromoteAtTime;) show
0 444 moveto (2217 #endif) show
0 432 moveto (2218 } ptable;) show
0 420 moveto (2219 ) show
0 408 moveto (2220 static struct proc *initproc;) show
0 396 moveto (2221 ) show
0 384 moveto (2222 int nextpid = 1;) show
0 372 moveto (2223 extern void forkret\(void\);) show
0 360 moveto (2224 extern void trapret\(void\);) show
0 348 moveto (2225 ) show
0 336 moveto (2226 static void wakeup1\(void *chan\);) show
0 324 moveto (2227 ) show
0 312 moveto (2228 void) show
0 300 moveto (2229 pinit\(void\)) show
0 288 moveto (2230 {) show
0 276 moveto (2231   initlock\(&ptable.lock, "ptable"\);) show
0 264 moveto (2232 }) show
0 252 moveto (2233 ) show
0 240 moveto (2234 #ifdef CS333_P3) show
0 228 moveto (2235 // Pops a process off a process queue) show
0 216 moveto (2236 // Return -1 if no process in the queue) show
0 204 moveto (2237 static struct proc*) show
0 192 moveto (2238 popq\(struct proc **proclist\)) show
0 180 moveto (2239 {) show
0 168 moveto (2240   if\(!holding\(&ptable.lock\)\)) show
0 156 moveto (2241     panic\("popq ptable.lock\\n"\);) show
0 144 moveto (2242 ) show
8 mp_a_x mul 144 moveto (if\(proclist <= 0 || *proclist <= 0\) return 0;) show
0 132 moveto (2243 ) show
8 mp_a_x mul 132 moveto (struct proc *ret;) show
0 120 moveto (2244 ) show
8 mp_a_x mul 120 moveto (ret = *proclist;) show
0 108 moveto (2245 ) show
8 mp_a_x mul 108 moveto (*proclist = \(*proclist\)->next;) show
0 96 moveto (2246 ) show
8 mp_a_x mul 96 moveto (ret->next = 0;) show
0 84 moveto (2247 ) show
8 mp_a_x mul 84 moveto (return ret;) show
0 72 moveto (2248 }) show
0 60 moveto (2249 ) show
0 24 moveto (Sheet 22) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/proc.c  Page 2) show
0 648 moveto (2250 // Pushs a process to the pFreeList) show
0 636 moveto (2251 static void) show
0 624 moveto (2252 pushfreeq\(struct proc* input, struct proc **freelist\)) show
0 612 moveto (2253 {) show
0 600 moveto (2254   if\(!holding\(&ptable.lock\)\)) show
0 588 moveto (2255     panic\("pushfreeq ptable.lock\\n"\);) show
0 576 moveto (2256 ) show
8 mp_a_x mul 576 moveto (else {) show
0 564 moveto (2257 ) show
16 mp_a_x mul 564 moveto (input->next = *freelist;) show
0 552 moveto (2258 ) show
16 mp_a_x mul 552 moveto (*freelist = input;) show
0 540 moveto (2259 ) show
8 mp_a_x mul 540 moveto (}) show
0 528 moveto (2260 }) show
0 516 moveto (2261 ) show
0 504 moveto (2262 // Pushs a process to the pReadyList) show
0 492 moveto (2263 static void) show
0 480 moveto (2264 pushreadyq\(struct proc* input, struct proc **readylist\)) show
0 468 moveto (2265 {) show
0 456 moveto (2266   if\(!holding\(&ptable.lock\)\)) show
0 444 moveto (2267     panic\("pushreadyq ptable.lock\\n"\);) show
0 432 moveto (2268 ) show
8 mp_a_x mul 432 moveto (if\(!input\)) show
0 420 moveto (2269 ) show
16 mp_a_x mul 420 moveto (return;) show
0 408 moveto (2270 ) show
8 mp_a_x mul 408 moveto (if\(!*readylist\) {) show
0 396 moveto (2271 ) show
16 mp_a_x mul 396 moveto (input->next = 0;) show
0 384 moveto (2272 ) show
16 mp_a_x mul 384 moveto (*readylist = input;) show
0 372 moveto (2273 ) show
8 mp_a_x mul 372 moveto (}) show
0 360 moveto (2274 ) show
8 mp_a_x mul 360 moveto (else {) show
0 348 moveto (2275 ) show
16 mp_a_x mul 348 moveto (struct proc* temp = *readylist;) show
0 336 moveto (2276 ) show
16 mp_a_x mul 336 moveto (while\(temp->next\)) show
0 324 moveto (2277 ) show
24 mp_a_x mul 324 moveto (temp = temp->next;) show
0 312 moveto (2278 ) show
16 mp_a_x mul 312 moveto (temp->next = input;) show
0 300 moveto (2279 ) show
16 mp_a_x mul 300 moveto (input->next = 0;) show
0 288 moveto (2280 ) show
8 mp_a_x mul 288 moveto (}) show
0 276 moveto (2281 }) show
0 264 moveto (2282 ) show
0 252 moveto (2283 // Set process's priority to specified value) show
0 240 moveto (2284 // Return 0 if success) show
0 228 moveto (2285 // Assumes holding ptable lock) show
0 216 moveto (2286 int) show
0 204 moveto (2287 setpriority\(int pid, int priority\)) show
0 192 moveto (2288 {) show
0 180 moveto (2289 ) show
8 mp_a_x mul 180 moveto (if\(pid < 0\)) show
0 168 moveto (2290     panic\("pid out of bound\\n"\);) show
0 156 moveto (2291 ) show
8 mp_a_x mul 156 moveto (if\(priority < PRIORITY_HIGH || priority > PRIORITY_LOW\) {) show
0 144 moveto (2292 ) show
16 mp_a_x mul 144 moveto (cprintf\("Invalid priority value: %d, need an int between %d and %d\\n",priority,PRIORITY_HIGH,PRIORITY_LOW\);) show
0 132 moveto (2293 ) show
16 mp_a_x mul 132 moveto (return -1;) show
0 120 moveto (2294 ) show
8 mp_a_x mul 120 moveto (}) show
0 108 moveto (2295 ) show
0 96 moveto (2296 ) show
8 mp_a_x mul 96 moveto (acquire\(&ptable.lock\);) show
0 84 moveto (2297   struct proc *p;) show
0 72 moveto (2298 ) show
8 mp_a_x mul 72 moveto (for\(p = ptable.proc; p < &ptable.proc[NPROC]; p++\)) show
0 60 moveto (2299 ) show
16 mp_a_x mul 60 moveto (if\(p->pid == pid\) {) show
0 24 moveto (Sheet 22) show
grestore
restore
showpage
%%Page: 32 32
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/proc.c  Page 3) show
0 648 moveto (2300 ) show
24 mp_a_x mul 648 moveto (p->priority = priority;) show
0 636 moveto (2301 ) show
24 mp_a_x mul 636 moveto (p->budget = BUDGET;) show
0 624 moveto (2302 ) show
24 mp_a_x mul 624 moveto (release\(&ptable.lock\);) show
0 612 moveto (2303 ) show
24 mp_a_x mul 612 moveto (return 0;) show
0 600 moveto (2304 ) show
8 mp_a_x mul 600 moveto (}) show
0 588 moveto (2305 ) show
8 mp_a_x mul 588 moveto (cprintf\("Invalid pid: %d\\n",pid\);) show
0 576 moveto (2306 ) show
8 mp_a_x mul 576 moveto (release\(&ptable.lock\);) show
0 564 moveto (2307 ) show
8 mp_a_x mul 564 moveto (return -1;) show
0 552 moveto (2308 }) show
0 540 moveto (2309 #endif) show
0 528 moveto (2310 ) show
0 516 moveto (2311 ) show
0 504 moveto (2312 // Look in the process table for an UNUSED proc.) show
0 492 moveto (2313 // If found, change state to EMBRYO and initialize) show
0 480 moveto (2314 // state required to run in the kernel.) show
0 468 moveto (2315 // Otherwise return 0.) show
0 456 moveto (2316 static struct proc*) show
0 444 moveto (2317 allocproc\(void\)) show
0 432 moveto (2318 {) show
0 420 moveto (2319   struct proc *p;) show
0 408 moveto (2320   char *sp;) show
0 396 moveto (2321 ) show
0 384 moveto (2322 #ifndef CS333_P3) show
0 372 moveto (2323   acquire\(&ptable.lock\);) show
0 360 moveto (2324   for\(p = ptable.proc; p < &ptable.proc[NPROC]; p++\)) show
0 348 moveto (2325     if\(p->state == UNUSED\)) show
0 336 moveto (2326       goto found;) show
0 324 moveto (2327   release\(&ptable.lock\);) show
0 312 moveto (2328 #else) show
0 300 moveto (2329 ) show
0 288 moveto (2330   acquire\(&ptable.lock\);) show
0 276 moveto (2331 ) show
8 mp_a_x mul 276 moveto (p = popq\(&ptable.pFreeList\);) show
0 264 moveto (2332 ) show
8 mp_a_x mul 264 moveto (if\(p && p->state == UNUSED\)) show
0 252 moveto (2333 ) show
16 mp_a_x mul 252 moveto (goto found;) show
0 240 moveto (2334   release\(&ptable.lock\);) show
0 228 moveto (2335 #endif) show
0 216 moveto (2336   return 0;) show
0 204 moveto (2337 ) show
0 192 moveto (2338 found:) show
0 180 moveto (2339   p->state = EMBRYO;) show
0 168 moveto (2340   p->pid = nextpid++;) show
0 156 moveto (2341   release\(&ptable.lock\);) show
0 144 moveto (2342 ) show
0 132 moveto (2343   // Allocate kernel stack.) show
0 120 moveto (2344   if\(\(p->kstack = kalloc\(\)\) == 0\){) show
0 108 moveto (2345     p->state = UNUSED;) show
0 96 moveto (2346 ) show
16 mp_a_x mul 96 moveto (acquire\(&ptable.lock\);) show
0 84 moveto (2347 ) show
16 mp_a_x mul 84 moveto (pushfreeq\(p, &ptable.pFreeList\);) show
0 72 moveto (2348 ) show
16 mp_a_x mul 72 moveto (release\(&ptable.lock\);) show
0 60 moveto (2349     return 0;) show
0 24 moveto (Sheet 23) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/proc.c  Page 4) show
0 648 moveto (2350   }) show
0 636 moveto (2351   sp = p->kstack + KSTACKSIZE;) show
0 624 moveto (2352 ) show
0 612 moveto (2353   // Leave room for trap frame.) show
0 600 moveto (2354   sp -= sizeof *p->tf;) show
0 588 moveto (2355   p->tf = \(struct trapframe*\)sp;) show
0 576 moveto (2356 ) show
0 564 moveto (2357   // Set up new context to start executing at forkret,) show
0 552 moveto (2358   // which returns to trapret.) show
0 540 moveto (2359   sp -= 4;) show
0 528 moveto (2360   *\(uint*\)sp = \(uint\)trapret;) show
0 516 moveto (2361 ) show
0 504 moveto (2362   sp -= sizeof *p->context;) show
0 492 moveto (2363   p->context = \(struct context*\)sp;) show
0 480 moveto (2364   memset\(p->context, 0, sizeof *p->context\);) show
0 468 moveto (2365   p->context->eip = \(uint\)forkret;) show
0 456 moveto (2366 ) show
0 444 moveto (2367   acquire\(&tickslock\);) show
0 432 moveto (2368   p->start_ticks = ticks;) show
0 420 moveto (2369   release\(&tickslock\);) show
0 408 moveto (2370 ) show
8 mp_a_x mul 408 moveto (p->cpu_ticks_in = 0;) show
0 396 moveto (2371 ) show
0 384 moveto (2372   return p;) show
0 372 moveto (2373 }) show
0 360 moveto (2374 ) show
0 348 moveto (2375 // Check if it's time to promote) show
0 336 moveto (2376 // Assume alway hold the lock) show
0 324 moveto (2377 // return 1 if it's time to promote) show
0 312 moveto (2378 #ifdef CS333_P3) show
0 300 moveto (2379 static int) show
0 288 moveto (2380 timetopromote\(void\)) show
0 276 moveto (2381 {) show
0 264 moveto (2382   if\(!holding\(&ptable.lock\)\)) show
0 252 moveto (2383     panic\("timetopromote ptable.lock"\);) show
0 240 moveto (2384 ) show
8 mp_a_x mul 240 moveto (acquire\(&tickslock\);) show
0 228 moveto (2385 ) show
8 mp_a_x mul 228 moveto (if\(ticks < ptable.PromoteAtTime\) {) show
0 216 moveto (2386 ) show
10 mp_a_x mul 216 moveto (release\(&tickslock\);) show
0 204 moveto (2387 ) show
16 mp_a_x mul 204 moveto (return 0; // Not time to promote) show
0 192 moveto (2388 ) show
8 mp_a_x mul 192 moveto (}) show
0 180 moveto (2389 ) show
8 mp_a_x mul 180 moveto (ptable.PromoteAtTime = ticks + TICKS_TO_PROMOTE;) show
0 168 moveto (2390 ) show
8 mp_a_x mul 168 moveto (release\(&tickslock\);) show
0 156 moveto (2391   return 1;) show
0 144 moveto (2392 }) show
0 132 moveto (2393 ) show
0 120 moveto (2394 ) show
0 108 moveto (2395 ) show
0 96 moveto (2396 ) show
0 84 moveto (2397 ) show
0 72 moveto (2398 ) show
0 60 moveto (2399 ) show
0 24 moveto (Sheet 23) show
grestore
restore
showpage
%%Page: 33 33
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/proc.c  Page 5) show
0 648 moveto (2400 #endif) show
0 636 moveto (2401 ) show
0 624 moveto (2402 // Set up first user process.) show
0 612 moveto (2403 void) show
0 600 moveto (2404 userinit\(void\)) show
0 588 moveto (2405 {) show
0 576 moveto (2406   struct proc *p;) show
0 564 moveto (2407   extern char _binary_initcode_start[], _binary_initcode_size[];) show
0 552 moveto (2408 ) show
0 540 moveto (2409 #ifdef CS333_P3) show
0 528 moveto (2410 ) show
8 mp_a_x mul 528 moveto (acquire\(&ptable.lock\);) show
0 516 moveto (2411 ) show
8 mp_a_x mul 516 moveto (ptable.pFreeList = 0;) show
0 504 moveto (2412 ) show
8 mp_a_x mul 504 moveto (// Initialize freelist by putting UNUSED processes to the list) show
0 492 moveto (2413   for\(p = ptable.proc; p < &ptable.proc[NPROC]; p++\)) show
0 480 moveto (2414     if\(p->state == UNUSED\)) show
0 468 moveto (2415 ) show
24 mp_a_x mul 468 moveto (pushfreeq\(p, &ptable.pFreeList\);) show
0 456 moveto (2416 ) show
8 mp_a_x mul 456 moveto (// Initialize readylist to empty) show
0 444 moveto (2417 ) show
8 mp_a_x mul 444 moveto (int i;) show
0 432 moveto (2418 ) show
8 mp_a_x mul 432 moveto (for\(i = PRIORITY_HIGH; i < NUM_READY_LISTS; ++i\) {) show
0 420 moveto (2419 ) show
16 mp_a_x mul 420 moveto (ptable.pReadyList[i] = 0;) show
0 408 moveto (2420 ) show
8 mp_a_x mul 408 moveto (}) show
0 396 moveto (2421 ) show
8 mp_a_x mul 396 moveto (release\(&ptable.lock\);) show
0 384 moveto (2422 #endif) show
0 372 moveto (2423 ) show
0 360 moveto (2424   p = allocproc\(\);) show
0 348 moveto (2425   initproc = p;) show
0 336 moveto (2426   if\(\(p->pgdir = setupkvm\(\)\) == 0\)) show
0 324 moveto (2427     panic\("userinit: out of memory?"\);) show
0 312 moveto (2428   inituvm\(p->pgdir, _binary_initcode_start, \(int\)_binary_initcode_size\);) show
0 300 moveto (2429   p->sz = PGSIZE;) show
0 288 moveto (2430   memset\(p->tf, 0, sizeof\(*p->tf\)\);) show
0 276 moveto (2431   p->tf->cs = \(SEG_UCODE << 3\) | DPL_USER;) show
0 264 moveto (2432   p->tf->ds = \(SEG_UDATA << 3\) | DPL_USER;) show
0 252 moveto (2433   p->tf->es = p->tf->ds;) show
0 240 moveto (2434   p->tf->ss = p->tf->ds;) show
0 228 moveto (2435   p->tf->eflags = FL_IF;) show
0 216 moveto (2436   p->tf->esp = PGSIZE;) show
0 204 moveto (2437   p->tf->eip = 0;  // beginning of initcode.S) show
0 192 moveto (2438 ) show
0 180 moveto (2439   safestrcpy\(p->name, "initcode", sizeof\(p->name\)\);) show
0 168 moveto (2440   p->cwd = namei\("/"\);) show
0 156 moveto (2441 ) show
0 144 moveto (2442   p->state = RUNNABLE;) show
0 132 moveto (2443 #ifdef CS333_P3) show
0 120 moveto (2444 ) show
8 mp_a_x mul 120 moveto (acquire\(&ptable.lock\);) show
0 108 moveto (2445 ) show
8 mp_a_x mul 108 moveto (ptable.pReadyList[PRIORITY_HIGH] = p;) show
0 96 moveto (2446 ) show
8 mp_a_x mul 96 moveto (p->next = 0;) show
0 84 moveto (2447 ) show
8 mp_a_x mul 84 moveto (release\(&ptable.lock\);) show
0 72 moveto (2448 #endif) show
0 60 moveto (2449 ) show
0 24 moveto (Sheet 24) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/proc.c  Page 6) show
0 648 moveto (2450 #ifdef CS333_P2) show
0 636 moveto (2451 ) show
8 mp_a_x mul 636 moveto (p->uid = INITUID;) show
0 624 moveto (2452 ) show
8 mp_a_x mul 624 moveto (p->gid = INITGID;) show
0 612 moveto (2453 #endif) show
0 600 moveto (2454 }) show
0 588 moveto (2455 ) show
0 576 moveto (2456 // Grow current process's memory by n bytes.) show
0 564 moveto (2457 // Return 0 on success, -1 on failure.) show
0 552 moveto (2458 int) show
0 540 moveto (2459 growproc\(int n\)) show
0 528 moveto (2460 {) show
0 516 moveto (2461   uint sz;) show
0 504 moveto (2462 ) show
0 492 moveto (2463   sz = proc->sz;) show
0 480 moveto (2464   if\(n > 0\){) show
0 468 moveto (2465     if\(\(sz = allocuvm\(proc->pgdir, sz, sz + n\)\) == 0\)) show
0 456 moveto (2466       return -1;) show
0 444 moveto (2467   } else if\(n < 0\){) show
0 432 moveto (2468     if\(\(sz = deallocuvm\(proc->pgdir, sz, sz + n\)\) == 0\)) show
0 420 moveto (2469       return -1;) show
0 408 moveto (2470   }) show
0 396 moveto (2471   proc->sz = sz;) show
0 384 moveto (2472   switchuvm\(proc\);) show
0 372 moveto (2473   return 0;) show
0 360 moveto (2474 }) show
0 348 moveto (2475 ) show
0 336 moveto (2476 // Create a new process copying p as the parent.) show
0 324 moveto (2477 // Sets up stack to return as if from system call.) show
0 312 moveto (2478 // Caller must set state of returned proc to RUNNABLE.) show
0 300 moveto (2479 int) show
0 288 moveto (2480 fork\(void\)) show
0 276 moveto (2481 {) show
0 264 moveto (2482   int i, pid;) show
0 252 moveto (2483   struct proc *np;) show
0 240 moveto (2484 ) show
0 228 moveto (2485   // Allocate process.) show
0 216 moveto (2486   if\(\(np = allocproc\(\)\) == 0\)) show
0 204 moveto (2487     return -1;) show
0 192 moveto (2488 ) show
0 180 moveto (2489   // Copy process state from p.) show
0 168 moveto (2490   if\(\(np->pgdir = copyuvm\(proc->pgdir, proc->sz\)\) == 0\){) show
0 156 moveto (2491     kfree\(np->kstack\);) show
0 144 moveto (2492     np->kstack = 0;) show
0 132 moveto (2493     np->state = UNUSED;) show
0 120 moveto (2494 #ifdef CS333_P3) show
0 108 moveto (2495 ) show
16 mp_a_x mul 108 moveto (pushfreeq\(np, &ptable.pFreeList\);) show
0 96 moveto (2496 #endif) show
0 84 moveto (2497     return -1;) show
0 72 moveto (2498   }) show
0 60 moveto (2499   np->sz = proc->sz;) show
0 24 moveto (Sheet 24) show
grestore
restore
showpage
%%Page: 34 34
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/proc.c  Page 7) show
0 648 moveto (2500   np->parent = proc;) show
0 636 moveto (2501   *np->tf = *proc->tf;) show
0 624 moveto (2502 ) show
0 612 moveto (2503 #ifdef CS333_P2) show
0 600 moveto (2504 ) show
8 mp_a_x mul 600 moveto (// Copy process UID, GID) show
0 588 moveto (2505 ) show
8 mp_a_x mul 588 moveto (np->uid = proc->uid;) show
0 576 moveto (2506 ) show
8 mp_a_x mul 576 moveto (np->gid = proc->gid;) show
0 564 moveto (2507 #endif) show
0 552 moveto (2508 ) show
0 540 moveto (2509   // Clear %eax so that fork returns 0 in the child.) show
0 528 moveto (2510   np->tf->eax = 0;) show
0 516 moveto (2511 ) show
0 504 moveto (2512   for\(i = 0; i < NOFILE; i++\)) show
0 492 moveto (2513     if\(proc->ofile[i]\)) show
0 480 moveto (2514       np->ofile[i] = filedup\(proc->ofile[i]\);) show
0 468 moveto (2515   np->cwd = idup\(proc->cwd\);) show
0 456 moveto (2516 ) show
0 444 moveto (2517   safestrcpy\(np->name, proc->name, sizeof\(proc->name\)\);) show
0 432 moveto (2518 ) show
0 420 moveto (2519   pid = np->pid;) show
0 408 moveto (2520 ) show
0 396 moveto (2521   // lock to force the compiler to emit the np->state write last.) show
0 384 moveto (2522   acquire\(&ptable.lock\);) show
0 372 moveto (2523   np->state = RUNNABLE;) show
0 360 moveto (2524 #ifdef CS333_P3) show
0 348 moveto (2525 ) show
8 mp_a_x mul 348 moveto (np->priority = PRIORITY_HIGH;) show
0 336 moveto (2526 ) show
8 mp_a_x mul 336 moveto (np->budget = BUDGET;) show
0 324 moveto (2527   pushreadyq\(np, &ptable.pReadyList[PRIORITY_HIGH]\);) show
0 312 moveto (2528 #endif) show
0 300 moveto (2529   release\(&ptable.lock\);) show
0 288 moveto (2530 ) show
0 276 moveto (2531   return pid;) show
0 264 moveto (2532 }) show
0 252 moveto (2533 ) show
0 240 moveto (2534 // Exit the current process.  Does not return.) show
0 228 moveto (2535 // An exited process remains in the zombie state) show
0 216 moveto (2536 // until its parent calls wait\(\) to find out it exited.) show
0 204 moveto (2537 void) show
0 192 moveto (2538 exit\(void\)) show
0 180 moveto (2539 {) show
0 168 moveto (2540   struct proc *p;) show
0 156 moveto (2541   int fd;) show
0 144 moveto (2542 ) show
0 132 moveto (2543   if\(proc == initproc\)) show
0 120 moveto (2544     panic\("init exiting"\);) show
0 108 moveto (2545 ) show
0 96 moveto (2546 ) show
0 84 moveto (2547 ) show
0 72 moveto (2548 ) show
0 60 moveto (2549 ) show
0 24 moveto (Sheet 25) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/proc.c  Page 8) show
0 648 moveto (2550   // Close all open files.) show
0 636 moveto (2551   for\(fd = 0; fd < NOFILE; fd++\){) show
0 624 moveto (2552     if\(proc->ofile[fd]\){) show
0 612 moveto (2553       fileclose\(proc->ofile[fd]\);) show
0 600 moveto (2554       proc->ofile[fd] = 0;) show
0 588 moveto (2555     }) show
0 576 moveto (2556   }) show
0 564 moveto (2557 ) show
0 552 moveto (2558   begin_op\(\);) show
0 540 moveto (2559   iput\(proc->cwd\);) show
0 528 moveto (2560   end_op\(\);) show
0 516 moveto (2561   proc->cwd = 0;) show
0 504 moveto (2562 ) show
0 492 moveto (2563   acquire\(&ptable.lock\);) show
0 480 moveto (2564 ) show
0 468 moveto (2565   // Parent might be sleeping in wait\(\).) show
0 456 moveto (2566   wakeup1\(proc->parent\);) show
0 444 moveto (2567 ) show
0 432 moveto (2568   // Pass abandoned children to init.) show
0 420 moveto (2569   for\(p = ptable.proc; p < &ptable.proc[NPROC]; p++\){) show
0 408 moveto (2570     if\(p->parent == proc\){) show
0 396 moveto (2571       p->parent = initproc;) show
0 384 moveto (2572       if\(p->state == ZOMBIE\)) show
0 372 moveto (2573         wakeup1\(initproc\);) show
0 360 moveto (2574     }) show
0 348 moveto (2575   }) show
0 336 moveto (2576 ) show
0 324 moveto (2577   // Jump into the scheduler, never to return.) show
0 312 moveto (2578   proc->state = ZOMBIE;) show
0 300 moveto (2579   sched\(\);) show
0 288 moveto (2580   panic\("zombie exit"\);) show
0 276 moveto (2581 }) show
0 264 moveto (2582 ) show
0 252 moveto (2583 // Wait for a child process to exit and return its pid.) show
0 240 moveto (2584 // Return -1 if this process has no children.) show
0 228 moveto (2585 int) show
0 216 moveto (2586 wait\(void\)) show
0 204 moveto (2587 {) show
0 192 moveto (2588   struct proc *p;) show
0 180 moveto (2589   int havekids, pid;) show
0 168 moveto (2590 ) show
0 156 moveto (2591   acquire\(&ptable.lock\);) show
0 144 moveto (2592   for\(;;\){) show
0 132 moveto (2593     // Scan through table looking for zombie children.) show
0 120 moveto (2594     havekids = 0;) show
0 108 moveto (2595     for\(p = ptable.proc; p < &ptable.proc[NPROC]; p++\){) show
0 96 moveto (2596       if\(p->parent != proc\)) show
0 84 moveto (2597         continue;) show
0 72 moveto (2598       havekids = 1;) show
0 60 moveto (2599       if\(p->state == ZOMBIE\){) show
0 24 moveto (Sheet 25) show
grestore
restore
showpage
%%Page: 35 35
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/proc.c  Page 9) show
0 648 moveto (2600         // Found one.) show
0 636 moveto (2601         pid = p->pid;) show
0 624 moveto (2602         kfree\(p->kstack\);) show
0 612 moveto (2603         p->kstack = 0;) show
0 600 moveto (2604         freevm\(p->pgdir\);) show
0 588 moveto (2605         p->state = UNUSED;) show
0 576 moveto (2606 #ifdef CS333_P3) show
0 564 moveto (2607 ) show
32 mp_a_x mul 564 moveto (pushfreeq\(p, &ptable.pFreeList\);) show
0 552 moveto (2608 #endif) show
0 540 moveto (2609         p->pid = 0;) show
0 528 moveto (2610         p->parent = 0;) show
0 516 moveto (2611         p->name[0] = 0;) show
0 504 moveto (2612         p->killed = 0;) show
0 492 moveto (2613         release\(&ptable.lock\);) show
0 480 moveto (2614         return pid;) show
0 468 moveto (2615       }) show
0 456 moveto (2616     }) show
0 444 moveto (2617 ) show
0 432 moveto (2618     // No point waiting if we don't have any children.) show
0 420 moveto (2619     if\(!havekids || proc->killed\){) show
0 408 moveto (2620       release\(&ptable.lock\);) show
0 396 moveto (2621       return -1;) show
0 384 moveto (2622     }) show
0 372 moveto (2623 ) show
0 360 moveto (2624     // Wait for children to exit.  \(See wakeup1 call in proc_exit.\)) show
0 348 moveto (2625     sleep\(proc, &ptable.lock\);  ) show
0 336 moveto (2626   }) show
0 324 moveto (2627 }) show
0 312 moveto (2628 ) show
0 300 moveto (2629 // Per-CPU process scheduler.) show
0 288 moveto (2630 // Each CPU calls scheduler\(\) after setting itself up.) show
0 276 moveto (2631 // Scheduler never returns.  It loops, doing:) show
0 264 moveto (2632 //  - choose a process to run) show
0 252 moveto (2633 //  - swtch to start running that process) show
0 240 moveto (2634 //  - eventually that process transfers control) show
0 228 moveto (2635 //      via swtch back to the scheduler.) show
0 216 moveto (2636 #ifndef CS333_P3) show
0 204 moveto (2637 // original xv6 scheduler. Use if CS333_P3 NOT defined.) show
0 192 moveto (2638 void) show
0 180 moveto (2639 scheduler\(void\)) show
0 168 moveto (2640 {) show
0 156 moveto (2641   struct proc *p;) show
0 144 moveto (2642 ) show
0 132 moveto (2643   for\(;;\){) show
0 120 moveto (2644     // Enable interrupts on this processor.) show
0 108 moveto (2645     sti\(\);) show
0 96 moveto (2646 ) show
0 84 moveto (2647 ) show
0 72 moveto (2648 ) show
0 60 moveto (2649 ) show
0 24 moveto (Sheet 26) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/proc.c  Page 10) show
0 648 moveto (2650     // Loop over process table looking for process to run.) show
0 636 moveto (2651     acquire\(&ptable.lock\);) show
0 624 moveto (2652     for\(p = ptable.proc; p < &ptable.proc[NPROC]; p++\){) show
0 612 moveto (2653       if\(p->state != RUNNABLE\)) show
0 600 moveto (2654         continue;) show
0 588 moveto (2655 ) show
0 576 moveto (2656       // Switch to chosen process.  It is the process's job) show
0 564 moveto (2657       // to release ptable.lock and then reacquire it) show
0 552 moveto (2658       // before jumping back to us.) show
0 540 moveto (2659       proc = p;) show
0 528 moveto (2660       switchuvm\(p\);) show
0 516 moveto (2661       p->state = RUNNING;) show
0 504 moveto (2662 #ifdef CS333_P2) show
0 492 moveto (2663 ) show
12 mp_a_x mul 492 moveto (acquire\(&tickslock\);) show
0 480 moveto (2664 ) show
24 mp_a_x mul 480 moveto (p->cpu_ticks_in = ticks;) show
0 468 moveto (2665 ) show
24 mp_a_x mul 468 moveto (release\(&tickslock\);) show
0 456 moveto (2666 #endif) show
0 444 moveto (2667       swtch\(&cpu->scheduler, proc->context\);) show
0 432 moveto (2668       switchkvm\(\);) show
0 420 moveto (2669 ) show
0 408 moveto (2670       // Process is done running for now.) show
0 396 moveto (2671       // It should have changed its p->state before coming back.) show
0 384 moveto (2672       proc = 0;) show
0 372 moveto (2673     }) show
0 360 moveto (2674     release\(&ptable.lock\);) show
0 348 moveto (2675 ) show
0 336 moveto (2676   }) show
0 324 moveto (2677 }) show
0 312 moveto (2678 ) show
0 300 moveto (2679 #else) show
0 288 moveto (2680 // CS333_P3 MLFQ scheduler implementation goes here) show
0 276 moveto (2681 void) show
0 264 moveto (2682 scheduler\(void\)) show
0 252 moveto (2683 {) show
0 240 moveto (2684   struct proc *p;) show
0 228 moveto (2685 ) show
0 216 moveto (2686   for\(;;\){) show
0 204 moveto (2687 ) show
16 mp_a_x mul 204 moveto (// Enable interrupts on this processor.) show
0 192 moveto (2688 ) show
16 mp_a_x mul 192 moveto (sti\(\);) show
0 180 moveto (2689 ) show
0 168 moveto (2690 ) show
16 mp_a_x mul 168 moveto (// If promotion timer expires promote all processes one) show
0 156 moveto (2691 ) show
16 mp_a_x mul 156 moveto (// level up) show
0 144 moveto (2692 ) show
16 mp_a_x mul 144 moveto (acquire\(&ptable.lock\);) show
0 132 moveto (2693 ) show
16 mp_a_x mul 132 moveto (if\(timetopromote\(\)\) {) show
0 120 moveto (2694 ) show
24 mp_a_x mul 120 moveto (// Increase priority for Running, sleeping processes) show
0 108 moveto (2695 ) show
24 mp_a_x mul 108 moveto (for\(p = ptable.proc; p < &ptable.proc[NPROC]; p++\){) show
0 96 moveto (2696 ) show
32 mp_a_x mul 96 moveto (if\(p->priority <= PRIORITY_HIGH\)) show
0 84 moveto (2697 ) show
40 mp_a_x mul 84 moveto (continue;) show
0 72 moveto (2698 ) show
32 mp_a_x mul 72 moveto (if\(p->state == RUNNING || p->state == SLEEPING\){) show
0 60 moveto (2699 ) show
40 mp_a_x mul 60 moveto (p->budget = BUDGET;) show
0 24 moveto (Sheet 26) show
grestore
restore
showpage
%%Page: 36 36
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/proc.c  Page 11) show
0 648 moveto (2700 ) show
40 mp_a_x mul 648 moveto (p->priority -= 1;) show
0 636 moveto (2701 ) show
32 mp_a_x mul 636 moveto (}) show
0 624 moveto (2702 ) show
24 mp_a_x mul 624 moveto (}) show
0 612 moveto (2703 ) show
24 mp_a_x mul 612 moveto (// Priority queue shift up) show
0 600 moveto (2704 ) show
24 mp_a_x mul 600 moveto (int priority;) show
0 588 moveto (2705 ) show
24 mp_a_x mul 588 moveto (for\(priority = PRIORITY_HIGH; priority < PRIORITY_LOW; ++priority\) {) show
0 576 moveto (2706 ) show
32 mp_a_x mul 576 moveto (cprintf\("time to promote\\n"\);) show
0 564 moveto (2707 ) show
32 mp_a_x mul 564 moveto (do {) show
0 552 moveto (2708 ) show
40 mp_a_x mul 552 moveto (p = popq\(&ptable.pReadyList[priority+1]\);) show
0 540 moveto (2709 ) show
40 mp_a_x mul 540 moveto (if\(p\) {) show
0 528 moveto (2710 ) show
48 mp_a_x mul 528 moveto (p->priority -= 1;) show
0 516 moveto (2711 ) show
48 mp_a_x mul 516 moveto (p->budget = BUDGET;) show
0 504 moveto (2712 ) show
48 mp_a_x mul 504 moveto (pushreadyq\(p, &ptable.pReadyList[p->priority]\);) show
0 492 moveto (2713 ) show
40 mp_a_x mul 492 moveto (}) show
0 480 moveto (2714 ) show
32 mp_a_x mul 480 moveto (}while\(p\);) show
0 468 moveto (2715 ) show
24 mp_a_x mul 468 moveto (}) show
0 456 moveto (2716 ) show
16 mp_a_x mul 456 moveto (}) show
0 444 moveto (2717 ) show
0 432 moveto (2718 ) show
16 mp_a_x mul 432 moveto (// Find the next runnable process and pop it from the ready) show
0 420 moveto (2719 ) show
16 mp_a_x mul 420 moveto (// list) show
0 408 moveto (2720 ) show
16 mp_a_x mul 408 moveto (int i;) show
0 396 moveto (2721 ) show
16 mp_a_x mul 396 moveto (for\(i = PRIORITY_HIGH; i < PRIORITY_LOW+1;\) {) show
0 384 moveto (2722 ) show
24 mp_a_x mul 384 moveto (if\(!ptable.pReadyList[i]\){) show
0 372 moveto (2723 ) show
32 mp_a_x mul 372 moveto (++i;) show
0 360 moveto (2724 ) show
32 mp_a_x mul 360 moveto (continue;) show
0 348 moveto (2725 ) show
24 mp_a_x mul 348 moveto (}) show
0 336 moveto (2726 ) show
24 mp_a_x mul 336 moveto (p = popq\(&ptable.pReadyList[i]\);) show
0 324 moveto (2727 ) show
0 312 moveto (2728 ) show
24 mp_a_x mul 312 moveto (if\(!p\) {) show
0 300 moveto (2729 ) show
32 mp_a_x mul 300 moveto (panic\("poping an empty readylist"\);) show
0 288 moveto (2730 ) show
24 mp_a_x mul 288 moveto (}) show
0 276 moveto (2731 ) show
0 264 moveto (2732 ) show
24 mp_a_x mul 264 moveto (// Switch to chosen process.  It is the process's job) show
0 252 moveto (2733 ) show
24 mp_a_x mul 252 moveto (// to release ptable.lock and then reacquire it) show
0 240 moveto (2734 ) show
24 mp_a_x mul 240 moveto (// before jumping back to us.) show
0 228 moveto (2735 ) show
24 mp_a_x mul 228 moveto (proc = p;) show
0 216 moveto (2736 ) show
24 mp_a_x mul 216 moveto (switchuvm\(p\);) show
0 204 moveto (2737 ) show
24 mp_a_x mul 204 moveto (p->state = RUNNING;) show
0 192 moveto (2738 #ifdef CS333_P2) show
0 180 moveto (2739 ) show
24 mp_a_x mul 180 moveto (acquire\(&tickslock\);) show
0 168 moveto (2740 ) show
24 mp_a_x mul 168 moveto (p->cpu_ticks_in = ticks;) show
0 156 moveto (2741 ) show
24 mp_a_x mul 156 moveto (release\(&tickslock\);) show
0 144 moveto (2742 #endif) show
0 132 moveto (2743 ) show
24 mp_a_x mul 132 moveto (swtch\(&cpu->scheduler, proc->context\);) show
0 120 moveto (2744 ) show
24 mp_a_x mul 120 moveto (switchkvm\(\);) show
0 108 moveto (2745 ) show
0 96 moveto (2746 ) show
0 84 moveto (2747 ) show
0 72 moveto (2748 ) show
0 60 moveto (2749 ) show
0 24 moveto (Sheet 27) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/proc.c  Page 12) show
0 648 moveto (2750 ) show
24 mp_a_x mul 648 moveto (// Process is done running for now.) show
0 636 moveto (2751 ) show
24 mp_a_x mul 636 moveto (// It should have changed its p->state before coming back.) show
0 624 moveto (2752 ) show
24 mp_a_x mul 624 moveto (proc = 0;) show
0 612 moveto (2753 ) show
16 mp_a_x mul 612 moveto (}) show
0 600 moveto (2754 ) show
16 mp_a_x mul 600 moveto (release\(&ptable.lock\);) show
0 588 moveto (2755   }) show
0 576 moveto (2756 }) show
0 564 moveto (2757 #endif) show
0 552 moveto (2758 ) show
0 540 moveto (2759 // Enter scheduler.  Must hold only ptable.lock) show
0 528 moveto (2760 // and have changed proc->state.) show
0 516 moveto (2761 void) show
0 504 moveto (2762 sched\(void\)) show
0 492 moveto (2763 {) show
0 480 moveto (2764   int intena;) show
0 468 moveto (2765 ) show
0 456 moveto (2766   if\(!holding\(&ptable.lock\)\)) show
0 444 moveto (2767     panic\("sched ptable.lock"\);) show
0 432 moveto (2768   if\(cpu->ncli != 1\)) show
0 420 moveto (2769     panic\("sched locks"\);) show
0 408 moveto (2770   if\(proc->state == RUNNING\)) show
0 396 moveto (2771     panic\("sched running"\);) show
0 384 moveto (2772   if\(readeflags\(\)&FL_IF\)) show
0 372 moveto (2773     panic\("sched interrible"\);) show
0 360 moveto (2774   intena = cpu->intena;) show
0 348 moveto (2775 #ifdef CS333_P2) show
0 336 moveto (2776 ) show
8 mp_a_x mul 336 moveto (acquire\(&tickslock\);) show
0 324 moveto (2777 ) show
8 mp_a_x mul 324 moveto (proc->cpu_ticks_total += ticks - proc->cpu_ticks_in;) show
0 312 moveto (2778 #ifdef CS333_P3) show
0 300 moveto (2779 ) show
8 mp_a_x mul 300 moveto (proc->budget -= ticks - proc->cpu_ticks_in;) show
0 288 moveto (2780 #endif) show
0 276 moveto (2781 ) show
8 mp_a_x mul 276 moveto (release\(&tickslock\);) show
0 264 moveto (2782 #endif) show
0 252 moveto (2783 ) show
0 240 moveto (2784 #ifdef CS333_P3) show
0 228 moveto (2785 ) show
8 mp_a_x mul 228 moveto (// Check process's budget if its <= 0) show
0 216 moveto (2786 ) show
8 mp_a_x mul 216 moveto (// demote to the next lower priority queue) show
0 204 moveto (2787 ) show
8 mp_a_x mul 204 moveto (// else add it to the back of current queue.) show
0 192 moveto (2788 ) show
8 mp_a_x mul 192 moveto (if\(proc->budget <= 0 && proc->priority < PRIORITY_LOW\){) show
0 180 moveto (2789 ) show
24 mp_a_x mul 180 moveto (proc->priority += 1;) show
0 168 moveto (2790 ) show
24 mp_a_x mul 168 moveto (proc->budget = BUDGET;) show
0 156 moveto (2791 ) show
8 mp_a_x mul 156 moveto (}) show
0 144 moveto (2792 ) show
8 mp_a_x mul 144 moveto (if\(proc->state == RUNNABLE\)) show
0 132 moveto (2793 ) show
24 mp_a_x mul 132 moveto (pushreadyq\(proc, &ptable.pReadyList[proc->priority]\);) show
0 120 moveto (2794 #endif) show
0 108 moveto (2795   swtch\(&proc->context, cpu->scheduler\);) show
0 96 moveto (2796   cpu->intena = intena;) show
0 84 moveto (2797 }) show
0 72 moveto (2798 ) show
0 60 moveto (2799 ) show
0 24 moveto (Sheet 27) show
grestore
restore
showpage
%%Page: 37 37
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/proc.c  Page 13) show
0 648 moveto (2800 // Give up the CPU for one scheduling round.) show
0 636 moveto (2801 void) show
0 624 moveto (2802 yield\(void\)) show
0 612 moveto (2803 {) show
0 600 moveto (2804   acquire\(&ptable.lock\);  ) show
0 588 moveto (2805   proc->state = RUNNABLE;) show
0 576 moveto (2806   sched\(\);) show
0 564 moveto (2807   release\(&ptable.lock\);) show
0 552 moveto (2808 }) show
0 540 moveto (2809 ) show
0 528 moveto (2810 // A fork child's very first scheduling by scheduler\(\)) show
0 516 moveto (2811 // will swtch here.  "Return" to user space.) show
0 504 moveto (2812 void) show
0 492 moveto (2813 forkret\(void\)) show
0 480 moveto (2814 {) show
0 468 moveto (2815   static int first = 1;) show
0 456 moveto (2816   // Still holding ptable.lock from scheduler.) show
0 444 moveto (2817   release\(&ptable.lock\);) show
0 432 moveto (2818 ) show
0 420 moveto (2819   if \(first\) {) show
0 408 moveto (2820     // Some initialization functions must be run in the context) show
0 396 moveto (2821     // of a regular process \(e.g., they call sleep\), and thus cannot) show
0 384 moveto (2822     // be run from main\(\).) show
0 372 moveto (2823     first = 0;) show
0 360 moveto (2824     iinit\(ROOTDEV\);) show
0 348 moveto (2825     initlog\(ROOTDEV\);) show
0 336 moveto (2826   }) show
0 324 moveto (2827 ) show
0 312 moveto (2828   // Return to "caller", actually trapret \(see allocproc\).) show
0 300 moveto (2829 }) show
0 288 moveto (2830 ) show
0 276 moveto (2831 // Atomically release lock and sleep on chan.) show
0 264 moveto (2832 // Reacquires lock when awakened.) show
0 252 moveto (2833 void) show
0 240 moveto (2834 sleep\(void *chan, struct spinlock *lk\)) show
0 228 moveto (2835 {) show
0 216 moveto (2836   if\(proc == 0\)) show
0 204 moveto (2837     panic\("sleep"\);) show
0 192 moveto (2838 ) show
0 180 moveto (2839   if\(lk == 0\)) show
0 168 moveto (2840     panic\("sleep without lk"\);) show
0 156 moveto (2841 ) show
0 144 moveto (2842   // Must acquire ptable.lock in order to) show
0 132 moveto (2843   // change p->state and then call sched.) show
0 120 moveto (2844   // Once we hold ptable.lock, we can be) show
0 108 moveto (2845   // guaranteed that we won't miss any wakeup) show
0 96 moveto (2846   // \(wakeup runs with ptable.lock locked\),) show
0 84 moveto (2847   // so it's okay to release lk.) show
0 72 moveto (2848   if\(lk != &ptable.lock\){  ) show
0 60 moveto (2849     acquire\(&ptable.lock\);  ) show
0 24 moveto (Sheet 28) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/proc.c  Page 14) show
0 648 moveto (2850     release\(lk\);) show
0 636 moveto (2851   }) show
0 624 moveto (2852 ) show
0 612 moveto (2853   // Go to sleep.) show
0 600 moveto (2854   proc->chan = chan;) show
0 588 moveto (2855   proc->state = SLEEPING;) show
0 576 moveto (2856   sched\(\);) show
0 564 moveto (2857 ) show
0 552 moveto (2858   // Tidy up.) show
0 540 moveto (2859   proc->chan = 0;) show
0 528 moveto (2860 ) show
0 516 moveto (2861   // Reacquire original lock.) show
0 504 moveto (2862   if\(lk != &ptable.lock\){  ) show
0 492 moveto (2863     release\(&ptable.lock\);) show
0 480 moveto (2864     acquire\(lk\);) show
0 468 moveto (2865   }) show
0 456 moveto (2866 }) show
0 444 moveto (2867 ) show
0 432 moveto (2868 // Wake up all processes sleeping on chan.) show
0 420 moveto (2869 // The ptable lock must be held.) show
0 408 moveto (2870 static void) show
0 396 moveto (2871 wakeup1\(void *chan\)) show
0 384 moveto (2872 {) show
0 372 moveto (2873   struct proc *p;) show
0 360 moveto (2874 ) show
0 348 moveto (2875   for\(p = ptable.proc; p < &ptable.proc[NPROC]; p++\)) show
0 336 moveto (2876 #ifndef CS333_P3) show
0 324 moveto (2877     if\(p->state == SLEEPING && p->chan == chan\)) show
0 312 moveto (2878       p->state = RUNNABLE;) show
0 300 moveto (2879 #else) show
0 288 moveto (2880     if\(p->state == SLEEPING && p->chan == chan\) {) show
0 276 moveto (2881       p->state = RUNNABLE;) show
0 264 moveto (2882 ) show
24 mp_a_x mul 264 moveto (pushreadyq\(p, &ptable.pReadyList[p->priority]\);) show
0 252 moveto (2883 ) show
16 mp_a_x mul 252 moveto (}) show
0 240 moveto (2884 #endif) show
0 228 moveto (2885 }) show
0 216 moveto (2886 ) show
0 204 moveto (2887 // Wake up all processes sleeping on chan.) show
0 192 moveto (2888 void) show
0 180 moveto (2889 wakeup\(void *chan\)) show
0 168 moveto (2890 {) show
0 156 moveto (2891   acquire\(&ptable.lock\);) show
0 144 moveto (2892   wakeup1\(chan\);) show
0 132 moveto (2893   release\(&ptable.lock\);) show
0 120 moveto (2894 }) show
0 108 moveto (2895 ) show
0 96 moveto (2896 ) show
0 84 moveto (2897 ) show
0 72 moveto (2898 ) show
0 60 moveto (2899 ) show
0 24 moveto (Sheet 28) show
grestore
restore
showpage
%%Page: 38 38
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/proc.c  Page 15) show
0 648 moveto (2900 // Kill the process with the given pid.) show
0 636 moveto (2901 // Process won't exit until it returns) show
0 624 moveto (2902 // to user space \(see trap in trap.c\).) show
0 612 moveto (2903 int) show
0 600 moveto (2904 kill\(int pid\)) show
0 588 moveto (2905 {) show
0 576 moveto (2906   struct proc *p;) show
0 564 moveto (2907 ) show
0 552 moveto (2908   acquire\(&ptable.lock\);) show
0 540 moveto (2909   for\(p = ptable.proc; p < &ptable.proc[NPROC]; p++\){) show
0 528 moveto (2910     if\(p->pid == pid\){) show
0 516 moveto (2911       p->killed = 1;) show
0 504 moveto (2912       // Wake process from sleep if necessary.) show
0 492 moveto (2913 #ifndef CS333_P3) show
0 480 moveto (2914       if\(p->state == SLEEPING\)) show
0 468 moveto (2915         p->state = RUNNABLE;) show
0 456 moveto (2916 #else) show
0 444 moveto (2917       if\(p->state == SLEEPING\) {) show
0 432 moveto (2918         p->state = RUNNABLE;) show
0 420 moveto (2919 ) show
32 mp_a_x mul 420 moveto (pushreadyq\(p, &ptable.pReadyList[p->priority]\);) show
0 408 moveto (2920 ) show
24 mp_a_x mul 408 moveto (}) show
0 396 moveto (2921 #endif) show
0 384 moveto (2922 ) show
0 372 moveto (2923       release\(&ptable.lock\);) show
0 360 moveto (2924       return 0;) show
0 348 moveto (2925     }) show
0 336 moveto (2926   }) show
0 324 moveto (2927   release\(&ptable.lock\);) show
0 312 moveto (2928   return -1;) show
0 300 moveto (2929 }) show
0 288 moveto (2930 ) show
0 276 moveto (2931 // Print a process listing to console.  For debugging.) show
0 264 moveto (2932 // Runs when user types ^P on console.) show
0 252 moveto (2933 // No lock to avoid wedging a stuck machine further.) show
0 240 moveto (2934 static void) show
0 228 moveto (2935 print_elapsed\(struct proc *p\)) show
0 216 moveto (2936 {) show
0 204 moveto (2937   uint temp = p->start_ticks;) show
0 192 moveto (2938   temp = ticks - temp;) show
0 180 moveto (2939   cprintf\("%d.%d",temp/100, temp%100\);) show
0 168 moveto (2940 #ifdef CS333_P2) show
0 156 moveto (2941   cprintf\("  %d.%d",p->cpu_ticks_total/100, p->cpu_ticks_total%100\);) show
0 144 moveto (2942   cprintf\("    %d  ", p->uid\);) show
0 132 moveto (2943   cprintf\("  %d  ", p->gid\);) show
0 120 moveto (2944   if\(p->parent && p->pid != 1\)) show
0 108 moveto (2945 ) show
16 mp_a_x mul 108 moveto (cprintf\("  %d  ", p->parent->pid\);) show
0 96 moveto (2946 ) show
8 mp_a_x mul 96 moveto (else) show
0 84 moveto (2947 ) show
16 mp_a_x mul 84 moveto (cprintf\("  %d  ", p->pid\);) show
0 72 moveto (2948 #ifdef CS333_P3) show
0 60 moveto (2949 ) show
8 mp_a_x mul 60 moveto (cprintf\("  %d  ", p->priority\);) show
0 24 moveto (Sheet 29) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/proc.c  Page 16) show
0 648 moveto (2950 #endif) show
0 636 moveto (2951 #endif) show
0 624 moveto (2952 }) show
0 612 moveto (2953 ) show
0 600 moveto (2954 void) show
0 588 moveto (2955 procdump\(void\)) show
0 576 moveto (2956 {) show
0 564 moveto (2957   static char *states[] = {) show
0 552 moveto (2958   [UNUSED]    "unused",) show
0 540 moveto (2959   [EMBRYO]    "embryo",) show
0 528 moveto (2960   [SLEEPING]  "sleep ",) show
0 516 moveto (2961   [RUNNABLE]  "runble",) show
0 504 moveto (2962   [RUNNING]   "run   ",) show
0 492 moveto (2963   [ZOMBIE]    "zombie") show
0 480 moveto (2964   };) show
0 468 moveto (2965   int i;) show
0 456 moveto (2966   struct proc *p;) show
0 444 moveto (2967   char *state;) show
0 432 moveto (2968   uint pc[10];) show
0 420 moveto (2969 ) show
0 408 moveto (2970 #ifdef CS333_P3) show
0 396 moveto (2971   cprintf\("\\nPID  State  Name  Elapsed    TotalCpuTime    UID    GID    PPID   Priority   PCs\\n"\);) show
0 384 moveto (2972 #else) show
0 372 moveto (2973 #ifdef CS333_P2) show
0 360 moveto (2974   cprintf\("\\nPID  State  Name  Elapsed    TotalCpuTime    UID    GID    PPID     PCs\\n"\);) show
0 348 moveto (2975 #else) show
0 336 moveto (2976 ) show
8 mp_a_x mul 336 moveto (cprintf\("\\nPID  State  Name  Elapsed    PCs\\n"\);) show
0 324 moveto (2977 #endif) show
0 312 moveto (2978 #endif) show
0 300 moveto (2979 ) show
0 288 moveto (2980   for\(p = ptable.proc; p < &ptable.proc[NPROC]; p++\){) show
0 276 moveto (2981     if\(p->state == UNUSED\)) show
0 264 moveto (2982       continue;) show
0 252 moveto (2983     if\(p->state >= 0 && p->state < NELEM\(states\) && states[p->state]\)) show
0 240 moveto (2984       state = states[p->state];) show
0 228 moveto (2985     else) show
0 216 moveto (2986       state = "???";) show
0 204 moveto (2987     cprintf\("%d    %s %s   ", p->pid, state, p->name\);) show
0 192 moveto (2988     print_elapsed\(p\);) show
0 180 moveto (2989     if\(p->state == SLEEPING\){) show
0 168 moveto (2990       getcallerpcs\(\(uint*\)p->context->ebp+2, pc\);) show
0 156 moveto (2991       for\(i=0; i<10 && pc[i] != 0; i++\)) show
0 144 moveto (2992         cprintf\(" %p", pc[i]\);) show
0 132 moveto (2993     }) show
0 120 moveto (2994     cprintf\("\\n"\);) show
0 108 moveto (2995   }) show
0 96 moveto (2996 }) show
0 84 moveto (2997 ) show
0 72 moveto (2998 ) show
0 60 moveto (2999 ) show
0 24 moveto (Sheet 29) show
grestore
restore
showpage
%%Page: 39 39
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/proc.c  Page 17) show
0 648 moveto (3000 #ifdef CS333_P2) show
0 636 moveto (3001 // Get process information) show
0 624 moveto (3002 int) show
0 612 moveto (3003 getprocs\(uint max, struct uproc* table\)) show
0 600 moveto (3004 {) show
0 588 moveto (3005 ) show
8 mp_a_x mul 588 moveto (if\(!table || max == 0\) return -1;) show
0 576 moveto (3006   static char *states[] = {) show
0 564 moveto (3007   [UNUSED]    "unused",) show
0 552 moveto (3008   [EMBRYO]    "embryo",) show
0 540 moveto (3009   [SLEEPING]  "sleep ",) show
0 528 moveto (3010   [RUNNABLE]  "runble",) show
0 516 moveto (3011   [RUNNING]   "run   ",) show
0 504 moveto (3012   [ZOMBIE]    "zombie") show
0 492 moveto (3013   };) show
0 480 moveto (3014 ) show
0 468 moveto (3015 ) show
8 mp_a_x mul 468 moveto (int procscount = 0;) show
0 456 moveto (3016   struct proc *p;) show
0 444 moveto (3017 ) show
8 mp_a_x mul 444 moveto (if\(max > NPROC\)) show
0 432 moveto (3018 ) show
16 mp_a_x mul 432 moveto (max = NPROC;) show
0 420 moveto (3019 ) show
8 mp_a_x mul 420 moveto (acquire\(&ptable.lock\);) show
0 408 moveto (3020 ) show
8 mp_a_x mul 408 moveto (for\(p = ptable.proc; p < &ptable.proc[NPROC]; p++\){) show
0 396 moveto (3021 ) show
16 mp_a_x mul 396 moveto (if\(max <= 0\) break; // break out of the loop if the max number of processes to be displayed has reached) show
0 384 moveto (3022 ) show
16 mp_a_x mul 384 moveto (if\(p->state == UNUSED || p->state == EMBRYO || p->state == ZOMBIE\)) show
0 372 moveto (3023 ) show
24 mp_a_x mul 372 moveto (continue;) show
0 360 moveto (3024 ) show
16 mp_a_x mul 360 moveto (table->pid = p->pid;) show
0 348 moveto (3025 ) show
16 mp_a_x mul 348 moveto (table->uid = p->uid;) show
0 336 moveto (3026 ) show
16 mp_a_x mul 336 moveto (table->gid = p->gid;) show
0 324 moveto (3027 ) show
16 mp_a_x mul 324 moveto (if\(!p->parent || p->pid ==1\)) show
0 312 moveto (3028 ) show
24 mp_a_x mul 312 moveto (table->ppid = p->pid;) show
0 300 moveto (3029 ) show
16 mp_a_x mul 300 moveto (else) show
0 288 moveto (3030 ) show
24 mp_a_x mul 288 moveto (table->ppid = p->parent->pid;) show
0 276 moveto (3031 #ifdef CS333_P3) show
0 264 moveto (3032 ) show
16 mp_a_x mul 264 moveto (table->priority = p->priority;) show
0 252 moveto (3033 #endif) show
0 240 moveto (3034 ) show
16 mp_a_x mul 240 moveto (acquire\(&tickslock\);) show
0 228 moveto (3035 ) show
16 mp_a_x mul 228 moveto (table->elapsed_ticks = ticks - p->start_ticks;) show
0 216 moveto (3036 ) show
16 mp_a_x mul 216 moveto (table->CPU_total_ticks = p->cpu_ticks_total;) show
0 204 moveto (3037 ) show
16 mp_a_x mul 204 moveto (release\(&tickslock\);) show
0 192 moveto (3038 ) show
16 mp_a_x mul 192 moveto (safestrcpy\(table->state, states[p->state], sizeof\(table->state\)\);) show
0 180 moveto (3039 ) show
16 mp_a_x mul 180 moveto (table->size = p->sz;) show
0 168 moveto (3040 ) show
16 mp_a_x mul 168 moveto (safestrcpy\(table->name, p->name, sizeof\(table->name\)\);) show
0 156 moveto (3041 ) show
16 mp_a_x mul 156 moveto (++procscount;) show
0 144 moveto (3042 ) show
16 mp_a_x mul 144 moveto (++table;) show
0 132 moveto (3043 ) show
16 mp_a_x mul 132 moveto (--max;) show
0 120 moveto (3044 ) show
8 mp_a_x mul 120 moveto (}) show
0 108 moveto (3045 ) show
8 mp_a_x mul 108 moveto (release\(&ptable.lock\);) show
0 96 moveto (3046 ) show
0 84 moveto (3047   return procscount;) show
0 72 moveto (3048 }) show
0 60 moveto (3049 #endif) show
0 24 moveto (Sheet 30) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/swtch.S  Page 1) show
0 648 moveto (3050 # Context switch) show
0 636 moveto (3051 #) show
0 624 moveto (3052 #   void swtch\(struct context **old, struct context *new\);) show
0 612 moveto (3053 #) show
0 600 moveto (3054 # Save current register context in old) show
0 588 moveto (3055 # and then load register context from new.) show
0 576 moveto (3056 ) show
0 564 moveto (3057 .globl swtch) show
0 552 moveto (3058 swtch:) show
0 540 moveto (3059   movl 4\(%esp\), %eax) show
0 528 moveto (3060   movl 8\(%esp\), %edx) show
0 516 moveto (3061 ) show
0 504 moveto (3062   # Save old callee-save registers) show
0 492 moveto (3063   pushl %ebp) show
0 480 moveto (3064   pushl %ebx) show
0 468 moveto (3065   pushl %esi) show
0 456 moveto (3066   pushl %edi) show
0 444 moveto (3067 ) show
0 432 moveto (3068   # Switch stacks) show
0 420 moveto (3069   movl %esp, \(%eax\)) show
0 408 moveto (3070   movl %edx, %esp) show
0 396 moveto (3071 ) show
0 384 moveto (3072   # Load new callee-save registers) show
0 372 moveto (3073   popl %edi) show
0 360 moveto (3074   popl %esi) show
0 348 moveto (3075   popl %ebx) show
0 336 moveto (3076   popl %ebp) show
0 324 moveto (3077   ret) show
0 312 moveto (3078 ) show
0 300 moveto (3079 ) show
0 288 moveto (3080 ) show
0 276 moveto (3081 ) show
0 264 moveto (3082 ) show
0 252 moveto (3083 ) show
0 240 moveto (3084 ) show
0 228 moveto (3085 ) show
0 216 moveto (3086 ) show
0 204 moveto (3087 ) show
0 192 moveto (3088 ) show
0 180 moveto (3089 ) show
0 168 moveto (3090 ) show
0 156 moveto (3091 ) show
0 144 moveto (3092 ) show
0 132 moveto (3093 ) show
0 120 moveto (3094 ) show
0 108 moveto (3095 ) show
0 96 moveto (3096 ) show
0 84 moveto (3097 ) show
0 72 moveto (3098 ) show
0 60 moveto (3099 ) show
0 24 moveto (Sheet 30) show
grestore
restore
showpage
%%Page: 40 40
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/kalloc.c  Page 1) show
0 648 moveto (3100 // Physical memory allocator, intended to allocate) show
0 636 moveto (3101 // memory for user processes, kernel stacks, page table pages,) show
0 624 moveto (3102 // and pipe buffers. Allocates 4096-byte pages.) show
0 612 moveto (3103 ) show
0 600 moveto (3104 #include "types.h") show
0 588 moveto (3105 #include "defs.h") show
0 576 moveto (3106 #include "param.h") show
0 564 moveto (3107 #include "memlayout.h") show
0 552 moveto (3108 #include "mmu.h") show
0 540 moveto (3109 #include "spinlock.h") show
0 528 moveto (3110 ) show
0 516 moveto (3111 void freerange\(void *vstart, void *vend\);) show
0 504 moveto (3112 extern char end[]; // first address after kernel loaded from ELF file) show
0 492 moveto (3113 ) show
0 480 moveto (3114 struct run {) show
0 468 moveto (3115   struct run *next;) show
0 456 moveto (3116 };) show
0 444 moveto (3117 ) show
0 432 moveto (3118 struct {) show
0 420 moveto (3119   struct spinlock lock;) show
0 408 moveto (3120   int use_lock;) show
0 396 moveto (3121   struct run *freelist;) show
0 384 moveto (3122 } kmem;) show
0 372 moveto (3123 ) show
0 360 moveto (3124 // Initialization happens in two phases.) show
0 348 moveto (3125 // 1. main\(\) calls kinit1\(\) while still using entrypgdir to place just) show
0 336 moveto (3126 // the pages mapped by entrypgdir on free list.) show
0 324 moveto (3127 // 2. main\(\) calls kinit2\(\) with the rest of the physical pages) show
0 312 moveto (3128 // after installing a full page table that maps them on all cores.) show
0 300 moveto (3129 void) show
0 288 moveto (3130 kinit1\(void *vstart, void *vend\)) show
0 276 moveto (3131 {) show
0 264 moveto (3132   initlock\(&kmem.lock, "kmem"\);) show
0 252 moveto (3133   kmem.use_lock = 0;) show
0 240 moveto (3134   freerange\(vstart, vend\);) show
0 228 moveto (3135 }) show
0 216 moveto (3136 ) show
0 204 moveto (3137 void) show
0 192 moveto (3138 kinit2\(void *vstart, void *vend\)) show
0 180 moveto (3139 {) show
0 168 moveto (3140   freerange\(vstart, vend\);) show
0 156 moveto (3141   kmem.use_lock = 1;) show
0 144 moveto (3142 }) show
0 132 moveto (3143 ) show
0 120 moveto (3144 ) show
0 108 moveto (3145 ) show
0 96 moveto (3146 ) show
0 84 moveto (3147 ) show
0 72 moveto (3148 ) show
0 60 moveto (3149 ) show
0 24 moveto (Sheet 31) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/kalloc.c  Page 2) show
0 648 moveto (3150 void) show
0 636 moveto (3151 freerange\(void *vstart, void *vend\)) show
0 624 moveto (3152 {) show
0 612 moveto (3153   char *p;) show
0 600 moveto (3154   p = \(char*\)PGROUNDUP\(\(uint\)vstart\);) show
0 588 moveto (3155   for\(; p + PGSIZE <= \(char*\)vend; p += PGSIZE\)) show
0 576 moveto (3156     kfree\(p\);) show
0 564 moveto (3157 }) show
0 552 moveto (3158 ) show
0 540 moveto (3159 // Free the page of physical memory pointed at by v,) show
0 528 moveto (3160 // which normally should have been returned by a) show
0 516 moveto (3161 // call to kalloc\(\).  \(The exception is when) show
0 504 moveto (3162 // initializing the allocator; see kinit above.\)) show
0 492 moveto (3163 void) show
0 480 moveto (3164 kfree\(char *v\)) show
0 468 moveto (3165 {) show
0 456 moveto (3166   struct run *r;) show
0 444 moveto (3167 ) show
0 432 moveto (3168   if\(\(uint\)v % PGSIZE || v < end || v2p\(v\) >= PHYSTOP\)) show
0 420 moveto (3169     panic\("kfree"\);) show
0 408 moveto (3170 ) show
0 396 moveto (3171   // Fill with junk to catch dangling refs.) show
0 384 moveto (3172   memset\(v, 1, PGSIZE\);) show
0 372 moveto (3173 ) show
0 360 moveto (3174   if\(kmem.use_lock\)) show
0 348 moveto (3175     acquire\(&kmem.lock\);) show
0 336 moveto (3176   r = \(struct run*\)v;) show
0 324 moveto (3177   r->next = kmem.freelist;) show
0 312 moveto (3178   kmem.freelist = r;) show
0 300 moveto (3179   if\(kmem.use_lock\)) show
0 288 moveto (3180     release\(&kmem.lock\);) show
0 276 moveto (3181 }) show
0 264 moveto (3182 ) show
0 252 moveto (3183 // Allocate one 4096-byte page of physical memory.) show
0 240 moveto (3184 // Returns a pointer that the kernel can use.) show
0 228 moveto (3185 // Returns 0 if the memory cannot be allocated.) show
0 216 moveto (3186 char*) show
0 204 moveto (3187 kalloc\(void\)) show
0 192 moveto (3188 {) show
0 180 moveto (3189   struct run *r;) show
0 168 moveto (3190 ) show
0 156 moveto (3191   if\(kmem.use_lock\)) show
0 144 moveto (3192     acquire\(&kmem.lock\);) show
0 132 moveto (3193   r = kmem.freelist;) show
0 120 moveto (3194   if\(r\)) show
0 108 moveto (3195     kmem.freelist = r->next;) show
0 96 moveto (3196   if\(kmem.use_lock\)) show
0 84 moveto (3197     release\(&kmem.lock\);) show
0 72 moveto (3198   return \(char*\)r;) show
0 60 moveto (3199 }) show
0 24 moveto (Sheet 31) show
grestore
restore
showpage
%%Page: 41 41
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/traps.h  Page 1) show
0 648 moveto (3200 // x86 trap and interrupt constants.) show
0 636 moveto (3201 ) show
0 624 moveto (3202 // Processor-defined:) show
0 612 moveto (3203 #define T_DIVIDE         0      // divide error) show
0 600 moveto (3204 #define T_DEBUG          1      // debug exception) show
0 588 moveto (3205 #define T_NMI            2      // non-maskable interrupt) show
0 576 moveto (3206 #define T_BRKPT          3      // breakpoint) show
0 564 moveto (3207 #define T_OFLOW          4      // overflow) show
0 552 moveto (3208 #define T_BOUND          5      // bounds check) show
0 540 moveto (3209 #define T_ILLOP          6      // illegal opcode) show
0 528 moveto (3210 #define T_DEVICE         7      // device not available) show
0 516 moveto (3211 #define T_DBLFLT         8      // double fault) show
0 504 moveto (3212 // #define T_COPROC      9      // reserved \(not used since 486\)) show
0 492 moveto (3213 #define T_TSS           10      // invalid task switch segment) show
0 480 moveto (3214 #define T_SEGNP         11      // segment not present) show
0 468 moveto (3215 #define T_STACK         12      // stack exception) show
0 456 moveto (3216 #define T_GPFLT         13      // general protection fault) show
0 444 moveto (3217 #define T_PGFLT         14      // page fault) show
0 432 moveto (3218 // #define T_RES        15      // reserved) show
0 420 moveto (3219 #define T_FPERR         16      // floating point error) show
0 408 moveto (3220 #define T_ALIGN         17      // aligment check) show
0 396 moveto (3221 #define T_MCHK          18      // machine check) show
0 384 moveto (3222 #define T_SIMDERR       19      // SIMD floating point error) show
0 372 moveto (3223 ) show
0 360 moveto (3224 // These are arbitrarily chosen, but with care not to overlap) show
0 348 moveto (3225 // processor defined exceptions or interrupt vectors.) show
0 336 moveto (3226 #define T_SYSCALL       64      // system call) show
0 324 moveto (3227 #define T_DEFAULT      500      // catchall) show
0 312 moveto (3228 ) show
0 300 moveto (3229 #define T_IRQ0          32      // IRQ 0 corresponds to int T_IRQ) show
0 288 moveto (3230 ) show
0 276 moveto (3231 #define IRQ_TIMER        0) show
0 264 moveto (3232 #define IRQ_KBD          1) show
0 252 moveto (3233 #define IRQ_COM1         4) show
0 240 moveto (3234 #define IRQ_IDE         14) show
0 228 moveto (3235 #define IRQ_ERROR       19) show
0 216 moveto (3236 #define IRQ_SPURIOUS    31) show
0 204 moveto (3237 ) show
0 192 moveto (3238 ) show
0 180 moveto (3239 ) show
0 168 moveto (3240 ) show
0 156 moveto (3241 ) show
0 144 moveto (3242 ) show
0 132 moveto (3243 ) show
0 120 moveto (3244 ) show
0 108 moveto (3245 ) show
0 96 moveto (3246 ) show
0 84 moveto (3247 ) show
0 72 moveto (3248 ) show
0 60 moveto (3249 ) show
0 24 moveto (Sheet 32) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/vectors.pl  Page 1) show
0 648 moveto (3250 #!/usr/bin/perl -w) show
0 636 moveto (3251 ) show
0 624 moveto (3252 # Generate vectors.S, the trap/interrupt entry points.) show
0 612 moveto (3253 # There has to be one entry point per interrupt number) show
0 600 moveto (3254 # since otherwise there's no way for trap\(\) to discover) show
0 588 moveto (3255 # the interrupt number.) show
0 576 moveto (3256 ) show
0 564 moveto (3257 print "# generated by vectors.pl - do not edit\\n";) show
0 552 moveto (3258 print "# handlers\\n";) show
0 540 moveto (3259 print ".globl alltraps\\n";) show
0 528 moveto (3260 for\(my $i = 0; $i < 256; $i++\){) show
0 516 moveto (3261     print ".globl vector$i\\n";) show
0 504 moveto (3262     print "vector$i:\\n";) show
0 492 moveto (3263     if\(!\($i == 8 || \($i >= 10 && $i <= 14\) || $i == 17\)\){) show
0 480 moveto (3264         print "  pushl \\$0\\n";) show
0 468 moveto (3265     }) show
0 456 moveto (3266     print "  pushl \\$$i\\n";) show
0 444 moveto (3267     print "  jmp alltraps\\n";) show
0 432 moveto (3268 }) show
0 420 moveto (3269 ) show
0 408 moveto (3270 print "\\n# vector table\\n";) show
0 396 moveto (3271 print ".data\\n";) show
0 384 moveto (3272 print ".globl vectors\\n";) show
0 372 moveto (3273 print "vectors:\\n";) show
0 360 moveto (3274 for\(my $i = 0; $i < 256; $i++\){) show
0 348 moveto (3275     print "  .long vector$i\\n";) show
0 336 moveto (3276 }) show
0 324 moveto (3277 ) show
0 312 moveto (3278 # sample output:) show
0 300 moveto (3279 #   # handlers) show
0 288 moveto (3280 #   .globl alltraps) show
0 276 moveto (3281 #   .globl vector0) show
0 264 moveto (3282 #   vector0:) show
0 252 moveto (3283 #     pushl $0) show
0 240 moveto (3284 #     pushl $0) show
0 228 moveto (3285 #     jmp alltraps) show
0 216 moveto (3286 #   ...) show
0 204 moveto (3287 #) show
0 192 moveto (3288 #   # vector table) show
0 180 moveto (3289 #   .data) show
0 168 moveto (3290 #   .globl vectors) show
0 156 moveto (3291 #   vectors:) show
0 144 moveto (3292 #     .long vector0) show
0 132 moveto (3293 #     .long vector1) show
0 120 moveto (3294 #     .long vector2) show
0 108 moveto (3295 #   ...) show
0 96 moveto (3296 ) show
0 84 moveto (3297 ) show
0 72 moveto (3298 ) show
0 60 moveto (3299 ) show
0 24 moveto (Sheet 32) show
grestore
restore
showpage
%%Page: 42 42
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/trapasm.S  Page 1) show
0 648 moveto (3300 #include "mmu.h") show
0 636 moveto (3301 ) show
0 624 moveto (3302   # vectors.S sends all traps here.) show
0 612 moveto (3303 .globl alltraps) show
0 600 moveto (3304 alltraps:) show
0 588 moveto (3305   # Build trap frame.) show
0 576 moveto (3306   pushl %ds) show
0 564 moveto (3307   pushl %es) show
0 552 moveto (3308   pushl %fs) show
0 540 moveto (3309   pushl %gs) show
0 528 moveto (3310   pushal) show
0 516 moveto (3311 ) show
0 504 moveto (3312   # Set up data and per-cpu segments.) show
0 492 moveto (3313   movw $\(SEG_KDATA<<3\), %ax) show
0 480 moveto (3314   movw %ax, %ds) show
0 468 moveto (3315   movw %ax, %es) show
0 456 moveto (3316   movw $\(SEG_KCPU<<3\), %ax) show
0 444 moveto (3317   movw %ax, %fs) show
0 432 moveto (3318   movw %ax, %gs) show
0 420 moveto (3319 ) show
0 408 moveto (3320   # Call trap\(tf\), where tf=%esp) show
0 396 moveto (3321   pushl %esp) show
0 384 moveto (3322   call trap) show
0 372 moveto (3323   addl $4, %esp) show
0 360 moveto (3324 ) show
0 348 moveto (3325   # Return falls through to trapret...) show
0 336 moveto (3326 .globl trapret) show
0 324 moveto (3327 trapret:) show
0 312 moveto (3328   popal) show
0 300 moveto (3329   popl %gs) show
0 288 moveto (3330   popl %fs) show
0 276 moveto (3331   popl %es) show
0 264 moveto (3332   popl %ds) show
0 252 moveto (3333   addl $0x8, %esp  # trapno and errcode) show
0 240 moveto (3334   iret) show
0 228 moveto (3335 ) show
0 216 moveto (3336 ) show
0 204 moveto (3337 ) show
0 192 moveto (3338 ) show
0 180 moveto (3339 ) show
0 168 moveto (3340 ) show
0 156 moveto (3341 ) show
0 144 moveto (3342 ) show
0 132 moveto (3343 ) show
0 120 moveto (3344 ) show
0 108 moveto (3345 ) show
0 96 moveto (3346 ) show
0 84 moveto (3347 ) show
0 72 moveto (3348 ) show
0 60 moveto (3349 ) show
0 24 moveto (Sheet 33) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/trap.c  Page 1) show
0 648 moveto (3350 #include "types.h") show
0 636 moveto (3351 #include "defs.h") show
0 624 moveto (3352 #include "param.h") show
0 612 moveto (3353 #include "memlayout.h") show
0 600 moveto (3354 #include "mmu.h") show
0 588 moveto (3355 #include "proc.h") show
0 576 moveto (3356 #include "x86.h") show
0 564 moveto (3357 #include "traps.h") show
0 552 moveto (3358 #include "spinlock.h") show
0 540 moveto (3359 ) show
0 528 moveto (3360 // Interrupt descriptor table \(shared by all CPUs\).) show
0 516 moveto (3361 struct gatedesc idt[256];) show
0 504 moveto (3362 extern uint vectors[];  // in vectors.S: array of 256 entry pointers) show
0 492 moveto (3363 struct spinlock tickslock;) show
0 480 moveto (3364 uint ticks;) show
0 468 moveto (3365 ) show
0 456 moveto (3366 void) show
0 444 moveto (3367 tvinit\(void\)) show
0 432 moveto (3368 {) show
0 420 moveto (3369   int i;) show
0 408 moveto (3370 ) show
0 396 moveto (3371   for\(i = 0; i < 256; i++\)) show
0 384 moveto (3372     SETGATE\(idt[i], 0, SEG_KCODE<<3, vectors[i], 0\);) show
0 372 moveto (3373   SETGATE\(idt[T_SYSCALL], 1, SEG_KCODE<<3, vectors[T_SYSCALL], DPL_USER\);) show
0 360 moveto (3374 ) show
0 348 moveto (3375   initlock\(&tickslock, "time"\);) show
0 336 moveto (3376 }) show
0 324 moveto (3377 ) show
0 312 moveto (3378 void) show
0 300 moveto (3379 idtinit\(void\)) show
0 288 moveto (3380 {) show
0 276 moveto (3381   lidt\(idt, sizeof\(idt\)\);) show
0 264 moveto (3382 }) show
0 252 moveto (3383 ) show
0 240 moveto (3384 void) show
0 228 moveto (3385 trap\(struct trapframe *tf\)) show
0 216 moveto (3386 {) show
0 204 moveto (3387   if\(tf->trapno == T_SYSCALL\){) show
0 192 moveto (3388     if\(proc->killed\)) show
0 180 moveto (3389       exit\(\);) show
0 168 moveto (3390     proc->tf = tf;) show
0 156 moveto (3391     syscall\(\);) show
0 144 moveto (3392     if\(proc->killed\)) show
0 132 moveto (3393       exit\(\);) show
0 120 moveto (3394     return;) show
0 108 moveto (3395   }) show
0 96 moveto (3396 ) show
0 84 moveto (3397   switch\(tf->trapno\){) show
0 72 moveto (3398   case T_IRQ0 + IRQ_TIMER:) show
0 60 moveto (3399     if\(cpu->id == 0\){) show
0 24 moveto (Sheet 33) show
grestore
restore
showpage
%%Page: 43 43
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/trap.c  Page 2) show
0 648 moveto (3400       acquire\(&tickslock\);) show
0 636 moveto (3401       ticks++;) show
0 624 moveto (3402       release\(&tickslock\);    // NOTE: MarkM has reversed these two lines.) show
0 612 moveto (3403       wakeup\(&ticks\);         // wakeup\(\) should not require the tickslock to be held) show
0 600 moveto (3404     }) show
0 588 moveto (3405     lapiceoi\(\);) show
0 576 moveto (3406     break;) show
0 564 moveto (3407   case T_IRQ0 + IRQ_IDE:) show
0 552 moveto (3408     ideintr\(\);) show
0 540 moveto (3409     lapiceoi\(\);) show
0 528 moveto (3410     break;) show
0 516 moveto (3411   case T_IRQ0 + IRQ_IDE+1:) show
0 504 moveto (3412     // Bochs generates spurious IDE1 interrupts.) show
0 492 moveto (3413     break;) show
0 480 moveto (3414   case T_IRQ0 + IRQ_KBD:) show
0 468 moveto (3415     kbdintr\(\);) show
0 456 moveto (3416     lapiceoi\(\);) show
0 444 moveto (3417     break;) show
0 432 moveto (3418   case T_IRQ0 + IRQ_COM1:) show
0 420 moveto (3419     uartintr\(\);) show
0 408 moveto (3420     lapiceoi\(\);) show
0 396 moveto (3421     break;) show
0 384 moveto (3422   case T_IRQ0 + 7:) show
0 372 moveto (3423   case T_IRQ0 + IRQ_SPURIOUS:) show
0 360 moveto (3424     cprintf\("cpu%d: spurious interrupt at %x:%x\\n",) show
0 348 moveto (3425             cpu->id, tf->cs, tf->eip\);) show
0 336 moveto (3426     lapiceoi\(\);) show
0 324 moveto (3427     break;) show
0 312 moveto (3428 ) show
0 300 moveto (3429   default:) show
0 288 moveto (3430     if\(proc == 0 || \(tf->cs&3\) == 0\){) show
0 276 moveto (3431       // In kernel, it must be our mistake.) show
0 264 moveto (3432       cprintf\("unexpected trap %d from cpu %d eip %x \(cr2=0x%x\)\\n",) show
0 252 moveto (3433               tf->trapno, cpu->id, tf->eip, rcr2\(\)\);) show
0 240 moveto (3434       panic\("trap"\);) show
0 228 moveto (3435     }) show
0 216 moveto (3436     // In user space, assume process misbehaved.) show
0 204 moveto (3437     cprintf\("pid %d %s: trap %d err %d on cpu %d ") show
0 192 moveto (3438             "eip 0x%x addr 0x%x--kill proc\\n",) show
0 180 moveto (3439             proc->pid, proc->name, tf->trapno, tf->err, cpu->id, tf->eip,) show
0 168 moveto (3440             rcr2\(\)\);) show
0 156 moveto (3441     proc->killed = 1;) show
0 144 moveto (3442   }) show
0 132 moveto (3443 ) show
0 120 moveto (3444   // Force process exit if it has been killed and is in user space.) show
0 108 moveto (3445   // \(If it is still executing in the kernel, let it keep running) show
0 96 moveto (3446   // until it gets to the regular system call return.\)) show
0 84 moveto (3447   if\(proc && proc->killed && \(tf->cs&3\) == DPL_USER\)) show
0 72 moveto (3448     exit\(\);) show
0 60 moveto (3449 ) show
0 24 moveto (Sheet 34) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/trap.c  Page 3) show
0 648 moveto (3450   // Force process to give up CPU on clock tick.) show
0 636 moveto (3451   // If interrupts were on while locks held, would need to check nlock.) show
0 624 moveto (3452   if\(proc && proc->state == RUNNING && tf->trapno == T_IRQ0+IRQ_TIMER\)) show
0 612 moveto (3453     yield\(\);) show
0 600 moveto (3454 ) show
0 588 moveto (3455   // Check if the process has been killed since we yielded) show
0 576 moveto (3456   if\(proc && proc->killed && \(tf->cs&3\) == DPL_USER\)) show
0 564 moveto (3457     exit\(\);) show
0 552 moveto (3458 }) show
0 540 moveto (3459 ) show
0 528 moveto (3460 ) show
0 516 moveto (3461 ) show
0 504 moveto (3462 ) show
0 492 moveto (3463 ) show
0 480 moveto (3464 ) show
0 468 moveto (3465 ) show
0 456 moveto (3466 ) show
0 444 moveto (3467 ) show
0 432 moveto (3468 ) show
0 420 moveto (3469 ) show
0 408 moveto (3470 ) show
0 396 moveto (3471 ) show
0 384 moveto (3472 ) show
0 372 moveto (3473 ) show
0 360 moveto (3474 ) show
0 348 moveto (3475 ) show
0 336 moveto (3476 ) show
0 324 moveto (3477 ) show
0 312 moveto (3478 ) show
0 300 moveto (3479 ) show
0 288 moveto (3480 ) show
0 276 moveto (3481 ) show
0 264 moveto (3482 ) show
0 252 moveto (3483 ) show
0 240 moveto (3484 ) show
0 228 moveto (3485 ) show
0 216 moveto (3486 ) show
0 204 moveto (3487 ) show
0 192 moveto (3488 ) show
0 180 moveto (3489 ) show
0 168 moveto (3490 ) show
0 156 moveto (3491 ) show
0 144 moveto (3492 ) show
0 132 moveto (3493 ) show
0 120 moveto (3494 ) show
0 108 moveto (3495 ) show
0 96 moveto (3496 ) show
0 84 moveto (3497 ) show
0 72 moveto (3498 ) show
0 60 moveto (3499 ) show
0 24 moveto (Sheet 34) show
grestore
restore
showpage
%%Page: 44 44
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/syscall.h  Page 1) show
0 648 moveto (3500 // System call numbers) show
0 636 moveto (3501 #define SYS_fork) show
40 mp_a_x mul 636 moveto (1) show
0 624 moveto (3502 #define SYS_exit    ) show
32 mp_a_x mul 624 moveto (SYS_fork+1) show
0 612 moveto (3503 #define SYS_wait    ) show
32 mp_a_x mul 612 moveto (SYS_exit+1) show
0 600 moveto (3504 #define SYS_pipe    ) show
32 mp_a_x mul 600 moveto (SYS_wait+1) show
0 588 moveto (3505 #define SYS_read    ) show
32 mp_a_x mul 588 moveto (SYS_pipe+1) show
0 576 moveto (3506 #define SYS_kill    ) show
32 mp_a_x mul 576 moveto (SYS_read+1) show
0 564 moveto (3507 #define SYS_exec    ) show
32 mp_a_x mul 564 moveto (SYS_kill+1) show
0 552 moveto (3508 #define SYS_fstat   ) show
32 mp_a_x mul 552 moveto (SYS_exec+1) show
0 540 moveto (3509 #define SYS_chdir   ) show
32 mp_a_x mul 540 moveto (SYS_fstat+1) show
0 528 moveto (3510 #define SYS_dup     ) show
32 mp_a_x mul 528 moveto (SYS_chdir+1) show
0 516 moveto (3511 #define SYS_getpid  ) show
32 mp_a_x mul 516 moveto (SYS_dup+1) show
0 504 moveto (3512 #define SYS_sbrk    ) show
32 mp_a_x mul 504 moveto (SYS_getpid+1) show
0 492 moveto (3513 #define SYS_sleep   ) show
32 mp_a_x mul 492 moveto (SYS_sbrk+1) show
0 480 moveto (3514 #define SYS_uptime  ) show
32 mp_a_x mul 480 moveto (SYS_sleep+1) show
0 468 moveto (3515 #define SYS_open    ) show
32 mp_a_x mul 468 moveto (SYS_uptime+1) show
0 456 moveto (3516 #define SYS_write   ) show
32 mp_a_x mul 456 moveto (SYS_open+1) show
0 444 moveto (3517 #define SYS_mknod   ) show
32 mp_a_x mul 444 moveto (SYS_write+1) show
0 432 moveto (3518 #define SYS_unlink  ) show
32 mp_a_x mul 432 moveto (SYS_mknod+1) show
0 420 moveto (3519 #define SYS_link    ) show
32 mp_a_x mul 420 moveto (SYS_unlink+1) show
0 408 moveto (3520 #define SYS_mkdir   ) show
32 mp_a_x mul 408 moveto (SYS_link+1) show
0 396 moveto (3521 #define SYS_close   ) show
32 mp_a_x mul 396 moveto (SYS_mkdir+1) show
0 384 moveto (3522 #define SYS_halt    ) show
32 mp_a_x mul 384 moveto (SYS_close+1) show
0 372 moveto (3523 // student system calls begin here. Follow the existing pattern.) show
0 360 moveto (3524 #define SYS_date) show
40 mp_a_x mul 360 moveto (SYS_halt+1) show
0 348 moveto (3525 #define SYS_getuid) show
32 mp_a_x mul 348 moveto (SYS_date+1) show
0 336 moveto (3526 #define SYS_getgid) show
32 mp_a_x mul 336 moveto (SYS_getuid+1) show
0 324 moveto (3527 #define SYS_getppid) show
40 mp_a_x mul 324 moveto (SYS_getgid+1) show
0 312 moveto (3528 #define SYS_setuid) show
32 mp_a_x mul 312 moveto (SYS_getppid+1) show
0 300 moveto (3529 #define SYS_setgid) show
32 mp_a_x mul 300 moveto (SYS_setuid+1) show
0 288 moveto (3530 #define SYS_getprocs  SYS_setgid+1) show
0 276 moveto (3531 #define SYS_setpriority  SYS_getprocs+1) show
0 264 moveto (3532 ) show
0 252 moveto (3533 ) show
0 240 moveto (3534 ) show
0 228 moveto (3535 ) show
0 216 moveto (3536 ) show
0 204 moveto (3537 ) show
0 192 moveto (3538 ) show
0 180 moveto (3539 ) show
0 168 moveto (3540 ) show
0 156 moveto (3541 ) show
0 144 moveto (3542 ) show
0 132 moveto (3543 ) show
0 120 moveto (3544 ) show
0 108 moveto (3545 ) show
0 96 moveto (3546 ) show
0 84 moveto (3547 ) show
0 72 moveto (3548 ) show
0 60 moveto (3549 ) show
0 24 moveto (Sheet 35) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/syscall.c  Page 1) show
0 648 moveto (3550 #include "types.h") show
0 636 moveto (3551 #include "defs.h") show
0 624 moveto (3552 #include "param.h") show
0 612 moveto (3553 #include "memlayout.h") show
0 600 moveto (3554 #include "mmu.h") show
0 588 moveto (3555 #include "proc.h") show
0 576 moveto (3556 #include "x86.h") show
0 564 moveto (3557 #include "syscall.h") show
0 552 moveto (3558 ) show
0 540 moveto (3559 // User code makes a system call with INT T_SYSCALL.) show
0 528 moveto (3560 // System call number in %eax.) show
0 516 moveto (3561 // Arguments on the stack, from the user call to the C) show
0 504 moveto (3562 // library system call function. The saved user %esp points) show
0 492 moveto (3563 // to a saved program counter, and then the first argument.) show
0 480 moveto (3564 ) show
0 468 moveto (3565 // Fetch the int at addr from the current process.) show
0 456 moveto (3566 int) show
0 444 moveto (3567 fetchint\(uint addr, int *ip\)) show
0 432 moveto (3568 {) show
0 420 moveto (3569   if\(addr >= proc->sz || addr+4 > proc->sz\)) show
0 408 moveto (3570     return -1;) show
0 396 moveto (3571   *ip = *\(int*\)\(addr\);) show
0 384 moveto (3572   return 0;) show
0 372 moveto (3573 }) show
0 360 moveto (3574 ) show
0 348 moveto (3575 // Fetch the nul-terminated string at addr from the current process.) show
0 336 moveto (3576 // Doesn't actually copy the string - just sets *pp to point at it.) show
0 324 moveto (3577 // Returns length of string, not including nul.) show
0 312 moveto (3578 int) show
0 300 moveto (3579 fetchstr\(uint addr, char **pp\)) show
0 288 moveto (3580 {) show
0 276 moveto (3581   char *s, *ep;) show
0 264 moveto (3582 ) show
0 252 moveto (3583   if\(addr >= proc->sz\)) show
0 240 moveto (3584     return -1;) show
0 228 moveto (3585   *pp = \(char*\)addr;) show
0 216 moveto (3586   ep = \(char*\)proc->sz;) show
0 204 moveto (3587   for\(s = *pp; s < ep; s++\)) show
0 192 moveto (3588     if\(*s == 0\)) show
0 180 moveto (3589       return s - *pp;) show
0 168 moveto (3590   return -1;) show
0 156 moveto (3591 }) show
0 144 moveto (3592 ) show
0 132 moveto (3593 // Fetch the nth 32-bit system call argument.) show
0 120 moveto (3594 int) show
0 108 moveto (3595 argint\(int n, int *ip\)) show
0 96 moveto (3596 {) show
0 84 moveto (3597   return fetchint\(proc->tf->esp + 4 + 4*n, ip\);) show
0 72 moveto (3598 }) show
0 60 moveto (3599 ) show
0 24 moveto (Sheet 35) show
grestore
restore
showpage
%%Page: 45 45
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/syscall.c  Page 2) show
0 648 moveto (3600 // Fetch the nth word-sized system call argument as a pointer) show
0 636 moveto (3601 // to a block of memory of size n bytes.  Check that the pointer) show
0 624 moveto (3602 // lies within the process address space.) show
0 612 moveto (3603 int) show
0 600 moveto (3604 argptr\(int n, char **pp, int size\)) show
0 588 moveto (3605 {) show
0 576 moveto (3606   int i;) show
0 564 moveto (3607 ) show
0 552 moveto (3608   if\(argint\(n, &i\) < 0\)) show
0 540 moveto (3609     return -1;) show
0 528 moveto (3610   if\(\(uint\)i >= proc->sz || \(uint\)i+size > proc->sz\)) show
0 516 moveto (3611     return -1;) show
0 504 moveto (3612   *pp = \(char*\)i;) show
0 492 moveto (3613   return 0;) show
0 480 moveto (3614 }) show
0 468 moveto (3615 ) show
0 456 moveto (3616 // Fetch the nth word-sized system call argument as a string pointer.) show
0 444 moveto (3617 // Check that the pointer is valid and the string is nul-terminated.) show
0 432 moveto (3618 // \(There is no shared writable memory, so the string can't change) show
0 420 moveto (3619 // between this check and being used by the kernel.\)) show
0 408 moveto (3620 int) show
0 396 moveto (3621 argstr\(int n, char **pp\)) show
0 384 moveto (3622 {) show
0 372 moveto (3623   int addr;) show
0 360 moveto (3624   if\(argint\(n, &addr\) < 0\)) show
0 348 moveto (3625     return -1;) show
0 336 moveto (3626   return fetchstr\(addr, pp\);) show
0 324 moveto (3627 }) show
0 312 moveto (3628 ) show
0 300 moveto (3629 extern int sys_chdir\(void\);) show
0 288 moveto (3630 extern int sys_close\(void\);) show
0 276 moveto (3631 extern int sys_dup\(void\);) show
0 264 moveto (3632 extern int sys_exec\(void\);) show
0 252 moveto (3633 extern int sys_exit\(void\);) show
0 240 moveto (3634 extern int sys_fork\(void\);) show
0 228 moveto (3635 extern int sys_fstat\(void\);) show
0 216 moveto (3636 extern int sys_getpid\(void\);) show
0 204 moveto (3637 extern int sys_kill\(void\);) show
0 192 moveto (3638 extern int sys_link\(void\);) show
0 180 moveto (3639 extern int sys_mkdir\(void\);) show
0 168 moveto (3640 extern int sys_mknod\(void\);) show
0 156 moveto (3641 extern int sys_open\(void\);) show
0 144 moveto (3642 extern int sys_pipe\(void\);) show
0 132 moveto (3643 extern int sys_read\(void\);) show
0 120 moveto (3644 extern int sys_sbrk\(void\);) show
0 108 moveto (3645 extern int sys_sleep\(void\);) show
0 96 moveto (3646 extern int sys_unlink\(void\);) show
0 84 moveto (3647 extern int sys_wait\(void\);) show
0 72 moveto (3648 extern int sys_write\(void\);) show
0 60 moveto (3649 extern int sys_uptime\(void\);) show
0 24 moveto (Sheet 36) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/syscall.c  Page 3) show
0 648 moveto (3650 extern int sys_halt\(void\);) show
0 636 moveto (3651 extern int sys_date\(void\);) show
0 624 moveto (3652 #ifdef CS333_P2) show
0 612 moveto (3653 extern int sys_getuid\(void\);) show
0 600 moveto (3654 extern int sys_getgid\(void\);) show
0 588 moveto (3655 extern int sys_getppid\(void\);) show
0 576 moveto (3656 extern int sys_setuid\(void\);) show
0 564 moveto (3657 extern int sys_setgid\(void\);) show
0 552 moveto (3658 extern int sys_getprocs\(void\);) show
0 540 moveto (3659 #endif) show
0 528 moveto (3660 #ifdef CS333_P3) show
0 516 moveto (3661 extern int sys_setpriority\(void\);) show
0 504 moveto (3662 #endif) show
0 492 moveto (3663 ) show
0 480 moveto (3664 static int \(*syscalls[]\)\(void\) = {) show
0 468 moveto (3665 [SYS_fork]    sys_fork,) show
0 456 moveto (3666 [SYS_exit]    sys_exit,) show
0 444 moveto (3667 [SYS_wait]    sys_wait,) show
0 432 moveto (3668 [SYS_pipe]    sys_pipe,) show
0 420 moveto (3669 [SYS_read]    sys_read,) show
0 408 moveto (3670 [SYS_kill]    sys_kill,) show
0 396 moveto (3671 [SYS_exec]    sys_exec,) show
0 384 moveto (3672 [SYS_fstat]   sys_fstat,) show
0 372 moveto (3673 [SYS_chdir]   sys_chdir,) show
0 360 moveto (3674 [SYS_dup]     sys_dup,) show
0 348 moveto (3675 [SYS_getpid]  sys_getpid,) show
0 336 moveto (3676 [SYS_sbrk]    sys_sbrk,) show
0 324 moveto (3677 [SYS_sleep]   sys_sleep,) show
0 312 moveto (3678 [SYS_uptime]  sys_uptime,) show
0 300 moveto (3679 [SYS_open]    sys_open,) show
0 288 moveto (3680 [SYS_write]   sys_write,) show
0 276 moveto (3681 [SYS_mknod]   sys_mknod,) show
0 264 moveto (3682 [SYS_unlink]  sys_unlink,) show
0 252 moveto (3683 [SYS_link]    sys_link,) show
0 240 moveto (3684 [SYS_mkdir]   sys_mkdir,) show
0 228 moveto (3685 [SYS_close]   sys_close,) show
0 216 moveto (3686 [SYS_halt]    sys_halt,) show
0 204 moveto (3687 [SYS_date]    sys_date,) show
0 192 moveto (3688 #ifdef CS333_P2) show
0 180 moveto (3689 [SYS_getuid]  sys_getuid,) show
0 168 moveto (3690 [SYS_getgid]  sys_getgid,) show
0 156 moveto (3691 [SYS_getppid] sys_getppid,) show
0 144 moveto (3692 [SYS_setuid]  sys_setuid,) show
0 132 moveto (3693 [SYS_setgid]  sys_setgid,) show
0 120 moveto (3694 [SYS_getprocs]  sys_getprocs,) show
0 108 moveto (3695 #endif) show
0 96 moveto (3696 #ifdef CS333_P3) show
0 84 moveto (3697 [SYS_setpriority]  sys_setpriority,) show
0 72 moveto (3698 #endif) show
0 60 moveto (3699 };) show
0 24 moveto (Sheet 36) show
grestore
restore
showpage
%%Page: 46 46
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/syscall.c  Page 4) show
0 648 moveto (3700 // put data structure for printing out system call invocation information here) show
0 636 moveto (3701 #ifdef PRINT_SYSCALLS) show
0 624 moveto (3702 static const char * \(print_syscalls[]\) = {) show
0 612 moveto (3703 [SYS_fork] = "fork",) show
0 600 moveto (3704 [SYS_exit]   = "exit",) show
0 588 moveto (3705 [SYS_wait]     = "wait",) show
0 576 moveto (3706 [SYS_pipe]     = "pipe",) show
0 564 moveto (3707 [SYS_read]     = "read",) show
0 552 moveto (3708 [SYS_kill]     = "kill",) show
0 540 moveto (3709 [SYS_exec]     = "exec",) show
0 528 moveto (3710 [SYS_fstat]    = "fstat",) show
0 516 moveto (3711 [SYS_chdir]    = "chdir",) show
0 504 moveto (3712 [SYS_dup]      = "dup",) show
0 492 moveto (3713 [SYS_getpid]   = "getpid",) show
0 480 moveto (3714 [SYS_sbrk]     = "sbrk",) show
0 468 moveto (3715 [SYS_sleep]    = "sleep",) show
0 456 moveto (3716 [SYS_uptime]   = "uptime",) show
0 444 moveto (3717 [SYS_open]     = "open",) show
0 432 moveto (3718 [SYS_write]    = "write",) show
0 420 moveto (3719 [SYS_mknod]    = "mknod",) show
0 408 moveto (3720 [SYS_unlink]   = "unlink",) show
0 396 moveto (3721 [SYS_link]     = "link",) show
0 384 moveto (3722 [SYS_mkdir]    = "mkdir",) show
0 372 moveto (3723 [SYS_close]    = "close",) show
0 360 moveto (3724 [SYS_halt]     = "halt",) show
0 348 moveto (3725 [SYS_date]     = "date",) show
0 336 moveto (3726 #ifdef CS333_P2) show
0 324 moveto (3727 [SYS_getgid]   = "getuid",) show
0 312 moveto (3728 [SYS_getuid]   = "getgid",) show
0 300 moveto (3729 [SYS_getppid]  = "getppid",) show
0 288 moveto (3730 [SYS_setgid]   = "setuid",) show
0 276 moveto (3731 [SYS_setuid]   = "setgid",) show
0 264 moveto (3732 [SYS_getprocs]   = "getprocs",) show
0 252 moveto (3733 #endif) show
0 240 moveto (3734 #ifdef CS333_P3) show
0 228 moveto (3735 [SYS_setpriority]  = "setpriority",) show
0 216 moveto (3736 #endif) show
0 204 moveto (3737 };) show
0 192 moveto (3738 ) show
0 180 moveto (3739 ) show
0 168 moveto (3740 ) show
0 156 moveto (3741 ) show
0 144 moveto (3742 ) show
0 132 moveto (3743 ) show
0 120 moveto (3744 ) show
0 108 moveto (3745 ) show
0 96 moveto (3746 ) show
0 84 moveto (3747 ) show
0 72 moveto (3748 ) show
0 60 moveto (3749 ) show
0 24 moveto (Sheet 37) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/syscall.c  Page 5) show
0 648 moveto (3750 #endif) show
0 636 moveto (3751 ) show
0 624 moveto (3752 void) show
0 612 moveto (3753 syscall\(void\)) show
0 600 moveto (3754 {) show
0 588 moveto (3755   int num;) show
0 576 moveto (3756 ) show
0 564 moveto (3757   num = proc->tf->eax;) show
0 552 moveto (3758   if\(num > 0 && num < NELEM\(syscalls\) && syscalls[num]\) {) show
0 540 moveto (3759     proc->tf->eax = syscalls[num]\(\);) show
0 528 moveto (3760 // some code goes here) show
0 516 moveto (3761 #ifdef PRINT_SYSCALLS) show
0 504 moveto (3762 ) show
8 mp_a_x mul 504 moveto (cprintf\("%s -> %d\\n", print_syscalls[num], proc->tf->eax\);) show
0 492 moveto (3763 #endif) show
0 480 moveto (3764   } else {) show
0 468 moveto (3765     cprintf\("%d %s: unknown sys call %d\\n",) show
0 456 moveto (3766             proc->pid, proc->name, num\);) show
0 444 moveto (3767     proc->tf->eax = -1;) show
0 432 moveto (3768   }) show
0 420 moveto (3769 }) show
0 408 moveto (3770 ) show
0 396 moveto (3771 ) show
0 384 moveto (3772 ) show
0 372 moveto (3773 ) show
0 360 moveto (3774 ) show
0 348 moveto (3775 ) show
0 336 moveto (3776 ) show
0 324 moveto (3777 ) show
0 312 moveto (3778 ) show
0 300 moveto (3779 ) show
0 288 moveto (3780 ) show
0 276 moveto (3781 ) show
0 264 moveto (3782 ) show
0 252 moveto (3783 ) show
0 240 moveto (3784 ) show
0 228 moveto (3785 ) show
0 216 moveto (3786 ) show
0 204 moveto (3787 ) show
0 192 moveto (3788 ) show
0 180 moveto (3789 ) show
0 168 moveto (3790 ) show
0 156 moveto (3791 ) show
0 144 moveto (3792 ) show
0 132 moveto (3793 ) show
0 120 moveto (3794 ) show
0 108 moveto (3795 ) show
0 96 moveto (3796 ) show
0 84 moveto (3797 ) show
0 72 moveto (3798 ) show
0 60 moveto (3799 ) show
0 24 moveto (Sheet 37) show
grestore
restore
showpage
%%Page: 47 47
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/sysproc.c  Page 1) show
0 648 moveto (3800 #include "types.h") show
0 636 moveto (3801 #include "x86.h") show
0 624 moveto (3802 #include "defs.h") show
0 612 moveto (3803 #include "date.h") show
0 600 moveto (3804 #include "param.h") show
0 588 moveto (3805 #include "memlayout.h") show
0 576 moveto (3806 #include "mmu.h") show
0 564 moveto (3807 #include "proc.h") show
0 552 moveto (3808 #include "uproc.h") show
0 540 moveto (3809 ) show
0 528 moveto (3810 int) show
0 516 moveto (3811 sys_fork\(void\)) show
0 504 moveto (3812 {) show
0 492 moveto (3813   return fork\(\);) show
0 480 moveto (3814 }) show
0 468 moveto (3815 ) show
0 456 moveto (3816 int) show
0 444 moveto (3817 sys_exit\(void\)) show
0 432 moveto (3818 {) show
0 420 moveto (3819   exit\(\);) show
0 408 moveto (3820   return 0;  // not reached) show
0 396 moveto (3821 }) show
0 384 moveto (3822 ) show
0 372 moveto (3823 int) show
0 360 moveto (3824 sys_wait\(void\)) show
0 348 moveto (3825 {) show
0 336 moveto (3826   return wait\(\);) show
0 324 moveto (3827 }) show
0 312 moveto (3828 ) show
0 300 moveto (3829 int) show
0 288 moveto (3830 sys_kill\(void\)) show
0 276 moveto (3831 {) show
0 264 moveto (3832   int pid;) show
0 252 moveto (3833 ) show
0 240 moveto (3834   if\(argint\(0, &pid\) < 0\)) show
0 228 moveto (3835     return -1;) show
0 216 moveto (3836   return kill\(pid\);) show
0 204 moveto (3837 }) show
0 192 moveto (3838 ) show
0 180 moveto (3839 int) show
0 168 moveto (3840 sys_getpid\(void\)) show
0 156 moveto (3841 {) show
0 144 moveto (3842   return proc->pid;) show
0 132 moveto (3843 }) show
0 120 moveto (3844 ) show
0 108 moveto (3845 ) show
0 96 moveto (3846 ) show
0 84 moveto (3847 ) show
0 72 moveto (3848 ) show
0 60 moveto (3849 ) show
0 24 moveto (Sheet 38) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/sysproc.c  Page 2) show
0 648 moveto (3850 int) show
0 636 moveto (3851 sys_sbrk\(void\)) show
0 624 moveto (3852 {) show
0 612 moveto (3853   int addr;) show
0 600 moveto (3854   int n;) show
0 588 moveto (3855 ) show
0 576 moveto (3856   if\(argint\(0, &n\) < 0\)) show
0 564 moveto (3857     return -1;) show
0 552 moveto (3858   addr = proc->sz;) show
0 540 moveto (3859   if\(growproc\(n\) < 0\)) show
0 528 moveto (3860     return -1;) show
0 516 moveto (3861   return addr;) show
0 504 moveto (3862 }) show
0 492 moveto (3863 ) show
0 480 moveto (3864 int) show
0 468 moveto (3865 sys_sleep\(void\)) show
0 456 moveto (3866 {) show
0 444 moveto (3867   int n;) show
0 432 moveto (3868   uint ticks0;) show
0 420 moveto (3869 ) show
0 408 moveto (3870   if\(argint\(0, &n\) < 0\)) show
0 396 moveto (3871     return -1;) show
0 384 moveto (3872   acquire\(&tickslock\);) show
0 372 moveto (3873   ticks0 = ticks;) show
0 360 moveto (3874   while\(ticks - ticks0 < n\){) show
0 348 moveto (3875     if\(proc->killed\){) show
0 336 moveto (3876       release\(&tickslock\);) show
0 324 moveto (3877       return -1;) show
0 312 moveto (3878     }) show
0 300 moveto (3879     sleep\(&ticks, &tickslock\);) show
0 288 moveto (3880   }) show
0 276 moveto (3881   release\(&tickslock\);) show
0 264 moveto (3882   return 0;) show
0 252 moveto (3883 }) show
0 240 moveto (3884 ) show
0 228 moveto (3885 // return how many clock tick interrupts have occurred) show
0 216 moveto (3886 // since start.) show
0 204 moveto (3887 int) show
0 192 moveto (3888 sys_uptime\(void\)) show
0 180 moveto (3889 {) show
0 168 moveto (3890   uint xticks;) show
0 156 moveto (3891 ) show
0 144 moveto (3892   acquire\(&tickslock\);) show
0 132 moveto (3893   xticks = ticks;) show
0 120 moveto (3894   release\(&tickslock\);) show
0 108 moveto (3895   return xticks;) show
0 96 moveto (3896 }) show
0 84 moveto (3897 ) show
0 72 moveto (3898 ) show
0 60 moveto (3899 ) show
0 24 moveto (Sheet 38) show
grestore
restore
showpage
%%Page: 48 48
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/sysproc.c  Page 3) show
0 648 moveto (3900 //Turn of the computer) show
0 636 moveto (3901 int sys_halt\(void\){) show
0 624 moveto (3902   cprintf\("Shutting down ...\\n"\);) show
0 612 moveto (3903   //outw \(0xB004, 0x0 | 0x2000\);) show
0 600 moveto (3904 ) show
8 mp_a_x mul 600 moveto (outw\( 0x604, 0x0 | 0x2000 \);) show
0 588 moveto (3905 ) show
8 mp_a_x mul 588 moveto (return 0;) show
0 576 moveto (3906 ) show
0 564 moveto (3907 }) show
0 552 moveto (3908 ) show
0 540 moveto (3909 //Get current UTC date of the system) show
0 528 moveto (3910 int) show
0 516 moveto (3911 sys_date\(void\)) show
0 504 moveto (3912 {) show
0 492 moveto (3913   struct rtcdate *d;) show
0 480 moveto (3914   if\(argptr\(0, \(void*\)&d, sizeof\(*d\)\) < 0\)) show
0 468 moveto (3915     return -1;) show
0 456 moveto (3916   cmostime\(d\);) show
0 444 moveto (3917   return 0;) show
0 432 moveto (3918 }) show
0 420 moveto (3919 ) show
0 408 moveto (3920 #ifdef CS333_P2) show
0 396 moveto (3921 // Set UID) show
0 384 moveto (3922 int) show
0 372 moveto (3923 sys_setuid\(void\)) show
0 360 moveto (3924 {) show
0 348 moveto (3925 ) show
8 mp_a_x mul 348 moveto (uint new_uid;) show
0 336 moveto (3926   if\(argint\(0,\(int*\) &new_uid\) < 0\)) show
0 324 moveto (3927 ) show
16 mp_a_x mul 324 moveto (return -1;) show
0 312 moveto (3928 ) show
8 mp_a_x mul 312 moveto (if\(new_uid < 0 || new_uid > 32767\)) show
0 300 moveto (3929 ) show
16 mp_a_x mul 300 moveto (return -1;) show
0 288 moveto (3930 ) show
8 mp_a_x mul 288 moveto (proc->uid = new_uid;) show
0 276 moveto (3931 ) show
8 mp_a_x mul 276 moveto (return 0;) show
0 264 moveto (3932 }) show
0 252 moveto (3933 ) show
0 240 moveto (3934 // Set GID) show
0 228 moveto (3935 int) show
0 216 moveto (3936 sys_setgid\(void\)) show
0 204 moveto (3937 {) show
0 192 moveto (3938 ) show
8 mp_a_x mul 192 moveto (uint new_gid;) show
0 180 moveto (3939   if\(argint\(0,\(int*\) &new_gid\) < 0\)) show
0 168 moveto (3940 ) show
16 mp_a_x mul 168 moveto (return -1;) show
0 156 moveto (3941 ) show
8 mp_a_x mul 156 moveto (if\(new_gid < 0 || new_gid > 32767\)) show
0 144 moveto (3942 ) show
16 mp_a_x mul 144 moveto (return -1;) show
0 132 moveto (3943 ) show
8 mp_a_x mul 132 moveto (proc->gid = new_gid;) show
0 120 moveto (3944 ) show
8 mp_a_x mul 120 moveto (return 0;) show
0 108 moveto (3945 }) show
0 96 moveto (3946 ) show
0 84 moveto (3947 ) show
0 72 moveto (3948 ) show
0 60 moveto (3949 ) show
0 24 moveto (Sheet 39) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/sysproc.c  Page 4) show
0 648 moveto (3950 // Get UID of current process) show
0 636 moveto (3951 int) show
0 624 moveto (3952 sys_getuid\(void\)) show
0 612 moveto (3953 {) show
0 600 moveto (3954 ) show
8 mp_a_x mul 600 moveto (return proc->uid;) show
0 588 moveto (3955 }) show
0 576 moveto (3956 ) show
0 564 moveto (3957 // Get GID of current process) show
0 552 moveto (3958 int) show
0 540 moveto (3959 sys_getgid\(void\)) show
0 528 moveto (3960 {) show
0 516 moveto (3961 ) show
8 mp_a_x mul 516 moveto (return proc->gid;) show
0 504 moveto (3962 }) show
0 492 moveto (3963 ) show
0 480 moveto (3964 // Get PPID of current process) show
0 468 moveto (3965 int) show
0 456 moveto (3966 sys_getppid\(void\)) show
0 444 moveto (3967 {) show
0 432 moveto (3968 ) show
8 mp_a_x mul 432 moveto (if\(proc->pid == 1\)) show
0 420 moveto (3969 ) show
16 mp_a_x mul 420 moveto (return proc->pid;) show
0 408 moveto (3970 ) show
8 mp_a_x mul 408 moveto (if\(!proc->parent\)) show
0 396 moveto (3971 ) show
16 mp_a_x mul 396 moveto (return proc->pid;) show
0 384 moveto (3972 ) show
8 mp_a_x mul 384 moveto (return proc->parent->pid;) show
0 372 moveto (3973 }) show
0 360 moveto (3974 ) show
0 348 moveto (3975 // Get process info) show
0 336 moveto (3976 int) show
0 324 moveto (3977 sys_getprocs\(void\)) show
0 312 moveto (3978 {) show
0 300 moveto (3979 ) show
8 mp_a_x mul 300 moveto (uint arg1;) show
0 288 moveto (3980 ) show
8 mp_a_x mul 288 moveto (struct uproc* table;) show
0 276 moveto (3981 ) show
8 mp_a_x mul 276 moveto (if\(argint\(0,\(int*\) &arg1\) < 0\)) show
0 264 moveto (3982 ) show
16 mp_a_x mul 264 moveto (return -1;) show
0 252 moveto (3983 ) show
8 mp_a_x mul 252 moveto (if\(argptr\(1,\(void*\)&table, sizeof\(*table\)\) < 0\)) show
0 240 moveto (3984 ) show
16 mp_a_x mul 240 moveto (return -1;;) show
0 228 moveto (3985 ) show
8 mp_a_x mul 228 moveto (return getprocs\(arg1, table\);) show
0 216 moveto (3986 }) show
0 204 moveto (3987 ) show
0 192 moveto (3988 ) show
0 180 moveto (3989 ) show
0 168 moveto (3990 ) show
0 156 moveto (3991 ) show
0 144 moveto (3992 ) show
0 132 moveto (3993 ) show
0 120 moveto (3994 ) show
0 108 moveto (3995 ) show
0 96 moveto (3996 ) show
0 84 moveto (3997 ) show
0 72 moveto (3998 ) show
0 60 moveto (3999 ) show
0 24 moveto (Sheet 39) show
grestore
restore
showpage
%%Page: 49 49
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/sysproc.c  Page 5) show
0 648 moveto (4000 #endif) show
0 636 moveto (4001 ) show
0 624 moveto (4002 #ifdef CS333_P3) show
0 612 moveto (4003 int) show
0 600 moveto (4004 sys_setpriority\(void\)) show
0 588 moveto (4005 {) show
0 576 moveto (4006 ) show
8 mp_a_x mul 576 moveto (int value;) show
0 564 moveto (4007 ) show
8 mp_a_x mul 564 moveto (int pid;) show
0 552 moveto (4008 ) show
8 mp_a_x mul 552 moveto (if\(argint\(0,\(int*\) &pid\) < 0\)) show
0 540 moveto (4009 ) show
16 mp_a_x mul 540 moveto (return -1;) show
0 528 moveto (4010 ) show
8 mp_a_x mul 528 moveto (if\(argint\(1,\(int*\) &value\) < 0\)) show
0 516 moveto (4011 ) show
16 mp_a_x mul 516 moveto (return -1;) show
0 504 moveto (4012   return setpriority\(pid, value\);) show
0 492 moveto (4013 }) show
0 480 moveto (4014 #endif) show
0 468 moveto (4015 ) show
0 456 moveto (4016 ) show
0 444 moveto (4017 ) show
0 432 moveto (4018 ) show
0 420 moveto (4019 ) show
0 408 moveto (4020 ) show
0 396 moveto (4021 ) show
0 384 moveto (4022 ) show
0 372 moveto (4023 ) show
0 360 moveto (4024 ) show
0 348 moveto (4025 ) show
0 336 moveto (4026 ) show
0 324 moveto (4027 ) show
0 312 moveto (4028 ) show
0 300 moveto (4029 ) show
0 288 moveto (4030 ) show
0 276 moveto (4031 ) show
0 264 moveto (4032 ) show
0 252 moveto (4033 ) show
0 240 moveto (4034 ) show
0 228 moveto (4035 ) show
0 216 moveto (4036 ) show
0 204 moveto (4037 ) show
0 192 moveto (4038 ) show
0 180 moveto (4039 ) show
0 168 moveto (4040 ) show
0 156 moveto (4041 ) show
0 144 moveto (4042 ) show
0 132 moveto (4043 ) show
0 120 moveto (4044 ) show
0 108 moveto (4045 ) show
0 96 moveto (4046 ) show
0 84 moveto (4047 ) show
0 72 moveto (4048 ) show
0 60 moveto (4049 ) show
0 24 moveto (Sheet 40) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/halt.c  Page 1) show
0 648 moveto (4050 // halt the system.) show
0 636 moveto (4051 #include "types.h") show
0 624 moveto (4052 #include "user.h") show
0 612 moveto (4053 ) show
0 600 moveto (4054 int) show
0 588 moveto (4055 main\(void\) {) show
0 576 moveto (4056   halt\(\);) show
0 564 moveto (4057   return 0;) show
0 552 moveto (4058 }) show
0 540 moveto (4059 ) show
0 528 moveto (4060 ) show
0 516 moveto (4061 ) show
0 504 moveto (4062 ) show
0 492 moveto (4063 ) show
0 480 moveto (4064 ) show
0 468 moveto (4065 ) show
0 456 moveto (4066 ) show
0 444 moveto (4067 ) show
0 432 moveto (4068 ) show
0 420 moveto (4069 ) show
0 408 moveto (4070 ) show
0 396 moveto (4071 ) show
0 384 moveto (4072 ) show
0 372 moveto (4073 ) show
0 360 moveto (4074 ) show
0 348 moveto (4075 ) show
0 336 moveto (4076 ) show
0 324 moveto (4077 ) show
0 312 moveto (4078 ) show
0 300 moveto (4079 ) show
0 288 moveto (4080 ) show
0 276 moveto (4081 ) show
0 264 moveto (4082 ) show
0 252 moveto (4083 ) show
0 240 moveto (4084 ) show
0 228 moveto (4085 ) show
0 216 moveto (4086 ) show
0 204 moveto (4087 ) show
0 192 moveto (4088 ) show
0 180 moveto (4089 ) show
0 168 moveto (4090 ) show
0 156 moveto (4091 ) show
0 144 moveto (4092 ) show
0 132 moveto (4093 ) show
0 120 moveto (4094 ) show
0 108 moveto (4095 ) show
0 96 moveto (4096 ) show
0 84 moveto (4097 ) show
0 72 moveto (4098 ) show
0 60 moveto (4099 ) show
0 24 moveto (Sheet 40) show
grestore
restore
showpage
%%Page: 50 50
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/buf.h  Page 1) show
0 648 moveto (4100 struct buf {) show
0 636 moveto (4101   int flags;) show
0 624 moveto (4102   uint dev;) show
0 612 moveto (4103   uint blockno;) show
0 600 moveto (4104   struct buf *prev; // LRU cache list) show
0 588 moveto (4105   struct buf *next;) show
0 576 moveto (4106   struct buf *qnext; // disk queue) show
0 564 moveto (4107   uchar data[BSIZE];) show
0 552 moveto (4108 };) show
0 540 moveto (4109 #define B_BUSY  0x1  // buffer is locked by some process) show
0 528 moveto (4110 #define B_VALID 0x2  // buffer has been read from disk) show
0 516 moveto (4111 #define B_DIRTY 0x4  // buffer needs to be written to disk) show
0 504 moveto (4112 ) show
0 492 moveto (4113 ) show
0 480 moveto (4114 ) show
0 468 moveto (4115 ) show
0 456 moveto (4116 ) show
0 444 moveto (4117 ) show
0 432 moveto (4118 ) show
0 420 moveto (4119 ) show
0 408 moveto (4120 ) show
0 396 moveto (4121 ) show
0 384 moveto (4122 ) show
0 372 moveto (4123 ) show
0 360 moveto (4124 ) show
0 348 moveto (4125 ) show
0 336 moveto (4126 ) show
0 324 moveto (4127 ) show
0 312 moveto (4128 ) show
0 300 moveto (4129 ) show
0 288 moveto (4130 ) show
0 276 moveto (4131 ) show
0 264 moveto (4132 ) show
0 252 moveto (4133 ) show
0 240 moveto (4134 ) show
0 228 moveto (4135 ) show
0 216 moveto (4136 ) show
0 204 moveto (4137 ) show
0 192 moveto (4138 ) show
0 180 moveto (4139 ) show
0 168 moveto (4140 ) show
0 156 moveto (4141 ) show
0 144 moveto (4142 ) show
0 132 moveto (4143 ) show
0 120 moveto (4144 ) show
0 108 moveto (4145 ) show
0 96 moveto (4146 ) show
0 84 moveto (4147 ) show
0 72 moveto (4148 ) show
0 60 moveto (4149 ) show
0 24 moveto (Sheet 41) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/fcntl.h  Page 1) show
0 648 moveto (4150 #define O_RDONLY  0x000) show
0 636 moveto (4151 #define O_WRONLY  0x001) show
0 624 moveto (4152 #define O_RDWR    0x002) show
0 612 moveto (4153 #define O_CREATE  0x200) show
0 600 moveto (4154 ) show
0 588 moveto (4155 ) show
0 576 moveto (4156 ) show
0 564 moveto (4157 ) show
0 552 moveto (4158 ) show
0 540 moveto (4159 ) show
0 528 moveto (4160 ) show
0 516 moveto (4161 ) show
0 504 moveto (4162 ) show
0 492 moveto (4163 ) show
0 480 moveto (4164 ) show
0 468 moveto (4165 ) show
0 456 moveto (4166 ) show
0 444 moveto (4167 ) show
0 432 moveto (4168 ) show
0 420 moveto (4169 ) show
0 408 moveto (4170 ) show
0 396 moveto (4171 ) show
0 384 moveto (4172 ) show
0 372 moveto (4173 ) show
0 360 moveto (4174 ) show
0 348 moveto (4175 ) show
0 336 moveto (4176 ) show
0 324 moveto (4177 ) show
0 312 moveto (4178 ) show
0 300 moveto (4179 ) show
0 288 moveto (4180 ) show
0 276 moveto (4181 ) show
0 264 moveto (4182 ) show
0 252 moveto (4183 ) show
0 240 moveto (4184 ) show
0 228 moveto (4185 ) show
0 216 moveto (4186 ) show
0 204 moveto (4187 ) show
0 192 moveto (4188 ) show
0 180 moveto (4189 ) show
0 168 moveto (4190 ) show
0 156 moveto (4191 ) show
0 144 moveto (4192 ) show
0 132 moveto (4193 ) show
0 120 moveto (4194 ) show
0 108 moveto (4195 ) show
0 96 moveto (4196 ) show
0 84 moveto (4197 ) show
0 72 moveto (4198 ) show
0 60 moveto (4199 ) show
0 24 moveto (Sheet 41) show
grestore
restore
showpage
%%Page: 51 51
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/stat.h  Page 1) show
0 648 moveto (4200 #define T_DIR  1   // Directory) show
0 636 moveto (4201 #define T_FILE 2   // File) show
0 624 moveto (4202 #define T_DEV  3   // Device) show
0 612 moveto (4203 ) show
0 600 moveto (4204 struct stat {) show
0 588 moveto (4205   short type;  // Type of file) show
0 576 moveto (4206   int dev;     // File system's disk device) show
0 564 moveto (4207   uint ino;    // Inode number) show
0 552 moveto (4208   short nlink; // Number of links to file) show
0 540 moveto (4209   uint size;   // Size of file in bytes) show
0 528 moveto (4210 };) show
0 516 moveto (4211 ) show
0 504 moveto (4212 ) show
0 492 moveto (4213 ) show
0 480 moveto (4214 ) show
0 468 moveto (4215 ) show
0 456 moveto (4216 ) show
0 444 moveto (4217 ) show
0 432 moveto (4218 ) show
0 420 moveto (4219 ) show
0 408 moveto (4220 ) show
0 396 moveto (4221 ) show
0 384 moveto (4222 ) show
0 372 moveto (4223 ) show
0 360 moveto (4224 ) show
0 348 moveto (4225 ) show
0 336 moveto (4226 ) show
0 324 moveto (4227 ) show
0 312 moveto (4228 ) show
0 300 moveto (4229 ) show
0 288 moveto (4230 ) show
0 276 moveto (4231 ) show
0 264 moveto (4232 ) show
0 252 moveto (4233 ) show
0 240 moveto (4234 ) show
0 228 moveto (4235 ) show
0 216 moveto (4236 ) show
0 204 moveto (4237 ) show
0 192 moveto (4238 ) show
0 180 moveto (4239 ) show
0 168 moveto (4240 ) show
0 156 moveto (4241 ) show
0 144 moveto (4242 ) show
0 132 moveto (4243 ) show
0 120 moveto (4244 ) show
0 108 moveto (4245 ) show
0 96 moveto (4246 ) show
0 84 moveto (4247 ) show
0 72 moveto (4248 ) show
0 60 moveto (4249 ) show
0 24 moveto (Sheet 42) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/fs.h  Page 1) show
0 648 moveto (4250 // On-disk file system format.) show
0 636 moveto (4251 // Both the kernel and user programs use this header file.) show
0 624 moveto (4252 ) show
0 612 moveto (4253 ) show
0 600 moveto (4254 #define ROOTINO 1  // root i-number) show
0 588 moveto (4255 #define BSIZE 512  // block size) show
0 576 moveto (4256 ) show
0 564 moveto (4257 // Disk layout:) show
0 552 moveto (4258 // [ boot block | super block | log | inode blocks | free bit map | data blocks ]) show
0 540 moveto (4259 //) show
0 528 moveto (4260 // mkfs computes the super block and builds an initial file system. The super describes) show
0 516 moveto (4261 // the disk layout:) show
0 504 moveto (4262 struct superblock {) show
0 492 moveto (4263   uint size;         // Size of file system image \(blocks\)) show
0 480 moveto (4264   uint nblocks;      // Number of data blocks) show
0 468 moveto (4265   uint ninodes;      // Number of inodes.) show
0 456 moveto (4266   uint nlog;         // Number of log blocks) show
0 444 moveto (4267   uint logstart;     // Block number of first log block) show
0 432 moveto (4268   uint inodestart;   // Block number of first inode block) show
0 420 moveto (4269   uint bmapstart;    // Block number of first free map block) show
0 408 moveto (4270 };) show
0 396 moveto (4271 ) show
0 384 moveto (4272 #define NDIRECT 12) show
0 372 moveto (4273 #define NINDIRECT \(BSIZE / sizeof\(uint\)\)) show
0 360 moveto (4274 #define MAXFILE \(NDIRECT + NINDIRECT\)) show
0 348 moveto (4275 ) show
0 336 moveto (4276 // On-disk inode structure) show
0 324 moveto (4277 struct dinode {) show
0 312 moveto (4278   short type;           // File type) show
0 300 moveto (4279   short major;          // Major device number \(T_DEV only\)) show
0 288 moveto (4280   short minor;          // Minor device number \(T_DEV only\)) show
0 276 moveto (4281   short nlink;          // Number of links to inode in file system) show
0 264 moveto (4282   uint size;            // Size of file \(bytes\)) show
0 252 moveto (4283   uint addrs[NDIRECT+1];   // Data block addresses) show
0 240 moveto (4284 };) show
0 228 moveto (4285 ) show
0 216 moveto (4286 ) show
0 204 moveto (4287 ) show
0 192 moveto (4288 ) show
0 180 moveto (4289 ) show
0 168 moveto (4290 ) show
0 156 moveto (4291 ) show
0 144 moveto (4292 ) show
0 132 moveto (4293 ) show
0 120 moveto (4294 ) show
0 108 moveto (4295 ) show
0 96 moveto (4296 ) show
0 84 moveto (4297 ) show
0 72 moveto (4298 ) show
0 60 moveto (4299 ) show
0 24 moveto (Sheet 42) show
grestore
restore
showpage
%%Page: 52 52
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/fs.h  Page 2) show
0 648 moveto (4300 // Inodes per block.) show
0 636 moveto (4301 #define IPB           \(BSIZE / sizeof\(struct dinode\)\)) show
0 624 moveto (4302 ) show
0 612 moveto (4303 // Block containing inode i) show
0 600 moveto (4304 #define IBLOCK\(i, sb\)     \(\(i\) / IPB + sb.inodestart\)) show
0 588 moveto (4305 ) show
0 576 moveto (4306 // Bitmap bits per block) show
0 564 moveto (4307 #define BPB           \(BSIZE*8\)) show
0 552 moveto (4308 ) show
0 540 moveto (4309 // Block of free map containing bit for block b) show
0 528 moveto (4310 #define BBLOCK\(b, sb\) \(b/BPB + sb.bmapstart\)) show
0 516 moveto (4311 ) show
0 504 moveto (4312 // Directory is a file containing a sequence of dirent structures.) show
0 492 moveto (4313 #define DIRSIZ 14) show
0 480 moveto (4314 ) show
0 468 moveto (4315 struct dirent {) show
0 456 moveto (4316   ushort inum;) show
0 444 moveto (4317   char name[DIRSIZ];) show
0 432 moveto (4318 };) show
0 420 moveto (4319 ) show
0 408 moveto (4320 ) show
0 396 moveto (4321 ) show
0 384 moveto (4322 ) show
0 372 moveto (4323 ) show
0 360 moveto (4324 ) show
0 348 moveto (4325 ) show
0 336 moveto (4326 ) show
0 324 moveto (4327 ) show
0 312 moveto (4328 ) show
0 300 moveto (4329 ) show
0 288 moveto (4330 ) show
0 276 moveto (4331 ) show
0 264 moveto (4332 ) show
0 252 moveto (4333 ) show
0 240 moveto (4334 ) show
0 228 moveto (4335 ) show
0 216 moveto (4336 ) show
0 204 moveto (4337 ) show
0 192 moveto (4338 ) show
0 180 moveto (4339 ) show
0 168 moveto (4340 ) show
0 156 moveto (4341 ) show
0 144 moveto (4342 ) show
0 132 moveto (4343 ) show
0 120 moveto (4344 ) show
0 108 moveto (4345 ) show
0 96 moveto (4346 ) show
0 84 moveto (4347 ) show
0 72 moveto (4348 ) show
0 60 moveto (4349 ) show
0 24 moveto (Sheet 43) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/file.h  Page 1) show
0 648 moveto (4350 struct file {) show
0 636 moveto (4351   enum { FD_NONE, FD_PIPE, FD_INODE } type;) show
0 624 moveto (4352   int ref; // reference count) show
0 612 moveto (4353   char readable;) show
0 600 moveto (4354   char writable;) show
0 588 moveto (4355   struct pipe *pipe;) show
0 576 moveto (4356   struct inode *ip;) show
0 564 moveto (4357   uint off;) show
0 552 moveto (4358 };) show
0 540 moveto (4359 ) show
0 528 moveto (4360 ) show
0 516 moveto (4361 // in-memory copy of an inode) show
0 504 moveto (4362 struct inode {) show
0 492 moveto (4363   uint dev;           // Device number) show
0 480 moveto (4364   uint inum;          // Inode number) show
0 468 moveto (4365   int ref;            // Reference count) show
0 456 moveto (4366   int flags;          // I_BUSY, I_VALID) show
0 444 moveto (4367 ) show
0 432 moveto (4368   short type;         // copy of disk inode) show
0 420 moveto (4369   short major;) show
0 408 moveto (4370   short minor;) show
0 396 moveto (4371   short nlink;) show
0 384 moveto (4372   uint size;) show
0 372 moveto (4373   uint addrs[NDIRECT+1];) show
0 360 moveto (4374 };) show
0 348 moveto (4375 #define I_BUSY 0x1) show
0 336 moveto (4376 #define I_VALID 0x2) show
0 324 moveto (4377 ) show
0 312 moveto (4378 // table mapping major device number to) show
0 300 moveto (4379 // device functions) show
0 288 moveto (4380 struct devsw {) show
0 276 moveto (4381   int \(*read\)\(struct inode*, char*, int\);) show
0 264 moveto (4382   int \(*write\)\(struct inode*, char*, int\);) show
0 252 moveto (4383 };) show
0 240 moveto (4384 ) show
0 228 moveto (4385 extern struct devsw devsw[];) show
0 216 moveto (4386 ) show
0 204 moveto (4387 #define CONSOLE 1) show
0 192 moveto (4388 ) show
0 180 moveto (4389 // Blank page.) show
0 168 moveto (4390 ) show
0 156 moveto (4391 ) show
0 144 moveto (4392 ) show
0 132 moveto (4393 ) show
0 120 moveto (4394 ) show
0 108 moveto (4395 ) show
0 96 moveto (4396 ) show
0 84 moveto (4397 ) show
0 72 moveto (4398 ) show
0 60 moveto (4399 ) show
0 24 moveto (Sheet 43) show
grestore
restore
showpage
%%Page: 53 53
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/ide.c  Page 1) show
0 648 moveto (4400 // Simple PIO-based \(non-DMA\) IDE driver code.) show
0 636 moveto (4401 ) show
0 624 moveto (4402 #include "types.h") show
0 612 moveto (4403 #include "defs.h") show
0 600 moveto (4404 #include "param.h") show
0 588 moveto (4405 #include "memlayout.h") show
0 576 moveto (4406 #include "mmu.h") show
0 564 moveto (4407 #include "proc.h") show
0 552 moveto (4408 #include "x86.h") show
0 540 moveto (4409 #include "traps.h") show
0 528 moveto (4410 #include "spinlock.h") show
0 516 moveto (4411 #include "fs.h") show
0 504 moveto (4412 #include "buf.h") show
0 492 moveto (4413 ) show
0 480 moveto (4414 #define SECTOR_SIZE   512) show
0 468 moveto (4415 #define IDE_BSY       0x80) show
0 456 moveto (4416 #define IDE_DRDY      0x40) show
0 444 moveto (4417 #define IDE_DF        0x20) show
0 432 moveto (4418 #define IDE_ERR       0x01) show
0 420 moveto (4419 ) show
0 408 moveto (4420 #define IDE_CMD_READ  0x20) show
0 396 moveto (4421 #define IDE_CMD_WRITE 0x30) show
0 384 moveto (4422 ) show
0 372 moveto (4423 // idequeue points to the buf now being read/written to the disk.) show
0 360 moveto (4424 // idequeue->qnext points to the next buf to be processed.) show
0 348 moveto (4425 // You must hold idelock while manipulating queue.) show
0 336 moveto (4426 ) show
0 324 moveto (4427 static struct spinlock idelock;) show
0 312 moveto (4428 static struct buf *idequeue;) show
0 300 moveto (4429 ) show
0 288 moveto (4430 static int havedisk1;) show
0 276 moveto (4431 static void idestart\(struct buf*\);) show
0 264 moveto (4432 ) show
0 252 moveto (4433 // Wait for IDE disk to become ready.) show
0 240 moveto (4434 static int) show
0 228 moveto (4435 idewait\(int checkerr\)) show
0 216 moveto (4436 {) show
0 204 moveto (4437   int r;) show
0 192 moveto (4438 ) show
0 180 moveto (4439   while\(\(\(r = inb\(0x1f7\)\) & \(IDE_BSY|IDE_DRDY\)\) != IDE_DRDY\)) show
0 168 moveto (4440     ;) show
0 156 moveto (4441   if\(checkerr && \(r & \(IDE_DF|IDE_ERR\)\) != 0\)) show
0 144 moveto (4442     return -1;) show
0 132 moveto (4443   return 0;) show
0 120 moveto (4444 }) show
0 108 moveto (4445 ) show
0 96 moveto (4446 ) show
0 84 moveto (4447 ) show
0 72 moveto (4448 ) show
0 60 moveto (4449 ) show
0 24 moveto (Sheet 44) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/ide.c  Page 2) show
0 648 moveto (4450 void) show
0 636 moveto (4451 ideinit\(void\)) show
0 624 moveto (4452 {) show
0 612 moveto (4453   int i;) show
0 600 moveto (4454 ) show
0 588 moveto (4455   initlock\(&idelock, "ide"\);) show
0 576 moveto (4456   picenable\(IRQ_IDE\);) show
0 564 moveto (4457   ioapicenable\(IRQ_IDE, ncpu - 1\);) show
0 552 moveto (4458   idewait\(0\);) show
0 540 moveto (4459 ) show
0 528 moveto (4460   // Check if disk 1 is present) show
0 516 moveto (4461   outb\(0x1f6, 0xe0 | \(1<<4\)\);) show
0 504 moveto (4462   for\(i=0; i<1000; i++\){) show
0 492 moveto (4463     if\(inb\(0x1f7\) != 0\){) show
0 480 moveto (4464       havedisk1 = 1;) show
0 468 moveto (4465       break;) show
0 456 moveto (4466     }) show
0 444 moveto (4467   }) show
0 432 moveto (4468 ) show
0 420 moveto (4469   // Switch back to disk 0.) show
0 408 moveto (4470   outb\(0x1f6, 0xe0 | \(0<<4\)\);) show
0 396 moveto (4471 }) show
0 384 moveto (4472 ) show
0 372 moveto (4473 // Start the request for b.  Caller must hold idelock.) show
0 360 moveto (4474 static void) show
0 348 moveto (4475 idestart\(struct buf *b\)) show
0 336 moveto (4476 {) show
0 324 moveto (4477   if\(b == 0\)) show
0 312 moveto (4478     panic\("idestart"\);) show
0 300 moveto (4479   if\(b->blockno >= FSSIZE\)) show
0 288 moveto (4480     panic\("incorrect blockno"\);) show
0 276 moveto (4481   int sector_per_block =  BSIZE/SECTOR_SIZE;) show
0 264 moveto (4482   int sector = b->blockno * sector_per_block;) show
0 252 moveto (4483 ) show
0 240 moveto (4484   if \(sector_per_block > 7\) panic\("idestart"\);) show
0 228 moveto (4485 ) show
0 216 moveto (4486   idewait\(0\);) show
0 204 moveto (4487   outb\(0x3f6, 0\);  // generate interrupt) show
0 192 moveto (4488   outb\(0x1f2, sector_per_block\);  // number of sectors) show
0 180 moveto (4489   outb\(0x1f3, sector & 0xff\);) show
0 168 moveto (4490   outb\(0x1f4, \(sector >> 8\) & 0xff\);) show
0 156 moveto (4491   outb\(0x1f5, \(sector >> 16\) & 0xff\);) show
0 144 moveto (4492   outb\(0x1f6, 0xe0 | \(\(b->dev&1\)<<4\) | \(\(sector>>24\)&0x0f\)\);) show
0 132 moveto (4493   if\(b->flags & B_DIRTY\){) show
0 120 moveto (4494     outb\(0x1f7, IDE_CMD_WRITE\);) show
0 108 moveto (4495     outsl\(0x1f0, b->data, BSIZE/4\);) show
0 96 moveto (4496   } else {) show
0 84 moveto (4497     outb\(0x1f7, IDE_CMD_READ\);) show
0 72 moveto (4498   }) show
0 60 moveto (4499 }) show
0 24 moveto (Sheet 44) show
grestore
restore
showpage
%%Page: 54 54
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/ide.c  Page 3) show
0 648 moveto (4500 // Interrupt handler.) show
0 636 moveto (4501 void) show
0 624 moveto (4502 ideintr\(void\)) show
0 612 moveto (4503 {) show
0 600 moveto (4504   struct buf *b;) show
0 588 moveto (4505 ) show
0 576 moveto (4506   // First queued buffer is the active request.) show
0 564 moveto (4507   acquire\(&idelock\);) show
0 552 moveto (4508   if\(\(b = idequeue\) == 0\){) show
0 540 moveto (4509     release\(&idelock\);) show
0 528 moveto (4510     // cprintf\("spurious IDE interrupt\\n"\);) show
0 516 moveto (4511     return;) show
0 504 moveto (4512   }) show
0 492 moveto (4513   idequeue = b->qnext;) show
0 480 moveto (4514 ) show
0 468 moveto (4515   // Read data if needed.) show
0 456 moveto (4516   if\(!\(b->flags & B_DIRTY\) && idewait\(1\) >= 0\)) show
0 444 moveto (4517     insl\(0x1f0, b->data, BSIZE/4\);) show
0 432 moveto (4518 ) show
0 420 moveto (4519   // Wake process waiting for this buf.) show
0 408 moveto (4520   b->flags |= B_VALID;) show
0 396 moveto (4521   b->flags &= ~B_DIRTY;) show
0 384 moveto (4522   wakeup\(b\);) show
0 372 moveto (4523 ) show
0 360 moveto (4524   // Start disk on next buf in queue.) show
0 348 moveto (4525   if\(idequeue != 0\)) show
0 336 moveto (4526     idestart\(idequeue\);) show
0 324 moveto (4527 ) show
0 312 moveto (4528   release\(&idelock\);) show
0 300 moveto (4529 }) show
0 288 moveto (4530 ) show
0 276 moveto (4531 // Sync buf with disk.) show
0 264 moveto (4532 // If B_DIRTY is set, write buf to disk, clear B_DIRTY, set B_VALID.) show
0 252 moveto (4533 // Else if B_VALID is not set, read buf from disk, set B_VALID.) show
0 240 moveto (4534 void) show
0 228 moveto (4535 iderw\(struct buf *b\)) show
0 216 moveto (4536 {) show
0 204 moveto (4537   struct buf **pp;) show
0 192 moveto (4538 ) show
0 180 moveto (4539   if\(!\(b->flags & B_BUSY\)\)) show
0 168 moveto (4540     panic\("iderw: buf not busy"\);) show
0 156 moveto (4541   if\(\(b->flags & \(B_VALID|B_DIRTY\)\) == B_VALID\)) show
0 144 moveto (4542     panic\("iderw: nothing to do"\);) show
0 132 moveto (4543   if\(b->dev != 0 && !havedisk1\)) show
0 120 moveto (4544     panic\("iderw: ide disk 1 not present"\);) show
0 108 moveto (4545 ) show
0 96 moveto (4546   acquire\(&idelock\);  ) show
0 84 moveto (4547 ) show
0 72 moveto (4548 ) show
0 60 moveto (4549 ) show
0 24 moveto (Sheet 45) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/ide.c  Page 4) show
0 648 moveto (4550   // Append b to idequeue.) show
0 636 moveto (4551   b->qnext = 0;) show
0 624 moveto (4552   for\(pp=&idequeue; *pp; pp=&\(*pp\)->qnext\)  ) show
0 612 moveto (4553     ;) show
0 600 moveto (4554   *pp = b;) show
0 588 moveto (4555 ) show
0 576 moveto (4556   // Start disk if necessary.) show
0 564 moveto (4557   if\(idequeue == b\)) show
0 552 moveto (4558     idestart\(b\);) show
0 540 moveto (4559 ) show
0 528 moveto (4560   // Wait for request to finish.) show
0 516 moveto (4561   while\(\(b->flags & \(B_VALID|B_DIRTY\)\) != B_VALID\){) show
0 504 moveto (4562     sleep\(b, &idelock\);) show
0 492 moveto (4563   }) show
0 480 moveto (4564 ) show
0 468 moveto (4565   release\(&idelock\);) show
0 456 moveto (4566 }) show
0 444 moveto (4567 ) show
0 432 moveto (4568 ) show
0 420 moveto (4569 ) show
0 408 moveto (4570 ) show
0 396 moveto (4571 ) show
0 384 moveto (4572 ) show
0 372 moveto (4573 ) show
0 360 moveto (4574 ) show
0 348 moveto (4575 ) show
0 336 moveto (4576 ) show
0 324 moveto (4577 ) show
0 312 moveto (4578 ) show
0 300 moveto (4579 ) show
0 288 moveto (4580 ) show
0 276 moveto (4581 ) show
0 264 moveto (4582 ) show
0 252 moveto (4583 ) show
0 240 moveto (4584 ) show
0 228 moveto (4585 ) show
0 216 moveto (4586 ) show
0 204 moveto (4587 ) show
0 192 moveto (4588 ) show
0 180 moveto (4589 ) show
0 168 moveto (4590 ) show
0 156 moveto (4591 ) show
0 144 moveto (4592 ) show
0 132 moveto (4593 ) show
0 120 moveto (4594 ) show
0 108 moveto (4595 ) show
0 96 moveto (4596 ) show
0 84 moveto (4597 ) show
0 72 moveto (4598 ) show
0 60 moveto (4599 ) show
0 24 moveto (Sheet 45) show
grestore
restore
showpage
%%Page: 55 55
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/bio.c  Page 1) show
0 648 moveto (4600 // Buffer cache.) show
0 636 moveto (4601 //) show
0 624 moveto (4602 // The buffer cache is a linked list of buf structures holding) show
0 612 moveto (4603 // cached copies of disk block contents.  Caching disk blocks) show
0 600 moveto (4604 // in memory reduces the number of disk reads and also provides) show
0 588 moveto (4605 // a synchronization point for disk blocks used by multiple processes.) show
0 576 moveto (4606 //) show
0 564 moveto (4607 // Interface:) show
0 552 moveto (4608 // * To get a buffer for a particular disk block, call bread.) show
0 540 moveto (4609 // * After changing buffer data, call bwrite to write it to disk.) show
0 528 moveto (4610 // * When done with the buffer, call brelse.) show
0 516 moveto (4611 // * Do not use the buffer after calling brelse.) show
0 504 moveto (4612 // * Only one process at a time can use a buffer,) show
0 492 moveto (4613 //     so do not keep them longer than necessary.) show
0 480 moveto (4614 //) show
0 468 moveto (4615 // The implementation uses three state flags internally:) show
0 456 moveto (4616 // * B_BUSY: the block has been returned from bread) show
0 444 moveto (4617 //     and has not been passed back to brelse.) show
0 432 moveto (4618 // * B_VALID: the buffer data has been read from the disk.) show
0 420 moveto (4619 // * B_DIRTY: the buffer data has been modified) show
0 408 moveto (4620 //     and needs to be written to disk.) show
0 396 moveto (4621 ) show
0 384 moveto (4622 #include "types.h") show
0 372 moveto (4623 #include "defs.h") show
0 360 moveto (4624 #include "param.h") show
0 348 moveto (4625 #include "spinlock.h") show
0 336 moveto (4626 #include "fs.h") show
0 324 moveto (4627 #include "buf.h") show
0 312 moveto (4628 ) show
0 300 moveto (4629 struct {) show
0 288 moveto (4630   struct spinlock lock;) show
0 276 moveto (4631   struct buf buf[NBUF];) show
0 264 moveto (4632 ) show
0 252 moveto (4633   // Linked list of all buffers, through prev/next.) show
0 240 moveto (4634   // head.next is most recently used.) show
0 228 moveto (4635   struct buf head;) show
0 216 moveto (4636 } bcache;) show
0 204 moveto (4637 ) show
0 192 moveto (4638 void) show
0 180 moveto (4639 binit\(void\)) show
0 168 moveto (4640 {) show
0 156 moveto (4641   struct buf *b;) show
0 144 moveto (4642 ) show
0 132 moveto (4643   initlock\(&bcache.lock, "bcache"\);) show
0 120 moveto (4644 ) show
0 108 moveto (4645   // Create linked list of buffers) show
0 96 moveto (4646   bcache.head.prev = &bcache.head;) show
0 84 moveto (4647   bcache.head.next = &bcache.head;) show
0 72 moveto (4648   for\(b = bcache.buf; b < bcache.buf+NBUF; b++\){) show
0 60 moveto (4649     b->next = bcache.head.next;) show
0 24 moveto (Sheet 46) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/bio.c  Page 2) show
0 648 moveto (4650     b->prev = &bcache.head;) show
0 636 moveto (4651     b->dev = -1;) show
0 624 moveto (4652     bcache.head.next->prev = b;) show
0 612 moveto (4653     bcache.head.next = b;) show
0 600 moveto (4654   }) show
0 588 moveto (4655 }) show
0 576 moveto (4656 ) show
0 564 moveto (4657 // Look through buffer cache for block on device dev.) show
0 552 moveto (4658 // If not found, allocate a buffer.) show
0 540 moveto (4659 // In either case, return B_BUSY buffer.) show
0 528 moveto (4660 static struct buf*) show
0 516 moveto (4661 bget\(uint dev, uint blockno\)) show
0 504 moveto (4662 {) show
0 492 moveto (4663   struct buf *b;) show
0 480 moveto (4664 ) show
0 468 moveto (4665   acquire\(&bcache.lock\);) show
0 456 moveto (4666 ) show
0 444 moveto (4667  loop:) show
0 432 moveto (4668   // Is the block already cached?) show
0 420 moveto (4669   for\(b = bcache.head.next; b != &bcache.head; b = b->next\){) show
0 408 moveto (4670     if\(b->dev == dev && b->blockno == blockno\){) show
0 396 moveto (4671       if\(!\(b->flags & B_BUSY\)\){) show
0 384 moveto (4672         b->flags |= B_BUSY;) show
0 372 moveto (4673         release\(&bcache.lock\);) show
0 360 moveto (4674         return b;) show
0 348 moveto (4675       }) show
0 336 moveto (4676       sleep\(b, &bcache.lock\);) show
0 324 moveto (4677       goto loop;) show
0 312 moveto (4678     }) show
0 300 moveto (4679   }) show
0 288 moveto (4680 ) show
0 276 moveto (4681   // Not cached; recycle some non-busy and clean buffer.) show
0 264 moveto (4682   // "clean" because B_DIRTY and !B_BUSY means log.c) show
0 252 moveto (4683   // hasn't yet committed the changes to the buffer.) show
0 240 moveto (4684   for\(b = bcache.head.prev; b != &bcache.head; b = b->prev\){) show
0 228 moveto (4685     if\(\(b->flags & B_BUSY\) == 0 && \(b->flags & B_DIRTY\) == 0\){) show
0 216 moveto (4686       b->dev = dev;) show
0 204 moveto (4687       b->blockno = blockno;) show
0 192 moveto (4688       b->flags = B_BUSY;) show
0 180 moveto (4689       release\(&bcache.lock\);) show
0 168 moveto (4690       return b;) show
0 156 moveto (4691     }) show
0 144 moveto (4692   }) show
0 132 moveto (4693   panic\("bget: no buffers"\);) show
0 120 moveto (4694 }) show
0 108 moveto (4695 ) show
0 96 moveto (4696 ) show
0 84 moveto (4697 ) show
0 72 moveto (4698 ) show
0 60 moveto (4699 ) show
0 24 moveto (Sheet 46) show
grestore
restore
showpage
%%Page: 56 56
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/bio.c  Page 3) show
0 648 moveto (4700 // Return a B_BUSY buf with the contents of the indicated block.) show
0 636 moveto (4701 struct buf*) show
0 624 moveto (4702 bread\(uint dev, uint blockno\)) show
0 612 moveto (4703 {) show
0 600 moveto (4704   struct buf *b;) show
0 588 moveto (4705 ) show
0 576 moveto (4706   b = bget\(dev, blockno\);) show
0 564 moveto (4707   if\(!\(b->flags & B_VALID\)\) {) show
0 552 moveto (4708     iderw\(b\);) show
0 540 moveto (4709   }) show
0 528 moveto (4710   return b;) show
0 516 moveto (4711 }) show
0 504 moveto (4712 ) show
0 492 moveto (4713 // Write b's contents to disk.  Must be B_BUSY.) show
0 480 moveto (4714 void) show
0 468 moveto (4715 bwrite\(struct buf *b\)) show
0 456 moveto (4716 {) show
0 444 moveto (4717   if\(\(b->flags & B_BUSY\) == 0\)) show
0 432 moveto (4718     panic\("bwrite"\);) show
0 420 moveto (4719   b->flags |= B_DIRTY;) show
0 408 moveto (4720   iderw\(b\);) show
0 396 moveto (4721 }) show
0 384 moveto (4722 ) show
0 372 moveto (4723 // Release a B_BUSY buffer.) show
0 360 moveto (4724 // Move to the head of the MRU list.) show
0 348 moveto (4725 void) show
0 336 moveto (4726 brelse\(struct buf *b\)) show
0 324 moveto (4727 {) show
0 312 moveto (4728   if\(\(b->flags & B_BUSY\) == 0\)) show
0 300 moveto (4729     panic\("brelse"\);) show
0 288 moveto (4730 ) show
0 276 moveto (4731   acquire\(&bcache.lock\);) show
0 264 moveto (4732 ) show
0 252 moveto (4733   b->next->prev = b->prev;) show
0 240 moveto (4734   b->prev->next = b->next;) show
0 228 moveto (4735   b->next = bcache.head.next;) show
0 216 moveto (4736   b->prev = &bcache.head;) show
0 204 moveto (4737   bcache.head.next->prev = b;) show
0 192 moveto (4738   bcache.head.next = b;) show
0 180 moveto (4739 ) show
0 168 moveto (4740   b->flags &= ~B_BUSY;) show
0 156 moveto (4741   wakeup\(b\);) show
0 144 moveto (4742 ) show
0 132 moveto (4743   release\(&bcache.lock\);) show
0 120 moveto (4744 }) show
0 108 moveto (4745 // Blank page.) show
0 96 moveto (4746 ) show
0 84 moveto (4747 ) show
0 72 moveto (4748 ) show
0 60 moveto (4749 ) show
0 24 moveto (Sheet 47) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/log.c  Page 1) show
0 648 moveto (4750 #include "types.h") show
0 636 moveto (4751 #include "defs.h") show
0 624 moveto (4752 #include "param.h") show
0 612 moveto (4753 #include "spinlock.h") show
0 600 moveto (4754 #include "fs.h") show
0 588 moveto (4755 #include "buf.h") show
0 576 moveto (4756 ) show
0 564 moveto (4757 // Simple logging that allows concurrent FS system calls.) show
0 552 moveto (4758 //) show
0 540 moveto (4759 // A log transaction contains the updates of multiple FS system) show
0 528 moveto (4760 // calls. The logging system only commits when there are) show
0 516 moveto (4761 // no FS system calls active. Thus there is never) show
0 504 moveto (4762 // any reasoning required about whether a commit might) show
0 492 moveto (4763 // write an uncommitted system call's updates to disk.) show
0 480 moveto (4764 //) show
0 468 moveto (4765 // A system call should call begin_op\(\)/end_op\(\) to mark) show
0 456 moveto (4766 // its start and end. Usually begin_op\(\) just increments) show
0 444 moveto (4767 // the count of in-progress FS system calls and returns.) show
0 432 moveto (4768 // But if it thinks the log is close to running out, it) show
0 420 moveto (4769 // sleeps until the last outstanding end_op\(\) commits.) show
0 408 moveto (4770 //) show
0 396 moveto (4771 // The log is a physical re-do log containing disk blocks.) show
0 384 moveto (4772 // The on-disk log format:) show
0 372 moveto (4773 //   header block, containing block #s for block A, B, C, ...) show
0 360 moveto (4774 //   block A) show
0 348 moveto (4775 //   block B) show
0 336 moveto (4776 //   block C) show
0 324 moveto (4777 //   ...) show
0 312 moveto (4778 // Log appends are synchronous.) show
0 300 moveto (4779 ) show
0 288 moveto (4780 // Contents of the header block, used for both the on-disk header block) show
0 276 moveto (4781 // and to keep track in memory of logged block# before commit.) show
0 264 moveto (4782 struct logheader {) show
0 252 moveto (4783   int n;) show
0 240 moveto (4784   int block[LOGSIZE];) show
0 228 moveto (4785 };) show
0 216 moveto (4786 ) show
0 204 moveto (4787 struct log {) show
0 192 moveto (4788   struct spinlock lock;) show
0 180 moveto (4789   int start;) show
0 168 moveto (4790   int size;) show
0 156 moveto (4791   int outstanding; // how many FS sys calls are executing.) show
0 144 moveto (4792   int committing;  // in commit\(\), please wait.) show
0 132 moveto (4793   int dev;) show
0 120 moveto (4794   struct logheader lh;) show
0 108 moveto (4795 };) show
0 96 moveto (4796 ) show
0 84 moveto (4797 ) show
0 72 moveto (4798 ) show
0 60 moveto (4799 ) show
0 24 moveto (Sheet 47) show
grestore
restore
showpage
%%Page: 57 57
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/log.c  Page 2) show
0 648 moveto (4800 struct log log;) show
0 636 moveto (4801 ) show
0 624 moveto (4802 static void recover_from_log\(void\);) show
0 612 moveto (4803 static void commit\(\);) show
0 600 moveto (4804 ) show
0 588 moveto (4805 void) show
0 576 moveto (4806 initlog\(int dev\)) show
0 564 moveto (4807 {) show
0 552 moveto (4808   if \(sizeof\(struct logheader\) >= BSIZE\)) show
0 540 moveto (4809     panic\("initlog: too big logheader"\);) show
0 528 moveto (4810 ) show
0 516 moveto (4811   struct superblock sb;) show
0 504 moveto (4812   initlock\(&log.lock, "log"\);) show
0 492 moveto (4813   readsb\(dev, &sb\);) show
0 480 moveto (4814   log.start = sb.logstart;) show
0 468 moveto (4815   log.size = sb.nlog;) show
0 456 moveto (4816   log.dev = dev;) show
0 444 moveto (4817   recover_from_log\(\);) show
0 432 moveto (4818 }) show
0 420 moveto (4819 ) show
0 408 moveto (4820 // Copy committed blocks from log to their home location) show
0 396 moveto (4821 static void) show
0 384 moveto (4822 install_trans\(void\)) show
0 372 moveto (4823 {) show
0 360 moveto (4824   int tail;) show
0 348 moveto (4825 ) show
0 336 moveto (4826   for \(tail = 0; tail < log.lh.n; tail++\) {) show
0 324 moveto (4827     struct buf *lbuf = bread\(log.dev, log.start+tail+1\); // read log block) show
0 312 moveto (4828     struct buf *dbuf = bread\(log.dev, log.lh.block[tail]\); // read dst) show
0 300 moveto (4829     memmove\(dbuf->data, lbuf->data, BSIZE\);  // copy block to dst) show
0 288 moveto (4830     bwrite\(dbuf\);  // write dst to disk) show
0 276 moveto (4831     brelse\(lbuf\);) show
0 264 moveto (4832     brelse\(dbuf\);) show
0 252 moveto (4833   }) show
0 240 moveto (4834 }) show
0 228 moveto (4835 ) show
0 216 moveto (4836 // Read the log header from disk into the in-memory log header) show
0 204 moveto (4837 static void) show
0 192 moveto (4838 read_head\(void\)) show
0 180 moveto (4839 {) show
0 168 moveto (4840   struct buf *buf = bread\(log.dev, log.start\);) show
0 156 moveto (4841   struct logheader *lh = \(struct logheader *\) \(buf->data\);) show
0 144 moveto (4842   int i;) show
0 132 moveto (4843   log.lh.n = lh->n;) show
0 120 moveto (4844   for \(i = 0; i < log.lh.n; i++\) {) show
0 108 moveto (4845     log.lh.block[i] = lh->block[i];) show
0 96 moveto (4846   }) show
0 84 moveto (4847   brelse\(buf\);) show
0 72 moveto (4848 }) show
0 60 moveto (4849 ) show
0 24 moveto (Sheet 48) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/log.c  Page 3) show
0 648 moveto (4850 // Write in-memory log header to disk.) show
0 636 moveto (4851 // This is the true point at which the) show
0 624 moveto (4852 // current transaction commits.) show
0 612 moveto (4853 static void) show
0 600 moveto (4854 write_head\(void\)) show
0 588 moveto (4855 {) show
0 576 moveto (4856   struct buf *buf = bread\(log.dev, log.start\);) show
0 564 moveto (4857   struct logheader *hb = \(struct logheader *\) \(buf->data\);) show
0 552 moveto (4858   int i;) show
0 540 moveto (4859   hb->n = log.lh.n;) show
0 528 moveto (4860   for \(i = 0; i < log.lh.n; i++\) {) show
0 516 moveto (4861     hb->block[i] = log.lh.block[i];) show
0 504 moveto (4862   }) show
0 492 moveto (4863   bwrite\(buf\);) show
0 480 moveto (4864   brelse\(buf\);) show
0 468 moveto (4865 }) show
0 456 moveto (4866 ) show
0 444 moveto (4867 static void) show
0 432 moveto (4868 recover_from_log\(void\)) show
0 420 moveto (4869 {) show
0 408 moveto (4870   read_head\(\);) show
0 396 moveto (4871   install_trans\(\); // if committed, copy from log to disk) show
0 384 moveto (4872   log.lh.n = 0;) show
0 372 moveto (4873   write_head\(\); // clear the log) show
0 360 moveto (4874 }) show
0 348 moveto (4875 ) show
0 336 moveto (4876 // called at the start of each FS system call.) show
0 324 moveto (4877 void) show
0 312 moveto (4878 begin_op\(void\)) show
0 300 moveto (4879 {) show
0 288 moveto (4880   acquire\(&log.lock\);) show
0 276 moveto (4881   while\(1\){) show
0 264 moveto (4882     if\(log.committing\){) show
0 252 moveto (4883       sleep\(&log, &log.lock\);) show
0 240 moveto (4884     } else if\(log.lh.n + \(log.outstanding+1\)*MAXOPBLOCKS > LOGSIZE\){) show
0 228 moveto (4885       // this op might exhaust log space; wait for commit.) show
0 216 moveto (4886       sleep\(&log, &log.lock\);) show
0 204 moveto (4887     } else {) show
0 192 moveto (4888       log.outstanding += 1;) show
0 180 moveto (4889       release\(&log.lock\);) show
0 168 moveto (4890       break;) show
0 156 moveto (4891     }) show
0 144 moveto (4892   }) show
0 132 moveto (4893 }) show
0 120 moveto (4894 ) show
0 108 moveto (4895 ) show
0 96 moveto (4896 ) show
0 84 moveto (4897 ) show
0 72 moveto (4898 ) show
0 60 moveto (4899 ) show
0 24 moveto (Sheet 48) show
grestore
restore
showpage
%%Page: 58 58
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/log.c  Page 4) show
0 648 moveto (4900 // called at the end of each FS system call.) show
0 636 moveto (4901 // commits if this was the last outstanding operation.) show
0 624 moveto (4902 void) show
0 612 moveto (4903 end_op\(void\)) show
0 600 moveto (4904 {) show
0 588 moveto (4905   int do_commit = 0;) show
0 576 moveto (4906 ) show
0 564 moveto (4907   acquire\(&log.lock\);) show
0 552 moveto (4908   log.outstanding -= 1;) show
0 540 moveto (4909   if\(log.committing\)) show
0 528 moveto (4910     panic\("log.committing"\);) show
0 516 moveto (4911   if\(log.outstanding == 0\){) show
0 504 moveto (4912     do_commit = 1;) show
0 492 moveto (4913     log.committing = 1;) show
0 480 moveto (4914   } else {) show
0 468 moveto (4915     // begin_op\(\) may be waiting for log space.) show
0 456 moveto (4916     wakeup\(&log\);) show
0 444 moveto (4917   }) show
0 432 moveto (4918   release\(&log.lock\);) show
0 420 moveto (4919 ) show
0 408 moveto (4920   if\(do_commit\){) show
0 396 moveto (4921     // call commit w/o holding locks, since not allowed) show
0 384 moveto (4922     // to sleep with locks.) show
0 372 moveto (4923     commit\(\);) show
0 360 moveto (4924     acquire\(&log.lock\);) show
0 348 moveto (4925     log.committing = 0;) show
0 336 moveto (4926     wakeup\(&log\);) show
0 324 moveto (4927     release\(&log.lock\);) show
0 312 moveto (4928   }) show
0 300 moveto (4929 }) show
0 288 moveto (4930 ) show
0 276 moveto (4931 // Copy modified blocks from cache to log.) show
0 264 moveto (4932 static void) show
0 252 moveto (4933 write_log\(void\)) show
0 240 moveto (4934 {) show
0 228 moveto (4935   int tail;) show
0 216 moveto (4936 ) show
0 204 moveto (4937   for \(tail = 0; tail < log.lh.n; tail++\) {) show
0 192 moveto (4938     struct buf *to = bread\(log.dev, log.start+tail+1\); // log block) show
0 180 moveto (4939     struct buf *from = bread\(log.dev, log.lh.block[tail]\); // cache block) show
0 168 moveto (4940     memmove\(to->data, from->data, BSIZE\);) show
0 156 moveto (4941     bwrite\(to\);  // write the log) show
0 144 moveto (4942     brelse\(from\);) show
0 132 moveto (4943     brelse\(to\);) show
0 120 moveto (4944   }) show
0 108 moveto (4945 }) show
0 96 moveto (4946 ) show
0 84 moveto (4947 ) show
0 72 moveto (4948 ) show
0 60 moveto (4949 ) show
0 24 moveto (Sheet 49) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/log.c  Page 5) show
0 648 moveto (4950 static void) show
0 636 moveto (4951 commit\(\)) show
0 624 moveto (4952 {) show
0 612 moveto (4953   if \(log.lh.n > 0\) {) show
0 600 moveto (4954     write_log\(\);     // Write modified blocks from cache to log) show
0 588 moveto (4955     write_head\(\);    // Write header to disk -- the real commit) show
0 576 moveto (4956     install_trans\(\); // Now install writes to home locations) show
0 564 moveto (4957     log.lh.n = 0;) show
0 552 moveto (4958     write_head\(\);    // Erase the transaction from the log) show
0 540 moveto (4959   }) show
0 528 moveto (4960 }) show
0 516 moveto (4961 ) show
0 504 moveto (4962 // Caller has modified b->data and is done with the buffer.) show
0 492 moveto (4963 // Record the block number and pin in the cache with B_DIRTY.) show
0 480 moveto (4964 // commit\(\)/write_log\(\) will do the disk write.) show
0 468 moveto (4965 //) show
0 456 moveto (4966 // log_write\(\) replaces bwrite\(\); a typical use is:) show
0 444 moveto (4967 //   bp = bread\(...\)) show
0 432 moveto (4968 //   modify bp->data[]) show
0 420 moveto (4969 //   log_write\(bp\)) show
0 408 moveto (4970 //   brelse\(bp\)) show
0 396 moveto (4971 void) show
0 384 moveto (4972 log_write\(struct buf *b\)) show
0 372 moveto (4973 {) show
0 360 moveto (4974   int i;) show
0 348 moveto (4975 ) show
0 336 moveto (4976   if \(log.lh.n >= LOGSIZE || log.lh.n >= log.size - 1\)) show
0 324 moveto (4977     panic\("too big a transaction"\);) show
0 312 moveto (4978   if \(log.outstanding < 1\)) show
0 300 moveto (4979     panic\("log_write outside of trans"\);) show
0 288 moveto (4980 ) show
0 276 moveto (4981   acquire\(&log.lock\);) show
0 264 moveto (4982   for \(i = 0; i < log.lh.n; i++\) {) show
0 252 moveto (4983     if \(log.lh.block[i] == b->blockno\)   // log absorbtion) show
0 240 moveto (4984       break;) show
0 228 moveto (4985   }) show
0 216 moveto (4986   log.lh.block[i] = b->blockno;) show
0 204 moveto (4987   if \(i == log.lh.n\)) show
0 192 moveto (4988     log.lh.n++;) show
0 180 moveto (4989   b->flags |= B_DIRTY; // prevent eviction) show
0 168 moveto (4990   release\(&log.lock\);) show
0 156 moveto (4991 }) show
0 144 moveto (4992 ) show
0 132 moveto (4993 ) show
0 120 moveto (4994 ) show
0 108 moveto (4995 ) show
0 96 moveto (4996 ) show
0 84 moveto (4997 ) show
0 72 moveto (4998 ) show
0 60 moveto (4999 ) show
0 24 moveto (Sheet 49) show
grestore
restore
showpage
%%Page: 59 59
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/fs.c  Page 1) show
0 648 moveto (5000 // File system implementation.  Five layers:) show
0 636 moveto (5001 //   + Blocks: allocator for raw disk blocks.) show
0 624 moveto (5002 //   + Log: crash recovery for multi-step updates.) show
0 612 moveto (5003 //   + Files: inode allocator, reading, writing, metadata.) show
0 600 moveto (5004 //   + Directories: inode with special contents \(list of other inodes!\)) show
0 588 moveto (5005 //   + Names: paths like /usr/rtm/xv6/fs.c for convenient naming.) show
0 576 moveto (5006 //) show
0 564 moveto (5007 // This file contains the low-level file system manipulation) show
0 552 moveto (5008 // routines.  The \(higher-level\) system call implementations) show
0 540 moveto (5009 // are in sysfile.c.) show
0 528 moveto (5010 ) show
0 516 moveto (5011 #include "types.h") show
0 504 moveto (5012 #include "defs.h") show
0 492 moveto (5013 #include "param.h") show
0 480 moveto (5014 #include "stat.h") show
0 468 moveto (5015 #include "mmu.h") show
0 456 moveto (5016 #include "proc.h") show
0 444 moveto (5017 #include "spinlock.h") show
0 432 moveto (5018 #include "fs.h") show
0 420 moveto (5019 #include "buf.h") show
0 408 moveto (5020 #include "file.h") show
0 396 moveto (5021 ) show
0 384 moveto (5022 #define min\(a, b\) \(\(a\) < \(b\) ? \(a\) : \(b\)\)) show
0 372 moveto (5023 static void itrunc\(struct inode*\);) show
0 360 moveto (5024 struct superblock sb;   // there should be one per dev, but we run with one dev) show
0 348 moveto (5025 ) show
0 336 moveto (5026 // Read the super block.) show
0 324 moveto (5027 void) show
0 312 moveto (5028 readsb\(int dev, struct superblock *sb\)) show
0 300 moveto (5029 {) show
0 288 moveto (5030   struct buf *bp;) show
0 276 moveto (5031 ) show
0 264 moveto (5032   bp = bread\(dev, 1\);) show
0 252 moveto (5033   memmove\(sb, bp->data, sizeof\(*sb\)\);) show
0 240 moveto (5034   brelse\(bp\);) show
0 228 moveto (5035 }) show
0 216 moveto (5036 ) show
0 204 moveto (5037 // Zero a block.) show
0 192 moveto (5038 static void) show
0 180 moveto (5039 bzero\(int dev, int bno\)) show
0 168 moveto (5040 {) show
0 156 moveto (5041   struct buf *bp;) show
0 144 moveto (5042 ) show
0 132 moveto (5043   bp = bread\(dev, bno\);) show
0 120 moveto (5044   memset\(bp->data, 0, BSIZE\);) show
0 108 moveto (5045   log_write\(bp\);) show
0 96 moveto (5046   brelse\(bp\);) show
0 84 moveto (5047 }) show
0 72 moveto (5048 ) show
0 60 moveto (5049 ) show
0 24 moveto (Sheet 50) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/fs.c  Page 2) show
0 648 moveto (5050 // Blocks.) show
0 636 moveto (5051 ) show
0 624 moveto (5052 // Allocate a zeroed disk block.) show
0 612 moveto (5053 static uint) show
0 600 moveto (5054 balloc\(uint dev\)) show
0 588 moveto (5055 {) show
0 576 moveto (5056   int b, bi, m;) show
0 564 moveto (5057   struct buf *bp;) show
0 552 moveto (5058 ) show
0 540 moveto (5059   bp = 0;) show
0 528 moveto (5060   for\(b = 0; b < sb.size; b += BPB\){) show
0 516 moveto (5061     bp = bread\(dev, BBLOCK\(b, sb\)\);) show
0 504 moveto (5062     for\(bi = 0; bi < BPB && b + bi < sb.size; bi++\){) show
0 492 moveto (5063       m = 1 << \(bi % 8\);) show
0 480 moveto (5064       if\(\(bp->data[bi/8] & m\) == 0\){  // Is block free?) show
0 468 moveto (5065         bp->data[bi/8] |= m;  // Mark block in use.) show
0 456 moveto (5066         log_write\(bp\);) show
0 444 moveto (5067         brelse\(bp\);) show
0 432 moveto (5068         bzero\(dev, b + bi\);) show
0 420 moveto (5069         return b + bi;) show
0 408 moveto (5070       }) show
0 396 moveto (5071     }) show
0 384 moveto (5072     brelse\(bp\);) show
0 372 moveto (5073   }) show
0 360 moveto (5074   panic\("balloc: out of blocks"\);) show
0 348 moveto (5075 }) show
0 336 moveto (5076 ) show
0 324 moveto (5077 // Free a disk block.) show
0 312 moveto (5078 static void) show
0 300 moveto (5079 bfree\(int dev, uint b\)) show
0 288 moveto (5080 {) show
0 276 moveto (5081   struct buf *bp;) show
0 264 moveto (5082   int bi, m;) show
0 252 moveto (5083 ) show
0 240 moveto (5084   readsb\(dev, &sb\);) show
0 228 moveto (5085   bp = bread\(dev, BBLOCK\(b, sb\)\);) show
0 216 moveto (5086   bi = b % BPB;) show
0 204 moveto (5087   m = 1 << \(bi % 8\);) show
0 192 moveto (5088   if\(\(bp->data[bi/8] & m\) == 0\)) show
0 180 moveto (5089     panic\("freeing free block"\);) show
0 168 moveto (5090   bp->data[bi/8] &= ~m;) show
0 156 moveto (5091   log_write\(bp\);) show
0 144 moveto (5092   brelse\(bp\);) show
0 132 moveto (5093 }) show
0 120 moveto (5094 ) show
0 108 moveto (5095 ) show
0 96 moveto (5096 ) show
0 84 moveto (5097 ) show
0 72 moveto (5098 ) show
0 60 moveto (5099 ) show
0 24 moveto (Sheet 50) show
grestore
restore
showpage
%%Page: 60 60
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/fs.c  Page 3) show
0 648 moveto (5100 // Inodes.) show
0 636 moveto (5101 //) show
0 624 moveto (5102 // An inode describes a single unnamed file.) show
0 612 moveto (5103 // The inode disk structure holds metadata: the file's type,) show
0 600 moveto (5104 // its size, the number of links referring to it, and the) show
0 588 moveto (5105 // list of blocks holding the file's content.) show
0 576 moveto (5106 //) show
0 564 moveto (5107 // The inodes are laid out sequentially on disk at) show
0 552 moveto (5108 // sb.startinode. Each inode has a number, indicating its) show
0 540 moveto (5109 // position on the disk.) show
0 528 moveto (5110 //) show
0 516 moveto (5111 // The kernel keeps a cache of in-use inodes in memory) show
0 504 moveto (5112 // to provide a place for synchronizing access) show
0 492 moveto (5113 // to inodes used by multiple processes. The cached) show
0 480 moveto (5114 // inodes include book-keeping information that is) show
0 468 moveto (5115 // not stored on disk: ip->ref and ip->flags.) show
0 456 moveto (5116 //) show
0 444 moveto (5117 // An inode and its in-memory represtative go through a) show
0 432 moveto (5118 // sequence of states before they can be used by the) show
0 420 moveto (5119 // rest of the file system code.) show
0 408 moveto (5120 //) show
0 396 moveto (5121 // * Allocation: an inode is allocated if its type \(on disk\)) show
0 384 moveto (5122 //   is non-zero. ialloc\(\) allocates, iput\(\) frees if) show
0 372 moveto (5123 //   the link count has fallen to zero.) show
0 360 moveto (5124 //) show
0 348 moveto (5125 // * Referencing in cache: an entry in the inode cache) show
0 336 moveto (5126 //   is free if ip->ref is zero. Otherwise ip->ref tracks) show
0 324 moveto (5127 //   the number of in-memory pointers to the entry \(open) show
0 312 moveto (5128 //   files and current directories\). iget\(\) to find or) show
0 300 moveto (5129 //   create a cache entry and increment its ref, iput\(\)) show
0 288 moveto (5130 //   to decrement ref.) show
0 276 moveto (5131 //) show
0 264 moveto (5132 // * Valid: the information \(type, size, &c\) in an inode) show
0 252 moveto (5133 //   cache entry is only correct when the I_VALID bit) show
0 240 moveto (5134 //   is set in ip->flags. ilock\(\) reads the inode from) show
0 228 moveto (5135 //   the disk and sets I_VALID, while iput\(\) clears) show
0 216 moveto (5136 //   I_VALID if ip->ref has fallen to zero.) show
0 204 moveto (5137 //) show
0 192 moveto (5138 // * Locked: file system code may only examine and modify) show
0 180 moveto (5139 //   the information in an inode and its content if it) show
0 168 moveto (5140 //   has first locked the inode. The I_BUSY flag indicates) show
0 156 moveto (5141 //   that the inode is locked. ilock\(\) sets I_BUSY,) show
0 144 moveto (5142 //   while iunlock clears it.) show
0 132 moveto (5143 //) show
0 120 moveto (5144 // Thus a typical sequence is:) show
0 108 moveto (5145 //   ip = iget\(dev, inum\)) show
0 96 moveto (5146 //   ilock\(ip\)) show
0 84 moveto (5147 //   ... examine and modify ip->xxx ...) show
0 72 moveto (5148 //   iunlock\(ip\)) show
0 60 moveto (5149 //   iput\(ip\)) show
0 24 moveto (Sheet 51) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/fs.c  Page 4) show
0 648 moveto (5150 //) show
0 636 moveto (5151 // ilock\(\) is separate from iget\(\) so that system calls can) show
0 624 moveto (5152 // get a long-term reference to an inode \(as for an open file\)) show
0 612 moveto (5153 // and only lock it for short periods \(e.g., in read\(\)\).) show
0 600 moveto (5154 // The separation also helps avoid deadlock and races during) show
0 588 moveto (5155 // pathname lookup. iget\(\) increments ip->ref so that the inode) show
0 576 moveto (5156 // stays cached and pointers to it remain valid.) show
0 564 moveto (5157 //) show
0 552 moveto (5158 // Many internal file system functions expect the caller to) show
0 540 moveto (5159 // have locked the inodes involved; this lets callers create) show
0 528 moveto (5160 // multi-step atomic operations.) show
0 516 moveto (5161 ) show
0 504 moveto (5162 struct {) show
0 492 moveto (5163   struct spinlock lock;) show
0 480 moveto (5164   struct inode inode[NINODE];) show
0 468 moveto (5165 } icache;) show
0 456 moveto (5166 ) show
0 444 moveto (5167 void) show
0 432 moveto (5168 iinit\(int dev\)) show
0 420 moveto (5169 {) show
0 408 moveto (5170   initlock\(&icache.lock, "icache"\);) show
0 396 moveto (5171   readsb\(dev, &sb\);) show
0 384 moveto (5172   cprintf\("sb: size %d nblocks %d ninodes %d nlog %d logstart %d inodestart %d bmap start %d\\n", sb.size,) show
0 372 moveto (5173           sb.nblocks, sb.ninodes, sb.nlog, sb.logstart, sb.inodestart, sb.bmapstart\);) show
0 360 moveto (5174 }) show
0 348 moveto (5175 ) show
0 336 moveto (5176 static struct inode* iget\(uint dev, uint inum\);) show
0 324 moveto (5177 ) show
0 312 moveto (5178 // Allocate a new inode with the given type on device dev.) show
0 300 moveto (5179 // A free inode has a type of zero.) show
0 288 moveto (5180 struct inode*) show
0 276 moveto (5181 ialloc\(uint dev, short type\)) show
0 264 moveto (5182 {) show
0 252 moveto (5183   int inum;) show
0 240 moveto (5184   struct buf *bp;) show
0 228 moveto (5185   struct dinode *dip;) show
0 216 moveto (5186 ) show
0 204 moveto (5187   for\(inum = 1; inum < sb.ninodes; inum++\){) show
0 192 moveto (5188     bp = bread\(dev, IBLOCK\(inum, sb\)\);) show
0 180 moveto (5189     dip = \(struct dinode*\)bp->data + inum%IPB;) show
0 168 moveto (5190     if\(dip->type == 0\){  // a free inode) show
0 156 moveto (5191       memset\(dip, 0, sizeof\(*dip\)\);) show
0 144 moveto (5192       dip->type = type;) show
0 132 moveto (5193       log_write\(bp\);   // mark it allocated on the disk) show
0 120 moveto (5194       brelse\(bp\);) show
0 108 moveto (5195       return iget\(dev, inum\);) show
0 96 moveto (5196     }) show
0 84 moveto (5197     brelse\(bp\);) show
0 72 moveto (5198   }) show
0 60 moveto (5199   panic\("ialloc: no inodes"\);) show
0 24 moveto (Sheet 51) show
grestore
restore
showpage
%%Page: 61 61
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/fs.c  Page 5) show
0 648 moveto (5200 }) show
0 636 moveto (5201 ) show
0 624 moveto (5202 // Copy a modified in-memory inode to disk.) show
0 612 moveto (5203 void) show
0 600 moveto (5204 iupdate\(struct inode *ip\)) show
0 588 moveto (5205 {) show
0 576 moveto (5206   struct buf *bp;) show
0 564 moveto (5207   struct dinode *dip;) show
0 552 moveto (5208 ) show
0 540 moveto (5209   bp = bread\(ip->dev, IBLOCK\(ip->inum, sb\)\);) show
0 528 moveto (5210   dip = \(struct dinode*\)bp->data + ip->inum%IPB;) show
0 516 moveto (5211   dip->type = ip->type;) show
0 504 moveto (5212   dip->major = ip->major;) show
0 492 moveto (5213   dip->minor = ip->minor;) show
0 480 moveto (5214   dip->nlink = ip->nlink;) show
0 468 moveto (5215   dip->size = ip->size;) show
0 456 moveto (5216   memmove\(dip->addrs, ip->addrs, sizeof\(ip->addrs\)\);) show
0 444 moveto (5217   log_write\(bp\);) show
0 432 moveto (5218   brelse\(bp\);) show
0 420 moveto (5219 }) show
0 408 moveto (5220 ) show
0 396 moveto (5221 // Find the inode with number inum on device dev) show
0 384 moveto (5222 // and return the in-memory copy. Does not lock) show
0 372 moveto (5223 // the inode and does not read it from disk.) show
0 360 moveto (5224 static struct inode*) show
0 348 moveto (5225 iget\(uint dev, uint inum\)) show
0 336 moveto (5226 {) show
0 324 moveto (5227   struct inode *ip, *empty;) show
0 312 moveto (5228 ) show
0 300 moveto (5229   acquire\(&icache.lock\);) show
0 288 moveto (5230 ) show
0 276 moveto (5231   // Is the inode already cached?) show
0 264 moveto (5232   empty = 0;) show
0 252 moveto (5233   for\(ip = &icache.inode[0]; ip < &icache.inode[NINODE]; ip++\){) show
0 240 moveto (5234     if\(ip->ref > 0 && ip->dev == dev && ip->inum == inum\){) show
0 228 moveto (5235       ip->ref++;) show
0 216 moveto (5236       release\(&icache.lock\);) show
0 204 moveto (5237       return ip;) show
0 192 moveto (5238     }) show
0 180 moveto (5239     if\(empty == 0 && ip->ref == 0\)    // Remember empty slot.) show
0 168 moveto (5240       empty = ip;) show
0 156 moveto (5241   }) show
0 144 moveto (5242 ) show
0 132 moveto (5243   // Recycle an inode cache entry.) show
0 120 moveto (5244   if\(empty == 0\)) show
0 108 moveto (5245     panic\("iget: no inodes"\);) show
0 96 moveto (5246 ) show
0 84 moveto (5247 ) show
0 72 moveto (5248 ) show
0 60 moveto (5249 ) show
0 24 moveto (Sheet 52) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/fs.c  Page 6) show
0 648 moveto (5250   ip = empty;) show
0 636 moveto (5251   ip->dev = dev;) show
0 624 moveto (5252   ip->inum = inum;) show
0 612 moveto (5253   ip->ref = 1;) show
0 600 moveto (5254   ip->flags = 0;) show
0 588 moveto (5255   release\(&icache.lock\);) show
0 576 moveto (5256 ) show
0 564 moveto (5257   return ip;) show
0 552 moveto (5258 }) show
0 540 moveto (5259 ) show
0 528 moveto (5260 // Increment reference count for ip.) show
0 516 moveto (5261 // Returns ip to enable ip = idup\(ip1\) idiom.) show
0 504 moveto (5262 struct inode*) show
0 492 moveto (5263 idup\(struct inode *ip\)) show
0 480 moveto (5264 {) show
0 468 moveto (5265   acquire\(&icache.lock\);) show
0 456 moveto (5266   ip->ref++;) show
0 444 moveto (5267   release\(&icache.lock\);) show
0 432 moveto (5268   return ip;) show
0 420 moveto (5269 }) show
0 408 moveto (5270 ) show
0 396 moveto (5271 // Lock the given inode.) show
0 384 moveto (5272 // Reads the inode from disk if necessary.) show
0 372 moveto (5273 void) show
0 360 moveto (5274 ilock\(struct inode *ip\)) show
0 348 moveto (5275 {) show
0 336 moveto (5276   struct buf *bp;) show
0 324 moveto (5277   struct dinode *dip;) show
0 312 moveto (5278 ) show
0 300 moveto (5279   if\(ip == 0 || ip->ref < 1\)) show
0 288 moveto (5280     panic\("ilock"\);) show
0 276 moveto (5281 ) show
0 264 moveto (5282   acquire\(&icache.lock\);) show
0 252 moveto (5283   while\(ip->flags & I_BUSY\)) show
0 240 moveto (5284     sleep\(ip, &icache.lock\);) show
0 228 moveto (5285   ip->flags |= I_BUSY;) show
0 216 moveto (5286   release\(&icache.lock\);) show
0 204 moveto (5287 ) show
0 192 moveto (5288   if\(!\(ip->flags & I_VALID\)\){) show
0 180 moveto (5289     bp = bread\(ip->dev, IBLOCK\(ip->inum, sb\)\);) show
0 168 moveto (5290     dip = \(struct dinode*\)bp->data + ip->inum%IPB;) show
0 156 moveto (5291     ip->type = dip->type;) show
0 144 moveto (5292     ip->major = dip->major;) show
0 132 moveto (5293     ip->minor = dip->minor;) show
0 120 moveto (5294     ip->nlink = dip->nlink;) show
0 108 moveto (5295     ip->size = dip->size;) show
0 96 moveto (5296     memmove\(ip->addrs, dip->addrs, sizeof\(ip->addrs\)\);) show
0 84 moveto (5297     brelse\(bp\);) show
0 72 moveto (5298     ip->flags |= I_VALID;) show
0 60 moveto (5299     if\(ip->type == 0\)) show
0 24 moveto (Sheet 52) show
grestore
restore
showpage
%%Page: 62 62
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/fs.c  Page 7) show
0 648 moveto (5300       panic\("ilock: no type"\);) show
0 636 moveto (5301   }) show
0 624 moveto (5302 }) show
0 612 moveto (5303 ) show
0 600 moveto (5304 // Unlock the given inode.) show
0 588 moveto (5305 void) show
0 576 moveto (5306 iunlock\(struct inode *ip\)) show
0 564 moveto (5307 {) show
0 552 moveto (5308   if\(ip == 0 || !\(ip->flags & I_BUSY\) || ip->ref < 1\)) show
0 540 moveto (5309     panic\("iunlock"\);) show
0 528 moveto (5310 ) show
0 516 moveto (5311   acquire\(&icache.lock\);) show
0 504 moveto (5312   ip->flags &= ~I_BUSY;) show
0 492 moveto (5313   wakeup\(ip\);) show
0 480 moveto (5314   release\(&icache.lock\);) show
0 468 moveto (5315 }) show
0 456 moveto (5316 ) show
0 444 moveto (5317 // Drop a reference to an in-memory inode.) show
0 432 moveto (5318 // If that was the last reference, the inode cache entry can) show
0 420 moveto (5319 // be recycled.) show
0 408 moveto (5320 // If that was the last reference and the inode has no links) show
0 396 moveto (5321 // to it, free the inode \(and its content\) on disk.) show
0 384 moveto (5322 // All calls to iput\(\) must be inside a transaction in) show
0 372 moveto (5323 // case it has to free the inode.) show
0 360 moveto (5324 void) show
0 348 moveto (5325 iput\(struct inode *ip\)) show
0 336 moveto (5326 {) show
0 324 moveto (5327   acquire\(&icache.lock\);) show
0 312 moveto (5328   if\(ip->ref == 1 && \(ip->flags & I_VALID\) && ip->nlink == 0\){) show
0 300 moveto (5329     // inode has no links and no other references: truncate and free.) show
0 288 moveto (5330     if\(ip->flags & I_BUSY\)) show
0 276 moveto (5331       panic\("iput busy"\);) show
0 264 moveto (5332     ip->flags |= I_BUSY;) show
0 252 moveto (5333     release\(&icache.lock\);) show
0 240 moveto (5334     itrunc\(ip\);) show
0 228 moveto (5335     ip->type = 0;) show
0 216 moveto (5336     iupdate\(ip\);) show
0 204 moveto (5337     acquire\(&icache.lock\);) show
0 192 moveto (5338     ip->flags = 0;) show
0 180 moveto (5339     wakeup\(ip\);) show
0 168 moveto (5340   }) show
0 156 moveto (5341   ip->ref--;) show
0 144 moveto (5342   release\(&icache.lock\);) show
0 132 moveto (5343 }) show
0 120 moveto (5344 ) show
0 108 moveto (5345 ) show
0 96 moveto (5346 ) show
0 84 moveto (5347 ) show
0 72 moveto (5348 ) show
0 60 moveto (5349 ) show
0 24 moveto (Sheet 53) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/fs.c  Page 8) show
0 648 moveto (5350 // Common idiom: unlock, then put.) show
0 636 moveto (5351 void) show
0 624 moveto (5352 iunlockput\(struct inode *ip\)) show
0 612 moveto (5353 {) show
0 600 moveto (5354   iunlock\(ip\);) show
0 588 moveto (5355   iput\(ip\);) show
0 576 moveto (5356 }) show
0 564 moveto (5357 ) show
0 552 moveto (5358 // Inode content) show
0 540 moveto (5359 //) show
0 528 moveto (5360 // The content \(data\) associated with each inode is stored) show
0 516 moveto (5361 // in blocks on the disk. The first NDIRECT block numbers) show
0 504 moveto (5362 // are listed in ip->addrs[].  The next NINDIRECT blocks are) show
0 492 moveto (5363 // listed in block ip->addrs[NDIRECT].) show
0 480 moveto (5364 ) show
0 468 moveto (5365 // Return the disk block address of the nth block in inode ip.) show
0 456 moveto (5366 // If there is no such block, bmap allocates one.) show
0 444 moveto (5367 static uint) show
0 432 moveto (5368 bmap\(struct inode *ip, uint bn\)) show
0 420 moveto (5369 {) show
0 408 moveto (5370   uint addr, *a;) show
0 396 moveto (5371   struct buf *bp;) show
0 384 moveto (5372 ) show
0 372 moveto (5373   if\(bn < NDIRECT\){) show
0 360 moveto (5374     if\(\(addr = ip->addrs[bn]\) == 0\)) show
0 348 moveto (5375       ip->addrs[bn] = addr = balloc\(ip->dev\);) show
0 336 moveto (5376     return addr;) show
0 324 moveto (5377   }) show
0 312 moveto (5378   bn -= NDIRECT;) show
0 300 moveto (5379 ) show
0 288 moveto (5380   if\(bn < NINDIRECT\){) show
0 276 moveto (5381     // Load indirect block, allocating if necessary.) show
0 264 moveto (5382     if\(\(addr = ip->addrs[NDIRECT]\) == 0\)) show
0 252 moveto (5383       ip->addrs[NDIRECT] = addr = balloc\(ip->dev\);) show
0 240 moveto (5384     bp = bread\(ip->dev, addr\);) show
0 228 moveto (5385     a = \(uint*\)bp->data;) show
0 216 moveto (5386     if\(\(addr = a[bn]\) == 0\){) show
0 204 moveto (5387       a[bn] = addr = balloc\(ip->dev\);) show
0 192 moveto (5388       log_write\(bp\);) show
0 180 moveto (5389     }) show
0 168 moveto (5390     brelse\(bp\);) show
0 156 moveto (5391     return addr;) show
0 144 moveto (5392   }) show
0 132 moveto (5393 ) show
0 120 moveto (5394   panic\("bmap: out of range"\);) show
0 108 moveto (5395 }) show
0 96 moveto (5396 ) show
0 84 moveto (5397 ) show
0 72 moveto (5398 ) show
0 60 moveto (5399 ) show
0 24 moveto (Sheet 53) show
grestore
restore
showpage
%%Page: 63 63
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/fs.c  Page 9) show
0 648 moveto (5400 // Truncate inode \(discard contents\).) show
0 636 moveto (5401 // Only called when the inode has no links) show
0 624 moveto (5402 // to it \(no directory entries referring to it\)) show
0 612 moveto (5403 // and has no in-memory reference to it \(is) show
0 600 moveto (5404 // not an open file or current directory\).) show
0 588 moveto (5405 static void) show
0 576 moveto (5406 itrunc\(struct inode *ip\)) show
0 564 moveto (5407 {) show
0 552 moveto (5408   int i, j;) show
0 540 moveto (5409   struct buf *bp;) show
0 528 moveto (5410   uint *a;) show
0 516 moveto (5411 ) show
0 504 moveto (5412   for\(i = 0; i < NDIRECT; i++\){) show
0 492 moveto (5413     if\(ip->addrs[i]\){) show
0 480 moveto (5414       bfree\(ip->dev, ip->addrs[i]\);) show
0 468 moveto (5415       ip->addrs[i] = 0;) show
0 456 moveto (5416     }) show
0 444 moveto (5417   }) show
0 432 moveto (5418 ) show
0 420 moveto (5419   if\(ip->addrs[NDIRECT]\){) show
0 408 moveto (5420     bp = bread\(ip->dev, ip->addrs[NDIRECT]\);) show
0 396 moveto (5421     a = \(uint*\)bp->data;) show
0 384 moveto (5422     for\(j = 0; j < NINDIRECT; j++\){) show
0 372 moveto (5423       if\(a[j]\)) show
0 360 moveto (5424         bfree\(ip->dev, a[j]\);) show
0 348 moveto (5425     }) show
0 336 moveto (5426     brelse\(bp\);) show
0 324 moveto (5427     bfree\(ip->dev, ip->addrs[NDIRECT]\);) show
0 312 moveto (5428     ip->addrs[NDIRECT] = 0;) show
0 300 moveto (5429   }) show
0 288 moveto (5430 ) show
0 276 moveto (5431   ip->size = 0;) show
0 264 moveto (5432   iupdate\(ip\);) show
0 252 moveto (5433 }) show
0 240 moveto (5434 ) show
0 228 moveto (5435 // Copy stat information from inode.) show
0 216 moveto (5436 void) show
0 204 moveto (5437 stati\(struct inode *ip, struct stat *st\)) show
0 192 moveto (5438 {) show
0 180 moveto (5439   st->dev = ip->dev;) show
0 168 moveto (5440   st->ino = ip->inum;) show
0 156 moveto (5441   st->type = ip->type;) show
0 144 moveto (5442   st->nlink = ip->nlink;) show
0 132 moveto (5443   st->size = ip->size;) show
0 120 moveto (5444 }) show
0 108 moveto (5445 ) show
0 96 moveto (5446 ) show
0 84 moveto (5447 ) show
0 72 moveto (5448 ) show
0 60 moveto (5449 ) show
0 24 moveto (Sheet 54) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/fs.c  Page 10) show
0 648 moveto (5450 // Read data from inode.) show
0 636 moveto (5451 int) show
0 624 moveto (5452 readi\(struct inode *ip, char *dst, uint off, uint n\)) show
0 612 moveto (5453 {) show
0 600 moveto (5454   uint tot, m;) show
0 588 moveto (5455   struct buf *bp;) show
0 576 moveto (5456 ) show
0 564 moveto (5457   if\(ip->type == T_DEV\){) show
0 552 moveto (5458     if\(ip->major < 0 || ip->major >= NDEV || !devsw[ip->major].read\)) show
0 540 moveto (5459       return -1;) show
0 528 moveto (5460     return devsw[ip->major].read\(ip, dst, n\);) show
0 516 moveto (5461   }) show
0 504 moveto (5462 ) show
0 492 moveto (5463   if\(off > ip->size || off + n < off\)) show
0 480 moveto (5464     return -1;) show
0 468 moveto (5465   if\(off + n > ip->size\)) show
0 456 moveto (5466     n = ip->size - off;) show
0 444 moveto (5467 ) show
0 432 moveto (5468   for\(tot=0; tot<n; tot+=m, off+=m, dst+=m\){) show
0 420 moveto (5469     bp = bread\(ip->dev, bmap\(ip, off/BSIZE\)\);) show
0 408 moveto (5470     m = min\(n - tot, BSIZE - off%BSIZE\);) show
0 396 moveto (5471     memmove\(dst, bp->data + off%BSIZE, m\);) show
0 384 moveto (5472     brelse\(bp\);) show
0 372 moveto (5473   }) show
0 360 moveto (5474   return n;) show
0 348 moveto (5475 }) show
0 336 moveto (5476 ) show
0 324 moveto (5477 // Write data to inode.) show
0 312 moveto (5478 int) show
0 300 moveto (5479 writei\(struct inode *ip, char *src, uint off, uint n\)) show
0 288 moveto (5480 {) show
0 276 moveto (5481   uint tot, m;) show
0 264 moveto (5482   struct buf *bp;) show
0 252 moveto (5483 ) show
0 240 moveto (5484   if\(ip->type == T_DEV\){) show
0 228 moveto (5485     if\(ip->major < 0 || ip->major >= NDEV || !devsw[ip->major].write\)) show
0 216 moveto (5486       return -1;) show
0 204 moveto (5487     return devsw[ip->major].write\(ip, src, n\);) show
0 192 moveto (5488   }) show
0 180 moveto (5489 ) show
0 168 moveto (5490   if\(off > ip->size || off + n < off\)) show
0 156 moveto (5491     return -1;) show
0 144 moveto (5492   if\(off + n > MAXFILE*BSIZE\)) show
0 132 moveto (5493     return -1;) show
0 120 moveto (5494 ) show
0 108 moveto (5495   for\(tot=0; tot<n; tot+=m, off+=m, src+=m\){) show
0 96 moveto (5496     bp = bread\(ip->dev, bmap\(ip, off/BSIZE\)\);) show
0 84 moveto (5497     m = min\(n - tot, BSIZE - off%BSIZE\);) show
0 72 moveto (5498     memmove\(bp->data + off%BSIZE, src, m\);) show
0 60 moveto (5499     log_write\(bp\);) show
0 24 moveto (Sheet 54) show
grestore
restore
showpage
%%Page: 64 64
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/fs.c  Page 11) show
0 648 moveto (5500     brelse\(bp\);) show
0 636 moveto (5501   }) show
0 624 moveto (5502 ) show
0 612 moveto (5503   if\(n > 0 && off > ip->size\){) show
0 600 moveto (5504     ip->size = off;) show
0 588 moveto (5505     iupdate\(ip\);) show
0 576 moveto (5506   }) show
0 564 moveto (5507   return n;) show
0 552 moveto (5508 }) show
0 540 moveto (5509 ) show
0 528 moveto (5510 // Directories) show
0 516 moveto (5511 ) show
0 504 moveto (5512 int) show
0 492 moveto (5513 namecmp\(const char *s, const char *t\)) show
0 480 moveto (5514 {) show
0 468 moveto (5515   return strncmp\(s, t, DIRSIZ\);) show
0 456 moveto (5516 }) show
0 444 moveto (5517 ) show
0 432 moveto (5518 // Look for a directory entry in a directory.) show
0 420 moveto (5519 // If found, set *poff to byte offset of entry.) show
0 408 moveto (5520 struct inode*) show
0 396 moveto (5521 dirlookup\(struct inode *dp, char *name, uint *poff\)) show
0 384 moveto (5522 {) show
0 372 moveto (5523   uint off, inum;) show
0 360 moveto (5524   struct dirent de;) show
0 348 moveto (5525 ) show
0 336 moveto (5526   if\(dp->type != T_DIR\)) show
0 324 moveto (5527     panic\("dirlookup not DIR"\);) show
0 312 moveto (5528 ) show
0 300 moveto (5529   for\(off = 0; off < dp->size; off += sizeof\(de\)\){) show
0 288 moveto (5530     if\(readi\(dp, \(char*\)&de, off, sizeof\(de\)\) != sizeof\(de\)\)) show
0 276 moveto (5531       panic\("dirlink read"\);) show
0 264 moveto (5532     if\(de.inum == 0\)) show
0 252 moveto (5533       continue;) show
0 240 moveto (5534     if\(namecmp\(name, de.name\) == 0\){) show
0 228 moveto (5535       // entry matches path element) show
0 216 moveto (5536       if\(poff\)) show
0 204 moveto (5537         *poff = off;) show
0 192 moveto (5538       inum = de.inum;) show
0 180 moveto (5539       return iget\(dp->dev, inum\);) show
0 168 moveto (5540     }) show
0 156 moveto (5541   }) show
0 144 moveto (5542 ) show
0 132 moveto (5543   return 0;) show
0 120 moveto (5544 }) show
0 108 moveto (5545 ) show
0 96 moveto (5546 ) show
0 84 moveto (5547 ) show
0 72 moveto (5548 ) show
0 60 moveto (5549 ) show
0 24 moveto (Sheet 55) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/fs.c  Page 12) show
0 648 moveto (5550 // Write a new directory entry \(name, inum\) into the directory dp.) show
0 636 moveto (5551 int) show
0 624 moveto (5552 dirlink\(struct inode *dp, char *name, uint inum\)) show
0 612 moveto (5553 {) show
0 600 moveto (5554   int off;) show
0 588 moveto (5555   struct dirent de;) show
0 576 moveto (5556   struct inode *ip;) show
0 564 moveto (5557 ) show
0 552 moveto (5558   // Check that name is not present.) show
0 540 moveto (5559   if\(\(ip = dirlookup\(dp, name, 0\)\) != 0\){) show
0 528 moveto (5560     iput\(ip\);) show
0 516 moveto (5561     return -1;) show
0 504 moveto (5562   }) show
0 492 moveto (5563 ) show
0 480 moveto (5564   // Look for an empty dirent.) show
0 468 moveto (5565   for\(off = 0; off < dp->size; off += sizeof\(de\)\){) show
0 456 moveto (5566     if\(readi\(dp, \(char*\)&de, off, sizeof\(de\)\) != sizeof\(de\)\)) show
0 444 moveto (5567       panic\("dirlink read"\);) show
0 432 moveto (5568     if\(de.inum == 0\)) show
0 420 moveto (5569       break;) show
0 408 moveto (5570   }) show
0 396 moveto (5571 ) show
0 384 moveto (5572   strncpy\(de.name, name, DIRSIZ\);) show
0 372 moveto (5573   de.inum = inum;) show
0 360 moveto (5574   if\(writei\(dp, \(char*\)&de, off, sizeof\(de\)\) != sizeof\(de\)\)) show
0 348 moveto (5575     panic\("dirlink"\);) show
0 336 moveto (5576 ) show
0 324 moveto (5577   return 0;) show
0 312 moveto (5578 }) show
0 300 moveto (5579 ) show
0 288 moveto (5580 // Paths) show
0 276 moveto (5581 ) show
0 264 moveto (5582 // Copy the next path element from path into name.) show
0 252 moveto (5583 // Return a pointer to the element following the copied one.) show
0 240 moveto (5584 // The returned path has no leading slashes,) show
0 228 moveto (5585 // so the caller can check *path=='\\0' to see if the name is the last one.) show
0 216 moveto (5586 // If no name to remove, return 0.) show
0 204 moveto (5587 //) show
0 192 moveto (5588 // Examples:) show
0 180 moveto (5589 //   skipelem\("a/bb/c", name\) = "bb/c", setting name = "a") show
0 168 moveto (5590 //   skipelem\("///a//bb", name\) = "bb", setting name = "a") show
0 156 moveto (5591 //   skipelem\("a", name\) = "", setting name = "a") show
0 144 moveto (5592 //   skipelem\("", name\) = skipelem\("////", name\) = 0) show
0 132 moveto (5593 //) show
0 120 moveto (5594 static char*) show
0 108 moveto (5595 skipelem\(char *path, char *name\)) show
0 96 moveto (5596 {) show
0 84 moveto (5597   char *s;) show
0 72 moveto (5598   int len;) show
0 60 moveto (5599 ) show
0 24 moveto (Sheet 55) show
grestore
restore
showpage
%%Page: 65 65
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/fs.c  Page 13) show
0 648 moveto (5600   while\(*path == '/'\)) show
0 636 moveto (5601     path++;) show
0 624 moveto (5602   if\(*path == 0\)) show
0 612 moveto (5603     return 0;) show
0 600 moveto (5604   s = path;) show
0 588 moveto (5605   while\(*path != '/' && *path != 0\)) show
0 576 moveto (5606     path++;) show
0 564 moveto (5607   len = path - s;) show
0 552 moveto (5608   if\(len >= DIRSIZ\)) show
0 540 moveto (5609     memmove\(name, s, DIRSIZ\);) show
0 528 moveto (5610   else {) show
0 516 moveto (5611     memmove\(name, s, len\);) show
0 504 moveto (5612     name[len] = 0;) show
0 492 moveto (5613   }) show
0 480 moveto (5614   while\(*path == '/'\)) show
0 468 moveto (5615     path++;) show
0 456 moveto (5616   return path;) show
0 444 moveto (5617 }) show
0 432 moveto (5618 ) show
0 420 moveto (5619 // Look up and return the inode for a path name.) show
0 408 moveto (5620 // If parent != 0, return the inode for the parent and copy the final) show
0 396 moveto (5621 // path element into name, which must have room for DIRSIZ bytes.) show
0 384 moveto (5622 // Must be called inside a transaction since it calls iput\(\).) show
0 372 moveto (5623 static struct inode*) show
0 360 moveto (5624 namex\(char *path, int nameiparent, char *name\)) show
0 348 moveto (5625 {) show
0 336 moveto (5626   struct inode *ip, *next;) show
0 324 moveto (5627 ) show
0 312 moveto (5628   if\(*path == '/'\)) show
0 300 moveto (5629     ip = iget\(ROOTDEV, ROOTINO\);) show
0 288 moveto (5630   else) show
0 276 moveto (5631     ip = idup\(proc->cwd\);) show
0 264 moveto (5632 ) show
0 252 moveto (5633   while\(\(path = skipelem\(path, name\)\) != 0\){) show
0 240 moveto (5634     ilock\(ip\);) show
0 228 moveto (5635     if\(ip->type != T_DIR\){) show
0 216 moveto (5636       iunlockput\(ip\);) show
0 204 moveto (5637       return 0;) show
0 192 moveto (5638     }) show
0 180 moveto (5639     if\(nameiparent && *path == '\\0'\){) show
0 168 moveto (5640       // Stop one level early.) show
0 156 moveto (5641       iunlock\(ip\);) show
0 144 moveto (5642       return ip;) show
0 132 moveto (5643     }) show
0 120 moveto (5644     if\(\(next = dirlookup\(ip, name, 0\)\) == 0\){) show
0 108 moveto (5645       iunlockput\(ip\);) show
0 96 moveto (5646       return 0;) show
0 84 moveto (5647     }) show
0 72 moveto (5648     iunlockput\(ip\);) show
0 60 moveto (5649     ip = next;) show
0 24 moveto (Sheet 56) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/fs.c  Page 14) show
0 648 moveto (5650   }) show
0 636 moveto (5651   if\(nameiparent\){) show
0 624 moveto (5652     iput\(ip\);) show
0 612 moveto (5653     return 0;) show
0 600 moveto (5654   }) show
0 588 moveto (5655   return ip;) show
0 576 moveto (5656 }) show
0 564 moveto (5657 ) show
0 552 moveto (5658 struct inode*) show
0 540 moveto (5659 namei\(char *path\)) show
0 528 moveto (5660 {) show
0 516 moveto (5661   char name[DIRSIZ];) show
0 504 moveto (5662   return namex\(path, 0, name\);) show
0 492 moveto (5663 }) show
0 480 moveto (5664 ) show
0 468 moveto (5665 struct inode*) show
0 456 moveto (5666 nameiparent\(char *path, char *name\)) show
0 444 moveto (5667 {) show
0 432 moveto (5668   return namex\(path, 1, name\);) show
0 420 moveto (5669 }) show
0 408 moveto (5670 ) show
0 396 moveto (5671 ) show
0 384 moveto (5672 ) show
0 372 moveto (5673 ) show
0 360 moveto (5674 ) show
0 348 moveto (5675 ) show
0 336 moveto (5676 ) show
0 324 moveto (5677 ) show
0 312 moveto (5678 ) show
0 300 moveto (5679 ) show
0 288 moveto (5680 ) show
0 276 moveto (5681 ) show
0 264 moveto (5682 ) show
0 252 moveto (5683 ) show
0 240 moveto (5684 ) show
0 228 moveto (5685 ) show
0 216 moveto (5686 ) show
0 204 moveto (5687 ) show
0 192 moveto (5688 ) show
0 180 moveto (5689 ) show
0 168 moveto (5690 ) show
0 156 moveto (5691 ) show
0 144 moveto (5692 ) show
0 132 moveto (5693 ) show
0 120 moveto (5694 ) show
0 108 moveto (5695 ) show
0 96 moveto (5696 ) show
0 84 moveto (5697 ) show
0 72 moveto (5698 ) show
0 60 moveto (5699 ) show
0 24 moveto (Sheet 56) show
grestore
restore
showpage
%%Page: 66 66
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/file.c  Page 1) show
0 648 moveto (5700 //) show
0 636 moveto (5701 // File descriptors) show
0 624 moveto (5702 //) show
0 612 moveto (5703 ) show
0 600 moveto (5704 #include "types.h") show
0 588 moveto (5705 #include "defs.h") show
0 576 moveto (5706 #include "param.h") show
0 564 moveto (5707 #include "fs.h") show
0 552 moveto (5708 #include "file.h") show
0 540 moveto (5709 #include "spinlock.h") show
0 528 moveto (5710 ) show
0 516 moveto (5711 struct devsw devsw[NDEV];) show
0 504 moveto (5712 struct {) show
0 492 moveto (5713   struct spinlock lock;) show
0 480 moveto (5714   struct file file[NFILE];) show
0 468 moveto (5715 } ftable;) show
0 456 moveto (5716 ) show
0 444 moveto (5717 void) show
0 432 moveto (5718 fileinit\(void\)) show
0 420 moveto (5719 {) show
0 408 moveto (5720   initlock\(&ftable.lock, "ftable"\);) show
0 396 moveto (5721 }) show
0 384 moveto (5722 ) show
0 372 moveto (5723 // Allocate a file structure.) show
0 360 moveto (5724 struct file*) show
0 348 moveto (5725 filealloc\(void\)) show
0 336 moveto (5726 {) show
0 324 moveto (5727   struct file *f;) show
0 312 moveto (5728 ) show
0 300 moveto (5729   acquire\(&ftable.lock\);) show
0 288 moveto (5730   for\(f = ftable.file; f < ftable.file + NFILE; f++\){) show
0 276 moveto (5731     if\(f->ref == 0\){) show
0 264 moveto (5732       f->ref = 1;) show
0 252 moveto (5733       release\(&ftable.lock\);) show
0 240 moveto (5734       return f;) show
0 228 moveto (5735     }) show
0 216 moveto (5736   }) show
0 204 moveto (5737   release\(&ftable.lock\);) show
0 192 moveto (5738   return 0;) show
0 180 moveto (5739 }) show
0 168 moveto (5740 ) show
0 156 moveto (5741 ) show
0 144 moveto (5742 ) show
0 132 moveto (5743 ) show
0 120 moveto (5744 ) show
0 108 moveto (5745 ) show
0 96 moveto (5746 ) show
0 84 moveto (5747 ) show
0 72 moveto (5748 ) show
0 60 moveto (5749 ) show
0 24 moveto (Sheet 57) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/file.c  Page 2) show
0 648 moveto (5750 // Increment ref count for file f.) show
0 636 moveto (5751 struct file*) show
0 624 moveto (5752 filedup\(struct file *f\)) show
0 612 moveto (5753 {) show
0 600 moveto (5754   acquire\(&ftable.lock\);) show
0 588 moveto (5755   if\(f->ref < 1\)) show
0 576 moveto (5756     panic\("filedup"\);) show
0 564 moveto (5757   f->ref++;) show
0 552 moveto (5758   release\(&ftable.lock\);) show
0 540 moveto (5759   return f;) show
0 528 moveto (5760 }) show
0 516 moveto (5761 ) show
0 504 moveto (5762 // Close file f.  \(Decrement ref count, close when reaches 0.\)) show
0 492 moveto (5763 void) show
0 480 moveto (5764 fileclose\(struct file *f\)) show
0 468 moveto (5765 {) show
0 456 moveto (5766   struct file ff;) show
0 444 moveto (5767 ) show
0 432 moveto (5768   acquire\(&ftable.lock\);) show
0 420 moveto (5769   if\(f->ref < 1\)) show
0 408 moveto (5770     panic\("fileclose"\);) show
0 396 moveto (5771   if\(--f->ref > 0\){) show
0 384 moveto (5772     release\(&ftable.lock\);) show
0 372 moveto (5773     return;) show
0 360 moveto (5774   }) show
0 348 moveto (5775   ff = *f;) show
0 336 moveto (5776   f->ref = 0;) show
0 324 moveto (5777   f->type = FD_NONE;) show
0 312 moveto (5778   release\(&ftable.lock\);) show
0 300 moveto (5779 ) show
0 288 moveto (5780   if\(ff.type == FD_PIPE\)) show
0 276 moveto (5781     pipeclose\(ff.pipe, ff.writable\);) show
0 264 moveto (5782   else if\(ff.type == FD_INODE\){) show
0 252 moveto (5783     begin_op\(\);) show
0 240 moveto (5784     iput\(ff.ip\);) show
0 228 moveto (5785     end_op\(\);) show
0 216 moveto (5786   }) show
0 204 moveto (5787 }) show
0 192 moveto (5788 ) show
0 180 moveto (5789 ) show
0 168 moveto (5790 ) show
0 156 moveto (5791 ) show
0 144 moveto (5792 ) show
0 132 moveto (5793 ) show
0 120 moveto (5794 ) show
0 108 moveto (5795 ) show
0 96 moveto (5796 ) show
0 84 moveto (5797 ) show
0 72 moveto (5798 ) show
0 60 moveto (5799 ) show
0 24 moveto (Sheet 57) show
grestore
restore
showpage
%%Page: 67 67
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/file.c  Page 3) show
0 648 moveto (5800 // Get metadata about file f.) show
0 636 moveto (5801 int) show
0 624 moveto (5802 filestat\(struct file *f, struct stat *st\)) show
0 612 moveto (5803 {) show
0 600 moveto (5804   if\(f->type == FD_INODE\){) show
0 588 moveto (5805     ilock\(f->ip\);) show
0 576 moveto (5806     stati\(f->ip, st\);) show
0 564 moveto (5807     iunlock\(f->ip\);) show
0 552 moveto (5808     return 0;) show
0 540 moveto (5809   }) show
0 528 moveto (5810   return -1;) show
0 516 moveto (5811 }) show
0 504 moveto (5812 ) show
0 492 moveto (5813 // Read from file f.) show
0 480 moveto (5814 int) show
0 468 moveto (5815 fileread\(struct file *f, char *addr, int n\)) show
0 456 moveto (5816 {) show
0 444 moveto (5817   int r;) show
0 432 moveto (5818 ) show
0 420 moveto (5819   if\(f->readable == 0\)) show
0 408 moveto (5820     return -1;) show
0 396 moveto (5821   if\(f->type == FD_PIPE\)) show
0 384 moveto (5822     return piperead\(f->pipe, addr, n\);) show
0 372 moveto (5823   if\(f->type == FD_INODE\){) show
0 360 moveto (5824     ilock\(f->ip\);) show
0 348 moveto (5825     if\(\(r = readi\(f->ip, addr, f->off, n\)\) > 0\)) show
0 336 moveto (5826       f->off += r;) show
0 324 moveto (5827     iunlock\(f->ip\);) show
0 312 moveto (5828     return r;) show
0 300 moveto (5829   }) show
0 288 moveto (5830   panic\("fileread"\);) show
0 276 moveto (5831 }) show
0 264 moveto (5832 ) show
0 252 moveto (5833 // Write to file f.) show
0 240 moveto (5834 int) show
0 228 moveto (5835 filewrite\(struct file *f, char *addr, int n\)) show
0 216 moveto (5836 {) show
0 204 moveto (5837   int r;) show
0 192 moveto (5838 ) show
0 180 moveto (5839   if\(f->writable == 0\)) show
0 168 moveto (5840     return -1;) show
0 156 moveto (5841   if\(f->type == FD_PIPE\)) show
0 144 moveto (5842     return pipewrite\(f->pipe, addr, n\);) show
0 132 moveto (5843   if\(f->type == FD_INODE\){) show
0 120 moveto (5844     // write a few blocks at a time to avoid exceeding) show
0 108 moveto (5845     // the maximum log transaction size, including) show
0 96 moveto (5846     // i-node, indirect block, allocation blocks,) show
0 84 moveto (5847     // and 2 blocks of slop for non-aligned writes.) show
0 72 moveto (5848     // this really belongs lower down, since writei\(\)) show
0 60 moveto (5849     // might be writing a device like the console.) show
0 24 moveto (Sheet 58) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/file.c  Page 4) show
0 648 moveto (5850     int max = \(\(LOGSIZE-1-1-2\) / 2\) * 512;) show
0 636 moveto (5851     int i = 0;) show
0 624 moveto (5852     while\(i < n\){) show
0 612 moveto (5853       int n1 = n - i;) show
0 600 moveto (5854       if\(n1 > max\)) show
0 588 moveto (5855         n1 = max;) show
0 576 moveto (5856 ) show
0 564 moveto (5857       begin_op\(\);) show
0 552 moveto (5858       ilock\(f->ip\);) show
0 540 moveto (5859       if \(\(r = writei\(f->ip, addr + i, f->off, n1\)\) > 0\)) show
0 528 moveto (5860         f->off += r;) show
0 516 moveto (5861       iunlock\(f->ip\);) show
0 504 moveto (5862       end_op\(\);) show
0 492 moveto (5863 ) show
0 480 moveto (5864       if\(r < 0\)) show
0 468 moveto (5865         break;) show
0 456 moveto (5866       if\(r != n1\)) show
0 444 moveto (5867         panic\("short filewrite"\);) show
0 432 moveto (5868       i += r;) show
0 420 moveto (5869     }) show
0 408 moveto (5870     return i == n ? n : -1;) show
0 396 moveto (5871   }) show
0 384 moveto (5872   panic\("filewrite"\);) show
0 372 moveto (5873 }) show
0 360 moveto (5874 ) show
0 348 moveto (5875 ) show
0 336 moveto (5876 ) show
0 324 moveto (5877 ) show
0 312 moveto (5878 ) show
0 300 moveto (5879 ) show
0 288 moveto (5880 ) show
0 276 moveto (5881 ) show
0 264 moveto (5882 ) show
0 252 moveto (5883 ) show
0 240 moveto (5884 ) show
0 228 moveto (5885 ) show
0 216 moveto (5886 ) show
0 204 moveto (5887 ) show
0 192 moveto (5888 ) show
0 180 moveto (5889 ) show
0 168 moveto (5890 ) show
0 156 moveto (5891 ) show
0 144 moveto (5892 ) show
0 132 moveto (5893 ) show
0 120 moveto (5894 ) show
0 108 moveto (5895 ) show
0 96 moveto (5896 ) show
0 84 moveto (5897 ) show
0 72 moveto (5898 ) show
0 60 moveto (5899 ) show
0 24 moveto (Sheet 58) show
grestore
restore
showpage
%%Page: 68 68
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/sysfile.c  Page 1) show
0 648 moveto (5900 //) show
0 636 moveto (5901 // File-system system calls.) show
0 624 moveto (5902 // Mostly argument checking, since we don't trust) show
0 612 moveto (5903 // user code, and calls into file.c and fs.c.) show
0 600 moveto (5904 //) show
0 588 moveto (5905 ) show
0 576 moveto (5906 #include "types.h") show
0 564 moveto (5907 #include "defs.h") show
0 552 moveto (5908 #include "param.h") show
0 540 moveto (5909 #include "stat.h") show
0 528 moveto (5910 #include "mmu.h") show
0 516 moveto (5911 #include "proc.h") show
0 504 moveto (5912 #include "fs.h") show
0 492 moveto (5913 #include "file.h") show
0 480 moveto (5914 #include "fcntl.h") show
0 468 moveto (5915 ) show
0 456 moveto (5916 // Fetch the nth word-sized system call argument as a file descriptor) show
0 444 moveto (5917 // and return both the descriptor and the corresponding struct file.) show
0 432 moveto (5918 static int) show
0 420 moveto (5919 argfd\(int n, int *pfd, struct file **pf\)) show
0 408 moveto (5920 {) show
0 396 moveto (5921   int fd;) show
0 384 moveto (5922   struct file *f;) show
0 372 moveto (5923 ) show
0 360 moveto (5924   if\(argint\(n, &fd\) < 0\)) show
0 348 moveto (5925     return -1;) show
0 336 moveto (5926   if\(fd < 0 || fd >= NOFILE || \(f=proc->ofile[fd]\) == 0\)) show
0 324 moveto (5927     return -1;) show
0 312 moveto (5928   if\(pfd\)) show
0 300 moveto (5929     *pfd = fd;) show
0 288 moveto (5930   if\(pf\)) show
0 276 moveto (5931     *pf = f;) show
0 264 moveto (5932   return 0;) show
0 252 moveto (5933 }) show
0 240 moveto (5934 ) show
0 228 moveto (5935 // Allocate a file descriptor for the given file.) show
0 216 moveto (5936 // Takes over file reference from caller on success.) show
0 204 moveto (5937 static int) show
0 192 moveto (5938 fdalloc\(struct file *f\)) show
0 180 moveto (5939 {) show
0 168 moveto (5940   int fd;) show
0 156 moveto (5941 ) show
0 144 moveto (5942   for\(fd = 0; fd < NOFILE; fd++\){) show
0 132 moveto (5943     if\(proc->ofile[fd] == 0\){) show
0 120 moveto (5944       proc->ofile[fd] = f;) show
0 108 moveto (5945       return fd;) show
0 96 moveto (5946     }) show
0 84 moveto (5947   }) show
0 72 moveto (5948   return -1;) show
0 60 moveto (5949 }) show
0 24 moveto (Sheet 59) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/sysfile.c  Page 2) show
0 648 moveto (5950 int) show
0 636 moveto (5951 sys_dup\(void\)) show
0 624 moveto (5952 {) show
0 612 moveto (5953   struct file *f;) show
0 600 moveto (5954   int fd;) show
0 588 moveto (5955 ) show
0 576 moveto (5956   if\(argfd\(0, 0, &f\) < 0\)) show
0 564 moveto (5957     return -1;) show
0 552 moveto (5958   if\(\(fd=fdalloc\(f\)\) < 0\)) show
0 540 moveto (5959     return -1;) show
0 528 moveto (5960   filedup\(f\);) show
0 516 moveto (5961   return fd;) show
0 504 moveto (5962 }) show
0 492 moveto (5963 ) show
0 480 moveto (5964 int) show
0 468 moveto (5965 sys_read\(void\)) show
0 456 moveto (5966 {) show
0 444 moveto (5967   struct file *f;) show
0 432 moveto (5968   int n;) show
0 420 moveto (5969   char *p;) show
0 408 moveto (5970 ) show
0 396 moveto (5971   if\(argfd\(0, 0, &f\) < 0 || argint\(2, &n\) < 0 || argptr\(1, &p, n\) < 0\)) show
0 384 moveto (5972     return -1;) show
0 372 moveto (5973   return fileread\(f, p, n\);) show
0 360 moveto (5974 }) show
0 348 moveto (5975 ) show
0 336 moveto (5976 int) show
0 324 moveto (5977 sys_write\(void\)) show
0 312 moveto (5978 {) show
0 300 moveto (5979   struct file *f;) show
0 288 moveto (5980   int n;) show
0 276 moveto (5981   char *p;) show
0 264 moveto (5982 ) show
0 252 moveto (5983   if\(argfd\(0, 0, &f\) < 0 || argint\(2, &n\) < 0 || argptr\(1, &p, n\) < 0\)) show
0 240 moveto (5984     return -1;) show
0 228 moveto (5985   return filewrite\(f, p, n\);) show
0 216 moveto (5986 }) show
0 204 moveto (5987 ) show
0 192 moveto (5988 int) show
0 180 moveto (5989 sys_close\(void\)) show
0 168 moveto (5990 {) show
0 156 moveto (5991   int fd;) show
0 144 moveto (5992   struct file *f;) show
0 132 moveto (5993 ) show
0 120 moveto (5994   if\(argfd\(0, &fd, &f\) < 0\)) show
0 108 moveto (5995     return -1;) show
0 96 moveto (5996   proc->ofile[fd] = 0;) show
0 84 moveto (5997   fileclose\(f\);) show
0 72 moveto (5998   return 0;) show
0 60 moveto (5999 }) show
0 24 moveto (Sheet 59) show
grestore
restore
showpage
%%Page: 69 69
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/sysfile.c  Page 3) show
0 648 moveto (6000 int) show
0 636 moveto (6001 sys_fstat\(void\)) show
0 624 moveto (6002 {) show
0 612 moveto (6003   struct file *f;) show
0 600 moveto (6004   struct stat *st;) show
0 588 moveto (6005 ) show
0 576 moveto (6006   if\(argfd\(0, 0, &f\) < 0 || argptr\(1, \(void*\)&st, sizeof\(*st\)\) < 0\)) show
0 564 moveto (6007     return -1;) show
0 552 moveto (6008   return filestat\(f, st\);) show
0 540 moveto (6009 }) show
0 528 moveto (6010 ) show
0 516 moveto (6011 // Create the path new as a link to the same inode as old.) show
0 504 moveto (6012 int) show
0 492 moveto (6013 sys_link\(void\)) show
0 480 moveto (6014 {) show
0 468 moveto (6015   char name[DIRSIZ], *new, *old;) show
0 456 moveto (6016   struct inode *dp, *ip;) show
0 444 moveto (6017 ) show
0 432 moveto (6018   if\(argstr\(0, &old\) < 0 || argstr\(1, &new\) < 0\)) show
0 420 moveto (6019     return -1;) show
0 408 moveto (6020 ) show
0 396 moveto (6021   begin_op\(\);) show
0 384 moveto (6022   if\(\(ip = namei\(old\)\) == 0\){) show
0 372 moveto (6023     end_op\(\);) show
0 360 moveto (6024     return -1;) show
0 348 moveto (6025   }) show
0 336 moveto (6026 ) show
0 324 moveto (6027   ilock\(ip\);) show
0 312 moveto (6028   if\(ip->type == T_DIR\){) show
0 300 moveto (6029     iunlockput\(ip\);) show
0 288 moveto (6030     end_op\(\);) show
0 276 moveto (6031     return -1;) show
0 264 moveto (6032   }) show
0 252 moveto (6033 ) show
0 240 moveto (6034   ip->nlink++;) show
0 228 moveto (6035   iupdate\(ip\);) show
0 216 moveto (6036   iunlock\(ip\);) show
0 204 moveto (6037 ) show
0 192 moveto (6038   if\(\(dp = nameiparent\(new, name\)\) == 0\)) show
0 180 moveto (6039     goto bad;) show
0 168 moveto (6040   ilock\(dp\);) show
0 156 moveto (6041   if\(dp->dev != ip->dev || dirlink\(dp, name, ip->inum\) < 0\){) show
0 144 moveto (6042     iunlockput\(dp\);) show
0 132 moveto (6043     goto bad;) show
0 120 moveto (6044   }) show
0 108 moveto (6045   iunlockput\(dp\);) show
0 96 moveto (6046   iput\(ip\);) show
0 84 moveto (6047 ) show
0 72 moveto (6048   end_op\(\);) show
0 60 moveto (6049 ) show
0 24 moveto (Sheet 60) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/sysfile.c  Page 4) show
0 648 moveto (6050   return 0;) show
0 636 moveto (6051 ) show
0 624 moveto (6052 bad:) show
0 612 moveto (6053   ilock\(ip\);) show
0 600 moveto (6054   ip->nlink--;) show
0 588 moveto (6055   iupdate\(ip\);) show
0 576 moveto (6056   iunlockput\(ip\);) show
0 564 moveto (6057   end_op\(\);) show
0 552 moveto (6058   return -1;) show
0 540 moveto (6059 }) show
0 528 moveto (6060 ) show
0 516 moveto (6061 // Is the directory dp empty except for "." and ".." ?) show
0 504 moveto (6062 static int) show
0 492 moveto (6063 isdirempty\(struct inode *dp\)) show
0 480 moveto (6064 {) show
0 468 moveto (6065   int off;) show
0 456 moveto (6066   struct dirent de;) show
0 444 moveto (6067 ) show
0 432 moveto (6068   for\(off=2*sizeof\(de\); off<dp->size; off+=sizeof\(de\)\){) show
0 420 moveto (6069     if\(readi\(dp, \(char*\)&de, off, sizeof\(de\)\) != sizeof\(de\)\)) show
0 408 moveto (6070       panic\("isdirempty: readi"\);) show
0 396 moveto (6071     if\(de.inum != 0\)) show
0 384 moveto (6072       return 0;) show
0 372 moveto (6073   }) show
0 360 moveto (6074   return 1;) show
0 348 moveto (6075 }) show
0 336 moveto (6076 ) show
0 324 moveto (6077 int) show
0 312 moveto (6078 sys_unlink\(void\)) show
0 300 moveto (6079 {) show
0 288 moveto (6080   struct inode *ip, *dp;) show
0 276 moveto (6081   struct dirent de;) show
0 264 moveto (6082   char name[DIRSIZ], *path;) show
0 252 moveto (6083   uint off;) show
0 240 moveto (6084 ) show
0 228 moveto (6085   if\(argstr\(0, &path\) < 0\)) show
0 216 moveto (6086     return -1;) show
0 204 moveto (6087 ) show
0 192 moveto (6088   begin_op\(\);) show
0 180 moveto (6089   if\(\(dp = nameiparent\(path, name\)\) == 0\){) show
0 168 moveto (6090     end_op\(\);) show
0 156 moveto (6091     return -1;) show
0 144 moveto (6092   }) show
0 132 moveto (6093 ) show
0 120 moveto (6094   ilock\(dp\);) show
0 108 moveto (6095 ) show
0 96 moveto (6096   // Cannot unlink "." or "..".) show
0 84 moveto (6097   if\(namecmp\(name, "."\) == 0 || namecmp\(name, ".."\) == 0\)) show
0 72 moveto (6098     goto bad;) show
0 60 moveto (6099 ) show
0 24 moveto (Sheet 60) show
grestore
restore
showpage
%%Page: 70 70
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/sysfile.c  Page 5) show
0 648 moveto (6100   if\(\(ip = dirlookup\(dp, name, &off\)\) == 0\)) show
0 636 moveto (6101     goto bad;) show
0 624 moveto (6102   ilock\(ip\);) show
0 612 moveto (6103 ) show
0 600 moveto (6104   if\(ip->nlink < 1\)) show
0 588 moveto (6105     panic\("unlink: nlink < 1"\);) show
0 576 moveto (6106   if\(ip->type == T_DIR && !isdirempty\(ip\)\){) show
0 564 moveto (6107     iunlockput\(ip\);) show
0 552 moveto (6108     goto bad;) show
0 540 moveto (6109   }) show
0 528 moveto (6110 ) show
0 516 moveto (6111   memset\(&de, 0, sizeof\(de\)\);) show
0 504 moveto (6112   if\(writei\(dp, \(char*\)&de, off, sizeof\(de\)\) != sizeof\(de\)\)) show
0 492 moveto (6113     panic\("unlink: writei"\);) show
0 480 moveto (6114   if\(ip->type == T_DIR\){) show
0 468 moveto (6115     dp->nlink--;) show
0 456 moveto (6116     iupdate\(dp\);) show
0 444 moveto (6117   }) show
0 432 moveto (6118   iunlockput\(dp\);) show
0 420 moveto (6119 ) show
0 408 moveto (6120   ip->nlink--;) show
0 396 moveto (6121   iupdate\(ip\);) show
0 384 moveto (6122   iunlockput\(ip\);) show
0 372 moveto (6123 ) show
0 360 moveto (6124   end_op\(\);) show
0 348 moveto (6125 ) show
0 336 moveto (6126   return 0;) show
0 324 moveto (6127 ) show
0 312 moveto (6128 bad:) show
0 300 moveto (6129   iunlockput\(dp\);) show
0 288 moveto (6130   end_op\(\);) show
0 276 moveto (6131   return -1;) show
0 264 moveto (6132 }) show
0 252 moveto (6133 ) show
0 240 moveto (6134 static struct inode*) show
0 228 moveto (6135 create\(char *path, short type, short major, short minor\)) show
0 216 moveto (6136 {) show
0 204 moveto (6137   uint off;) show
0 192 moveto (6138   struct inode *ip, *dp;) show
0 180 moveto (6139   char name[DIRSIZ];) show
0 168 moveto (6140 ) show
0 156 moveto (6141   if\(\(dp = nameiparent\(path, name\)\) == 0\)) show
0 144 moveto (6142     return 0;) show
0 132 moveto (6143   ilock\(dp\);) show
0 120 moveto (6144 ) show
0 108 moveto (6145   if\(\(ip = dirlookup\(dp, name, &off\)\) != 0\){) show
0 96 moveto (6146     iunlockput\(dp\);) show
0 84 moveto (6147     ilock\(ip\);) show
0 72 moveto (6148     if\(type == T_FILE && ip->type == T_FILE\)) show
0 60 moveto (6149       return ip;) show
0 24 moveto (Sheet 61) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/sysfile.c  Page 6) show
0 648 moveto (6150     iunlockput\(ip\);) show
0 636 moveto (6151     return 0;) show
0 624 moveto (6152   }) show
0 612 moveto (6153 ) show
0 600 moveto (6154   if\(\(ip = ialloc\(dp->dev, type\)\) == 0\)) show
0 588 moveto (6155     panic\("create: ialloc"\);) show
0 576 moveto (6156 ) show
0 564 moveto (6157   ilock\(ip\);) show
0 552 moveto (6158   ip->major = major;) show
0 540 moveto (6159   ip->minor = minor;) show
0 528 moveto (6160   ip->nlink = 1;) show
0 516 moveto (6161   iupdate\(ip\);) show
0 504 moveto (6162 ) show
0 492 moveto (6163   if\(type == T_DIR\){  // Create . and .. entries.) show
0 480 moveto (6164     dp->nlink++;  // for "..") show
0 468 moveto (6165     iupdate\(dp\);) show
0 456 moveto (6166     // No ip->nlink++ for ".": avoid cyclic ref count.) show
0 444 moveto (6167     if\(dirlink\(ip, ".", ip->inum\) < 0 || dirlink\(ip, "..", dp->inum\) < 0\)) show
0 432 moveto (6168       panic\("create dots"\);) show
0 420 moveto (6169   }) show
0 408 moveto (6170 ) show
0 396 moveto (6171   if\(dirlink\(dp, name, ip->inum\) < 0\)) show
0 384 moveto (6172     panic\("create: dirlink"\);) show
0 372 moveto (6173 ) show
0 360 moveto (6174   iunlockput\(dp\);) show
0 348 moveto (6175 ) show
0 336 moveto (6176   return ip;) show
0 324 moveto (6177 }) show
0 312 moveto (6178 ) show
0 300 moveto (6179 int) show
0 288 moveto (6180 sys_open\(void\)) show
0 276 moveto (6181 {) show
0 264 moveto (6182   char *path;) show
0 252 moveto (6183   int fd, omode;) show
0 240 moveto (6184   struct file *f;) show
0 228 moveto (6185   struct inode *ip;) show
0 216 moveto (6186 ) show
0 204 moveto (6187   if\(argstr\(0, &path\) < 0 || argint\(1, &omode\) < 0\)) show
0 192 moveto (6188     return -1;) show
0 180 moveto (6189 ) show
0 168 moveto (6190   begin_op\(\);) show
0 156 moveto (6191 ) show
0 144 moveto (6192   if\(omode & O_CREATE\){) show
0 132 moveto (6193     ip = create\(path, T_FILE, 0, 0\);) show
0 120 moveto (6194     if\(ip == 0\){) show
0 108 moveto (6195       end_op\(\);) show
0 96 moveto (6196       return -1;) show
0 84 moveto (6197     }) show
0 72 moveto (6198   } else {) show
0 60 moveto (6199     if\(\(ip = namei\(path\)\) == 0\){) show
0 24 moveto (Sheet 61) show
grestore
restore
showpage
%%Page: 71 71
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/sysfile.c  Page 7) show
0 648 moveto (6200       end_op\(\);) show
0 636 moveto (6201       return -1;) show
0 624 moveto (6202     }) show
0 612 moveto (6203     ilock\(ip\);) show
0 600 moveto (6204     if\(ip->type == T_DIR && omode != O_RDONLY\){) show
0 588 moveto (6205       iunlockput\(ip\);) show
0 576 moveto (6206       end_op\(\);) show
0 564 moveto (6207       return -1;) show
0 552 moveto (6208     }) show
0 540 moveto (6209   }) show
0 528 moveto (6210 ) show
0 516 moveto (6211   if\(\(f = filealloc\(\)\) == 0 || \(fd = fdalloc\(f\)\) < 0\){) show
0 504 moveto (6212     if\(f\)) show
0 492 moveto (6213       fileclose\(f\);) show
0 480 moveto (6214     iunlockput\(ip\);) show
0 468 moveto (6215     end_op\(\);) show
0 456 moveto (6216     return -1;) show
0 444 moveto (6217   }) show
0 432 moveto (6218   iunlock\(ip\);) show
0 420 moveto (6219   end_op\(\);) show
0 408 moveto (6220 ) show
0 396 moveto (6221   f->type = FD_INODE;) show
0 384 moveto (6222   f->ip = ip;) show
0 372 moveto (6223   f->off = 0;) show
0 360 moveto (6224   f->readable = !\(omode & O_WRONLY\);) show
0 348 moveto (6225   f->writable = \(omode & O_WRONLY\) || \(omode & O_RDWR\);) show
0 336 moveto (6226   return fd;) show
0 324 moveto (6227 }) show
0 312 moveto (6228 ) show
0 300 moveto (6229 int) show
0 288 moveto (6230 sys_mkdir\(void\)) show
0 276 moveto (6231 {) show
0 264 moveto (6232   char *path;) show
0 252 moveto (6233   struct inode *ip;) show
0 240 moveto (6234 ) show
0 228 moveto (6235   begin_op\(\);) show
0 216 moveto (6236   if\(argstr\(0, &path\) < 0 || \(ip = create\(path, T_DIR, 0, 0\)\) == 0\){) show
0 204 moveto (6237     end_op\(\);) show
0 192 moveto (6238     return -1;) show
0 180 moveto (6239   }) show
0 168 moveto (6240   iunlockput\(ip\);) show
0 156 moveto (6241   end_op\(\);) show
0 144 moveto (6242   return 0;) show
0 132 moveto (6243 }) show
0 120 moveto (6244 ) show
0 108 moveto (6245 ) show
0 96 moveto (6246 ) show
0 84 moveto (6247 ) show
0 72 moveto (6248 ) show
0 60 moveto (6249 ) show
0 24 moveto (Sheet 62) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/sysfile.c  Page 8) show
0 648 moveto (6250 int) show
0 636 moveto (6251 sys_mknod\(void\)) show
0 624 moveto (6252 {) show
0 612 moveto (6253   struct inode *ip;) show
0 600 moveto (6254   char *path;) show
0 588 moveto (6255   int len;) show
0 576 moveto (6256   int major, minor;) show
0 564 moveto (6257 ) show
0 552 moveto (6258   begin_op\(\);) show
0 540 moveto (6259   if\(\(len=argstr\(0, &path\)\) < 0 ||) show
0 528 moveto (6260      argint\(1, &major\) < 0 ||) show
0 516 moveto (6261      argint\(2, &minor\) < 0 ||) show
0 504 moveto (6262      \(ip = create\(path, T_DEV, major, minor\)\) == 0\){) show
0 492 moveto (6263     end_op\(\);) show
0 480 moveto (6264     return -1;) show
0 468 moveto (6265   }) show
0 456 moveto (6266   iunlockput\(ip\);) show
0 444 moveto (6267   end_op\(\);) show
0 432 moveto (6268   return 0;) show
0 420 moveto (6269 }) show
0 408 moveto (6270 ) show
0 396 moveto (6271 int) show
0 384 moveto (6272 sys_chdir\(void\)) show
0 372 moveto (6273 {) show
0 360 moveto (6274   char *path;) show
0 348 moveto (6275   struct inode *ip;) show
0 336 moveto (6276 ) show
0 324 moveto (6277   begin_op\(\);) show
0 312 moveto (6278   if\(argstr\(0, &path\) < 0 || \(ip = namei\(path\)\) == 0\){) show
0 300 moveto (6279     end_op\(\);) show
0 288 moveto (6280     return -1;) show
0 276 moveto (6281   }) show
0 264 moveto (6282   ilock\(ip\);) show
0 252 moveto (6283   if\(ip->type != T_DIR\){) show
0 240 moveto (6284     iunlockput\(ip\);) show
0 228 moveto (6285     end_op\(\);) show
0 216 moveto (6286     return -1;) show
0 204 moveto (6287   }) show
0 192 moveto (6288   iunlock\(ip\);) show
0 180 moveto (6289   iput\(proc->cwd\);) show
0 168 moveto (6290   end_op\(\);) show
0 156 moveto (6291   proc->cwd = ip;) show
0 144 moveto (6292   return 0;) show
0 132 moveto (6293 }) show
0 120 moveto (6294 ) show
0 108 moveto (6295 ) show
0 96 moveto (6296 ) show
0 84 moveto (6297 ) show
0 72 moveto (6298 ) show
0 60 moveto (6299 ) show
0 24 moveto (Sheet 62) show
grestore
restore
showpage
%%Page: 72 72
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/sysfile.c  Page 9) show
0 648 moveto (6300 int) show
0 636 moveto (6301 sys_exec\(void\)) show
0 624 moveto (6302 {) show
0 612 moveto (6303   char *path, *argv[MAXARG];) show
0 600 moveto (6304   int i;) show
0 588 moveto (6305   uint uargv, uarg;) show
0 576 moveto (6306 ) show
0 564 moveto (6307   if\(argstr\(0, &path\) < 0 || argint\(1, \(int*\)&uargv\) < 0\){) show
0 552 moveto (6308     return -1;) show
0 540 moveto (6309   }) show
0 528 moveto (6310   memset\(argv, 0, sizeof\(argv\)\);) show
0 516 moveto (6311   for\(i=0;; i++\){) show
0 504 moveto (6312     if\(i >= NELEM\(argv\)\)) show
0 492 moveto (6313       return -1;) show
0 480 moveto (6314     if\(fetchint\(uargv+4*i, \(int*\)&uarg\) < 0\)) show
0 468 moveto (6315       return -1;) show
0 456 moveto (6316     if\(uarg == 0\){) show
0 444 moveto (6317       argv[i] = 0;) show
0 432 moveto (6318       break;) show
0 420 moveto (6319     }) show
0 408 moveto (6320     if\(fetchstr\(uarg, &argv[i]\) < 0\)) show
0 396 moveto (6321       return -1;) show
0 384 moveto (6322   }) show
0 372 moveto (6323   return exec\(path, argv\);) show
0 360 moveto (6324 }) show
0 348 moveto (6325 ) show
0 336 moveto (6326 int) show
0 324 moveto (6327 sys_pipe\(void\)) show
0 312 moveto (6328 {) show
0 300 moveto (6329   int *fd;) show
0 288 moveto (6330   struct file *rf, *wf;) show
0 276 moveto (6331   int fd0, fd1;) show
0 264 moveto (6332 ) show
0 252 moveto (6333   if\(argptr\(0, \(void*\)&fd, 2*sizeof\(fd[0]\)\) < 0\)) show
0 240 moveto (6334     return -1;) show
0 228 moveto (6335   if\(pipealloc\(&rf, &wf\) < 0\)) show
0 216 moveto (6336     return -1;) show
0 204 moveto (6337   fd0 = -1;) show
0 192 moveto (6338   if\(\(fd0 = fdalloc\(rf\)\) < 0 || \(fd1 = fdalloc\(wf\)\) < 0\){) show
0 180 moveto (6339     if\(fd0 >= 0\)) show
0 168 moveto (6340       proc->ofile[fd0] = 0;) show
0 156 moveto (6341     fileclose\(rf\);) show
0 144 moveto (6342     fileclose\(wf\);) show
0 132 moveto (6343     return -1;) show
0 120 moveto (6344   }) show
0 108 moveto (6345   fd[0] = fd0;) show
0 96 moveto (6346   fd[1] = fd1;) show
0 84 moveto (6347   return 0;) show
0 72 moveto (6348 }) show
0 60 moveto (6349 ) show
0 24 moveto (Sheet 63) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/exec.c  Page 1) show
0 648 moveto (6350 #include "types.h") show
0 636 moveto (6351 #include "param.h") show
0 624 moveto (6352 #include "memlayout.h") show
0 612 moveto (6353 #include "mmu.h") show
0 600 moveto (6354 #include "proc.h") show
0 588 moveto (6355 #include "defs.h") show
0 576 moveto (6356 #include "x86.h") show
0 564 moveto (6357 #include "elf.h") show
0 552 moveto (6358 ) show
0 540 moveto (6359 int) show
0 528 moveto (6360 exec\(char *path, char **argv\)) show
0 516 moveto (6361 {) show
0 504 moveto (6362   char *s, *last;) show
0 492 moveto (6363   int i, off;) show
0 480 moveto (6364   uint argc, sz, sp, ustack[3+MAXARG+1];) show
0 468 moveto (6365   struct elfhdr elf;) show
0 456 moveto (6366   struct inode *ip;) show
0 444 moveto (6367   struct proghdr ph;) show
0 432 moveto (6368   pde_t *pgdir, *oldpgdir;) show
0 420 moveto (6369 ) show
0 408 moveto (6370   begin_op\(\);) show
0 396 moveto (6371   if\(\(ip = namei\(path\)\) == 0\){) show
0 384 moveto (6372     end_op\(\);) show
0 372 moveto (6373     return -1;) show
0 360 moveto (6374   }) show
0 348 moveto (6375   ilock\(ip\);) show
0 336 moveto (6376   pgdir = 0;) show
0 324 moveto (6377 ) show
0 312 moveto (6378   // Check ELF header) show
0 300 moveto (6379   if\(readi\(ip, \(char*\)&elf, 0, sizeof\(elf\)\) < sizeof\(elf\)\)) show
0 288 moveto (6380     goto bad;) show
0 276 moveto (6381   if\(elf.magic != ELF_MAGIC\)) show
0 264 moveto (6382     goto bad;) show
0 252 moveto (6383 ) show
0 240 moveto (6384   if\(\(pgdir = setupkvm\(\)\) == 0\)) show
0 228 moveto (6385     goto bad;) show
0 216 moveto (6386 ) show
0 204 moveto (6387   // Load program into memory.) show
0 192 moveto (6388   sz = 0;) show
0 180 moveto (6389   for\(i=0, off=elf.phoff; i<elf.phnum; i++, off+=sizeof\(ph\)\){) show
0 168 moveto (6390     if\(readi\(ip, \(char*\)&ph, off, sizeof\(ph\)\) != sizeof\(ph\)\)) show
0 156 moveto (6391       goto bad;) show
0 144 moveto (6392     if\(ph.type != ELF_PROG_LOAD\)) show
0 132 moveto (6393       continue;) show
0 120 moveto (6394     if\(ph.memsz < ph.filesz\)) show
0 108 moveto (6395       goto bad;) show
0 96 moveto (6396     if\(\(sz = allocuvm\(pgdir, sz, ph.vaddr + ph.memsz\)\) == 0\)) show
0 84 moveto (6397       goto bad;) show
0 72 moveto (6398     if\(loaduvm\(pgdir, \(char*\)ph.vaddr, ip, ph.off, ph.filesz\) < 0\)) show
0 60 moveto (6399       goto bad;) show
0 24 moveto (Sheet 63) show
grestore
restore
showpage
%%Page: 73 73
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/exec.c  Page 2) show
0 648 moveto (6400   }) show
0 636 moveto (6401   iunlockput\(ip\);) show
0 624 moveto (6402   end_op\(\);) show
0 612 moveto (6403   ip = 0;) show
0 600 moveto (6404 ) show
0 588 moveto (6405   // Allocate two pages at the next page boundary.) show
0 576 moveto (6406   // Make the first inaccessible.  Use the second as the user stack.) show
0 564 moveto (6407   sz = PGROUNDUP\(sz\);) show
0 552 moveto (6408   if\(\(sz = allocuvm\(pgdir, sz, sz + 2*PGSIZE\)\) == 0\)) show
0 540 moveto (6409     goto bad;) show
0 528 moveto (6410   clearpteu\(pgdir, \(char*\)\(sz - 2*PGSIZE\)\);) show
0 516 moveto (6411   sp = sz;) show
0 504 moveto (6412 ) show
0 492 moveto (6413   // Push argument strings, prepare rest of stack in ustack.) show
0 480 moveto (6414   for\(argc = 0; argv[argc]; argc++\) {) show
0 468 moveto (6415     if\(argc >= MAXARG\)) show
0 456 moveto (6416       goto bad;) show
0 444 moveto (6417     sp = \(sp - \(strlen\(argv[argc]\) + 1\)\) & ~3;) show
0 432 moveto (6418     if\(copyout\(pgdir, sp, argv[argc], strlen\(argv[argc]\) + 1\) < 0\)) show
0 420 moveto (6419       goto bad;) show
0 408 moveto (6420     ustack[3+argc] = sp;) show
0 396 moveto (6421   }) show
0 384 moveto (6422   ustack[3+argc] = 0;) show
0 372 moveto (6423 ) show
0 360 moveto (6424   ustack[0] = 0xffffffff;  // fake return PC) show
0 348 moveto (6425   ustack[1] = argc;) show
0 336 moveto (6426   ustack[2] = sp - \(argc+1\)*4;  // argv pointer) show
0 324 moveto (6427 ) show
0 312 moveto (6428   sp -= \(3+argc+1\) * 4;) show
0 300 moveto (6429   if\(copyout\(pgdir, sp, ustack, \(3+argc+1\)*4\) < 0\)) show
0 288 moveto (6430     goto bad;) show
0 276 moveto (6431 ) show
0 264 moveto (6432   // Save program name for debugging.) show
0 252 moveto (6433   for\(last=s=path; *s; s++\)) show
0 240 moveto (6434     if\(*s == '/'\)) show
0 228 moveto (6435       last = s+1;) show
0 216 moveto (6436   safestrcpy\(proc->name, last, sizeof\(proc->name\)\);) show
0 204 moveto (6437 ) show
0 192 moveto (6438   // Commit to the user image.) show
0 180 moveto (6439   oldpgdir = proc->pgdir;) show
0 168 moveto (6440   proc->pgdir = pgdir;) show
0 156 moveto (6441   proc->sz = sz;) show
0 144 moveto (6442   proc->tf->eip = elf.entry;  // main) show
0 132 moveto (6443   proc->tf->esp = sp;) show
0 120 moveto (6444   switchuvm\(proc\);) show
0 108 moveto (6445   freevm\(oldpgdir\);) show
0 96 moveto (6446   return 0;) show
0 84 moveto (6447 ) show
0 72 moveto (6448 ) show
0 60 moveto (6449 ) show
0 24 moveto (Sheet 64) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/exec.c  Page 3) show
0 648 moveto (6450  bad:) show
0 636 moveto (6451   if\(pgdir\)) show
0 624 moveto (6452     freevm\(pgdir\);) show
0 612 moveto (6453   if\(ip\){) show
0 600 moveto (6454     iunlockput\(ip\);) show
0 588 moveto (6455     end_op\(\);) show
0 576 moveto (6456   }) show
0 564 moveto (6457   return -1;) show
0 552 moveto (6458 }) show
0 540 moveto (6459 ) show
0 528 moveto (6460 ) show
0 516 moveto (6461 ) show
0 504 moveto (6462 ) show
0 492 moveto (6463 ) show
0 480 moveto (6464 ) show
0 468 moveto (6465 ) show
0 456 moveto (6466 ) show
0 444 moveto (6467 ) show
0 432 moveto (6468 ) show
0 420 moveto (6469 ) show
0 408 moveto (6470 ) show
0 396 moveto (6471 ) show
0 384 moveto (6472 ) show
0 372 moveto (6473 ) show
0 360 moveto (6474 ) show
0 348 moveto (6475 ) show
0 336 moveto (6476 ) show
0 324 moveto (6477 ) show
0 312 moveto (6478 ) show
0 300 moveto (6479 ) show
0 288 moveto (6480 ) show
0 276 moveto (6481 ) show
0 264 moveto (6482 ) show
0 252 moveto (6483 ) show
0 240 moveto (6484 ) show
0 228 moveto (6485 ) show
0 216 moveto (6486 ) show
0 204 moveto (6487 ) show
0 192 moveto (6488 ) show
0 180 moveto (6489 ) show
0 168 moveto (6490 ) show
0 156 moveto (6491 ) show
0 144 moveto (6492 ) show
0 132 moveto (6493 ) show
0 120 moveto (6494 ) show
0 108 moveto (6495 ) show
0 96 moveto (6496 ) show
0 84 moveto (6497 ) show
0 72 moveto (6498 ) show
0 60 moveto (6499 ) show
0 24 moveto (Sheet 64) show
grestore
restore
showpage
%%Page: 74 74
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/pipe.c  Page 1) show
0 648 moveto (6500 #include "types.h") show
0 636 moveto (6501 #include "defs.h") show
0 624 moveto (6502 #include "param.h") show
0 612 moveto (6503 #include "mmu.h") show
0 600 moveto (6504 #include "proc.h") show
0 588 moveto (6505 #include "fs.h") show
0 576 moveto (6506 #include "file.h") show
0 564 moveto (6507 #include "spinlock.h") show
0 552 moveto (6508 ) show
0 540 moveto (6509 #define PIPESIZE 512) show
0 528 moveto (6510 ) show
0 516 moveto (6511 struct pipe {) show
0 504 moveto (6512   struct spinlock lock;) show
0 492 moveto (6513   char data[PIPESIZE];) show
0 480 moveto (6514   uint nread;     // number of bytes read) show
0 468 moveto (6515   uint nwrite;    // number of bytes written) show
0 456 moveto (6516   int readopen;   // read fd is still open) show
0 444 moveto (6517   int writeopen;  // write fd is still open) show
0 432 moveto (6518 };) show
0 420 moveto (6519 ) show
0 408 moveto (6520 int) show
0 396 moveto (6521 pipealloc\(struct file **f0, struct file **f1\)) show
0 384 moveto (6522 {) show
0 372 moveto (6523   struct pipe *p;) show
0 360 moveto (6524 ) show
0 348 moveto (6525   p = 0;) show
0 336 moveto (6526   *f0 = *f1 = 0;) show
0 324 moveto (6527   if\(\(*f0 = filealloc\(\)\) == 0 || \(*f1 = filealloc\(\)\) == 0\)) show
0 312 moveto (6528     goto bad;) show
0 300 moveto (6529   if\(\(p = \(struct pipe*\)kalloc\(\)\) == 0\)) show
0 288 moveto (6530     goto bad;) show
0 276 moveto (6531   p->readopen = 1;) show
0 264 moveto (6532   p->writeopen = 1;) show
0 252 moveto (6533   p->nwrite = 0;) show
0 240 moveto (6534   p->nread = 0;) show
0 228 moveto (6535   initlock\(&p->lock, "pipe"\);) show
0 216 moveto (6536   \(*f0\)->type = FD_PIPE;) show
0 204 moveto (6537   \(*f0\)->readable = 1;) show
0 192 moveto (6538   \(*f0\)->writable = 0;) show
0 180 moveto (6539   \(*f0\)->pipe = p;) show
0 168 moveto (6540   \(*f1\)->type = FD_PIPE;) show
0 156 moveto (6541   \(*f1\)->readable = 0;) show
0 144 moveto (6542   \(*f1\)->writable = 1;) show
0 132 moveto (6543   \(*f1\)->pipe = p;) show
0 120 moveto (6544   return 0;) show
0 108 moveto (6545 ) show
0 96 moveto (6546 ) show
0 84 moveto (6547 ) show
0 72 moveto (6548 ) show
0 60 moveto (6549 ) show
0 24 moveto (Sheet 65) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/pipe.c  Page 2) show
0 648 moveto (6550  bad:) show
0 636 moveto (6551   if\(p\)) show
0 624 moveto (6552     kfree\(\(char*\)p\);) show
0 612 moveto (6553   if\(*f0\)) show
0 600 moveto (6554     fileclose\(*f0\);) show
0 588 moveto (6555   if\(*f1\)) show
0 576 moveto (6556     fileclose\(*f1\);) show
0 564 moveto (6557   return -1;) show
0 552 moveto (6558 }) show
0 540 moveto (6559 ) show
0 528 moveto (6560 void) show
0 516 moveto (6561 pipeclose\(struct pipe *p, int writable\)) show
0 504 moveto (6562 {) show
0 492 moveto (6563   acquire\(&p->lock\);) show
0 480 moveto (6564   if\(writable\){) show
0 468 moveto (6565     p->writeopen = 0;) show
0 456 moveto (6566     wakeup\(&p->nread\);) show
0 444 moveto (6567   } else {) show
0 432 moveto (6568     p->readopen = 0;) show
0 420 moveto (6569     wakeup\(&p->nwrite\);) show
0 408 moveto (6570   }) show
0 396 moveto (6571   if\(p->readopen == 0 && p->writeopen == 0\){) show
0 384 moveto (6572     release\(&p->lock\);) show
0 372 moveto (6573     kfree\(\(char*\)p\);) show
0 360 moveto (6574   } else) show
0 348 moveto (6575     release\(&p->lock\);) show
0 336 moveto (6576 }) show
0 324 moveto (6577 ) show
0 312 moveto (6578 int) show
0 300 moveto (6579 pipewrite\(struct pipe *p, char *addr, int n\)) show
0 288 moveto (6580 {) show
0 276 moveto (6581   int i;) show
0 264 moveto (6582 ) show
0 252 moveto (6583   acquire\(&p->lock\);) show
0 240 moveto (6584   for\(i = 0; i < n; i++\){) show
0 228 moveto (6585     while\(p->nwrite == p->nread + PIPESIZE\){  ) show
0 216 moveto (6586       if\(p->readopen == 0 || proc->killed\){) show
0 204 moveto (6587         release\(&p->lock\);) show
0 192 moveto (6588         return -1;) show
0 180 moveto (6589       }) show
0 168 moveto (6590       wakeup\(&p->nread\);) show
0 156 moveto (6591       sleep\(&p->nwrite, &p->lock\);  ) show
0 144 moveto (6592     }) show
0 132 moveto (6593     p->data[p->nwrite++ % PIPESIZE] = addr[i];) show
0 120 moveto (6594   }) show
0 108 moveto (6595   wakeup\(&p->nread\);  ) show
0 96 moveto (6596   release\(&p->lock\);) show
0 84 moveto (6597   return n;) show
0 72 moveto (6598 }) show
0 60 moveto (6599 ) show
0 24 moveto (Sheet 65) show
grestore
restore
showpage
%%Page: 75 75
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/pipe.c  Page 3) show
0 648 moveto (6600 int) show
0 636 moveto (6601 piperead\(struct pipe *p, char *addr, int n\)) show
0 624 moveto (6602 {) show
0 612 moveto (6603   int i;) show
0 600 moveto (6604 ) show
0 588 moveto (6605   acquire\(&p->lock\);) show
0 576 moveto (6606   while\(p->nread == p->nwrite && p->writeopen\){  ) show
0 564 moveto (6607     if\(proc->killed\){) show
0 552 moveto (6608       release\(&p->lock\);) show
0 540 moveto (6609       return -1;) show
0 528 moveto (6610     }) show
0 516 moveto (6611     sleep\(&p->nread, &p->lock\); ) show
0 504 moveto (6612   }) show
0 492 moveto (6613   for\(i = 0; i < n; i++\){  ) show
0 480 moveto (6614     if\(p->nread == p->nwrite\)) show
0 468 moveto (6615       break;) show
0 456 moveto (6616     addr[i] = p->data[p->nread++ % PIPESIZE];) show
0 444 moveto (6617   }) show
0 432 moveto (6618   wakeup\(&p->nwrite\);  ) show
0 420 moveto (6619   release\(&p->lock\);) show
0 408 moveto (6620   return i;) show
0 396 moveto (6621 }) show
0 384 moveto (6622 ) show
0 372 moveto (6623 ) show
0 360 moveto (6624 ) show
0 348 moveto (6625 ) show
0 336 moveto (6626 ) show
0 324 moveto (6627 ) show
0 312 moveto (6628 ) show
0 300 moveto (6629 ) show
0 288 moveto (6630 ) show
0 276 moveto (6631 ) show
0 264 moveto (6632 ) show
0 252 moveto (6633 ) show
0 240 moveto (6634 ) show
0 228 moveto (6635 ) show
0 216 moveto (6636 ) show
0 204 moveto (6637 ) show
0 192 moveto (6638 ) show
0 180 moveto (6639 ) show
0 168 moveto (6640 ) show
0 156 moveto (6641 ) show
0 144 moveto (6642 ) show
0 132 moveto (6643 ) show
0 120 moveto (6644 ) show
0 108 moveto (6645 ) show
0 96 moveto (6646 ) show
0 84 moveto (6647 ) show
0 72 moveto (6648 ) show
0 60 moveto (6649 ) show
0 24 moveto (Sheet 66) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/string.c  Page 1) show
0 648 moveto (6650 #include "types.h") show
0 636 moveto (6651 #include "x86.h") show
0 624 moveto (6652 ) show
0 612 moveto (6653 void*) show
0 600 moveto (6654 memset\(void *dst, int c, uint n\)) show
0 588 moveto (6655 {) show
0 576 moveto (6656   if \(\(int\)dst%4 == 0 && n%4 == 0\){) show
0 564 moveto (6657     c &= 0xFF;) show
0 552 moveto (6658     stosl\(dst, \(c<<24\)|\(c<<16\)|\(c<<8\)|c, n/4\);) show
0 540 moveto (6659   } else) show
0 528 moveto (6660     stosb\(dst, c, n\);) show
0 516 moveto (6661   return dst;) show
0 504 moveto (6662 }) show
0 492 moveto (6663 ) show
0 480 moveto (6664 int) show
0 468 moveto (6665 memcmp\(const void *v1, const void *v2, uint n\)) show
0 456 moveto (6666 {) show
0 444 moveto (6667   const uchar *s1, *s2;) show
0 432 moveto (6668 ) show
0 420 moveto (6669   s1 = v1;) show
0 408 moveto (6670   s2 = v2;) show
0 396 moveto (6671   while\(n-- > 0\){) show
0 384 moveto (6672     if\(*s1 != *s2\)) show
0 372 moveto (6673       return *s1 - *s2;) show
0 360 moveto (6674     s1++, s2++;) show
0 348 moveto (6675   }) show
0 336 moveto (6676 ) show
0 324 moveto (6677   return 0;) show
0 312 moveto (6678 }) show
0 300 moveto (6679 ) show
0 288 moveto (6680 void*) show
0 276 moveto (6681 memmove\(void *dst, const void *src, uint n\)) show
0 264 moveto (6682 {) show
0 252 moveto (6683   const char *s;) show
0 240 moveto (6684   char *d;) show
0 228 moveto (6685 ) show
0 216 moveto (6686   s = src;) show
0 204 moveto (6687   d = dst;) show
0 192 moveto (6688   if\(s < d && s + n > d\){) show
0 180 moveto (6689     s += n;) show
0 168 moveto (6690     d += n;) show
0 156 moveto (6691     while\(n-- > 0\)) show
0 144 moveto (6692       *--d = *--s;) show
0 132 moveto (6693   } else) show
0 120 moveto (6694     while\(n-- > 0\)) show
0 108 moveto (6695       *d++ = *s++;) show
0 96 moveto (6696 ) show
0 84 moveto (6697   return dst;) show
0 72 moveto (6698 }) show
0 60 moveto (6699 ) show
0 24 moveto (Sheet 66) show
grestore
restore
showpage
%%Page: 76 76
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/string.c  Page 2) show
0 648 moveto (6700 // memcpy exists to placate GCC.  Use memmove.) show
0 636 moveto (6701 void*) show
0 624 moveto (6702 memcpy\(void *dst, const void *src, uint n\)) show
0 612 moveto (6703 {) show
0 600 moveto (6704   return memmove\(dst, src, n\);) show
0 588 moveto (6705 }) show
0 576 moveto (6706 ) show
0 564 moveto (6707 int) show
0 552 moveto (6708 strncmp\(const char *p, const char *q, uint n\)) show
0 540 moveto (6709 {) show
0 528 moveto (6710   while\(n > 0 && *p && *p == *q\)) show
0 516 moveto (6711     n--, p++, q++;) show
0 504 moveto (6712   if\(n == 0\)) show
0 492 moveto (6713     return 0;) show
0 480 moveto (6714   return \(uchar\)*p - \(uchar\)*q;) show
0 468 moveto (6715 }) show
0 456 moveto (6716 ) show
0 444 moveto (6717 char*) show
0 432 moveto (6718 strncpy\(char *s, const char *t, int n\)) show
0 420 moveto (6719 {) show
0 408 moveto (6720   char *os;) show
0 396 moveto (6721 ) show
0 384 moveto (6722   os = s;) show
0 372 moveto (6723   while\(n-- > 0 && \(*s++ = *t++\) != 0\)) show
0 360 moveto (6724     ;) show
0 348 moveto (6725   while\(n-- > 0\)) show
0 336 moveto (6726     *s++ = 0;) show
0 324 moveto (6727   return os;) show
0 312 moveto (6728 }) show
0 300 moveto (6729 ) show
0 288 moveto (6730 // Like strncpy but guaranteed to NUL-terminate.) show
0 276 moveto (6731 char*) show
0 264 moveto (6732 safestrcpy\(char *s, const char *t, int n\)) show
0 252 moveto (6733 {) show
0 240 moveto (6734   char *os;) show
0 228 moveto (6735 ) show
0 216 moveto (6736   os = s;) show
0 204 moveto (6737   if\(n <= 0\)) show
0 192 moveto (6738     return os;) show
0 180 moveto (6739   while\(--n > 0 && \(*s++ = *t++\) != 0\)) show
0 168 moveto (6740     ;) show
0 156 moveto (6741   *s = 0;) show
0 144 moveto (6742   return os;) show
0 132 moveto (6743 }) show
0 120 moveto (6744 ) show
0 108 moveto (6745 ) show
0 96 moveto (6746 ) show
0 84 moveto (6747 ) show
0 72 moveto (6748 ) show
0 60 moveto (6749 ) show
0 24 moveto (Sheet 67) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/string.c  Page 3) show
0 648 moveto (6750 int) show
0 636 moveto (6751 strlen\(const char *s\)) show
0 624 moveto (6752 {) show
0 612 moveto (6753   int n;) show
0 600 moveto (6754 ) show
0 588 moveto (6755   for\(n = 0; s[n]; n++\)) show
0 576 moveto (6756     ;) show
0 564 moveto (6757   return n;) show
0 552 moveto (6758 }) show
0 540 moveto (6759 ) show
0 528 moveto (6760 ) show
0 516 moveto (6761 ) show
0 504 moveto (6762 ) show
0 492 moveto (6763 ) show
0 480 moveto (6764 ) show
0 468 moveto (6765 ) show
0 456 moveto (6766 ) show
0 444 moveto (6767 ) show
0 432 moveto (6768 ) show
0 420 moveto (6769 ) show
0 408 moveto (6770 ) show
0 396 moveto (6771 ) show
0 384 moveto (6772 ) show
0 372 moveto (6773 ) show
0 360 moveto (6774 ) show
0 348 moveto (6775 ) show
0 336 moveto (6776 ) show
0 324 moveto (6777 ) show
0 312 moveto (6778 ) show
0 300 moveto (6779 ) show
0 288 moveto (6780 ) show
0 276 moveto (6781 ) show
0 264 moveto (6782 ) show
0 252 moveto (6783 ) show
0 240 moveto (6784 ) show
0 228 moveto (6785 ) show
0 216 moveto (6786 ) show
0 204 moveto (6787 ) show
0 192 moveto (6788 ) show
0 180 moveto (6789 ) show
0 168 moveto (6790 ) show
0 156 moveto (6791 ) show
0 144 moveto (6792 ) show
0 132 moveto (6793 ) show
0 120 moveto (6794 ) show
0 108 moveto (6795 ) show
0 96 moveto (6796 ) show
0 84 moveto (6797 ) show
0 72 moveto (6798 ) show
0 60 moveto (6799 ) show
0 24 moveto (Sheet 67) show
grestore
restore
showpage
%%Page: 77 77
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/mp.h  Page 1) show
0 648 moveto (6800 // See MultiProcessor Specification Version 1.[14]) show
0 636 moveto (6801 ) show
0 624 moveto (6802 struct mp {             // floating pointer) show
0 612 moveto (6803   uchar signature[4];           // "_MP_") show
0 600 moveto (6804   void *physaddr;               // phys addr of MP config table) show
0 588 moveto (6805   uchar length;                 // 1) show
0 576 moveto (6806   uchar specrev;                // [14]) show
0 564 moveto (6807   uchar checksum;               // all bytes must add up to 0) show
0 552 moveto (6808   uchar type;                   // MP system config type) show
0 540 moveto (6809   uchar imcrp;) show
0 528 moveto (6810   uchar reserved[3];) show
0 516 moveto (6811 };) show
0 504 moveto (6812 ) show
0 492 moveto (6813 struct mpconf {         // configuration table header) show
0 480 moveto (6814   uchar signature[4];           // "PCMP") show
0 468 moveto (6815   ushort length;                // total table length) show
0 456 moveto (6816   uchar version;                // [14]) show
0 444 moveto (6817   uchar checksum;               // all bytes must add up to 0) show
0 432 moveto (6818   uchar product[20];            // product id) show
0 420 moveto (6819   uint *oemtable;               // OEM table pointer) show
0 408 moveto (6820   ushort oemlength;             // OEM table length) show
0 396 moveto (6821   ushort entry;                 // entry count) show
0 384 moveto (6822   uint *lapicaddr;              // address of local APIC) show
0 372 moveto (6823   ushort xlength;               // extended table length) show
0 360 moveto (6824   uchar xchecksum;              // extended table checksum) show
0 348 moveto (6825   uchar reserved;) show
0 336 moveto (6826 };) show
0 324 moveto (6827 ) show
0 312 moveto (6828 struct mpproc {         // processor table entry) show
0 300 moveto (6829   uchar type;                   // entry type \(0\)) show
0 288 moveto (6830   uchar apicid;                 // local APIC id) show
0 276 moveto (6831   uchar version;                // local APIC verison) show
0 264 moveto (6832   uchar flags;                  // CPU flags) show
0 252 moveto (6833     #define MPBOOT 0x02           // This proc is the bootstrap processor.) show
0 240 moveto (6834   uchar signature[4];           // CPU signature) show
0 228 moveto (6835   uint feature;                 // feature flags from CPUID instruction) show
0 216 moveto (6836   uchar reserved[8];) show
0 204 moveto (6837 };) show
0 192 moveto (6838 ) show
0 180 moveto (6839 struct mpioapic {       // I/O APIC table entry) show
0 168 moveto (6840   uchar type;                   // entry type \(2\)) show
0 156 moveto (6841   uchar apicno;                 // I/O APIC id) show
0 144 moveto (6842   uchar version;                // I/O APIC version) show
0 132 moveto (6843   uchar flags;                  // I/O APIC flags) show
0 120 moveto (6844   uint *addr;                  // I/O APIC address) show
0 108 moveto (6845 };) show
0 96 moveto (6846 ) show
0 84 moveto (6847 ) show
0 72 moveto (6848 ) show
0 60 moveto (6849 ) show
0 24 moveto (Sheet 68) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/mp.h  Page 2) show
0 648 moveto (6850 // Table entry types) show
0 636 moveto (6851 #define MPPROC    0x00  // One per processor) show
0 624 moveto (6852 #define MPBUS     0x01  // One per bus) show
0 612 moveto (6853 #define MPIOAPIC  0x02  // One per I/O APIC) show
0 600 moveto (6854 #define MPIOINTR  0x03  // One per bus interrupt source) show
0 588 moveto (6855 #define MPLINTR   0x04  // One per system interrupt source) show
0 576 moveto (6856 ) show
0 564 moveto (6857 // Blank page.) show
0 552 moveto (6858 ) show
0 540 moveto (6859 ) show
0 528 moveto (6860 ) show
0 516 moveto (6861 ) show
0 504 moveto (6862 ) show
0 492 moveto (6863 ) show
0 480 moveto (6864 ) show
0 468 moveto (6865 ) show
0 456 moveto (6866 ) show
0 444 moveto (6867 ) show
0 432 moveto (6868 ) show
0 420 moveto (6869 ) show
0 408 moveto (6870 ) show
0 396 moveto (6871 ) show
0 384 moveto (6872 ) show
0 372 moveto (6873 ) show
0 360 moveto (6874 ) show
0 348 moveto (6875 ) show
0 336 moveto (6876 ) show
0 324 moveto (6877 ) show
0 312 moveto (6878 ) show
0 300 moveto (6879 ) show
0 288 moveto (6880 ) show
0 276 moveto (6881 ) show
0 264 moveto (6882 ) show
0 252 moveto (6883 ) show
0 240 moveto (6884 ) show
0 228 moveto (6885 ) show
0 216 moveto (6886 ) show
0 204 moveto (6887 ) show
0 192 moveto (6888 ) show
0 180 moveto (6889 ) show
0 168 moveto (6890 ) show
0 156 moveto (6891 ) show
0 144 moveto (6892 ) show
0 132 moveto (6893 ) show
0 120 moveto (6894 ) show
0 108 moveto (6895 ) show
0 96 moveto (6896 ) show
0 84 moveto (6897 ) show
0 72 moveto (6898 ) show
0 60 moveto (6899 ) show
0 24 moveto (Sheet 68) show
grestore
restore
showpage
%%Page: 78 78
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/mp.c  Page 1) show
0 648 moveto (6900 // Multiprocessor support) show
0 636 moveto (6901 // Search memory for MP description structures.) show
0 624 moveto (6902 // http://developer.intel.com/design/pentium/datashts/24201606.pdf) show
0 612 moveto (6903 ) show
0 600 moveto (6904 #include "types.h") show
0 588 moveto (6905 #include "defs.h") show
0 576 moveto (6906 #include "param.h") show
0 564 moveto (6907 #include "memlayout.h") show
0 552 moveto (6908 #include "mp.h") show
0 540 moveto (6909 #include "x86.h") show
0 528 moveto (6910 #include "mmu.h") show
0 516 moveto (6911 #include "proc.h") show
0 504 moveto (6912 ) show
0 492 moveto (6913 struct cpu cpus[NCPU];) show
0 480 moveto (6914 static struct cpu *bcpu;) show
0 468 moveto (6915 int ismp;) show
0 456 moveto (6916 int ncpu;) show
0 444 moveto (6917 uchar ioapicid;) show
0 432 moveto (6918 ) show
0 420 moveto (6919 int) show
0 408 moveto (6920 mpbcpu\(void\)) show
0 396 moveto (6921 {) show
0 384 moveto (6922   return bcpu-cpus;) show
0 372 moveto (6923 }) show
0 360 moveto (6924 ) show
0 348 moveto (6925 static uchar) show
0 336 moveto (6926 sum\(uchar *addr, int len\)) show
0 324 moveto (6927 {) show
0 312 moveto (6928   int i, sum;) show
0 300 moveto (6929 ) show
0 288 moveto (6930   sum = 0;) show
0 276 moveto (6931   for\(i=0; i<len; i++\)) show
0 264 moveto (6932     sum += addr[i];) show
0 252 moveto (6933   return sum;) show
0 240 moveto (6934 }) show
0 228 moveto (6935 ) show
0 216 moveto (6936 // Look for an MP structure in the len bytes at addr.) show
0 204 moveto (6937 static struct mp*) show
0 192 moveto (6938 mpsearch1\(uint a, int len\)) show
0 180 moveto (6939 {) show
0 168 moveto (6940   uchar *e, *p, *addr;) show
0 156 moveto (6941 ) show
0 144 moveto (6942   addr = p2v\(a\);) show
0 132 moveto (6943   e = addr+len;) show
0 120 moveto (6944   for\(p = addr; p < e; p += sizeof\(struct mp\)\)) show
0 108 moveto (6945     if\(memcmp\(p, "_MP_", 4\) == 0 && sum\(p, sizeof\(struct mp\)\) == 0\)) show
0 96 moveto (6946       return \(struct mp*\)p;) show
0 84 moveto (6947   return 0;) show
0 72 moveto (6948 }) show
0 60 moveto (6949 ) show
0 24 moveto (Sheet 69) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/mp.c  Page 2) show
0 648 moveto (6950 // Search for the MP Floating Pointer Structure, which according to the) show
0 636 moveto (6951 // spec is in one of the following three locations:) show
0 624 moveto (6952 // 1\) in the first KB of the EBDA;) show
0 612 moveto (6953 // 2\) in the last KB of system base memory;) show
0 600 moveto (6954 // 3\) in the BIOS ROM between 0xE0000 and 0xFFFFF.) show
0 588 moveto (6955 static struct mp*) show
0 576 moveto (6956 mpsearch\(void\)) show
0 564 moveto (6957 {) show
0 552 moveto (6958   uchar *bda;) show
0 540 moveto (6959   uint p;) show
0 528 moveto (6960   struct mp *mp;) show
0 516 moveto (6961 ) show
0 504 moveto (6962   bda = \(uchar *\) P2V\(0x400\);) show
0 492 moveto (6963   if\(\(p = \(\(bda[0x0F]<<8\)| bda[0x0E]\) << 4\)\){) show
0 480 moveto (6964     if\(\(mp = mpsearch1\(p, 1024\)\)\)) show
0 468 moveto (6965       return mp;) show
0 456 moveto (6966   } else {) show
0 444 moveto (6967     p = \(\(bda[0x14]<<8\)|bda[0x13]\)*1024;) show
0 432 moveto (6968     if\(\(mp = mpsearch1\(p-1024, 1024\)\)\)) show
0 420 moveto (6969       return mp;) show
0 408 moveto (6970   }) show
0 396 moveto (6971   return mpsearch1\(0xF0000, 0x10000\);) show
0 384 moveto (6972 }) show
0 372 moveto (6973 ) show
0 360 moveto (6974 // Search for an MP configuration table.  For now,) show
0 348 moveto (6975 // don't accept the default configurations \(physaddr == 0\).) show
0 336 moveto (6976 // Check for correct signature, calculate the checksum and,) show
0 324 moveto (6977 // if correct, check the version.) show
0 312 moveto (6978 // To do: check extended table checksum.) show
0 300 moveto (6979 static struct mpconf*) show
0 288 moveto (6980 mpconfig\(struct mp **pmp\)) show
0 276 moveto (6981 {) show
0 264 moveto (6982   struct mpconf *conf;) show
0 252 moveto (6983   struct mp *mp;) show
0 240 moveto (6984 ) show
0 228 moveto (6985   if\(\(mp = mpsearch\(\)\) == 0 || mp->physaddr == 0\)) show
0 216 moveto (6986     return 0;) show
0 204 moveto (6987   conf = \(struct mpconf*\) p2v\(\(uint\) mp->physaddr\);) show
0 192 moveto (6988   if\(memcmp\(conf, "PCMP", 4\) != 0\)) show
0 180 moveto (6989     return 0;) show
0 168 moveto (6990   if\(conf->version != 1 && conf->version != 4\)) show
0 156 moveto (6991     return 0;) show
0 144 moveto (6992   if\(sum\(\(uchar*\)conf, conf->length\) != 0\)) show
0 132 moveto (6993     return 0;) show
0 120 moveto (6994   *pmp = mp;) show
0 108 moveto (6995   return conf;) show
0 96 moveto (6996 }) show
0 84 moveto (6997 ) show
0 72 moveto (6998 ) show
0 60 moveto (6999 ) show
0 24 moveto (Sheet 69) show
grestore
restore
showpage
%%Page: 79 79
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/mp.c  Page 3) show
0 648 moveto (7000 void) show
0 636 moveto (7001 mpinit\(void\)) show
0 624 moveto (7002 {) show
0 612 moveto (7003   uchar *p, *e;) show
0 600 moveto (7004   struct mp *mp;) show
0 588 moveto (7005   struct mpconf *conf;) show
0 576 moveto (7006   struct mpproc *proc;) show
0 564 moveto (7007   struct mpioapic *ioapic;) show
0 552 moveto (7008 ) show
0 540 moveto (7009   bcpu = &cpus[0];) show
0 528 moveto (7010   if\(\(conf = mpconfig\(&mp\)\) == 0\)) show
0 516 moveto (7011     return;) show
0 504 moveto (7012   ismp = 1;) show
0 492 moveto (7013   lapic = \(uint*\)conf->lapicaddr;) show
0 480 moveto (7014   for\(p=\(uchar*\)\(conf+1\), e=\(uchar*\)conf+conf->length; p<e; \){) show
0 468 moveto (7015     switch\(*p\){) show
0 456 moveto (7016     case MPPROC:) show
0 444 moveto (7017       proc = \(struct mpproc*\)p;) show
0 432 moveto (7018       if\(ncpu != proc->apicid\){) show
0 420 moveto (7019         cprintf\("mpinit: ncpu=%d apicid=%d\\n", ncpu, proc->apicid\);) show
0 408 moveto (7020         ismp = 0;) show
0 396 moveto (7021       }) show
0 384 moveto (7022       if\(proc->flags & MPBOOT\)) show
0 372 moveto (7023         bcpu = &cpus[ncpu];) show
0 360 moveto (7024       cpus[ncpu].id = ncpu;) show
0 348 moveto (7025       ncpu++;) show
0 336 moveto (7026       p += sizeof\(struct mpproc\);) show
0 324 moveto (7027       continue;) show
0 312 moveto (7028     case MPIOAPIC:) show
0 300 moveto (7029       ioapic = \(struct mpioapic*\)p;) show
0 288 moveto (7030       ioapicid = ioapic->apicno;) show
0 276 moveto (7031       p += sizeof\(struct mpioapic\);) show
0 264 moveto (7032       continue;) show
0 252 moveto (7033     case MPBUS:) show
0 240 moveto (7034     case MPIOINTR:) show
0 228 moveto (7035     case MPLINTR:) show
0 216 moveto (7036       p += 8;) show
0 204 moveto (7037       continue;) show
0 192 moveto (7038     default:) show
0 180 moveto (7039       cprintf\("mpinit: unknown config type %x\\n", *p\);) show
0 168 moveto (7040       ismp = 0;) show
0 156 moveto (7041     }) show
0 144 moveto (7042   }) show
0 132 moveto (7043   if\(!ismp\){) show
0 120 moveto (7044     // Didn't like what we found; fall back to no MP.) show
0 108 moveto (7045     ncpu = 1;) show
0 96 moveto (7046     lapic = 0;) show
0 84 moveto (7047     ioapicid = 0;) show
0 72 moveto (7048     return;) show
0 60 moveto (7049   }) show
0 24 moveto (Sheet 70) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/mp.c  Page 4) show
0 648 moveto (7050   if\(mp->imcrp\){) show
0 636 moveto (7051     // Bochs doesn't support IMCR, so this doesn't run on Bochs.) show
0 624 moveto (7052     // But it would on real hardware.) show
0 612 moveto (7053     outb\(0x22, 0x70\);   // Select IMCR) show
0 600 moveto (7054     outb\(0x23, inb\(0x23\) | 1\);  // Mask external interrupts.) show
0 588 moveto (7055   }) show
0 576 moveto (7056 }) show
0 564 moveto (7057 ) show
0 552 moveto (7058 ) show
0 540 moveto (7059 ) show
0 528 moveto (7060 ) show
0 516 moveto (7061 ) show
0 504 moveto (7062 ) show
0 492 moveto (7063 ) show
0 480 moveto (7064 ) show
0 468 moveto (7065 ) show
0 456 moveto (7066 ) show
0 444 moveto (7067 ) show
0 432 moveto (7068 ) show
0 420 moveto (7069 ) show
0 408 moveto (7070 ) show
0 396 moveto (7071 ) show
0 384 moveto (7072 ) show
0 372 moveto (7073 ) show
0 360 moveto (7074 ) show
0 348 moveto (7075 ) show
0 336 moveto (7076 ) show
0 324 moveto (7077 ) show
0 312 moveto (7078 ) show
0 300 moveto (7079 ) show
0 288 moveto (7080 ) show
0 276 moveto (7081 ) show
0 264 moveto (7082 ) show
0 252 moveto (7083 ) show
0 240 moveto (7084 ) show
0 228 moveto (7085 ) show
0 216 moveto (7086 ) show
0 204 moveto (7087 ) show
0 192 moveto (7088 ) show
0 180 moveto (7089 ) show
0 168 moveto (7090 ) show
0 156 moveto (7091 ) show
0 144 moveto (7092 ) show
0 132 moveto (7093 ) show
0 120 moveto (7094 ) show
0 108 moveto (7095 ) show
0 96 moveto (7096 ) show
0 84 moveto (7097 ) show
0 72 moveto (7098 ) show
0 60 moveto (7099 ) show
0 24 moveto (Sheet 70) show
grestore
restore
showpage
%%Page: 80 80
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/lapic.c  Page 1) show
0 648 moveto (7100 // The local APIC manages internal \(non-I/O\) interrupts.) show
0 636 moveto (7101 // See Chapter 8 & Appendix C of Intel processor manual volume 3.) show
0 624 moveto (7102 // As of 7/26/2016, Intel processor manual Chapter 10 of Volume 3) show
0 612 moveto (7103 ) show
0 600 moveto (7104 #include "types.h") show
0 588 moveto (7105 #include "defs.h") show
0 576 moveto (7106 #include "date.h") show
0 564 moveto (7107 #include "memlayout.h") show
0 552 moveto (7108 #include "traps.h") show
0 540 moveto (7109 #include "mmu.h") show
0 528 moveto (7110 #include "x86.h") show
0 516 moveto (7111 ) show
0 504 moveto (7112 // Local APIC registers, divided by 4 for use as uint[] indices.) show
0 492 moveto (7113 #define ID      \(0x0020/4\)   // ID) show
0 480 moveto (7114 #define VER     \(0x0030/4\)   // Version) show
0 468 moveto (7115 #define TPR     \(0x0080/4\)   // Task Priority) show
0 456 moveto (7116 #define EOI     \(0x00B0/4\)   // EOI) show
0 444 moveto (7117 #define SVR     \(0x00F0/4\)   // Spurious Interrupt Vector) show
0 432 moveto (7118   #define ENABLE     0x00000100   // Unit Enable) show
0 420 moveto (7119 #define ESR     \(0x0280/4\)   // Error Status) show
0 408 moveto (7120 #define ICRLO   \(0x0300/4\)   // Interrupt Command) show
0 396 moveto (7121   #define INIT       0x00000500   // INIT/RESET) show
0 384 moveto (7122   #define STARTUP    0x00000600   // Startup IPI) show
0 372 moveto (7123   #define DELIVS     0x00001000   // Delivery status) show
0 360 moveto (7124   #define ASSERT     0x00004000   // Assert interrupt \(vs deassert\)) show
0 348 moveto (7125   #define DEASSERT   0x00000000) show
0 336 moveto (7126   #define LEVEL      0x00008000   // Level triggered) show
0 324 moveto (7127   #define BCAST      0x00080000   // Send to all APICs, including self.) show
0 312 moveto (7128   #define BUSY       0x00001000) show
0 300 moveto (7129   #define FIXED      0x00000000) show
0 288 moveto (7130 #define ICRHI   \(0x0310/4\)   // Interrupt Command [63:32]) show
0 276 moveto (7131 #define TIMER   \(0x0320/4\)   // Local Vector Table 0 \(TIMER\)) show
0 264 moveto (7132   #define X1         0x0000000B   // divide counts by 1) show
0 252 moveto (7133   #define PERIODIC   0x00020000   // Periodic) show
0 240 moveto (7134 #define PCINT   \(0x0340/4\)   // Performance Counter LVT) show
0 228 moveto (7135 #define LINT0   \(0x0350/4\)   // Local Vector Table 1 \(LINT0\)) show
0 216 moveto (7136 #define LINT1   \(0x0360/4\)   // Local Vector Table 2 \(LINT1\)) show
0 204 moveto (7137 #define ERROR   \(0x0370/4\)   // Local Vector Table 3 \(ERROR\)) show
0 192 moveto (7138   #define MASKED     0x00010000   // Interrupt masked) show
0 180 moveto (7139 #define TICR    \(0x0380/4\)   // Timer Initial Count) show
0 168 moveto (7140 #define TCCR    \(0x0390/4\)   // Timer Current Count) show
0 156 moveto (7141 #define TDCR    \(0x03E0/4\)   // Timer Divide Configuration) show
0 144 moveto (7142 ) show
0 132 moveto (7143 volatile uint *lapic;  // Initialized in mp.c) show
0 120 moveto (7144 ) show
0 108 moveto (7145 static void) show
0 96 moveto (7146 lapicw\(int index, int value\)) show
0 84 moveto (7147 {) show
0 72 moveto (7148   lapic[index] = value;) show
0 60 moveto (7149   lapic[ID];  // wait for write to finish, by reading) show
0 24 moveto (Sheet 71) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/lapic.c  Page 2) show
0 648 moveto (7150 }) show
0 636 moveto (7151 ) show
0 624 moveto (7152 void) show
0 612 moveto (7153 lapicinit\(void\)) show
0 600 moveto (7154 {) show
0 588 moveto (7155   if\(!lapic\)) show
0 576 moveto (7156     return;) show
0 564 moveto (7157 ) show
0 552 moveto (7158   // Enable local APIC; set spurious interrupt vector.) show
0 540 moveto (7159   lapicw\(SVR, ENABLE | \(T_IRQ0 + IRQ_SPURIOUS\)\);) show
0 528 moveto (7160 ) show
0 516 moveto (7161   // The timer repeatedly counts down at bus frequency) show
0 504 moveto (7162   // from lapic[TICR] and then issues an interrupt.) show
0 492 moveto (7163   // If xv6 cared more about precise timekeeping,) show
0 480 moveto (7164   // TICR would be calibrated using an external time source.) show
0 468 moveto (7165   lapicw\(TDCR, X1\);) show
0 456 moveto (7166   lapicw\(TIMER, PERIODIC | \(T_IRQ0 + IRQ_TIMER\)\);) show
0 444 moveto (7167   lapicw\(TICR, 10000000\);) show
0 432 moveto (7168 ) show
0 420 moveto (7169   // Disable logical interrupt lines.) show
0 408 moveto (7170   lapicw\(LINT0, MASKED\);) show
0 396 moveto (7171   lapicw\(LINT1, MASKED\);) show
0 384 moveto (7172 ) show
0 372 moveto (7173   // Disable performance counter overflow interrupts) show
0 360 moveto (7174   // on machines that provide that interrupt entry.) show
0 348 moveto (7175   if\(\(\(lapic[VER]>>16\) & 0xFF\) >= 4\)) show
0 336 moveto (7176     lapicw\(PCINT, MASKED\);) show
0 324 moveto (7177 ) show
0 312 moveto (7178   // Map error interrupt to IRQ_ERROR.) show
0 300 moveto (7179   lapicw\(ERROR, T_IRQ0 + IRQ_ERROR\);) show
0 288 moveto (7180 ) show
0 276 moveto (7181   // Clear error status register \(requires back-to-back writes\).) show
0 264 moveto (7182   lapicw\(ESR, 0\);) show
0 252 moveto (7183   lapicw\(ESR, 0\);) show
0 240 moveto (7184 ) show
0 228 moveto (7185   // Ack any outstanding interrupts.) show
0 216 moveto (7186   lapicw\(EOI, 0\);) show
0 204 moveto (7187 ) show
0 192 moveto (7188   // Send an Init Level De-Assert to synchronise arbitration ID's.) show
0 180 moveto (7189   lapicw\(ICRHI, 0\);) show
0 168 moveto (7190   lapicw\(ICRLO, BCAST | INIT | LEVEL\);) show
0 156 moveto (7191   while\(lapic[ICRLO] & DELIVS\)) show
0 144 moveto (7192     ;) show
0 132 moveto (7193 ) show
0 120 moveto (7194   // Enable interrupts on the APIC \(but not on the processor\).) show
0 108 moveto (7195   lapicw\(TPR, 0\);) show
0 96 moveto (7196 }) show
0 84 moveto (7197 ) show
0 72 moveto (7198 ) show
0 60 moveto (7199 ) show
0 24 moveto (Sheet 71) show
grestore
restore
showpage
%%Page: 81 81
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/lapic.c  Page 3) show
0 648 moveto (7200 int) show
0 636 moveto (7201 cpunum\(void\)) show
0 624 moveto (7202 {) show
0 612 moveto (7203   // Cannot call cpu when interrupts are enabled:) show
0 600 moveto (7204   // result not guaranteed to last long enough to be used!) show
0 588 moveto (7205   // Would prefer to panic but even printing is chancy here:) show
0 576 moveto (7206   // almost everything, including cprintf and panic, calls cpu,) show
0 564 moveto (7207   // often indirectly through acquire and release.) show
0 552 moveto (7208   if\(readeflags\(\)&FL_IF\){) show
0 540 moveto (7209     static int n;) show
0 528 moveto (7210     if\(n++ == 0\)) show
0 516 moveto (7211       cprintf\("cpu called from %x with interrupts enabled\\n",) show
0 504 moveto (7212         __builtin_return_address\(0\)\);) show
0 492 moveto (7213   }) show
0 480 moveto (7214 ) show
0 468 moveto (7215   if\(lapic\)) show
0 456 moveto (7216     return lapic[ID]>>24;) show
0 444 moveto (7217   return 0;) show
0 432 moveto (7218 }) show
0 420 moveto (7219 ) show
0 408 moveto (7220 // Acknowledge interrupt.) show
0 396 moveto (7221 void) show
0 384 moveto (7222 lapiceoi\(void\)) show
0 372 moveto (7223 {) show
0 360 moveto (7224   if\(lapic\)) show
0 348 moveto (7225     lapicw\(EOI, 0\);) show
0 336 moveto (7226 }) show
0 324 moveto (7227 ) show
0 312 moveto (7228 // Spin for a given number of microseconds.) show
0 300 moveto (7229 // On real hardware would want to tune this dynamically.) show
0 288 moveto (7230 void) show
0 276 moveto (7231 microdelay\(int us\)) show
0 264 moveto (7232 {) show
0 252 moveto (7233 }) show
0 240 moveto (7234 ) show
0 228 moveto (7235 #define CMOS_PORT    0x70) show
0 216 moveto (7236 #define CMOS_RETURN  0x71) show
0 204 moveto (7237 ) show
0 192 moveto (7238 // Start additional processor running entry code at addr.) show
0 180 moveto (7239 // See Appendix B of MultiProcessor Specification.) show
0 168 moveto (7240 void) show
0 156 moveto (7241 lapicstartap\(uchar apicid, uint addr\)) show
0 144 moveto (7242 {) show
0 132 moveto (7243   int i;) show
0 120 moveto (7244   ushort *wrv;) show
0 108 moveto (7245 ) show
0 96 moveto (7246   // "The BSP must initialize CMOS shutdown code to 0AH) show
0 84 moveto (7247   // and the warm reset vector \(DWORD based at 40:67\) to point at) show
0 72 moveto (7248   // the AP startup code prior to the [universal startup algorithm].") show
0 60 moveto (7249   outb\(CMOS_PORT, 0xF\);  // offset 0xF is shutdown code) show
0 24 moveto (Sheet 72) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/lapic.c  Page 4) show
0 648 moveto (7250   outb\(CMOS_PORT+1, 0x0A\);) show
0 636 moveto (7251   wrv = \(ushort*\)P2V\(\(0x40<<4 | 0x67\)\);  // Warm reset vector) show
0 624 moveto (7252   wrv[0] = 0;) show
0 612 moveto (7253   wrv[1] = addr >> 4;) show
0 600 moveto (7254 ) show
0 588 moveto (7255   // "Universal startup algorithm.") show
0 576 moveto (7256   // Send INIT \(level-triggered\) interrupt to reset other CPU.) show
0 564 moveto (7257   lapicw\(ICRHI, apicid<<24\);) show
0 552 moveto (7258   lapicw\(ICRLO, INIT | LEVEL | ASSERT\);) show
0 540 moveto (7259   microdelay\(200\);) show
0 528 moveto (7260   lapicw\(ICRLO, INIT | LEVEL\);) show
0 516 moveto (7261   microdelay\(100\);    // should be 10ms, but too slow in Bochs!) show
0 504 moveto (7262 ) show
0 492 moveto (7263   // Send startup IPI \(twice!\) to enter code.) show
0 480 moveto (7264   // Regular hardware is supposed to only accept a STARTUP) show
0 468 moveto (7265   // when it is in the halted state due to an INIT.  So the second) show
0 456 moveto (7266   // should be ignored, but it is part of the official Intel algorithm.) show
0 444 moveto (7267   // Bochs complains about the second one.  Too bad for Bochs.) show
0 432 moveto (7268   for\(i = 0; i < 2; i++\){) show
0 420 moveto (7269     lapicw\(ICRHI, apicid<<24\);) show
0 408 moveto (7270     lapicw\(ICRLO, STARTUP | \(addr>>12\)\);) show
0 396 moveto (7271     microdelay\(200\);) show
0 384 moveto (7272   }) show
0 372 moveto (7273 }) show
0 360 moveto (7274 ) show
0 348 moveto (7275 #define CMOS_STATA   0x0a) show
0 336 moveto (7276 #define CMOS_STATB   0x0b) show
0 324 moveto (7277 #define CMOS_UIP    \(1 << 7\)        // RTC update in progress) show
0 312 moveto (7278 ) show
0 300 moveto (7279 #define SECS    0x00) show
0 288 moveto (7280 #define MINS    0x02) show
0 276 moveto (7281 #define HOURS   0x04) show
0 264 moveto (7282 #define DAY     0x07) show
0 252 moveto (7283 #define MONTH   0x08) show
0 240 moveto (7284 #define YEAR    0x09) show
0 228 moveto (7285 ) show
0 216 moveto (7286 static uint cmos_read\(uint reg\)) show
0 204 moveto (7287 {) show
0 192 moveto (7288   outb\(CMOS_PORT,  reg\);) show
0 180 moveto (7289   microdelay\(200\);) show
0 168 moveto (7290 ) show
0 156 moveto (7291   return inb\(CMOS_RETURN\);) show
0 144 moveto (7292 }) show
0 132 moveto (7293 ) show
0 120 moveto (7294 ) show
0 108 moveto (7295 ) show
0 96 moveto (7296 ) show
0 84 moveto (7297 ) show
0 72 moveto (7298 ) show
0 60 moveto (7299 ) show
0 24 moveto (Sheet 72) show
grestore
restore
showpage
%%Page: 82 82
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/lapic.c  Page 5) show
0 648 moveto (7300 static void fill_rtcdate\(struct rtcdate *r\)) show
0 636 moveto (7301 {) show
0 624 moveto (7302   r->second = cmos_read\(SECS\);) show
0 612 moveto (7303   r->minute = cmos_read\(MINS\);) show
0 600 moveto (7304   r->hour   = cmos_read\(HOURS\);) show
0 588 moveto (7305   r->day    = cmos_read\(DAY\);) show
0 576 moveto (7306   r->month  = cmos_read\(MONTH\);) show
0 564 moveto (7307   r->year   = cmos_read\(YEAR\);) show
0 552 moveto (7308 }) show
0 540 moveto (7309 ) show
0 528 moveto (7310 // qemu seems to use 24-hour GWT and the values are BCD encoded) show
0 516 moveto (7311 void cmostime\(struct rtcdate *r\)) show
0 504 moveto (7312 {) show
0 492 moveto (7313   struct rtcdate t1, t2;) show
0 480 moveto (7314   int sb, bcd;) show
0 468 moveto (7315 ) show
0 456 moveto (7316   sb = cmos_read\(CMOS_STATB\);) show
0 444 moveto (7317 ) show
0 432 moveto (7318   bcd = \(sb & \(1 << 2\)\) == 0;) show
0 420 moveto (7319 ) show
0 408 moveto (7320   // make sure CMOS doesn't modify time while we read it) show
0 396 moveto (7321   for \(;;\) {) show
0 384 moveto (7322     fill_rtcdate\(&t1\);) show
0 372 moveto (7323     if \(cmos_read\(CMOS_STATA\) & CMOS_UIP\)) show
0 360 moveto (7324         continue;) show
0 348 moveto (7325     fill_rtcdate\(&t2\);) show
0 336 moveto (7326     if \(memcmp\(&t1, &t2, sizeof\(t1\)\) == 0\)) show
0 324 moveto (7327       break;) show
0 312 moveto (7328   }) show
0 300 moveto (7329 ) show
0 288 moveto (7330   // convert) show
0 276 moveto (7331   if \(bcd\) {) show
0 264 moveto (7332 #define    CONV\(x\)     \(t1.x = \(\(t1.x >> 4\) * 10\) + \(t1.x & 0xf\)\)) show
0 252 moveto (7333     CONV\(second\);) show
0 240 moveto (7334     CONV\(minute\);) show
0 228 moveto (7335     CONV\(hour  \);) show
0 216 moveto (7336     CONV\(day   \);) show
0 204 moveto (7337     CONV\(month \);) show
0 192 moveto (7338     CONV\(year  \);) show
0 180 moveto (7339 #undef     CONV) show
0 168 moveto (7340   }) show
0 156 moveto (7341 ) show
0 144 moveto (7342   *r = t1;) show
0 132 moveto (7343   r->year += 2000;) show
0 120 moveto (7344 }) show
0 108 moveto (7345 ) show
0 96 moveto (7346 ) show
0 84 moveto (7347 ) show
0 72 moveto (7348 ) show
0 60 moveto (7349 ) show
0 24 moveto (Sheet 73) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/ioapic.c  Page 1) show
0 648 moveto (7350 // The I/O APIC manages hardware interrupts for an SMP system.) show
0 636 moveto (7351 // http://www.intel.com/design/chipsets/datashts/29056601.pdf) show
0 624 moveto (7352 // See also picirq.c.) show
0 612 moveto (7353 ) show
0 600 moveto (7354 #include "types.h") show
0 588 moveto (7355 #include "defs.h") show
0 576 moveto (7356 #include "traps.h") show
0 564 moveto (7357 ) show
0 552 moveto (7358 #define IOAPIC  0xFEC00000   // Default physical address of IO APIC) show
0 540 moveto (7359 ) show
0 528 moveto (7360 #define REG_ID     0x00  // Register index: ID) show
0 516 moveto (7361 #define REG_VER    0x01  // Register index: version) show
0 504 moveto (7362 #define REG_TABLE  0x10  // Redirection table base) show
0 492 moveto (7363 ) show
0 480 moveto (7364 // The redirection table starts at REG_TABLE and uses) show
0 468 moveto (7365 // two registers to configure each interrupt.) show
0 456 moveto (7366 // The first \(low\) register in a pair contains configuration bits.) show
0 444 moveto (7367 // The second \(high\) register contains a bitmask telling which) show
0 432 moveto (7368 // CPUs can serve that interrupt.) show
0 420 moveto (7369 #define INT_DISABLED   0x00010000  // Interrupt disabled) show
0 408 moveto (7370 #define INT_LEVEL      0x00008000  // Level-triggered \(vs edge-\)) show
0 396 moveto (7371 #define INT_ACTIVELOW  0x00002000  // Active low \(vs high\)) show
0 384 moveto (7372 #define INT_LOGICAL    0x00000800  // Destination is CPU id \(vs APIC ID\)) show
0 372 moveto (7373 ) show
0 360 moveto (7374 volatile struct ioapic *ioapic;) show
0 348 moveto (7375 ) show
0 336 moveto (7376 // IO APIC MMIO structure: write reg, then read or write data.) show
0 324 moveto (7377 struct ioapic {) show
0 312 moveto (7378   uint reg;) show
0 300 moveto (7379   uint pad[3];) show
0 288 moveto (7380   uint data;) show
0 276 moveto (7381 };) show
0 264 moveto (7382 ) show
0 252 moveto (7383 static uint) show
0 240 moveto (7384 ioapicread\(int reg\)) show
0 228 moveto (7385 {) show
0 216 moveto (7386   ioapic->reg = reg;) show
0 204 moveto (7387   return ioapic->data;) show
0 192 moveto (7388 }) show
0 180 moveto (7389 ) show
0 168 moveto (7390 static void) show
0 156 moveto (7391 ioapicwrite\(int reg, uint data\)) show
0 144 moveto (7392 {) show
0 132 moveto (7393   ioapic->reg = reg;) show
0 120 moveto (7394   ioapic->data = data;) show
0 108 moveto (7395 }) show
0 96 moveto (7396 ) show
0 84 moveto (7397 ) show
0 72 moveto (7398 ) show
0 60 moveto (7399 ) show
0 24 moveto (Sheet 73) show
grestore
restore
showpage
%%Page: 83 83
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/ioapic.c  Page 2) show
0 648 moveto (7400 void) show
0 636 moveto (7401 ioapicinit\(void\)) show
0 624 moveto (7402 {) show
0 612 moveto (7403   int i, id, maxintr;) show
0 600 moveto (7404 ) show
0 588 moveto (7405   if\(!ismp\)) show
0 576 moveto (7406     return;) show
0 564 moveto (7407 ) show
0 552 moveto (7408   ioapic = \(volatile struct ioapic*\)IOAPIC;) show
0 540 moveto (7409   maxintr = \(ioapicread\(REG_VER\) >> 16\) & 0xFF;) show
0 528 moveto (7410   id = ioapicread\(REG_ID\) >> 24;) show
0 516 moveto (7411   if\(id != ioapicid\)) show
0 504 moveto (7412     cprintf\("ioapicinit: id isn't equal to ioapicid; not a MP\\n"\);) show
0 492 moveto (7413 ) show
0 480 moveto (7414   // Mark all interrupts edge-triggered, active high, disabled,) show
0 468 moveto (7415   // and not routed to any CPUs.) show
0 456 moveto (7416   for\(i = 0; i <= maxintr; i++\){) show
0 444 moveto (7417     ioapicwrite\(REG_TABLE+2*i, INT_DISABLED | \(T_IRQ0 + i\)\);) show
0 432 moveto (7418     ioapicwrite\(REG_TABLE+2*i+1, 0\);) show
0 420 moveto (7419   }) show
0 408 moveto (7420 }) show
0 396 moveto (7421 ) show
0 384 moveto (7422 void) show
0 372 moveto (7423 ioapicenable\(int irq, int cpunum\)) show
0 360 moveto (7424 {) show
0 348 moveto (7425   if\(!ismp\)) show
0 336 moveto (7426     return;) show
0 324 moveto (7427 ) show
0 312 moveto (7428   // Mark interrupt edge-triggered, active high,) show
0 300 moveto (7429   // enabled, and routed to the given cpunum,) show
0 288 moveto (7430   // which happens to be that cpu's APIC ID.) show
0 276 moveto (7431   ioapicwrite\(REG_TABLE+2*irq, T_IRQ0 + irq\);) show
0 264 moveto (7432   ioapicwrite\(REG_TABLE+2*irq+1, cpunum << 24\);) show
0 252 moveto (7433 }) show
0 240 moveto (7434 ) show
0 228 moveto (7435 ) show
0 216 moveto (7436 ) show
0 204 moveto (7437 ) show
0 192 moveto (7438 ) show
0 180 moveto (7439 ) show
0 168 moveto (7440 ) show
0 156 moveto (7441 ) show
0 144 moveto (7442 ) show
0 132 moveto (7443 ) show
0 120 moveto (7444 ) show
0 108 moveto (7445 ) show
0 96 moveto (7446 ) show
0 84 moveto (7447 ) show
0 72 moveto (7448 ) show
0 60 moveto (7449 ) show
0 24 moveto (Sheet 74) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/picirq.c  Page 1) show
0 648 moveto (7450 // Intel 8259A programmable interrupt controllers.) show
0 636 moveto (7451 ) show
0 624 moveto (7452 #include "types.h") show
0 612 moveto (7453 #include "x86.h") show
0 600 moveto (7454 #include "traps.h") show
0 588 moveto (7455 ) show
0 576 moveto (7456 // I/O Addresses of the two programmable interrupt controllers) show
0 564 moveto (7457 #define IO_PIC1         0x20    // Master \(IRQs 0-7\)) show
0 552 moveto (7458 #define IO_PIC2         0xA0    // Slave \(IRQs 8-15\)) show
0 540 moveto (7459 ) show
0 528 moveto (7460 #define IRQ_SLAVE       2       // IRQ at which slave connects to master) show
0 516 moveto (7461 ) show
0 504 moveto (7462 // Current IRQ mask.) show
0 492 moveto (7463 // Initial IRQ mask has interrupt 2 enabled \(for slave 8259A\).) show
0 480 moveto (7464 static ushort irqmask = 0xFFFF & ~\(1<<IRQ_SLAVE\);) show
0 468 moveto (7465 ) show
0 456 moveto (7466 static void) show
0 444 moveto (7467 picsetmask\(ushort mask\)) show
0 432 moveto (7468 {) show
0 420 moveto (7469   irqmask = mask;) show
0 408 moveto (7470   outb\(IO_PIC1+1, mask\);) show
0 396 moveto (7471   outb\(IO_PIC2+1, mask >> 8\);) show
0 384 moveto (7472 }) show
0 372 moveto (7473 ) show
0 360 moveto (7474 void) show
0 348 moveto (7475 picenable\(int irq\)) show
0 336 moveto (7476 {) show
0 324 moveto (7477   picsetmask\(irqmask & ~\(1<<irq\)\);) show
0 312 moveto (7478 }) show
0 300 moveto (7479 ) show
0 288 moveto (7480 // Initialize the 8259A interrupt controllers.) show
0 276 moveto (7481 void) show
0 264 moveto (7482 picinit\(void\)) show
0 252 moveto (7483 {) show
0 240 moveto (7484   // mask all interrupts) show
0 228 moveto (7485   outb\(IO_PIC1+1, 0xFF\);) show
0 216 moveto (7486   outb\(IO_PIC2+1, 0xFF\);) show
0 204 moveto (7487 ) show
0 192 moveto (7488   // Set up master \(8259A-1\)) show
0 180 moveto (7489 ) show
0 168 moveto (7490   // ICW1:  0001g0hi) show
0 156 moveto (7491   //    g:  0 = edge triggering, 1 = level triggering) show
0 144 moveto (7492   //    h:  0 = cascaded PICs, 1 = master only) show
0 132 moveto (7493   //    i:  0 = no ICW4, 1 = ICW4 required) show
0 120 moveto (7494   outb\(IO_PIC1, 0x11\);) show
0 108 moveto (7495 ) show
0 96 moveto (7496   // ICW2:  Vector offset) show
0 84 moveto (7497   outb\(IO_PIC1+1, T_IRQ0\);) show
0 72 moveto (7498 ) show
0 60 moveto (7499 ) show
0 24 moveto (Sheet 74) show
grestore
restore
showpage
%%Page: 84 84
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/picirq.c  Page 2) show
0 648 moveto (7500   // ICW3:  \(master PIC\) bit mask of IR lines connected to slaves) show
0 636 moveto (7501   //        \(slave PIC\) 3-bit # of slave's connection to master) show
0 624 moveto (7502   outb\(IO_PIC1+1, 1<<IRQ_SLAVE\);) show
0 612 moveto (7503 ) show
0 600 moveto (7504   // ICW4:  000nbmap) show
0 588 moveto (7505   //    n:  1 = special fully nested mode) show
0 576 moveto (7506   //    b:  1 = buffered mode) show
0 564 moveto (7507   //    m:  0 = slave PIC, 1 = master PIC) show
0 552 moveto (7508   //      \(ignored when b is 0, as the master/slave role) show
0 540 moveto (7509   //      can be hardwired\).) show
0 528 moveto (7510   //    a:  1 = Automatic EOI mode) show
0 516 moveto (7511   //    p:  0 = MCS-80/85 mode, 1 = intel x86 mode) show
0 504 moveto (7512   outb\(IO_PIC1+1, 0x3\);) show
0 492 moveto (7513 ) show
0 480 moveto (7514   // Set up slave \(8259A-2\)) show
0 468 moveto (7515   outb\(IO_PIC2, 0x11\);                  // ICW1) show
0 456 moveto (7516   outb\(IO_PIC2+1, T_IRQ0 + 8\);      // ICW2) show
0 444 moveto (7517   outb\(IO_PIC2+1, IRQ_SLAVE\);           // ICW3) show
0 432 moveto (7518   // NB Automatic EOI mode doesn't tend to work on the slave.) show
0 420 moveto (7519   // Linux source code says it's "to be investigated".) show
0 408 moveto (7520   outb\(IO_PIC2+1, 0x3\);                 // ICW4) show
0 396 moveto (7521 ) show
0 384 moveto (7522   // OCW3:  0ef01prs) show
0 372 moveto (7523   //   ef:  0x = NOP, 10 = clear specific mask, 11 = set specific mask) show
0 360 moveto (7524   //    p:  0 = no polling, 1 = polling mode) show
0 348 moveto (7525   //   rs:  0x = NOP, 10 = read IRR, 11 = read ISR) show
0 336 moveto (7526   outb\(IO_PIC1, 0x68\);             // clear specific mask) show
0 324 moveto (7527   outb\(IO_PIC1, 0x0a\);             // read IRR by default) show
0 312 moveto (7528 ) show
0 300 moveto (7529   outb\(IO_PIC2, 0x68\);             // OCW3) show
0 288 moveto (7530   outb\(IO_PIC2, 0x0a\);             // OCW3) show
0 276 moveto (7531 ) show
0 264 moveto (7532   if\(irqmask != 0xFFFF\)) show
0 252 moveto (7533     picsetmask\(irqmask\);) show
0 240 moveto (7534 }) show
0 228 moveto (7535 ) show
0 216 moveto (7536 ) show
0 204 moveto (7537 ) show
0 192 moveto (7538 ) show
0 180 moveto (7539 ) show
0 168 moveto (7540 ) show
0 156 moveto (7541 ) show
0 144 moveto (7542 ) show
0 132 moveto (7543 ) show
0 120 moveto (7544 ) show
0 108 moveto (7545 ) show
0 96 moveto (7546 ) show
0 84 moveto (7547 ) show
0 72 moveto (7548 ) show
0 60 moveto (7549 ) show
0 24 moveto (Sheet 75) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/kbd.h  Page 1) show
0 648 moveto (7550 // PC keyboard interface constants) show
0 636 moveto (7551 ) show
0 624 moveto (7552 #define KBSTATP         0x64    // kbd controller status port\(I\)) show
0 612 moveto (7553 #define KBS_DIB         0x01    // kbd data in buffer) show
0 600 moveto (7554 #define KBDATAP         0x60    // kbd data port\(I\)) show
0 588 moveto (7555 ) show
0 576 moveto (7556 #define NO              0) show
0 564 moveto (7557 ) show
0 552 moveto (7558 #define SHIFT           \(1<<0\)) show
0 540 moveto (7559 #define CTL             \(1<<1\)) show
0 528 moveto (7560 #define ALT             \(1<<2\)) show
0 516 moveto (7561 ) show
0 504 moveto (7562 #define CAPSLOCK        \(1<<3\)) show
0 492 moveto (7563 #define NUMLOCK         \(1<<4\)) show
0 480 moveto (7564 #define SCROLLLOCK      \(1<<5\)) show
0 468 moveto (7565 ) show
0 456 moveto (7566 #define E0ESC           \(1<<6\)) show
0 444 moveto (7567 ) show
0 432 moveto (7568 // Special keycodes) show
0 420 moveto (7569 #define KEY_HOME        0xE0) show
0 408 moveto (7570 #define KEY_END         0xE1) show
0 396 moveto (7571 #define KEY_UP          0xE2) show
0 384 moveto (7572 #define KEY_DN          0xE3) show
0 372 moveto (7573 #define KEY_LF          0xE4) show
0 360 moveto (7574 #define KEY_RT          0xE5) show
0 348 moveto (7575 #define KEY_PGUP        0xE6) show
0 336 moveto (7576 #define KEY_PGDN        0xE7) show
0 324 moveto (7577 #define KEY_INS         0xE8) show
0 312 moveto (7578 #define KEY_DEL         0xE9) show
0 300 moveto (7579 ) show
0 288 moveto (7580 // C\('A'\) == Control-A) show
0 276 moveto (7581 #define C\(x\) \(x - '@'\)) show
0 264 moveto (7582 ) show
0 252 moveto (7583 static uchar shiftcode[256] =) show
0 240 moveto (7584 {) show
0 228 moveto (7585   [0x1D] CTL,) show
0 216 moveto (7586   [0x2A] SHIFT,) show
0 204 moveto (7587   [0x36] SHIFT,) show
0 192 moveto (7588   [0x38] ALT,) show
0 180 moveto (7589   [0x9D] CTL,) show
0 168 moveto (7590   [0xB8] ALT) show
0 156 moveto (7591 };) show
0 144 moveto (7592 ) show
0 132 moveto (7593 static uchar togglecode[256] =) show
0 120 moveto (7594 {) show
0 108 moveto (7595   [0x3A] CAPSLOCK,) show
0 96 moveto (7596   [0x45] NUMLOCK,) show
0 84 moveto (7597   [0x46] SCROLLLOCK) show
0 72 moveto (7598 };) show
0 60 moveto (7599 ) show
0 24 moveto (Sheet 75) show
grestore
restore
showpage
%%Page: 85 85
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/kbd.h  Page 2) show
0 648 moveto (7600 static uchar normalmap[256] =) show
0 636 moveto (7601 {) show
0 624 moveto (7602   NO,   0x1B, '1',  '2',  '3',  '4',  '5',  '6',  // 0x00) show
0 612 moveto (7603   '7',  '8',  '9',  '0',  '-',  '=',  '\\b', '\\t',) show
0 600 moveto (7604   'q',  'w',  'e',  'r',  't',  'y',  'u',  'i',  // 0x10) show
0 588 moveto (7605   'o',  'p',  '[',  ']',  '\\n', NO,   'a',  's',) show
0 576 moveto (7606   'd',  'f',  'g',  'h',  'j',  'k',  'l',  ';',  // 0x20) show
0 564 moveto (7607   '\\'', '`',  NO,   '\\\\', 'z',  'x',  'c',  'v',) show
0 552 moveto (7608   'b',  'n',  'm',  ',',  '.',  '/',  NO,   '*',  // 0x30) show
0 540 moveto (7609   NO,   ' ',  NO,   NO,   NO,   NO,   NO,   NO,) show
0 528 moveto (7610   NO,   NO,   NO,   NO,   NO,   NO,   NO,   '7',  // 0x40) show
0 516 moveto (7611   '8',  '9',  '-',  '4',  '5',  '6',  '+',  '1',) show
0 504 moveto (7612   '2',  '3',  '0',  '.',  NO,   NO,   NO,   NO,   // 0x50) show
0 492 moveto (7613   [0x9C] '\\n',      // KP_Enter) show
0 480 moveto (7614   [0xB5] '/',       // KP_Div) show
0 468 moveto (7615   [0xC8] KEY_UP,    [0xD0] KEY_DN,) show
0 456 moveto (7616   [0xC9] KEY_PGUP,  [0xD1] KEY_PGDN,) show
0 444 moveto (7617   [0xCB] KEY_LF,    [0xCD] KEY_RT,) show
0 432 moveto (7618   [0x97] KEY_HOME,  [0xCF] KEY_END,) show
0 420 moveto (7619   [0xD2] KEY_INS,   [0xD3] KEY_DEL) show
0 408 moveto (7620 };) show
0 396 moveto (7621 ) show
0 384 moveto (7622 static uchar shiftmap[256] =) show
0 372 moveto (7623 {) show
0 360 moveto (7624   NO,   033,  '!',  '@',  '#',  '$',  '%',  '^',  // 0x00) show
0 348 moveto (7625   '&',  '*',  '\(',  '\)',  '_',  '+',  '\\b', '\\t',) show
0 336 moveto (7626   'Q',  'W',  'E',  'R',  'T',  'Y',  'U',  'I',  // 0x10) show
0 324 moveto (7627   'O',  'P',  '{',  '}',  '\\n', NO,   'A',  'S',) show
0 312 moveto (7628   'D',  'F',  'G',  'H',  'J',  'K',  'L',  ':',  // 0x20) show
0 300 moveto (7629   '"',  '~',  NO,   '|',  'Z',  'X',  'C',  'V',) show
0 288 moveto (7630   'B',  'N',  'M',  '<',  '>',  '?',  NO,   '*',  // 0x30) show
0 276 moveto (7631   NO,   ' ',  NO,   NO,   NO,   NO,   NO,   NO,) show
0 264 moveto (7632   NO,   NO,   NO,   NO,   NO,   NO,   NO,   '7',  // 0x40) show
0 252 moveto (7633   '8',  '9',  '-',  '4',  '5',  '6',  '+',  '1',) show
0 240 moveto (7634   '2',  '3',  '0',  '.',  NO,   NO,   NO,   NO,   // 0x50) show
0 228 moveto (7635   [0x9C] '\\n',      // KP_Enter) show
0 216 moveto (7636   [0xB5] '/',       // KP_Div) show
0 204 moveto (7637   [0xC8] KEY_UP,    [0xD0] KEY_DN,) show
0 192 moveto (7638   [0xC9] KEY_PGUP,  [0xD1] KEY_PGDN,) show
0 180 moveto (7639   [0xCB] KEY_LF,    [0xCD] KEY_RT,) show
0 168 moveto (7640   [0x97] KEY_HOME,  [0xCF] KEY_END,) show
0 156 moveto (7641   [0xD2] KEY_INS,   [0xD3] KEY_DEL) show
0 144 moveto (7642 };) show
0 132 moveto (7643 ) show
0 120 moveto (7644 ) show
0 108 moveto (7645 ) show
0 96 moveto (7646 ) show
0 84 moveto (7647 ) show
0 72 moveto (7648 ) show
0 60 moveto (7649 ) show
0 24 moveto (Sheet 76) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/kbd.h  Page 3) show
0 648 moveto (7650 static uchar ctlmap[256] =) show
0 636 moveto (7651 {) show
0 624 moveto (7652   NO,      NO,      NO,      NO,      NO,      NO,      NO,      NO,) show
0 612 moveto (7653   NO,      NO,      NO,      NO,      NO,      NO,      NO,      NO,) show
0 600 moveto (7654   C\('Q'\),  C\('W'\),  C\('E'\),  C\('R'\),  C\('T'\),  C\('Y'\),  C\('U'\),  C\('I'\),) show
0 588 moveto (7655   C\('O'\),  C\('P'\),  NO,      NO,      '\\r',    NO,      C\('A'\),  C\('S'\),) show
0 576 moveto (7656   C\('D'\),  C\('F'\),  C\('G'\),  C\('H'\),  C\('J'\),  C\('K'\),  C\('L'\),  NO,) show
0 564 moveto (7657   NO,      NO,      NO,      C\('\\\\'\), C\('Z'\),  C\('X'\),  C\('C'\),  C\('V'\),) show
0 552 moveto (7658   C\('B'\),  C\('N'\),  C\('M'\),  NO,      NO,      C\('/'\),  NO,      NO,) show
0 540 moveto (7659   [0x9C] '\\r',      // KP_Enter) show
0 528 moveto (7660   [0xB5] C\('/'\),    // KP_Div) show
0 516 moveto (7661   [0xC8] KEY_UP,    [0xD0] KEY_DN,) show
0 504 moveto (7662   [0xC9] KEY_PGUP,  [0xD1] KEY_PGDN,) show
0 492 moveto (7663   [0xCB] KEY_LF,    [0xCD] KEY_RT,) show
0 480 moveto (7664   [0x97] KEY_HOME,  [0xCF] KEY_END,) show
0 468 moveto (7665   [0xD2] KEY_INS,   [0xD3] KEY_DEL) show
0 456 moveto (7666 };) show
0 444 moveto (7667 ) show
0 432 moveto (7668 ) show
0 420 moveto (7669 ) show
0 408 moveto (7670 ) show
0 396 moveto (7671 ) show
0 384 moveto (7672 ) show
0 372 moveto (7673 ) show
0 360 moveto (7674 ) show
0 348 moveto (7675 ) show
0 336 moveto (7676 ) show
0 324 moveto (7677 ) show
0 312 moveto (7678 ) show
0 300 moveto (7679 ) show
0 288 moveto (7680 ) show
0 276 moveto (7681 ) show
0 264 moveto (7682 ) show
0 252 moveto (7683 ) show
0 240 moveto (7684 ) show
0 228 moveto (7685 ) show
0 216 moveto (7686 ) show
0 204 moveto (7687 ) show
0 192 moveto (7688 ) show
0 180 moveto (7689 ) show
0 168 moveto (7690 ) show
0 156 moveto (7691 ) show
0 144 moveto (7692 ) show
0 132 moveto (7693 ) show
0 120 moveto (7694 ) show
0 108 moveto (7695 ) show
0 96 moveto (7696 ) show
0 84 moveto (7697 ) show
0 72 moveto (7698 ) show
0 60 moveto (7699 ) show
0 24 moveto (Sheet 76) show
grestore
restore
showpage
%%Page: 86 86
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/kbd.c  Page 1) show
0 648 moveto (7700 #include "types.h") show
0 636 moveto (7701 #include "x86.h") show
0 624 moveto (7702 #include "defs.h") show
0 612 moveto (7703 #include "kbd.h") show
0 600 moveto (7704 ) show
0 588 moveto (7705 int) show
0 576 moveto (7706 kbdgetc\(void\)) show
0 564 moveto (7707 {) show
0 552 moveto (7708   static uint shift;) show
0 540 moveto (7709   static uchar *charcode[4] = {) show
0 528 moveto (7710     normalmap, shiftmap, ctlmap, ctlmap) show
0 516 moveto (7711   };) show
0 504 moveto (7712   uint st, data, c;) show
0 492 moveto (7713 ) show
0 480 moveto (7714   st = inb\(KBSTATP\);) show
0 468 moveto (7715   if\(\(st & KBS_DIB\) == 0\)) show
0 456 moveto (7716     return -1;) show
0 444 moveto (7717   data = inb\(KBDATAP\);) show
0 432 moveto (7718 ) show
0 420 moveto (7719   if\(data == 0xE0\){) show
0 408 moveto (7720     shift |= E0ESC;) show
0 396 moveto (7721     return 0;) show
0 384 moveto (7722   } else if\(data & 0x80\){) show
0 372 moveto (7723     // Key released) show
0 360 moveto (7724     data = \(shift & E0ESC ? data : data & 0x7F\);) show
0 348 moveto (7725     shift &= ~\(shiftcode[data] | E0ESC\);) show
0 336 moveto (7726     return 0;) show
0 324 moveto (7727   } else if\(shift & E0ESC\){) show
0 312 moveto (7728     // Last character was an E0 escape; or with 0x80) show
0 300 moveto (7729     data |= 0x80;) show
0 288 moveto (7730     shift &= ~E0ESC;) show
0 276 moveto (7731   }) show
0 264 moveto (7732 ) show
0 252 moveto (7733   shift |= shiftcode[data];) show
0 240 moveto (7734   shift ^= togglecode[data];) show
0 228 moveto (7735   c = charcode[shift & \(CTL | SHIFT\)][data];) show
0 216 moveto (7736   if\(shift & CAPSLOCK\){) show
0 204 moveto (7737     if\('a' <= c && c <= 'z'\)) show
0 192 moveto (7738       c += 'A' - 'a';) show
0 180 moveto (7739     else if\('A' <= c && c <= 'Z'\)) show
0 168 moveto (7740       c += 'a' - 'A';) show
0 156 moveto (7741   }) show
0 144 moveto (7742   return c;) show
0 132 moveto (7743 }) show
0 120 moveto (7744 ) show
0 108 moveto (7745 void) show
0 96 moveto (7746 kbdintr\(void\)) show
0 84 moveto (7747 {) show
0 72 moveto (7748   consoleintr\(kbdgetc\);) show
0 60 moveto (7749 }) show
0 24 moveto (Sheet 77) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/console.c  Page 1) show
0 648 moveto (7750 // Console input and output.) show
0 636 moveto (7751 // Input is from the keyboard or serial port.) show
0 624 moveto (7752 // Output is written to the screen and serial port.) show
0 612 moveto (7753 ) show
0 600 moveto (7754 #include "types.h") show
0 588 moveto (7755 #include "defs.h") show
0 576 moveto (7756 #include "param.h") show
0 564 moveto (7757 #include "traps.h") show
0 552 moveto (7758 #include "spinlock.h") show
0 540 moveto (7759 #include "fs.h") show
0 528 moveto (7760 #include "file.h") show
0 516 moveto (7761 #include "memlayout.h") show
0 504 moveto (7762 #include "mmu.h") show
0 492 moveto (7763 #include "proc.h") show
0 480 moveto (7764 #include "x86.h") show
0 468 moveto (7765 ) show
0 456 moveto (7766 static void consputc\(int\);) show
0 444 moveto (7767 ) show
0 432 moveto (7768 static int panicked = 0;) show
0 420 moveto (7769 ) show
0 408 moveto (7770 static struct {) show
0 396 moveto (7771   struct spinlock lock;) show
0 384 moveto (7772   int locking;) show
0 372 moveto (7773 } cons;) show
0 360 moveto (7774 ) show
0 348 moveto (7775 static void) show
0 336 moveto (7776 printint\(int xx, int base, int sign\)) show
0 324 moveto (7777 {) show
0 312 moveto (7778   static char digits[] = "0123456789abcdef";) show
0 300 moveto (7779   char buf[16];) show
0 288 moveto (7780   int i;) show
0 276 moveto (7781   uint x;) show
0 264 moveto (7782 ) show
0 252 moveto (7783   if\(sign && \(sign = xx < 0\)\)) show
0 240 moveto (7784     x = -xx;) show
0 228 moveto (7785   else) show
0 216 moveto (7786     x = xx;) show
0 204 moveto (7787 ) show
0 192 moveto (7788   i = 0;) show
0 180 moveto (7789   do{) show
0 168 moveto (7790     buf[i++] = digits[x % base];) show
0 156 moveto (7791   }while\(\(x /= base\) != 0\);) show
0 144 moveto (7792 ) show
0 132 moveto (7793   if\(sign\)) show
0 120 moveto (7794     buf[i++] = '-';) show
0 108 moveto (7795 ) show
0 96 moveto (7796   while\(--i >= 0\)) show
0 84 moveto (7797     consputc\(buf[i]\);) show
0 72 moveto (7798 }) show
0 60 moveto (7799 ) show
0 24 moveto (Sheet 77) show
grestore
restore
showpage
%%Page: 87 87
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/console.c  Page 2) show
0 648 moveto (7800 // Print to the console. only understands %d, %x, %p, %s.) show
0 636 moveto (7801 void) show
0 624 moveto (7802 cprintf\(char *fmt, ...\)) show
0 612 moveto (7803 {) show
0 600 moveto (7804   int i, c, locking;) show
0 588 moveto (7805   uint *argp;) show
0 576 moveto (7806   char *s;) show
0 564 moveto (7807 ) show
0 552 moveto (7808   locking = cons.locking;) show
0 540 moveto (7809   if\(locking\)) show
0 528 moveto (7810     acquire\(&cons.lock\);) show
0 516 moveto (7811 ) show
0 504 moveto (7812   if \(fmt == 0\)) show
0 492 moveto (7813     panic\("null fmt"\);) show
0 480 moveto (7814 ) show
0 468 moveto (7815   argp = \(uint*\)\(void*\)\(&fmt + 1\);) show
0 456 moveto (7816   for\(i = 0; \(c = fmt[i] & 0xff\) != 0; i++\){) show
0 444 moveto (7817     if\(c != '%'\){) show
0 432 moveto (7818       consputc\(c\);) show
0 420 moveto (7819       continue;) show
0 408 moveto (7820     }) show
0 396 moveto (7821     c = fmt[++i] & 0xff;) show
0 384 moveto (7822     if\(c == 0\)) show
0 372 moveto (7823       break;) show
0 360 moveto (7824     switch\(c\){) show
0 348 moveto (7825     case 'd':) show
0 336 moveto (7826       printint\(*argp++, 10, 1\);) show
0 324 moveto (7827       break;) show
0 312 moveto (7828     case 'x':) show
0 300 moveto (7829     case 'p':) show
0 288 moveto (7830       printint\(*argp++, 16, 0\);) show
0 276 moveto (7831       break;) show
0 264 moveto (7832     case 's':) show
0 252 moveto (7833       if\(\(s = \(char*\)*argp++\) == 0\)) show
0 240 moveto (7834         s = "\(null\)";) show
0 228 moveto (7835       for\(; *s; s++\)) show
0 216 moveto (7836         consputc\(*s\);) show
0 204 moveto (7837       break;) show
0 192 moveto (7838     case '%':) show
0 180 moveto (7839       consputc\('%'\);) show
0 168 moveto (7840       break;) show
0 156 moveto (7841     default:) show
0 144 moveto (7842       // Print unknown % sequence to draw attention.) show
0 132 moveto (7843       consputc\('%'\);) show
0 120 moveto (7844       consputc\(c\);) show
0 108 moveto (7845       break;) show
0 96 moveto (7846     }) show
0 84 moveto (7847   }) show
0 72 moveto (7848 ) show
0 60 moveto (7849 ) show
0 24 moveto (Sheet 78) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/console.c  Page 3) show
0 648 moveto (7850   if\(locking\)) show
0 636 moveto (7851     release\(&cons.lock\);) show
0 624 moveto (7852 }) show
0 612 moveto (7853 ) show
0 600 moveto (7854 void) show
0 588 moveto (7855 panic\(char *s\)) show
0 576 moveto (7856 {) show
0 564 moveto (7857   int i;) show
0 552 moveto (7858   uint pcs[10];) show
0 540 moveto (7859 ) show
0 528 moveto (7860   cli\(\);) show
0 516 moveto (7861   cons.locking = 0;) show
0 504 moveto (7862   cprintf\("cpu%d: panic: ", cpu->id\);) show
0 492 moveto (7863   cprintf\(s\);) show
0 480 moveto (7864   cprintf\("\\n"\);) show
0 468 moveto (7865   getcallerpcs\(&s, pcs\);) show
0 456 moveto (7866   for\(i=0; i<10; i++\)) show
0 444 moveto (7867     cprintf\(" %p", pcs[i]\);) show
0 432 moveto (7868   panicked = 1; // freeze other CPU) show
0 420 moveto (7869   for\(;;\)) show
0 408 moveto (7870     ;) show
0 396 moveto (7871 }) show
0 384 moveto (7872 ) show
0 372 moveto (7873 #define BACKSPACE 0x100) show
0 360 moveto (7874 #define CRTPORT 0x3d4) show
0 348 moveto (7875 static ushort *crt = \(ushort*\)P2V\(0xb8000\);  // CGA memory) show
0 336 moveto (7876 ) show
0 324 moveto (7877 static void) show
0 312 moveto (7878 cgaputc\(int c\)) show
0 300 moveto (7879 {) show
0 288 moveto (7880   int pos;) show
0 276 moveto (7881 ) show
0 264 moveto (7882   // Cursor position: col + 80*row.) show
0 252 moveto (7883   outb\(CRTPORT, 14\);) show
0 240 moveto (7884   pos = inb\(CRTPORT+1\) << 8;) show
0 228 moveto (7885   outb\(CRTPORT, 15\);) show
0 216 moveto (7886   pos |= inb\(CRTPORT+1\);) show
0 204 moveto (7887 ) show
0 192 moveto (7888   if\(c == '\\n'\)) show
0 180 moveto (7889     pos += 80 - pos%80;) show
0 168 moveto (7890   else if\(c == BACKSPACE\){) show
0 156 moveto (7891     if\(pos > 0\) --pos;) show
0 144 moveto (7892   } else) show
0 132 moveto (7893     crt[pos++] = \(c&0xff\) | 0x0700;  // black on white) show
0 120 moveto (7894 ) show
0 108 moveto (7895   if\(pos < 0 || pos > 25*80\)) show
0 96 moveto (7896     panic\("pos under/overflow"\);) show
0 84 moveto (7897 ) show
0 72 moveto (7898 ) show
0 60 moveto (7899 ) show
0 24 moveto (Sheet 78) show
grestore
restore
showpage
%%Page: 88 88
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/console.c  Page 4) show
0 648 moveto (7900   if\(\(pos/80\) >= 24\){  // Scroll up.) show
0 636 moveto (7901     memmove\(crt, crt+80, sizeof\(crt[0]\)*23*80\);) show
0 624 moveto (7902     pos -= 80;) show
0 612 moveto (7903     memset\(crt+pos, 0, sizeof\(crt[0]\)*\(24*80 - pos\)\);) show
0 600 moveto (7904   }) show
0 588 moveto (7905 ) show
0 576 moveto (7906   outb\(CRTPORT, 14\);) show
0 564 moveto (7907   outb\(CRTPORT+1, pos>>8\);) show
0 552 moveto (7908   outb\(CRTPORT, 15\);) show
0 540 moveto (7909   outb\(CRTPORT+1, pos\);) show
0 528 moveto (7910   crt[pos] = ' ' | 0x0700;) show
0 516 moveto (7911 }) show
0 504 moveto (7912 ) show
0 492 moveto (7913 void) show
0 480 moveto (7914 consputc\(int c\)) show
0 468 moveto (7915 {) show
0 456 moveto (7916   if\(panicked\){) show
0 444 moveto (7917     cli\(\);) show
0 432 moveto (7918     for\(;;\)) show
0 420 moveto (7919       ;) show
0 408 moveto (7920   }) show
0 396 moveto (7921 ) show
0 384 moveto (7922   if\(c == BACKSPACE\){) show
0 372 moveto (7923     uartputc\('\\b'\); uartputc\(' '\); uartputc\('\\b'\);) show
0 360 moveto (7924   } else) show
0 348 moveto (7925     uartputc\(c\);) show
0 336 moveto (7926   cgaputc\(c\);) show
0 324 moveto (7927 }) show
0 312 moveto (7928 ) show
0 300 moveto (7929 #define INPUT_BUF 128) show
0 288 moveto (7930 struct {) show
0 276 moveto (7931   char buf[INPUT_BUF];) show
0 264 moveto (7932   uint r;  // Read index) show
0 252 moveto (7933   uint w;  // Write index) show
0 240 moveto (7934   uint e;  // Edit index) show
0 228 moveto (7935 } input;) show
0 216 moveto (7936 ) show
0 204 moveto (7937 #define C\(x\)  \(\(x\)-'@'\)  // Control-x) show
0 192 moveto (7938 ) show
0 180 moveto (7939 void) show
0 168 moveto (7940 consoleintr\(int \(*getc\)\(void\)\)) show
0 156 moveto (7941 {) show
0 144 moveto (7942   int c, doprocdump = 0;) show
0 132 moveto (7943 ) show
0 120 moveto (7944   acquire\(&cons.lock\);) show
0 108 moveto (7945   while\(\(c = getc\(\)\) >= 0\){) show
0 96 moveto (7946     switch\(c\){) show
0 84 moveto (7947     case C\('P'\):  // Process listing.) show
0 72 moveto (7948       doprocdump = 1;   // procdump\(\) locks cons.lock indirectly; invoke later) show
0 60 moveto (7949       break;) show
0 24 moveto (Sheet 79) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/console.c  Page 5) show
0 648 moveto (7950     case C\('U'\):  // Kill line.) show
0 636 moveto (7951       while\(input.e != input.w &&) show
0 624 moveto (7952             input.buf[\(input.e-1\) % INPUT_BUF] != '\\n'\){) show
0 612 moveto (7953         input.e--;) show
0 600 moveto (7954         consputc\(BACKSPACE\);) show
0 588 moveto (7955       }) show
0 576 moveto (7956       break;) show
0 564 moveto (7957     case C\('H'\): case '\\x7f':  // Backspace) show
0 552 moveto (7958       if\(input.e != input.w\){) show
0 540 moveto (7959         input.e--;) show
0 528 moveto (7960         consputc\(BACKSPACE\);) show
0 516 moveto (7961       }) show
0 504 moveto (7962       break;) show
0 492 moveto (7963     default:) show
0 480 moveto (7964       if\(c != 0 && input.e-input.r < INPUT_BUF\){) show
0 468 moveto (7965         c = \(c == '\\r'\) ? '\\n' : c;) show
0 456 moveto (7966         input.buf[input.e++ % INPUT_BUF] = c;) show
0 444 moveto (7967         consputc\(c\);) show
0 432 moveto (7968         if\(c == '\\n' || c == C\('D'\) || input.e == input.r+INPUT_BUF\){) show
0 420 moveto (7969           input.w = input.e;) show
0 408 moveto (7970           wakeup\(&input.r\);) show
0 396 moveto (7971         }) show
0 384 moveto (7972       }) show
0 372 moveto (7973       break;) show
0 360 moveto (7974     }) show
0 348 moveto (7975   }) show
0 336 moveto (7976   release\(&cons.lock\);) show
0 324 moveto (7977   if\(doprocdump\) {) show
0 312 moveto (7978     procdump\(\);  // now call procdump\(\) wo. cons.lock held) show
0 300 moveto (7979   }) show
0 288 moveto (7980 }) show
0 276 moveto (7981 ) show
0 264 moveto (7982 int) show
0 252 moveto (7983 consoleread\(struct inode *ip, char *dst, int n\)) show
0 240 moveto (7984 {) show
0 228 moveto (7985   uint target;) show
0 216 moveto (7986   int c;) show
0 204 moveto (7987 ) show
0 192 moveto (7988   iunlock\(ip\);) show
0 180 moveto (7989   target = n;) show
0 168 moveto (7990   acquire\(&cons.lock\);) show
0 156 moveto (7991   while\(n > 0\){) show
0 144 moveto (7992     while\(input.r == input.w\){) show
0 132 moveto (7993       if\(proc->killed\){) show
0 120 moveto (7994         release\(&cons.lock\);) show
0 108 moveto (7995         ilock\(ip\);) show
0 96 moveto (7996         return -1;) show
0 84 moveto (7997       }) show
0 72 moveto (7998       sleep\(&input.r, &cons.lock\);) show
0 60 moveto (7999     }) show
0 24 moveto (Sheet 79) show
grestore
restore
showpage
%%Page: 89 89
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/console.c  Page 6) show
0 648 moveto (8000     c = input.buf[input.r++ % INPUT_BUF];) show
0 636 moveto (8001     if\(c == C\('D'\)\){  // EOF) show
0 624 moveto (8002       if\(n < target\){) show
0 612 moveto (8003         // Save ^D for next time, to make sure) show
0 600 moveto (8004         // caller gets a 0-byte result.) show
0 588 moveto (8005         input.r--;) show
0 576 moveto (8006       }) show
0 564 moveto (8007       break;) show
0 552 moveto (8008     }) show
0 540 moveto (8009     *dst++ = c;) show
0 528 moveto (8010     --n;) show
0 516 moveto (8011     if\(c == '\\n'\)) show
0 504 moveto (8012       break;) show
0 492 moveto (8013   }) show
0 480 moveto (8014   release\(&cons.lock\);) show
0 468 moveto (8015   ilock\(ip\);) show
0 456 moveto (8016 ) show
0 444 moveto (8017   return target - n;) show
0 432 moveto (8018 }) show
0 420 moveto (8019 ) show
0 408 moveto (8020 int) show
0 396 moveto (8021 consolewrite\(struct inode *ip, char *buf, int n\)) show
0 384 moveto (8022 {) show
0 372 moveto (8023   int i;) show
0 360 moveto (8024 ) show
0 348 moveto (8025   iunlock\(ip\);) show
0 336 moveto (8026   acquire\(&cons.lock\);) show
0 324 moveto (8027   for\(i = 0; i < n; i++\)) show
0 312 moveto (8028     consputc\(buf[i] & 0xff\);) show
0 300 moveto (8029   release\(&cons.lock\);) show
0 288 moveto (8030   ilock\(ip\);) show
0 276 moveto (8031 ) show
0 264 moveto (8032   return n;) show
0 252 moveto (8033 }) show
0 240 moveto (8034 ) show
0 228 moveto (8035 void) show
0 216 moveto (8036 consoleinit\(void\)) show
0 204 moveto (8037 {) show
0 192 moveto (8038   initlock\(&cons.lock, "console"\);) show
0 180 moveto (8039 ) show
0 168 moveto (8040   devsw[CONSOLE].write = consolewrite;) show
0 156 moveto (8041   devsw[CONSOLE].read = consoleread;) show
0 144 moveto (8042   cons.locking = 1;) show
0 132 moveto (8043 ) show
0 120 moveto (8044   picenable\(IRQ_KBD\);) show
0 108 moveto (8045   ioapicenable\(IRQ_KBD, 0\);) show
0 96 moveto (8046 }) show
0 84 moveto (8047 ) show
0 72 moveto (8048 ) show
0 60 moveto (8049 ) show
0 24 moveto (Sheet 80) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/timer.c  Page 1) show
0 648 moveto (8050 // Intel 8253/8254/82C54 Programmable Interval Timer \(PIT\).) show
0 636 moveto (8051 // Only used on uniprocessors;) show
0 624 moveto (8052 // SMP machines use the local APIC timer.) show
0 612 moveto (8053 ) show
0 600 moveto (8054 #include "types.h") show
0 588 moveto (8055 #include "defs.h") show
0 576 moveto (8056 #include "traps.h") show
0 564 moveto (8057 #include "x86.h") show
0 552 moveto (8058 ) show
0 540 moveto (8059 #define IO_TIMER1       0x040           // 8253 Timer #1) show
0 528 moveto (8060 ) show
0 516 moveto (8061 // Frequency of all three count-down timers;) show
0 504 moveto (8062 // \(TIMER_FREQ/freq\) is the appropriate count) show
0 492 moveto (8063 // to generate a frequency of freq Hz.) show
0 480 moveto (8064 ) show
0 468 moveto (8065 #define TIMER_FREQ      1193182) show
0 456 moveto (8066 #define TIMER_DIV\(x\)    \(\(TIMER_FREQ+\(x\)/2\)/\(x\)\)) show
0 444 moveto (8067 ) show
0 432 moveto (8068 #define TIMER_MODE      \(IO_TIMER1 + 3\) // timer mode port) show
0 420 moveto (8069 #define TIMER_SEL0      0x00    // select counter 0) show
0 408 moveto (8070 #define TIMER_RATEGEN   0x04    // mode 2, rate generator) show
0 396 moveto (8071 #define TIMER_16BIT     0x30    // r/w counter 16 bits, LSB first) show
0 384 moveto (8072 ) show
0 372 moveto (8073 void) show
0 360 moveto (8074 timerinit\(void\)) show
0 348 moveto (8075 {) show
0 336 moveto (8076   // Interrupt 100 times/sec.) show
0 324 moveto (8077   outb\(TIMER_MODE, TIMER_SEL0 | TIMER_RATEGEN | TIMER_16BIT\);) show
0 312 moveto (8078   outb\(IO_TIMER1, TIMER_DIV\(100\) % 256\);) show
0 300 moveto (8079   outb\(IO_TIMER1, TIMER_DIV\(100\) / 256\);) show
0 288 moveto (8080   picenable\(IRQ_TIMER\);) show
0 276 moveto (8081 }) show
0 264 moveto (8082 ) show
0 252 moveto (8083 ) show
0 240 moveto (8084 ) show
0 228 moveto (8085 ) show
0 216 moveto (8086 ) show
0 204 moveto (8087 ) show
0 192 moveto (8088 ) show
0 180 moveto (8089 ) show
0 168 moveto (8090 ) show
0 156 moveto (8091 ) show
0 144 moveto (8092 ) show
0 132 moveto (8093 ) show
0 120 moveto (8094 ) show
0 108 moveto (8095 ) show
0 96 moveto (8096 ) show
0 84 moveto (8097 ) show
0 72 moveto (8098 ) show
0 60 moveto (8099 ) show
0 24 moveto (Sheet 80) show
grestore
restore
showpage
%%Page: 90 90
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/uart.c  Page 1) show
0 648 moveto (8100 // Intel 8250 serial port \(UART\).) show
0 636 moveto (8101 ) show
0 624 moveto (8102 #include "types.h") show
0 612 moveto (8103 #include "defs.h") show
0 600 moveto (8104 #include "param.h") show
0 588 moveto (8105 #include "traps.h") show
0 576 moveto (8106 #include "spinlock.h") show
0 564 moveto (8107 #include "fs.h") show
0 552 moveto (8108 #include "file.h") show
0 540 moveto (8109 #include "mmu.h") show
0 528 moveto (8110 #include "proc.h") show
0 516 moveto (8111 #include "x86.h") show
0 504 moveto (8112 ) show
0 492 moveto (8113 #define COM1    0x3f8) show
0 480 moveto (8114 ) show
0 468 moveto (8115 static int uart;    // is there a uart?) show
0 456 moveto (8116 ) show
0 444 moveto (8117 void) show
0 432 moveto (8118 uartinit\(void\)) show
0 420 moveto (8119 {) show
0 408 moveto (8120   char *p;) show
0 396 moveto (8121 ) show
0 384 moveto (8122   // Turn off the FIFO) show
0 372 moveto (8123   outb\(COM1+2, 0\);) show
0 360 moveto (8124 ) show
0 348 moveto (8125   // 9600 baud, 8 data bits, 1 stop bit, parity off.) show
0 336 moveto (8126   outb\(COM1+3, 0x80\);    // Unlock divisor) show
0 324 moveto (8127   outb\(COM1+0, 115200/9600\);) show
0 312 moveto (8128   outb\(COM1+1, 0\);) show
0 300 moveto (8129   outb\(COM1+3, 0x03\);    // Lock divisor, 8 data bits.) show
0 288 moveto (8130   outb\(COM1+4, 0\);) show
0 276 moveto (8131   outb\(COM1+1, 0x01\);    // Enable receive interrupts.) show
0 264 moveto (8132 ) show
0 252 moveto (8133   // If status is 0xFF, no serial port.) show
0 240 moveto (8134   if\(inb\(COM1+5\) == 0xFF\)) show
0 228 moveto (8135     return;) show
0 216 moveto (8136   uart = 1;) show
0 204 moveto (8137 ) show
0 192 moveto (8138   // Acknowledge pre-existing interrupt conditions;) show
0 180 moveto (8139   // enable interrupts.) show
0 168 moveto (8140   inb\(COM1+2\);) show
0 156 moveto (8141   inb\(COM1+0\);) show
0 144 moveto (8142   picenable\(IRQ_COM1\);) show
0 132 moveto (8143   ioapicenable\(IRQ_COM1, 0\);) show
0 120 moveto (8144 ) show
0 108 moveto (8145   // Announce that we're here.) show
0 96 moveto (8146   for\(p="xv6...\\n"; *p; p++\)) show
0 84 moveto (8147     uartputc\(*p\);) show
0 72 moveto (8148 }) show
0 60 moveto (8149 ) show
0 24 moveto (Sheet 81) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/uart.c  Page 2) show
0 648 moveto (8150 void) show
0 636 moveto (8151 uartputc\(int c\)) show
0 624 moveto (8152 {) show
0 612 moveto (8153   int i;) show
0 600 moveto (8154 ) show
0 588 moveto (8155   if\(!uart\)) show
0 576 moveto (8156     return;) show
0 564 moveto (8157   for\(i = 0; i < 128 && !\(inb\(COM1+5\) & 0x20\); i++\)) show
0 552 moveto (8158     microdelay\(10\);) show
0 540 moveto (8159   outb\(COM1+0, c\);) show
0 528 moveto (8160 }) show
0 516 moveto (8161 ) show
0 504 moveto (8162 static int) show
0 492 moveto (8163 uartgetc\(void\)) show
0 480 moveto (8164 {) show
0 468 moveto (8165   if\(!uart\)) show
0 456 moveto (8166     return -1;) show
0 444 moveto (8167   if\(!\(inb\(COM1+5\) & 0x01\)\)) show
0 432 moveto (8168     return -1;) show
0 420 moveto (8169   return inb\(COM1+0\);) show
0 408 moveto (8170 }) show
0 396 moveto (8171 ) show
0 384 moveto (8172 void) show
0 372 moveto (8173 uartintr\(void\)) show
0 360 moveto (8174 {) show
0 348 moveto (8175   consoleintr\(uartgetc\);) show
0 336 moveto (8176 }) show
0 324 moveto (8177 ) show
0 312 moveto (8178 ) show
0 300 moveto (8179 ) show
0 288 moveto (8180 ) show
0 276 moveto (8181 ) show
0 264 moveto (8182 ) show
0 252 moveto (8183 ) show
0 240 moveto (8184 ) show
0 228 moveto (8185 ) show
0 216 moveto (8186 ) show
0 204 moveto (8187 ) show
0 192 moveto (8188 ) show
0 180 moveto (8189 ) show
0 168 moveto (8190 ) show
0 156 moveto (8191 ) show
0 144 moveto (8192 ) show
0 132 moveto (8193 ) show
0 120 moveto (8194 ) show
0 108 moveto (8195 ) show
0 96 moveto (8196 ) show
0 84 moveto (8197 ) show
0 72 moveto (8198 ) show
0 60 moveto (8199 ) show
0 24 moveto (Sheet 81) show
grestore
restore
showpage
%%Page: 91 91
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/initcode.S  Page 1) show
0 648 moveto (8200 # Initial process execs /init.) show
0 636 moveto (8201 ) show
0 624 moveto (8202 #include "syscall.h") show
0 612 moveto (8203 #include "traps.h") show
0 600 moveto (8204 ) show
0 588 moveto (8205 ) show
0 576 moveto (8206 # exec\(init, argv\)) show
0 564 moveto (8207 .globl start) show
0 552 moveto (8208 start:) show
0 540 moveto (8209   pushl $argv) show
0 528 moveto (8210   pushl $init) show
0 516 moveto (8211   pushl $0  // where caller pc would be) show
0 504 moveto (8212   movl $SYS_exec, %eax) show
0 492 moveto (8213   int $T_SYSCALL) show
0 480 moveto (8214 ) show
0 468 moveto (8215 # for\(;;\) exit\(\);) show
0 456 moveto (8216 exit:) show
0 444 moveto (8217   movl $SYS_exit, %eax) show
0 432 moveto (8218   int $T_SYSCALL) show
0 420 moveto (8219   jmp exit) show
0 408 moveto (8220 ) show
0 396 moveto (8221 # char init[] = "/init\\0";) show
0 384 moveto (8222 init:) show
0 372 moveto (8223   .string "/init\\0") show
0 360 moveto (8224 ) show
0 348 moveto (8225 # char *argv[] = { init, 0 };) show
0 336 moveto (8226 .p2align 2) show
0 324 moveto (8227 argv:) show
0 312 moveto (8228   .long init) show
0 300 moveto (8229   .long 0) show
0 288 moveto (8230 ) show
0 276 moveto (8231 ) show
0 264 moveto (8232 ) show
0 252 moveto (8233 ) show
0 240 moveto (8234 ) show
0 228 moveto (8235 ) show
0 216 moveto (8236 ) show
0 204 moveto (8237 ) show
0 192 moveto (8238 ) show
0 180 moveto (8239 ) show
0 168 moveto (8240 ) show
0 156 moveto (8241 ) show
0 144 moveto (8242 ) show
0 132 moveto (8243 ) show
0 120 moveto (8244 ) show
0 108 moveto (8245 ) show
0 96 moveto (8246 ) show
0 84 moveto (8247 ) show
0 72 moveto (8248 ) show
0 60 moveto (8249 ) show
0 24 moveto (Sheet 82) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/usys.S  Page 1) show
0 648 moveto (8250 #include "syscall.h") show
0 636 moveto (8251 #include "traps.h") show
0 624 moveto (8252 ) show
0 612 moveto (8253 #define SYSCALL\(name\) \\) show
0 600 moveto (8254   .globl name; \\) show
0 588 moveto (8255   name: \\) show
0 576 moveto (8256     movl $SYS_ ## name, %eax; \\) show
0 564 moveto (8257     int $T_SYSCALL; \\) show
0 552 moveto (8258     ret) show
0 540 moveto (8259 ) show
0 528 moveto (8260 SYSCALL\(fork\)) show
0 516 moveto (8261 SYSCALL\(exit\)) show
0 504 moveto (8262 SYSCALL\(wait\)) show
0 492 moveto (8263 SYSCALL\(pipe\)) show
0 480 moveto (8264 SYSCALL\(read\)) show
0 468 moveto (8265 SYSCALL\(write\)) show
0 456 moveto (8266 SYSCALL\(close\)) show
0 444 moveto (8267 SYSCALL\(kill\)) show
0 432 moveto (8268 SYSCALL\(exec\)) show
0 420 moveto (8269 SYSCALL\(open\)) show
0 408 moveto (8270 SYSCALL\(mknod\)) show
0 396 moveto (8271 SYSCALL\(unlink\)) show
0 384 moveto (8272 SYSCALL\(fstat\)) show
0 372 moveto (8273 SYSCALL\(link\)) show
0 360 moveto (8274 SYSCALL\(mkdir\)) show
0 348 moveto (8275 SYSCALL\(chdir\)) show
0 336 moveto (8276 SYSCALL\(dup\)) show
0 324 moveto (8277 SYSCALL\(getpid\)) show
0 312 moveto (8278 SYSCALL\(sbrk\)) show
0 300 moveto (8279 SYSCALL\(sleep\)) show
0 288 moveto (8280 SYSCALL\(uptime\)) show
0 276 moveto (8281 SYSCALL\(halt\)) show
0 264 moveto (8282 SYSCALL\(date\)) show
0 252 moveto (8283 SYSCALL\(getuid\)) show
0 240 moveto (8284 SYSCALL\(getgid\)) show
0 228 moveto (8285 SYSCALL\(getppid\)) show
0 216 moveto (8286 SYSCALL\(setuid\)) show
0 204 moveto (8287 SYSCALL\(setgid\)) show
0 192 moveto (8288 SYSCALL\(getprocs\)) show
0 180 moveto (8289 SYSCALL\(setpriority\)) show
0 168 moveto (8290 ) show
0 156 moveto (8291 ) show
0 144 moveto (8292 ) show
0 132 moveto (8293 ) show
0 120 moveto (8294 ) show
0 108 moveto (8295 ) show
0 96 moveto (8296 ) show
0 84 moveto (8297 ) show
0 72 moveto (8298 ) show
0 60 moveto (8299 ) show
0 24 moveto (Sheet 82) show
grestore
restore
showpage
%%Page: 92 92
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/init.c  Page 1) show
0 648 moveto (8300 // init: The initial user-level program) show
0 636 moveto (8301 ) show
0 624 moveto (8302 #include "types.h") show
0 612 moveto (8303 #include "stat.h") show
0 600 moveto (8304 #include "user.h") show
0 588 moveto (8305 #include "fcntl.h") show
0 576 moveto (8306 ) show
0 564 moveto (8307 char *argv[] = { "sh", 0 };) show
0 552 moveto (8308 ) show
0 540 moveto (8309 int) show
0 528 moveto (8310 main\(void\)) show
0 516 moveto (8311 {) show
0 504 moveto (8312   int pid, wpid;) show
0 492 moveto (8313 ) show
0 480 moveto (8314   if\(open\("console", O_RDWR\) < 0\){) show
0 468 moveto (8315     mknod\("console", 1, 1\);) show
0 456 moveto (8316     open\("console", O_RDWR\);) show
0 444 moveto (8317   }) show
0 432 moveto (8318   dup\(0\);  // stdout) show
0 420 moveto (8319   dup\(0\);  // stderr) show
0 408 moveto (8320 ) show
0 396 moveto (8321   for\(;;\){) show
0 384 moveto (8322     printf\(1, "init: starting sh\\n"\);) show
0 372 moveto (8323     pid = fork\(\);) show
0 360 moveto (8324     if\(pid < 0\){) show
0 348 moveto (8325       printf\(1, "init: fork failed\\n"\);) show
0 336 moveto (8326       exit\(\);) show
0 324 moveto (8327     }) show
0 312 moveto (8328     if\(pid == 0\){) show
0 300 moveto (8329       exec\("sh", argv\);) show
0 288 moveto (8330       printf\(1, "init: exec sh failed\\n"\);) show
0 276 moveto (8331       exit\(\);) show
0 264 moveto (8332     }) show
0 252 moveto (8333     while\(\(wpid=wait\(\)\) >= 0 && wpid != pid\)) show
0 240 moveto (8334       printf\(1, "zombie!\\n"\);) show
0 228 moveto (8335   }) show
0 216 moveto (8336 }) show
0 204 moveto (8337 ) show
0 192 moveto (8338 ) show
0 180 moveto (8339 ) show
0 168 moveto (8340 ) show
0 156 moveto (8341 ) show
0 144 moveto (8342 ) show
0 132 moveto (8343 ) show
0 120 moveto (8344 ) show
0 108 moveto (8345 ) show
0 96 moveto (8346 ) show
0 84 moveto (8347 ) show
0 72 moveto (8348 ) show
0 60 moveto (8349 ) show
0 24 moveto (Sheet 83) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/sh.c  Page 1) show
0 648 moveto (8350 // Shell.) show
0 636 moveto (8351 // 2015-12-21. Added very simple processing for builtin commands) show
0 624 moveto (8352 ) show
0 612 moveto (8353 #include "types.h") show
0 600 moveto (8354 #include "user.h") show
0 588 moveto (8355 #include "fcntl.h") show
0 576 moveto (8356 ) show
0 564 moveto (8357 // Parsed command representation) show
0 552 moveto (8358 #define EXEC  1) show
0 540 moveto (8359 #define REDIR 2) show
0 528 moveto (8360 #define PIPE  3) show
0 516 moveto (8361 #define LIST  4) show
0 504 moveto (8362 #define BACK  5) show
0 492 moveto (8363 ) show
0 480 moveto (8364 #define MAXARGS 10) show
0 468 moveto (8365 ) show
0 456 moveto (8366 struct cmd {) show
0 444 moveto (8367   int type;) show
0 432 moveto (8368 };) show
0 420 moveto (8369 ) show
0 408 moveto (8370 struct execcmd {) show
0 396 moveto (8371   int type;) show
0 384 moveto (8372   char *argv[MAXARGS];) show
0 372 moveto (8373   char *eargv[MAXARGS];) show
0 360 moveto (8374 };) show
0 348 moveto (8375 ) show
0 336 moveto (8376 struct redircmd {) show
0 324 moveto (8377   int type;) show
0 312 moveto (8378   struct cmd *cmd;) show
0 300 moveto (8379   char *file;) show
0 288 moveto (8380   char *efile;) show
0 276 moveto (8381   int mode;) show
0 264 moveto (8382   int fd;) show
0 252 moveto (8383 };) show
0 240 moveto (8384 ) show
0 228 moveto (8385 struct pipecmd {) show
0 216 moveto (8386   int type;) show
0 204 moveto (8387   struct cmd *left;) show
0 192 moveto (8388   struct cmd *right;) show
0 180 moveto (8389 };) show
0 168 moveto (8390 ) show
0 156 moveto (8391 struct listcmd {) show
0 144 moveto (8392   int type;) show
0 132 moveto (8393   struct cmd *left;) show
0 120 moveto (8394   struct cmd *right;) show
0 108 moveto (8395 };) show
0 96 moveto (8396 ) show
0 84 moveto (8397 ) show
0 72 moveto (8398 ) show
0 60 moveto (8399 ) show
0 24 moveto (Sheet 83) show
grestore
restore
showpage
%%Page: 93 93
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/sh.c  Page 2) show
0 648 moveto (8400 struct backcmd {) show
0 636 moveto (8401   int type;) show
0 624 moveto (8402   struct cmd *cmd;) show
0 612 moveto (8403 };) show
0 600 moveto (8404 ) show
0 588 moveto (8405 int fork1\(void\);  // Fork but panics on failure.) show
0 576 moveto (8406 void panic\(char*\);) show
0 564 moveto (8407 struct cmd *parsecmd\(char*\);) show
0 552 moveto (8408 ) show
0 540 moveto (8409 // Execute cmd.  Never returns.) show
0 528 moveto (8410 void) show
0 516 moveto (8411 runcmd\(struct cmd *cmd\)) show
0 504 moveto (8412 {) show
0 492 moveto (8413   int p[2];) show
0 480 moveto (8414   struct backcmd *bcmd;) show
0 468 moveto (8415   struct execcmd *ecmd;) show
0 456 moveto (8416   struct listcmd *lcmd;) show
0 444 moveto (8417   struct pipecmd *pcmd;) show
0 432 moveto (8418   struct redircmd *rcmd;) show
0 420 moveto (8419 ) show
0 408 moveto (8420   if\(cmd == 0\)) show
0 396 moveto (8421     exit\(\);) show
0 384 moveto (8422 ) show
0 372 moveto (8423   switch\(cmd->type\){) show
0 360 moveto (8424   default:) show
0 348 moveto (8425     panic\("runcmd"\);) show
0 336 moveto (8426 ) show
0 324 moveto (8427   case EXEC:) show
0 312 moveto (8428     ecmd = \(struct execcmd*\)cmd;) show
0 300 moveto (8429     if\(ecmd->argv[0] == 0\)) show
0 288 moveto (8430       exit\(\);) show
0 276 moveto (8431     exec\(ecmd->argv[0], ecmd->argv\);) show
0 264 moveto (8432     printf\(2, "exec %s failed\\n", ecmd->argv[0]\);) show
0 252 moveto (8433     break;) show
0 240 moveto (8434 ) show
0 228 moveto (8435   case REDIR:) show
0 216 moveto (8436     rcmd = \(struct redircmd*\)cmd;) show
0 204 moveto (8437     close\(rcmd->fd\);) show
0 192 moveto (8438     if\(open\(rcmd->file, rcmd->mode\) < 0\){) show
0 180 moveto (8439       printf\(2, "open %s failed\\n", rcmd->file\);) show
0 168 moveto (8440       exit\(\);) show
0 156 moveto (8441     }) show
0 144 moveto (8442     runcmd\(rcmd->cmd\);) show
0 132 moveto (8443     break;) show
0 120 moveto (8444 ) show
0 108 moveto (8445   case LIST:) show
0 96 moveto (8446     lcmd = \(struct listcmd*\)cmd;) show
0 84 moveto (8447     if\(fork1\(\) == 0\)) show
0 72 moveto (8448       runcmd\(lcmd->left\);) show
0 60 moveto (8449     wait\(\);) show
0 24 moveto (Sheet 84) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/sh.c  Page 3) show
0 648 moveto (8450     runcmd\(lcmd->right\);) show
0 636 moveto (8451     break;) show
0 624 moveto (8452 ) show
0 612 moveto (8453   case PIPE:) show
0 600 moveto (8454     pcmd = \(struct pipecmd*\)cmd;) show
0 588 moveto (8455     if\(pipe\(p\) < 0\)) show
0 576 moveto (8456       panic\("pipe"\);) show
0 564 moveto (8457     if\(fork1\(\) == 0\){) show
0 552 moveto (8458       close\(1\);) show
0 540 moveto (8459       dup\(p[1]\);) show
0 528 moveto (8460       close\(p[0]\);) show
0 516 moveto (8461       close\(p[1]\);) show
0 504 moveto (8462       runcmd\(pcmd->left\);) show
0 492 moveto (8463     }) show
0 480 moveto (8464     if\(fork1\(\) == 0\){) show
0 468 moveto (8465       close\(0\);) show
0 456 moveto (8466       dup\(p[0]\);) show
0 444 moveto (8467       close\(p[0]\);) show
0 432 moveto (8468       close\(p[1]\);) show
0 420 moveto (8469       runcmd\(pcmd->right\);) show
0 408 moveto (8470     }) show
0 396 moveto (8471     close\(p[0]\);) show
0 384 moveto (8472     close\(p[1]\);) show
0 372 moveto (8473     wait\(\);) show
0 360 moveto (8474     wait\(\);) show
0 348 moveto (8475     break;) show
0 336 moveto (8476 ) show
0 324 moveto (8477   case BACK:) show
0 312 moveto (8478     bcmd = \(struct backcmd*\)cmd;) show
0 300 moveto (8479     if\(fork1\(\) == 0\)) show
0 288 moveto (8480       runcmd\(bcmd->cmd\);) show
0 276 moveto (8481     break;) show
0 264 moveto (8482   }) show
0 252 moveto (8483   exit\(\);) show
0 240 moveto (8484 }) show
0 228 moveto (8485 ) show
0 216 moveto (8486 int) show
0 204 moveto (8487 getcmd\(char *buf, int nbuf\)) show
0 192 moveto (8488 {) show
0 180 moveto (8489   printf\(2, "$ "\);) show
0 168 moveto (8490   memset\(buf, 0, nbuf\);) show
0 156 moveto (8491   gets\(buf, nbuf\);) show
0 144 moveto (8492   if\(buf[0] == 0\) // EOF) show
0 132 moveto (8493     return -1;) show
0 120 moveto (8494   return 0;) show
0 108 moveto (8495 }) show
0 96 moveto (8496 ) show
0 84 moveto (8497 ) show
0 72 moveto (8498 ) show
0 60 moveto (8499 ) show
0 24 moveto (Sheet 84) show
grestore
restore
showpage
%%Page: 94 94
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/sh.c  Page 4) show
0 648 moveto (8500 #ifdef USE_BUILTINS) show
0 636 moveto (8501 // ***** processing for shell builtins begins here *****) show
0 624 moveto (8502 ) show
0 612 moveto (8503 int) show
0 600 moveto (8504 strncmp\(const char *p, const char *q, uint n\)) show
0 588 moveto (8505 {) show
0 576 moveto (8506     while\(n > 0 && *p && *p == *q\)) show
0 564 moveto (8507       n--, p++, q++;) show
0 552 moveto (8508     if\(n == 0\)) show
0 540 moveto (8509       return 0;) show
0 528 moveto (8510     return \(uchar\)*p - \(uchar\)*q;) show
0 516 moveto (8511 }) show
0 504 moveto (8512 ) show
0 492 moveto (8513 int) show
0 480 moveto (8514 makeint\(char *p\)) show
0 468 moveto (8515 {) show
0 456 moveto (8516   int val = 0;) show
0 444 moveto (8517 ) show
0 432 moveto (8518   while \(\(*p >= '0'\) && \(*p <= '9'\)\) {) show
0 420 moveto (8519     val = 10*val + \(*p-'0'\);) show
0 408 moveto (8520     ++p;) show
0 396 moveto (8521   }) show
0 384 moveto (8522   return val;) show
0 372 moveto (8523 }) show
0 360 moveto (8524 ) show
0 348 moveto (8525 int) show
0 336 moveto (8526 setbuiltin\(char *p\)) show
0 324 moveto (8527 {) show
0 312 moveto (8528   int i;) show
0 300 moveto (8529 ) show
0 288 moveto (8530   p += strlen\("_set"\);) show
0 276 moveto (8531   while \(strncmp\(p, " ", 1\) == 0\) p++; // chomp spaces) show
0 264 moveto (8532   if \(strncmp\("uid", p, 3\) == 0\) {) show
0 252 moveto (8533     p += strlen\("uid"\);) show
0 240 moveto (8534     while \(strncmp\(p, " ", 1\) == 0\) p++; // chomp spaces) show
0 228 moveto (8535     i = makeint\(p\); // ugly) show
0 216 moveto (8536     return \(setuid\(i\)\);) show
0 204 moveto (8537   } else) show
0 192 moveto (8538   if \(strncmp\("gid", p, 3\) == 0\) {) show
0 180 moveto (8539     p += strlen\("gid"\);) show
0 168 moveto (8540     while \(strncmp\(p, " ", 1\) == 0\) p++; // chomp spaces) show
0 156 moveto (8541     i = makeint\(p\); // ugly) show
0 144 moveto (8542     return \(setgid\(i\)\);) show
0 132 moveto (8543   }) show
0 120 moveto (8544   printf\(2, "Invalid _set parameter\\n"\);) show
0 108 moveto (8545   return -1;) show
0 96 moveto (8546 }) show
0 84 moveto (8547 ) show
0 72 moveto (8548 ) show
0 60 moveto (8549 ) show
0 24 moveto (Sheet 85) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/sh.c  Page 5) show
0 648 moveto (8550 int) show
0 636 moveto (8551 getbuiltin\(char *p\)) show
0 624 moveto (8552 {) show
0 612 moveto (8553   p += strlen\("_get"\);) show
0 600 moveto (8554   while \(strncmp\(p, " ", 1\) == 0\) p++; // chomp spaces) show
0 588 moveto (8555   if \(strncmp\("uid", p, 3\) == 0\) {) show
0 576 moveto (8556     printf\(2, "%d\\n", getuid\(\)\);) show
0 564 moveto (8557     return 0;) show
0 552 moveto (8558   }) show
0 540 moveto (8559   if \(strncmp\("gid", p, 3\) == 0\) {) show
0 528 moveto (8560     printf\(2, "%d\\n", getgid\(\)\);) show
0 516 moveto (8561     return 0;) show
0 504 moveto (8562   }) show
0 492 moveto (8563   printf\(2, "Invalid _get parameter\\n"\);) show
0 480 moveto (8564   return -1;) show
0 468 moveto (8565 }) show
0 456 moveto (8566 ) show
0 444 moveto (8567 typedef int funcPtr_t\(char *\);) show
0 432 moveto (8568 typedef struct {) show
0 420 moveto (8569   char       *cmd;) show
0 408 moveto (8570   funcPtr_t  *name;) show
0 396 moveto (8571 } dispatchTableEntry_t;) show
0 384 moveto (8572 ) show
0 372 moveto (8573 // Use a simple function dispatch table \(FDT\) to process builtin commands) show
0 360 moveto (8574 dispatchTableEntry_t fdt[] = {) show
0 348 moveto (8575   {"_set", setbuiltin},) show
0 336 moveto (8576   {"_get", getbuiltin}) show
0 324 moveto (8577 };) show
0 312 moveto (8578 int FDTcount = sizeof\(fdt\) / sizeof\(fdt[0]\); // # entris in FDT) show
0 300 moveto (8579 ) show
0 288 moveto (8580 void) show
0 276 moveto (8581 dobuiltin\(char *cmd\) {) show
0 264 moveto (8582   int i;) show
0 252 moveto (8583 ) show
0 240 moveto (8584   for \(i=0; i<FDTcount; i++\)) show
0 228 moveto (8585     if \(strncmp\(cmd, fdt[i].cmd, strlen\(fdt[i].cmd\)\) == 0\)) show
0 216 moveto (8586      \(*fdt[i].name\)\(cmd\);) show
0 204 moveto (8587 }) show
0 192 moveto (8588 ) show
0 180 moveto (8589 ) show
0 168 moveto (8590 ) show
0 156 moveto (8591 ) show
0 144 moveto (8592 ) show
0 132 moveto (8593 ) show
0 120 moveto (8594 ) show
0 108 moveto (8595 ) show
0 96 moveto (8596 ) show
0 84 moveto (8597 ) show
0 72 moveto (8598 ) show
0 60 moveto (8599 ) show
0 24 moveto (Sheet 85) show
grestore
restore
showpage
%%Page: 95 95
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/sh.c  Page 6) show
0 648 moveto (8600 // ***** processing for shell builtins ends here *****) show
0 636 moveto (8601 #endif) show
0 624 moveto (8602 ) show
0 612 moveto (8603 int) show
0 600 moveto (8604 main\(void\)) show
0 588 moveto (8605 {) show
0 576 moveto (8606   static char buf[100];) show
0 564 moveto (8607   int fd;) show
0 552 moveto (8608 ) show
0 540 moveto (8609   // Assumes three file descriptors open.) show
0 528 moveto (8610   while\(\(fd = open\("console", O_RDWR\)\) >= 0\){) show
0 516 moveto (8611     if\(fd >= 3\){) show
0 504 moveto (8612       close\(fd\);) show
0 492 moveto (8613       break;) show
0 480 moveto (8614     }) show
0 468 moveto (8615   }) show
0 456 moveto (8616 ) show
0 444 moveto (8617   // Read and run input commands.) show
0 432 moveto (8618   while\(getcmd\(buf, sizeof\(buf\)\) >= 0\){) show
0 420 moveto (8619 // add support for built-ins here. cd is a built-in) show
0 408 moveto (8620     if\(buf[0] == 'c' && buf[1] == 'd' && buf[2] == ' '\){) show
0 396 moveto (8621       // Clumsy but will have to do for now.) show
0 384 moveto (8622       // Chdir has no effect on the parent if run in the child.) show
0 372 moveto (8623       buf[strlen\(buf\)-1] = 0;  // chop \\n) show
0 360 moveto (8624       if\(chdir\(buf+3\) < 0\)) show
0 348 moveto (8625         printf\(2, "cannot cd %s\\n", buf+3\);) show
0 336 moveto (8626       continue;) show
0 324 moveto (8627     }) show
0 312 moveto (8628 #ifdef USE_BUILTINS) show
0 300 moveto (8629     if \(buf[0]=='_'\) {     // assume it is a builtin command) show
0 288 moveto (8630       dobuiltin\(buf\);) show
0 276 moveto (8631       continue;) show
0 264 moveto (8632     }) show
0 252 moveto (8633 #endif) show
0 240 moveto (8634     if\(fork1\(\) == 0\)) show
0 228 moveto (8635       runcmd\(parsecmd\(buf\)\);) show
0 216 moveto (8636     wait\(\);) show
0 204 moveto (8637   }) show
0 192 moveto (8638   exit\(\);) show
0 180 moveto (8639 }) show
0 168 moveto (8640 ) show
0 156 moveto (8641 void) show
0 144 moveto (8642 panic\(char *s\)) show
0 132 moveto (8643 {) show
0 120 moveto (8644   printf\(2, "%s\\n", s\);) show
0 108 moveto (8645   exit\(\);) show
0 96 moveto (8646 }) show
0 84 moveto (8647 ) show
0 72 moveto (8648 ) show
0 60 moveto (8649 ) show
0 24 moveto (Sheet 86) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/sh.c  Page 7) show
0 648 moveto (8650 int) show
0 636 moveto (8651 fork1\(void\)) show
0 624 moveto (8652 {) show
0 612 moveto (8653   int pid;) show
0 600 moveto (8654 ) show
0 588 moveto (8655   pid = fork\(\);) show
0 576 moveto (8656   if\(pid == -1\)) show
0 564 moveto (8657     panic\("fork"\);) show
0 552 moveto (8658   return pid;) show
0 540 moveto (8659 }) show
0 528 moveto (8660 ) show
0 516 moveto (8661 // Constructors) show
0 504 moveto (8662 ) show
0 492 moveto (8663 struct cmd*) show
0 480 moveto (8664 execcmd\(void\)) show
0 468 moveto (8665 {) show
0 456 moveto (8666   struct execcmd *cmd;) show
0 444 moveto (8667 ) show
0 432 moveto (8668   cmd = malloc\(sizeof\(*cmd\)\);) show
0 420 moveto (8669   memset\(cmd, 0, sizeof\(*cmd\)\);) show
0 408 moveto (8670   cmd->type = EXEC;) show
0 396 moveto (8671   return \(struct cmd*\)cmd;) show
0 384 moveto (8672 }) show
0 372 moveto (8673 ) show
0 360 moveto (8674 struct cmd*) show
0 348 moveto (8675 redircmd\(struct cmd *subcmd, char *file, char *efile, int mode, int fd\)) show
0 336 moveto (8676 {) show
0 324 moveto (8677   struct redircmd *cmd;) show
0 312 moveto (8678 ) show
0 300 moveto (8679   cmd = malloc\(sizeof\(*cmd\)\);) show
0 288 moveto (8680   memset\(cmd, 0, sizeof\(*cmd\)\);) show
0 276 moveto (8681   cmd->type = REDIR;) show
0 264 moveto (8682   cmd->cmd = subcmd;) show
0 252 moveto (8683   cmd->file = file;) show
0 240 moveto (8684   cmd->efile = efile;) show
0 228 moveto (8685   cmd->mode = mode;) show
0 216 moveto (8686   cmd->fd = fd;) show
0 204 moveto (8687   return \(struct cmd*\)cmd;) show
0 192 moveto (8688 }) show
0 180 moveto (8689 ) show
0 168 moveto (8690 ) show
0 156 moveto (8691 ) show
0 144 moveto (8692 ) show
0 132 moveto (8693 ) show
0 120 moveto (8694 ) show
0 108 moveto (8695 ) show
0 96 moveto (8696 ) show
0 84 moveto (8697 ) show
0 72 moveto (8698 ) show
0 60 moveto (8699 ) show
0 24 moveto (Sheet 86) show
grestore
restore
showpage
%%Page: 96 96
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/sh.c  Page 8) show
0 648 moveto (8700 struct cmd*) show
0 636 moveto (8701 pipecmd\(struct cmd *left, struct cmd *right\)) show
0 624 moveto (8702 {) show
0 612 moveto (8703   struct pipecmd *cmd;) show
0 600 moveto (8704 ) show
0 588 moveto (8705   cmd = malloc\(sizeof\(*cmd\)\);) show
0 576 moveto (8706   memset\(cmd, 0, sizeof\(*cmd\)\);) show
0 564 moveto (8707   cmd->type = PIPE;) show
0 552 moveto (8708   cmd->left = left;) show
0 540 moveto (8709   cmd->right = right;) show
0 528 moveto (8710   return \(struct cmd*\)cmd;) show
0 516 moveto (8711 }) show
0 504 moveto (8712 ) show
0 492 moveto (8713 struct cmd*) show
0 480 moveto (8714 listcmd\(struct cmd *left, struct cmd *right\)) show
0 468 moveto (8715 {) show
0 456 moveto (8716   struct listcmd *cmd;) show
0 444 moveto (8717 ) show
0 432 moveto (8718   cmd = malloc\(sizeof\(*cmd\)\);) show
0 420 moveto (8719   memset\(cmd, 0, sizeof\(*cmd\)\);) show
0 408 moveto (8720   cmd->type = LIST;) show
0 396 moveto (8721   cmd->left = left;) show
0 384 moveto (8722   cmd->right = right;) show
0 372 moveto (8723   return \(struct cmd*\)cmd;) show
0 360 moveto (8724 }) show
0 348 moveto (8725 ) show
0 336 moveto (8726 struct cmd*) show
0 324 moveto (8727 backcmd\(struct cmd *subcmd\)) show
0 312 moveto (8728 {) show
0 300 moveto (8729   struct backcmd *cmd;) show
0 288 moveto (8730 ) show
0 276 moveto (8731   cmd = malloc\(sizeof\(*cmd\)\);) show
0 264 moveto (8732   memset\(cmd, 0, sizeof\(*cmd\)\);) show
0 252 moveto (8733   cmd->type = BACK;) show
0 240 moveto (8734   cmd->cmd = subcmd;) show
0 228 moveto (8735   return \(struct cmd*\)cmd;) show
0 216 moveto (8736 }) show
0 204 moveto (8737 ) show
0 192 moveto (8738 ) show
0 180 moveto (8739 ) show
0 168 moveto (8740 ) show
0 156 moveto (8741 ) show
0 144 moveto (8742 ) show
0 132 moveto (8743 ) show
0 120 moveto (8744 ) show
0 108 moveto (8745 ) show
0 96 moveto (8746 ) show
0 84 moveto (8747 ) show
0 72 moveto (8748 ) show
0 60 moveto (8749 ) show
0 24 moveto (Sheet 87) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/sh.c  Page 9) show
0 648 moveto (8750 // Parsing) show
0 636 moveto (8751 ) show
0 624 moveto (8752 char whitespace[] = " \\t\\r\\n\\v";) show
0 612 moveto (8753 char symbols[] = "<|>&;\(\)";) show
0 600 moveto (8754 ) show
0 588 moveto (8755 int) show
0 576 moveto (8756 gettoken\(char **ps, char *es, char **q, char **eq\)) show
0 564 moveto (8757 {) show
0 552 moveto (8758   char *s;) show
0 540 moveto (8759   int ret;) show
0 528 moveto (8760 ) show
0 516 moveto (8761   s = *ps;) show
0 504 moveto (8762   while\(s < es && strchr\(whitespace, *s\)\)) show
0 492 moveto (8763     s++;) show
0 480 moveto (8764   if\(q\)) show
0 468 moveto (8765     *q = s;) show
0 456 moveto (8766   ret = *s;) show
0 444 moveto (8767   switch\(*s\){) show
0 432 moveto (8768   case 0:) show
0 420 moveto (8769     break;) show
0 408 moveto (8770   case '|':) show
0 396 moveto (8771   case '\(':) show
0 384 moveto (8772   case '\)':) show
0 372 moveto (8773   case ';':) show
0 360 moveto (8774   case '&':) show
0 348 moveto (8775   case '<':) show
0 336 moveto (8776     s++;) show
0 324 moveto (8777     break;) show
0 312 moveto (8778   case '>':) show
0 300 moveto (8779     s++;) show
0 288 moveto (8780     if\(*s == '>'\){) show
0 276 moveto (8781       ret = '+';) show
0 264 moveto (8782       s++;) show
0 252 moveto (8783     }) show
0 240 moveto (8784     break;) show
0 228 moveto (8785   default:) show
0 216 moveto (8786     ret = 'a';) show
0 204 moveto (8787     while\(s < es && !strchr\(whitespace, *s\) && !strchr\(symbols, *s\)\)) show
0 192 moveto (8788       s++;) show
0 180 moveto (8789     break;) show
0 168 moveto (8790   }) show
0 156 moveto (8791   if\(eq\)) show
0 144 moveto (8792     *eq = s;) show
0 132 moveto (8793 ) show
0 120 moveto (8794   while\(s < es && strchr\(whitespace, *s\)\)) show
0 108 moveto (8795     s++;) show
0 96 moveto (8796   *ps = s;) show
0 84 moveto (8797   return ret;) show
0 72 moveto (8798 }) show
0 60 moveto (8799 ) show
0 24 moveto (Sheet 87) show
grestore
restore
showpage
%%Page: 97 97
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/sh.c  Page 10) show
0 648 moveto (8800 int) show
0 636 moveto (8801 peek\(char **ps, char *es, char *toks\)) show
0 624 moveto (8802 {) show
0 612 moveto (8803   char *s;) show
0 600 moveto (8804 ) show
0 588 moveto (8805   s = *ps;) show
0 576 moveto (8806   while\(s < es && strchr\(whitespace, *s\)\)) show
0 564 moveto (8807     s++;) show
0 552 moveto (8808   *ps = s;) show
0 540 moveto (8809   return *s && strchr\(toks, *s\);) show
0 528 moveto (8810 }) show
0 516 moveto (8811 ) show
0 504 moveto (8812 struct cmd *parseline\(char**, char*\);) show
0 492 moveto (8813 struct cmd *parsepipe\(char**, char*\);) show
0 480 moveto (8814 struct cmd *parseexec\(char**, char*\);) show
0 468 moveto (8815 struct cmd *nulterminate\(struct cmd*\);) show
0 456 moveto (8816 ) show
0 444 moveto (8817 struct cmd*) show
0 432 moveto (8818 parsecmd\(char *s\)) show
0 420 moveto (8819 {) show
0 408 moveto (8820   char *es;) show
0 396 moveto (8821   struct cmd *cmd;) show
0 384 moveto (8822 ) show
0 372 moveto (8823   es = s + strlen\(s\);) show
0 360 moveto (8824   cmd = parseline\(&s, es\);) show
0 348 moveto (8825   peek\(&s, es, ""\);) show
0 336 moveto (8826   if\(s != es\){) show
0 324 moveto (8827     printf\(2, "leftovers: %s\\n", s\);) show
0 312 moveto (8828     panic\("syntax"\);) show
0 300 moveto (8829   }) show
0 288 moveto (8830   nulterminate\(cmd\);) show
0 276 moveto (8831   return cmd;) show
0 264 moveto (8832 }) show
0 252 moveto (8833 ) show
0 240 moveto (8834 struct cmd*) show
0 228 moveto (8835 parseline\(char **ps, char *es\)) show
0 216 moveto (8836 {) show
0 204 moveto (8837   struct cmd *cmd;) show
0 192 moveto (8838 ) show
0 180 moveto (8839   cmd = parsepipe\(ps, es\);) show
0 168 moveto (8840   while\(peek\(ps, es, "&"\)\){) show
0 156 moveto (8841     gettoken\(ps, es, 0, 0\);) show
0 144 moveto (8842     cmd = backcmd\(cmd\);) show
0 132 moveto (8843   }) show
0 120 moveto (8844   if\(peek\(ps, es, ";"\)\){) show
0 108 moveto (8845     gettoken\(ps, es, 0, 0\);) show
0 96 moveto (8846     cmd = listcmd\(cmd, parseline\(ps, es\)\);) show
0 84 moveto (8847   }) show
0 72 moveto (8848   return cmd;) show
0 60 moveto (8849 }) show
0 24 moveto (Sheet 88) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/sh.c  Page 11) show
0 648 moveto (8850 struct cmd*) show
0 636 moveto (8851 parsepipe\(char **ps, char *es\)) show
0 624 moveto (8852 {) show
0 612 moveto (8853   struct cmd *cmd;) show
0 600 moveto (8854 ) show
0 588 moveto (8855   cmd = parseexec\(ps, es\);) show
0 576 moveto (8856   if\(peek\(ps, es, "|"\)\){) show
0 564 moveto (8857     gettoken\(ps, es, 0, 0\);) show
0 552 moveto (8858     cmd = pipecmd\(cmd, parsepipe\(ps, es\)\);) show
0 540 moveto (8859   }) show
0 528 moveto (8860   return cmd;) show
0 516 moveto (8861 }) show
0 504 moveto (8862 ) show
0 492 moveto (8863 struct cmd*) show
0 480 moveto (8864 parseredirs\(struct cmd *cmd, char **ps, char *es\)) show
0 468 moveto (8865 {) show
0 456 moveto (8866   int tok;) show
0 444 moveto (8867   char *q, *eq;) show
0 432 moveto (8868 ) show
0 420 moveto (8869   while\(peek\(ps, es, "<>"\)\){) show
0 408 moveto (8870     tok = gettoken\(ps, es, 0, 0\);) show
0 396 moveto (8871     if\(gettoken\(ps, es, &q, &eq\) != 'a'\)) show
0 384 moveto (8872       panic\("missing file for redirection"\);) show
0 372 moveto (8873     switch\(tok\){) show
0 360 moveto (8874     case '<':) show
0 348 moveto (8875       cmd = redircmd\(cmd, q, eq, O_RDONLY, 0\);) show
0 336 moveto (8876       break;) show
0 324 moveto (8877     case '>':) show
0 312 moveto (8878       cmd = redircmd\(cmd, q, eq, O_WRONLY|O_CREATE, 1\);) show
0 300 moveto (8879       break;) show
0 288 moveto (8880     case '+':  // >>) show
0 276 moveto (8881       cmd = redircmd\(cmd, q, eq, O_WRONLY|O_CREATE, 1\);) show
0 264 moveto (8882       break;) show
0 252 moveto (8883     }) show
0 240 moveto (8884   }) show
0 228 moveto (8885   return cmd;) show
0 216 moveto (8886 }) show
0 204 moveto (8887 ) show
0 192 moveto (8888 ) show
0 180 moveto (8889 ) show
0 168 moveto (8890 ) show
0 156 moveto (8891 ) show
0 144 moveto (8892 ) show
0 132 moveto (8893 ) show
0 120 moveto (8894 ) show
0 108 moveto (8895 ) show
0 96 moveto (8896 ) show
0 84 moveto (8897 ) show
0 72 moveto (8898 ) show
0 60 moveto (8899 ) show
0 24 moveto (Sheet 88) show
grestore
restore
showpage
%%Page: 98 98
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/sh.c  Page 12) show
0 648 moveto (8900 struct cmd*) show
0 636 moveto (8901 parseblock\(char **ps, char *es\)) show
0 624 moveto (8902 {) show
0 612 moveto (8903   struct cmd *cmd;) show
0 600 moveto (8904 ) show
0 588 moveto (8905   if\(!peek\(ps, es, "\("\)\)) show
0 576 moveto (8906     panic\("parseblock"\);) show
0 564 moveto (8907   gettoken\(ps, es, 0, 0\);) show
0 552 moveto (8908   cmd = parseline\(ps, es\);) show
0 540 moveto (8909   if\(!peek\(ps, es, "\)"\)\)) show
0 528 moveto (8910     panic\("syntax - missing \)"\);) show
0 516 moveto (8911   gettoken\(ps, es, 0, 0\);) show
0 504 moveto (8912   cmd = parseredirs\(cmd, ps, es\);) show
0 492 moveto (8913   return cmd;) show
0 480 moveto (8914 }) show
0 468 moveto (8915 ) show
0 456 moveto (8916 struct cmd*) show
0 444 moveto (8917 parseexec\(char **ps, char *es\)) show
0 432 moveto (8918 {) show
0 420 moveto (8919   char *q, *eq;) show
0 408 moveto (8920   int tok, argc;) show
0 396 moveto (8921   struct execcmd *cmd;) show
0 384 moveto (8922   struct cmd *ret;) show
0 372 moveto (8923 ) show
0 360 moveto (8924   if\(peek\(ps, es, "\("\)\)) show
0 348 moveto (8925     return parseblock\(ps, es\);) show
0 336 moveto (8926 ) show
0 324 moveto (8927   ret = execcmd\(\);) show
0 312 moveto (8928   cmd = \(struct execcmd*\)ret;) show
0 300 moveto (8929 ) show
0 288 moveto (8930   argc = 0;) show
0 276 moveto (8931   ret = parseredirs\(ret, ps, es\);) show
0 264 moveto (8932   while\(!peek\(ps, es, "|\)&;"\)\){) show
0 252 moveto (8933     if\(\(tok=gettoken\(ps, es, &q, &eq\)\) == 0\)) show
0 240 moveto (8934       break;) show
0 228 moveto (8935     if\(tok != 'a'\)) show
0 216 moveto (8936       panic\("syntax"\);) show
0 204 moveto (8937     cmd->argv[argc] = q;) show
0 192 moveto (8938     cmd->eargv[argc] = eq;) show
0 180 moveto (8939     argc++;) show
0 168 moveto (8940     if\(argc >= MAXARGS\)) show
0 156 moveto (8941       panic\("too many args"\);) show
0 144 moveto (8942     ret = parseredirs\(ret, ps, es\);) show
0 132 moveto (8943   }) show
0 120 moveto (8944   cmd->argv[argc] = 0;) show
0 108 moveto (8945   cmd->eargv[argc] = 0;) show
0 96 moveto (8946   return ret;) show
0 84 moveto (8947 }) show
0 72 moveto (8948 ) show
0 60 moveto (8949 ) show
0 24 moveto (Sheet 89) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/sh.c  Page 13) show
0 648 moveto (8950 // NUL-terminate all the counted strings.) show
0 636 moveto (8951 struct cmd*) show
0 624 moveto (8952 nulterminate\(struct cmd *cmd\)) show
0 612 moveto (8953 {) show
0 600 moveto (8954   int i;) show
0 588 moveto (8955   struct backcmd *bcmd;) show
0 576 moveto (8956   struct execcmd *ecmd;) show
0 564 moveto (8957   struct listcmd *lcmd;) show
0 552 moveto (8958   struct pipecmd *pcmd;) show
0 540 moveto (8959   struct redircmd *rcmd;) show
0 528 moveto (8960 ) show
0 516 moveto (8961   if\(cmd == 0\)) show
0 504 moveto (8962     return 0;) show
0 492 moveto (8963 ) show
0 480 moveto (8964   switch\(cmd->type\){) show
0 468 moveto (8965   case EXEC:) show
0 456 moveto (8966     ecmd = \(struct execcmd*\)cmd;) show
0 444 moveto (8967     for\(i=0; ecmd->argv[i]; i++\)) show
0 432 moveto (8968       *ecmd->eargv[i] = 0;) show
0 420 moveto (8969     break;) show
0 408 moveto (8970 ) show
0 396 moveto (8971   case REDIR:) show
0 384 moveto (8972     rcmd = \(struct redircmd*\)cmd;) show
0 372 moveto (8973     nulterminate\(rcmd->cmd\);) show
0 360 moveto (8974     *rcmd->efile = 0;) show
0 348 moveto (8975     break;) show
0 336 moveto (8976 ) show
0 324 moveto (8977   case PIPE:) show
0 312 moveto (8978     pcmd = \(struct pipecmd*\)cmd;) show
0 300 moveto (8979     nulterminate\(pcmd->left\);) show
0 288 moveto (8980     nulterminate\(pcmd->right\);) show
0 276 moveto (8981     break;) show
0 264 moveto (8982 ) show
0 252 moveto (8983   case LIST:) show
0 240 moveto (8984     lcmd = \(struct listcmd*\)cmd;) show
0 228 moveto (8985     nulterminate\(lcmd->left\);) show
0 216 moveto (8986     nulterminate\(lcmd->right\);) show
0 204 moveto (8987     break;) show
0 192 moveto (8988 ) show
0 180 moveto (8989   case BACK:) show
0 168 moveto (8990     bcmd = \(struct backcmd*\)cmd;) show
0 156 moveto (8991     nulterminate\(bcmd->cmd\);) show
0 144 moveto (8992     break;) show
0 132 moveto (8993   }) show
0 120 moveto (8994   return cmd;) show
0 108 moveto (8995 }) show
0 96 moveto (8996 ) show
0 84 moveto (8997 ) show
0 72 moveto (8998 ) show
0 60 moveto (8999 ) show
0 24 moveto (Sheet 89) show
grestore
restore
showpage
%%Page: 99 99
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/bootasm.S  Page 1) show
0 648 moveto (9000 #include "asm.h") show
0 636 moveto (9001 #include "memlayout.h") show
0 624 moveto (9002 #include "mmu.h") show
0 612 moveto (9003 ) show
0 600 moveto (9004 # Start the first CPU: switch to 32-bit protected mode, jump into C.) show
0 588 moveto (9005 # The BIOS loads this code from the first sector of the hard disk into) show
0 576 moveto (9006 # memory at physical address 0x7c00 and starts executing in real mode) show
0 564 moveto (9007 # with %cs=0 %ip=7c00.) show
0 552 moveto (9008 ) show
0 540 moveto (9009 .code16                       # Assemble for 16-bit mode) show
0 528 moveto (9010 .globl start) show
0 516 moveto (9011 start:) show
0 504 moveto (9012   cli                         # BIOS enabled interrupts; disable) show
0 492 moveto (9013 ) show
0 480 moveto (9014   # Zero data segment registers DS, ES, and SS.) show
0 468 moveto (9015   xorw    %ax,%ax             # Set %ax to zero) show
0 456 moveto (9016   movw    %ax,%ds             # -> Data Segment) show
0 444 moveto (9017   movw    %ax,%es             # -> Extra Segment) show
0 432 moveto (9018   movw    %ax,%ss             # -> Stack Segment) show
0 420 moveto (9019 ) show
0 408 moveto (9020   # Physical address line A20 is tied to zero so that the first PCs) show
0 396 moveto (9021   # with 2 MB would run software that assumed 1 MB.  Undo that.) show
0 384 moveto (9022 seta20.1:) show
0 372 moveto (9023   inb     $0x64,%al               # Wait for not busy) show
0 360 moveto (9024   testb   $0x2,%al) show
0 348 moveto (9025   jnz     seta20.1) show
0 336 moveto (9026 ) show
0 324 moveto (9027   movb    $0xd1,%al               # 0xd1 -> port 0x64) show
0 312 moveto (9028   outb    %al,$0x64) show
0 300 moveto (9029 ) show
0 288 moveto (9030 seta20.2:) show
0 276 moveto (9031   inb     $0x64,%al               # Wait for not busy) show
0 264 moveto (9032   testb   $0x2,%al) show
0 252 moveto (9033   jnz     seta20.2) show
0 240 moveto (9034 ) show
0 228 moveto (9035   movb    $0xdf,%al               # 0xdf -> port 0x60) show
0 216 moveto (9036   outb    %al,$0x60) show
0 204 moveto (9037 ) show
0 192 moveto (9038   # Switch from real to protected mode.  Use a bootstrap GDT that makes) show
0 180 moveto (9039   # virtual addresses map directly to physical addresses so that the) show
0 168 moveto (9040   # effective memory map doesn't change during the transition.) show
0 156 moveto (9041   lgdt    gdtdesc) show
0 144 moveto (9042   movl    %cr0, %eax) show
0 132 moveto (9043   orl     $CR0_PE, %eax) show
0 120 moveto (9044   movl    %eax, %cr0) show
0 108 moveto (9045 ) show
0 96 moveto (9046   # Complete transition to 32-bit protected mode by using long jmp) show
0 84 moveto (9047   # to reload %cs and %eip.  The segment descriptors are set up with no) show
0 72 moveto (9048   # translation, so that the mapping is still the identity mapping.) show
0 60 moveto (9049   ljmp    $\(SEG_KCODE<<3\), $start32) show
0 24 moveto (Sheet 90) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/bootasm.S  Page 2) show
0 648 moveto (9050 .code32  # Tell assembler to generate 32-bit code now.) show
0 636 moveto (9051 start32:) show
0 624 moveto (9052   # Set up the protected-mode data segment registers) show
0 612 moveto (9053   movw    $\(SEG_KDATA<<3\), %ax    # Our data segment selector) show
0 600 moveto (9054   movw    %ax, %ds                # -> DS: Data Segment) show
0 588 moveto (9055   movw    %ax, %es                # -> ES: Extra Segment) show
0 576 moveto (9056   movw    %ax, %ss                # -> SS: Stack Segment) show
0 564 moveto (9057   movw    $0, %ax                 # Zero segments not ready for use) show
0 552 moveto (9058   movw    %ax, %fs                # -> FS) show
0 540 moveto (9059   movw    %ax, %gs                # -> GS) show
0 528 moveto (9060 ) show
0 516 moveto (9061   # Set up the stack pointer and call into C.) show
0 504 moveto (9062   movl    $start, %esp) show
0 492 moveto (9063   call    bootmain) show
0 480 moveto (9064 ) show
0 468 moveto (9065   # If bootmain returns \(it shouldn't\), trigger a Bochs) show
0 456 moveto (9066   # breakpoint if running under Bochs, then loop.) show
0 444 moveto (9067   movw    $0x8a00, %ax            # 0x8a00 -> port 0x8a00) show
0 432 moveto (9068   movw    %ax, %dx) show
0 420 moveto (9069   outw    %ax, %dx) show
0 408 moveto (9070   movw    $0x8ae0, %ax            # 0x8ae0 -> port 0x8a00) show
0 396 moveto (9071   outw    %ax, %dx) show
0 384 moveto (9072 spin:) show
0 372 moveto (9073   jmp     spin) show
0 360 moveto (9074 ) show
0 348 moveto (9075 # Bootstrap GDT) show
0 336 moveto (9076 .p2align 2                                # force 4 byte alignment) show
0 324 moveto (9077 gdt:) show
0 312 moveto (9078   SEG_NULLASM                             # null seg) show
0 300 moveto (9079   SEG_ASM\(STA_X|STA_R, 0x0, 0xffffffff\)   # code seg) show
0 288 moveto (9080   SEG_ASM\(STA_W, 0x0, 0xffffffff\)         # data seg) show
0 276 moveto (9081 ) show
0 264 moveto (9082 gdtdesc:) show
0 252 moveto (9083   .word   \(gdtdesc - gdt - 1\)             # sizeof\(gdt\) - 1) show
0 240 moveto (9084   .long   gdt                             # address gdt) show
0 228 moveto (9085 ) show
0 216 moveto (9086 ) show
0 204 moveto (9087 ) show
0 192 moveto (9088 ) show
0 180 moveto (9089 ) show
0 168 moveto (9090 ) show
0 156 moveto (9091 ) show
0 144 moveto (9092 ) show
0 132 moveto (9093 ) show
0 120 moveto (9094 ) show
0 108 moveto (9095 ) show
0 96 moveto (9096 ) show
0 84 moveto (9097 ) show
0 72 moveto (9098 ) show
0 60 moveto (9099 ) show
0 24 moveto (Sheet 90) show
grestore
restore
showpage
%%Page: 100 100
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/bootmain.c  Page 1) show
0 648 moveto (9100 // Boot loader.) show
0 636 moveto (9101 //) show
0 624 moveto (9102 // Part of the boot block, along with bootasm.S, which calls bootmain\(\).) show
0 612 moveto (9103 // bootasm.S has put the processor into protected 32-bit mode.) show
0 600 moveto (9104 // bootmain\(\) loads an ELF kernel image from the disk starting at) show
0 588 moveto (9105 // sector 1 and then jumps to the kernel entry routine.) show
0 576 moveto (9106 ) show
0 564 moveto (9107 #include "types.h") show
0 552 moveto (9108 #include "elf.h") show
0 540 moveto (9109 #include "x86.h") show
0 528 moveto (9110 #include "memlayout.h") show
0 516 moveto (9111 ) show
0 504 moveto (9112 #define SECTSIZE  512) show
0 492 moveto (9113 ) show
0 480 moveto (9114 void readseg\(uchar*, uint, uint\);) show
0 468 moveto (9115 ) show
0 456 moveto (9116 void) show
0 444 moveto (9117 bootmain\(void\)) show
0 432 moveto (9118 {) show
0 420 moveto (9119   struct elfhdr *elf;) show
0 408 moveto (9120   struct proghdr *ph, *eph;) show
0 396 moveto (9121   void \(*entry\)\(void\);) show
0 384 moveto (9122   uchar* pa;) show
0 372 moveto (9123 ) show
0 360 moveto (9124   elf = \(struct elfhdr*\)0x10000;  // scratch space) show
0 348 moveto (9125 ) show
0 336 moveto (9126   // Read 1st page off disk) show
0 324 moveto (9127   readseg\(\(uchar*\)elf, 4096, 0\);) show
0 312 moveto (9128 ) show
0 300 moveto (9129   // Is this an ELF executable?) show
0 288 moveto (9130   if\(elf->magic != ELF_MAGIC\)) show
0 276 moveto (9131     return;  // let bootasm.S handle error) show
0 264 moveto (9132 ) show
0 252 moveto (9133   // Load each program segment \(ignores ph flags\).) show
0 240 moveto (9134   ph = \(struct proghdr*\)\(\(uchar*\)elf + elf->phoff\);) show
0 228 moveto (9135   eph = ph + elf->phnum;) show
0 216 moveto (9136   for\(; ph < eph; ph++\){) show
0 204 moveto (9137     pa = \(uchar*\)ph->paddr;) show
0 192 moveto (9138     readseg\(pa, ph->filesz, ph->off\);) show
0 180 moveto (9139     if\(ph->memsz > ph->filesz\)) show
0 168 moveto (9140       stosb\(pa + ph->filesz, 0, ph->memsz - ph->filesz\);) show
0 156 moveto (9141   }) show
0 144 moveto (9142 ) show
0 132 moveto (9143   // Call the entry point from the ELF header.) show
0 120 moveto (9144   // Does not return!) show
0 108 moveto (9145   entry = \(void\(*\)\(void\)\)\(elf->entry\);) show
0 96 moveto (9146   entry\(\);) show
0 84 moveto (9147 }) show
0 72 moveto (9148 ) show
0 60 moveto (9149 ) show
0 24 moveto (Sheet 91) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/bootmain.c  Page 2) show
0 648 moveto (9150 void) show
0 636 moveto (9151 waitdisk\(void\)) show
0 624 moveto (9152 {) show
0 612 moveto (9153   // Wait for disk ready.) show
0 600 moveto (9154   while\(\(inb\(0x1F7\) & 0xC0\) != 0x40\)) show
0 588 moveto (9155     ;) show
0 576 moveto (9156 }) show
0 564 moveto (9157 ) show
0 552 moveto (9158 // Read a single sector at offset into dst.) show
0 540 moveto (9159 void) show
0 528 moveto (9160 readsect\(void *dst, uint offset\)) show
0 516 moveto (9161 {) show
0 504 moveto (9162   // Issue command.) show
0 492 moveto (9163   waitdisk\(\);) show
0 480 moveto (9164   outb\(0x1F2, 1\);   // count = 1) show
0 468 moveto (9165   outb\(0x1F3, offset\);) show
0 456 moveto (9166   outb\(0x1F4, offset >> 8\);) show
0 444 moveto (9167   outb\(0x1F5, offset >> 16\);) show
0 432 moveto (9168   outb\(0x1F6, \(offset >> 24\) | 0xE0\);) show
0 420 moveto (9169   outb\(0x1F7, 0x20\);  // cmd 0x20 - read sectors) show
0 408 moveto (9170 ) show
0 396 moveto (9171   // Read data.) show
0 384 moveto (9172   waitdisk\(\);) show
0 372 moveto (9173   insl\(0x1F0, dst, SECTSIZE/4\);) show
0 360 moveto (9174 }) show
0 348 moveto (9175 ) show
0 336 moveto (9176 // Read 'count' bytes at 'offset' from kernel into physical address 'pa'.) show
0 324 moveto (9177 // Might copy more than asked.) show
0 312 moveto (9178 void) show
0 300 moveto (9179 readseg\(uchar* pa, uint count, uint offset\)) show
0 288 moveto (9180 {) show
0 276 moveto (9181   uchar* epa;) show
0 264 moveto (9182 ) show
0 252 moveto (9183   epa = pa + count;) show
0 240 moveto (9184 ) show
0 228 moveto (9185   // Round down to sector boundary.) show
0 216 moveto (9186   pa -= offset % SECTSIZE;) show
0 204 moveto (9187 ) show
0 192 moveto (9188   // Translate from bytes to sectors; kernel starts at sector 1.) show
0 180 moveto (9189   offset = \(offset / SECTSIZE\) + 1;) show
0 168 moveto (9190 ) show
0 156 moveto (9191   // If this is too slow, we could read lots of sectors at a time.) show
0 144 moveto (9192   // We'd write more to memory than asked, but it doesn't matter --) show
0 132 moveto (9193   // we load in increasing order.) show
0 120 moveto (9194   for\(; pa < epa; pa += SECTSIZE, offset++\)) show
0 108 moveto (9195     readsect\(pa, offset\);) show
0 96 moveto (9196 }) show
0 84 moveto (9197 ) show
0 72 moveto (9198 ) show
0 60 moveto (9199 ) show
0 24 moveto (Sheet 91) show
grestore
restore
showpage
%%Page: 101 101
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/print_mode.c  Page 1) show
0 648 moveto (9200 #ifdef CS333_P4) show
0 636 moveto (9201 // this is an ugly series of if statements but it works) show
0 624 moveto (9202 void) show
0 612 moveto (9203 print_mode\(struct stat* st\)) show
0 600 moveto (9204 {) show
0 588 moveto (9205   switch \(st->type\) {) show
0 576 moveto (9206     case T_DIR: printf\(1, "d"\); break;) show
0 564 moveto (9207     case T_FILE: printf\(1, "-"\); break;) show
0 552 moveto (9208     case T_DEV: printf\(1, "c"\); break;) show
0 540 moveto (9209     default: printf\(1, "?"\);) show
0 528 moveto (9210   }) show
0 516 moveto (9211 ) show
0 504 moveto (9212   if \(st->mode.flags.u_r\)) show
0 492 moveto (9213     printf\(1, "r"\);) show
0 480 moveto (9214   else) show
0 468 moveto (9215     printf\(1, "-"\);) show
0 456 moveto (9216 ) show
0 444 moveto (9217   if \(st->mode.flags.u_w\)) show
0 432 moveto (9218     printf\(1, "w"\);) show
0 420 moveto (9219   else) show
0 408 moveto (9220     printf\(1, "-"\);) show
0 396 moveto (9221 ) show
0 384 moveto (9222   if \(\(st->mode.flags.u_x\) & \(st->mode.flags.setuid\)\)) show
0 372 moveto (9223     printf\(1, "S"\);) show
0 360 moveto (9224   else if \(st->mode.flags.u_x\)) show
0 348 moveto (9225     printf\(1, "x"\);) show
0 336 moveto (9226   else) show
0 324 moveto (9227     printf\(1, "-"\);) show
0 312 moveto (9228 ) show
0 300 moveto (9229   if \(st->mode.flags.g_r\)) show
0 288 moveto (9230     printf\(1, "r"\);) show
0 276 moveto (9231   else) show
0 264 moveto (9232     printf\(1, "-"\);) show
0 252 moveto (9233 ) show
0 240 moveto (9234   if \(st->mode.flags.g_w\)) show
0 228 moveto (9235     printf\(1, "w"\);) show
0 216 moveto (9236   else) show
0 204 moveto (9237     printf\(1, "-"\);) show
0 192 moveto (9238 ) show
0 180 moveto (9239   if \(st->mode.flags.g_x\)) show
0 168 moveto (9240     printf\(1, "x"\);) show
0 156 moveto (9241   else) show
0 144 moveto (9242     printf\(1, "-"\);) show
0 132 moveto (9243 ) show
0 120 moveto (9244   if \(st->mode.flags.o_r\)) show
0 108 moveto (9245     printf\(1, "r"\);) show
0 96 moveto (9246   else) show
0 84 moveto (9247     printf\(1, "-"\);) show
0 72 moveto (9248 ) show
0 60 moveto (9249 ) show
0 24 moveto (Sheet 92) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/print_mode.c  Page 2) show
0 648 moveto (9250   if \(st->mode.flags.o_w\)) show
0 636 moveto (9251     printf\(1, "w"\);) show
0 624 moveto (9252   else) show
0 612 moveto (9253     printf\(1, "-"\);) show
0 600 moveto (9254 ) show
0 588 moveto (9255   if \(st->mode.flags.o_x\)) show
0 576 moveto (9256     printf\(1, "x"\);) show
0 564 moveto (9257   else) show
0 552 moveto (9258     printf\(1, "-"\);) show
0 540 moveto (9259 ) show
0 528 moveto (9260   return;) show
0 516 moveto (9261 }) show
0 504 moveto (9262 #endif) show
0 492 moveto (9263 ) show
0 480 moveto (9264 ) show
0 468 moveto (9265 ) show
0 456 moveto (9266 ) show
0 444 moveto (9267 ) show
0 432 moveto (9268 ) show
0 420 moveto (9269 ) show
0 408 moveto (9270 ) show
0 396 moveto (9271 ) show
0 384 moveto (9272 ) show
0 372 moveto (9273 ) show
0 360 moveto (9274 ) show
0 348 moveto (9275 ) show
0 336 moveto (9276 ) show
0 324 moveto (9277 ) show
0 312 moveto (9278 ) show
0 300 moveto (9279 ) show
0 288 moveto (9280 ) show
0 276 moveto (9281 ) show
0 264 moveto (9282 ) show
0 252 moveto (9283 ) show
0 240 moveto (9284 ) show
0 228 moveto (9285 ) show
0 216 moveto (9286 ) show
0 204 moveto (9287 ) show
0 192 moveto (9288 ) show
0 180 moveto (9289 ) show
0 168 moveto (9290 ) show
0 156 moveto (9291 ) show
0 144 moveto (9292 ) show
0 132 moveto (9293 ) show
0 120 moveto (9294 ) show
0 108 moveto (9295 ) show
0 96 moveto (9296 ) show
0 84 moveto (9297 ) show
0 72 moveto (9298 ) show
0 60 moveto (9299 ) show
0 24 moveto (Sheet 92) show
grestore
restore
showpage
%%Page: 102 102
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/date.c  Page 1) show
0 648 moveto (9300 #include "types.h") show
0 636 moveto (9301 #include "user.h") show
0 624 moveto (9302 #include "date.h") show
0 612 moveto (9303 ) show
0 600 moveto (9304 ) show
0 588 moveto (9305 int) show
0 576 moveto (9306 main\(int argc, char *argv[]\)) show
0 564 moveto (9307 {) show
0 552 moveto (9308   struct rtcdate r;) show
0 540 moveto (9309   if\(date\(&r\)\) {) show
0 528 moveto (9310     printf\(2,"date failed\\n"\);) show
0 516 moveto (9311     exit\(\);) show
0 504 moveto (9312   }) show
0 492 moveto (9313   printf\(1, "Current UTC time is: %d/%d/%d - %d:%d:%d\\n",r.year, r.month, r.day, r.hour, r.minute, r.second\);) show
0 480 moveto (9314 ) show
0 468 moveto (9315   exit\(\);) show
0 456 moveto (9316 }) show
0 444 moveto (9317 ) show
0 432 moveto (9318 ) show
0 420 moveto (9319 ) show
0 408 moveto (9320 ) show
0 396 moveto (9321 ) show
0 384 moveto (9322 ) show
0 372 moveto (9323 ) show
0 360 moveto (9324 ) show
0 348 moveto (9325 ) show
0 336 moveto (9326 ) show
0 324 moveto (9327 ) show
0 312 moveto (9328 ) show
0 300 moveto (9329 ) show
0 288 moveto (9330 ) show
0 276 moveto (9331 ) show
0 264 moveto (9332 ) show
0 252 moveto (9333 ) show
0 240 moveto (9334 ) show
0 228 moveto (9335 ) show
0 216 moveto (9336 ) show
0 204 moveto (9337 ) show
0 192 moveto (9338 ) show
0 180 moveto (9339 ) show
0 168 moveto (9340 ) show
0 156 moveto (9341 ) show
0 144 moveto (9342 ) show
0 132 moveto (9343 ) show
0 120 moveto (9344 ) show
0 108 moveto (9345 ) show
0 96 moveto (9346 ) show
0 84 moveto (9347 ) show
0 72 moveto (9348 ) show
0 60 moveto (9349 ) show
0 24 moveto (Sheet 93) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/uproc.h  Page 1) show
0 648 moveto (9350 #define STRMAX 32) show
0 636 moveto (9351 ) show
0 624 moveto (9352 struct uproc {) show
0 612 moveto (9353 ) show
8 mp_a_x mul 612 moveto (uint pid;) show
0 600 moveto (9354 ) show
8 mp_a_x mul 600 moveto (uint uid;) show
0 588 moveto (9355 ) show
8 mp_a_x mul 588 moveto (uint gid;) show
0 576 moveto (9356 ) show
8 mp_a_x mul 576 moveto (uint ppid;) show
0 564 moveto (9357 ) show
8 mp_a_x mul 564 moveto (uint elapsed_ticks;) show
0 552 moveto (9358 ) show
8 mp_a_x mul 552 moveto (uint CPU_total_ticks;) show
0 540 moveto (9359 ) show
8 mp_a_x mul 540 moveto (char state[STRMAX];) show
0 528 moveto (9360 ) show
8 mp_a_x mul 528 moveto (uint size;) show
0 516 moveto (9361 ) show
8 mp_a_x mul 516 moveto (char name[STRMAX];) show
0 504 moveto (9362 #ifdef CS333_P3) show
0 492 moveto (9363 ) show
8 mp_a_x mul 492 moveto (int priority;) show
0 480 moveto (9364 #endif) show
0 468 moveto (9365 };) show
0 456 moveto (9366 ) show
0 444 moveto (9367 ) show
0 432 moveto (9368 ) show
0 420 moveto (9369 ) show
0 408 moveto (9370 ) show
0 396 moveto (9371 ) show
0 384 moveto (9372 ) show
0 372 moveto (9373 ) show
0 360 moveto (9374 ) show
0 348 moveto (9375 ) show
0 336 moveto (9376 ) show
0 324 moveto (9377 ) show
0 312 moveto (9378 ) show
0 300 moveto (9379 ) show
0 288 moveto (9380 ) show
0 276 moveto (9381 ) show
0 264 moveto (9382 ) show
0 252 moveto (9383 ) show
0 240 moveto (9384 ) show
0 228 moveto (9385 ) show
0 216 moveto (9386 ) show
0 204 moveto (9387 ) show
0 192 moveto (9388 ) show
0 180 moveto (9389 ) show
0 168 moveto (9390 ) show
0 156 moveto (9391 ) show
0 144 moveto (9392 ) show
0 132 moveto (9393 ) show
0 120 moveto (9394 ) show
0 108 moveto (9395 ) show
0 96 moveto (9396 ) show
0 84 moveto (9397 ) show
0 72 moveto (9398 ) show
0 60 moveto (9399 ) show
0 24 moveto (Sheet 93) show
grestore
restore
showpage
%%Page: 103 103
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/testgiduid.c  Page 1) show
0 648 moveto (9400 #include "types.h") show
0 636 moveto (9401 #include "user.h") show
0 624 moveto (9402 ) show
0 612 moveto (9403 // Test GID and UID to be in the correct range) show
0 600 moveto (9404 #ifdef CS333_P2) show
0 588 moveto (9405 int) show
0 576 moveto (9406 testgiduid\(void\)) show
0 564 moveto (9407 {) show
0 552 moveto (9408 ) show
8 mp_a_x mul 552 moveto (uint uid, gid, ppid;) show
0 540 moveto (9409 ) show
0 528 moveto (9410 ) show
8 mp_a_x mul 528 moveto (uid = getuid\(\);) show
0 516 moveto (9411 ) show
8 mp_a_x mul 516 moveto (printf\(2, "Current UID is : %d\\n", uid\);) show
0 504 moveto (9412 ) show
8 mp_a_x mul 504 moveto (printf\(2, "Setting UID to 100\\n"\);) show
0 492 moveto (9413 ) show
8 mp_a_x mul 492 moveto (setuid\(100\);) show
0 480 moveto (9414 ) show
8 mp_a_x mul 480 moveto (uid = getuid\(\);) show
0 468 moveto (9415 ) show
8 mp_a_x mul 468 moveto (printf\(2, "Current UID is : %d\\n", uid\);) show
0 456 moveto (9416 ) show
0 444 moveto (9417 ) show
8 mp_a_x mul 444 moveto (gid = getgid\(\);) show
0 432 moveto (9418 ) show
8 mp_a_x mul 432 moveto (printf\(2, "Current GID is : %d\\n", gid\);) show
0 420 moveto (9419 ) show
8 mp_a_x mul 420 moveto (printf\(2, "Setting GID to 100\\n"\);) show
0 408 moveto (9420 ) show
8 mp_a_x mul 408 moveto (setgid\(100\);) show
0 396 moveto (9421 ) show
8 mp_a_x mul 396 moveto (gid = getgid\(\);) show
0 384 moveto (9422 ) show
8 mp_a_x mul 384 moveto (printf\(2, "Current UID is : %d\\n", gid\);) show
0 372 moveto (9423 ) show
0 360 moveto (9424 ) show
8 mp_a_x mul 360 moveto (ppid = getppid\(\);) show
0 348 moveto (9425 ) show
8 mp_a_x mul 348 moveto (printf\(2, "My parent process is : %d\\n", ppid\);) show
0 336 moveto (9426 ) show
8 mp_a_x mul 336 moveto (printf\(2, "Done!\\n"\);) show
0 324 moveto (9427 ) show
0 312 moveto (9428 ) show
8 mp_a_x mul 312 moveto (return 0;) show
0 300 moveto (9429 }) show
0 288 moveto (9430 ) show
0 276 moveto (9431 int) show
0 264 moveto (9432 main\(int argc, char *argv[]\)) show
0 252 moveto (9433 {) show
0 240 moveto (9434 ) show
8 mp_a_x mul 240 moveto (testgiduid\(\);) show
0 228 moveto (9435 ) show
8 mp_a_x mul 228 moveto (exit\(\);) show
0 216 moveto (9436 }) show
0 204 moveto (9437 #else) show
0 192 moveto (9438 int) show
0 180 moveto (9439 main\(int argc, char *argv[]\)) show
0 168 moveto (9440 {) show
0 156 moveto (9441 ) show
8 mp_a_x mul 156 moveto (printf\(2, "Please compile with CS333_P2 on to enable this feature.\\n"\);) show
0 144 moveto (9442 ) show
8 mp_a_x mul 144 moveto (exit\(\);) show
0 132 moveto (9443 }) show
0 120 moveto (9444 #endif) show
0 108 moveto (9445 ) show
0 96 moveto (9446 ) show
0 84 moveto (9447 ) show
0 72 moveto (9448 ) show
0 60 moveto (9449 ) show
0 24 moveto (Sheet 94) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/ps.c  Page 1) show
0 648 moveto (9450 #include "types.h") show
0 636 moveto (9451 #include "uproc.h") show
0 624 moveto (9452 #include "user.h") show
0 612 moveto (9453 ) show
0 600 moveto (9454 #ifdef CS333_P2) show
0 588 moveto (9455 int) show
0 576 moveto (9456 main\(int argc, char *argv[]\)) show
0 564 moveto (9457 {) show
0 552 moveto (9458 ) show
8 mp_a_x mul 552 moveto (int ptable_size;) show
0 540 moveto (9459 ) show
8 mp_a_x mul 540 moveto (uint display_size;) show
0 528 moveto (9460 ) show
8 mp_a_x mul 528 moveto (display_size = 64;) show
0 516 moveto (9461 ) show
8 mp_a_x mul 516 moveto (struct uproc* ps;) show
0 504 moveto (9462 ) show
8 mp_a_x mul 504 moveto (ps = malloc\(sizeof\(struct uproc\) * display_size\);) show
0 492 moveto (9463 ) show
8 mp_a_x mul 492 moveto (ptable_size = getprocs\(display_size, ps\);) show
0 480 moveto (9464 ) show
8 mp_a_x mul 480 moveto (if\(ptable_size <= 0\) {) show
0 468 moveto (9465 ) show
16 mp_a_x mul 468 moveto (printf\(1,"\\nGetting processes information failed\\n"\);) show
0 456 moveto (9466 ) show
16 mp_a_x mul 456 moveto (exit\(\);) show
0 444 moveto (9467 ) show
8 mp_a_x mul 444 moveto (}) show
0 432 moveto (9468 ) show
8 mp_a_x mul 432 moveto (printf\(1,"\\nNumber of processes is :%d\\n",ptable_size\);) show
0 420 moveto (9469 #ifdef CS333_P3) show
0 408 moveto (9470 ) show
8 mp_a_x mul 408 moveto (printf\(1,"\\nPID       State     Name      UID       GID       PPID    Priority    Elapsed   CPU       Size\\n"\);) show
0 396 moveto (9471 ) show
8 mp_a_x mul 396 moveto (int i;) show
0 384 moveto (9472 ) show
8 mp_a_x mul 384 moveto (for\(i=0; i < ptable_size; ++i\){) show
0 372 moveto (9473     printf\(1,"\\n%d         %s    %s    %d    %d    %d    %d    %d.%d    %d.%d    %d\\n", ps->pid,\\) show
0 360 moveto (9474 ) show
16 mp_a_x mul 360 moveto (ps->state,\\) show
0 348 moveto (9475 ) show
16 mp_a_x mul 348 moveto (ps->name,\\) show
0 336 moveto (9476 ) show
16 mp_a_x mul 336 moveto (ps->uid,\\) show
0 324 moveto (9477 ) show
16 mp_a_x mul 324 moveto (ps->gid,\\) show
0 312 moveto (9478 ) show
16 mp_a_x mul 312 moveto (ps->ppid,\\) show
0 300 moveto (9479 ) show
16 mp_a_x mul 300 moveto (ps->priority,\\) show
0 288 moveto (9480 ) show
16 mp_a_x mul 288 moveto (ps->elapsed_ticks/100, ps->elapsed_ticks%100, ps->CPU_total_ticks/100, ps->CPU_total_ticks%100, ps->size\);) show
0 276 moveto (9481 ) show
16 mp_a_x mul 276 moveto (++ps;) show
0 264 moveto (9482 ) show
8 mp_a_x mul 264 moveto (}) show
0 252 moveto (9483 #else) show
0 240 moveto (9484 ) show
8 mp_a_x mul 240 moveto (printf\(1,"\\nPID       State     Name      UID       GID       PPID      Elapsed   CPU       Size\\n"\);) show
0 228 moveto (9485 ) show
8 mp_a_x mul 228 moveto (int i;) show
0 216 moveto (9486 ) show
8 mp_a_x mul 216 moveto (for\(i=0; i < ptable_size; ++i\){) show
0 204 moveto (9487     printf\(1,"\\n%d         %s    %s    %d    %d    %d    %d.%d    %d.%d    %d\\n", ps->pid,\\) show
0 192 moveto (9488 ) show
16 mp_a_x mul 192 moveto (ps->state,\\) show
0 180 moveto (9489 ) show
16 mp_a_x mul 180 moveto (ps->name,\\) show
0 168 moveto (9490 ) show
16 mp_a_x mul 168 moveto (ps->uid,\\) show
0 156 moveto (9491 ) show
16 mp_a_x mul 156 moveto (ps->gid,\\) show
0 144 moveto (9492 ) show
16 mp_a_x mul 144 moveto (ps->ppid,\\) show
0 132 moveto (9493 ) show
16 mp_a_x mul 132 moveto (ps->elapsed_ticks/100, ps->elapsed_ticks%100, ps->CPU_total_ticks/100, ps->CPU_total_ticks%100, ps->size\);) show
0 120 moveto (9494 ) show
16 mp_a_x mul 120 moveto (++ps;) show
0 108 moveto (9495 ) show
8 mp_a_x mul 108 moveto (}) show
0 96 moveto (9496 #endif) show
0 84 moveto (9497 ) show
8 mp_a_x mul 84 moveto (free\(ps\);) show
0 72 moveto (9498   exit\(\);) show
0 60 moveto (9499 }) show
0 24 moveto (Sheet 94) show
grestore
restore
showpage
%%Page: 104 104
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/ps.c  Page 2) show
0 648 moveto (9500 #else) show
0 636 moveto (9501 int) show
0 624 moveto (9502 main\(int argc, char *argv[]\)) show
0 612 moveto (9503 {) show
0 600 moveto (9504 ) show
8 mp_a_x mul 600 moveto (printf\(2, "Please compile with CS333_P2 on to enable this feature.\\n"\);) show
0 588 moveto (9505 ) show
8 mp_a_x mul 588 moveto (exit\(\);) show
0 576 moveto (9506 }) show
0 564 moveto (9507 #endif) show
0 552 moveto (9508 ) show
0 540 moveto (9509 ) show
0 528 moveto (9510 ) show
0 516 moveto (9511 ) show
0 504 moveto (9512 ) show
0 492 moveto (9513 ) show
0 480 moveto (9514 ) show
0 468 moveto (9515 ) show
0 456 moveto (9516 ) show
0 444 moveto (9517 ) show
0 432 moveto (9518 ) show
0 420 moveto (9519 ) show
0 408 moveto (9520 ) show
0 396 moveto (9521 ) show
0 384 moveto (9522 ) show
0 372 moveto (9523 ) show
0 360 moveto (9524 ) show
0 348 moveto (9525 ) show
0 336 moveto (9526 ) show
0 324 moveto (9527 ) show
0 312 moveto (9528 ) show
0 300 moveto (9529 ) show
0 288 moveto (9530 ) show
0 276 moveto (9531 ) show
0 264 moveto (9532 ) show
0 252 moveto (9533 ) show
0 240 moveto (9534 ) show
0 228 moveto (9535 ) show
0 216 moveto (9536 ) show
0 204 moveto (9537 ) show
0 192 moveto (9538 ) show
0 180 moveto (9539 ) show
0 168 moveto (9540 ) show
0 156 moveto (9541 ) show
0 144 moveto (9542 ) show
0 132 moveto (9543 ) show
0 120 moveto (9544 ) show
0 108 moveto (9545 ) show
0 96 moveto (9546 ) show
0 84 moveto (9547 ) show
0 72 moveto (9548 ) show
0 60 moveto (9549 ) show
0 24 moveto (Sheet 95) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/time.c  Page 1) show
0 648 moveto (9550 #include "types.h") show
0 636 moveto (9551 #include "user.h") show
0 624 moveto (9552 ) show
0 612 moveto (9553 #ifdef CS333_P2) show
0 600 moveto (9554 int) show
0 588 moveto (9555 main\(int argc, char *argv[]\)) show
0 576 moveto (9556 {) show
0 564 moveto (9557 ) show
8 mp_a_x mul 564 moveto (int elapsed_t = 0;) show
0 552 moveto (9558 ) show
8 mp_a_x mul 552 moveto (int pid;) show
0 540 moveto (9559 ) show
8 mp_a_x mul 540 moveto (int start_t = 0;) show
0 528 moveto (9560 ) show
8 mp_a_x mul 528 moveto (int end_t = start_t;) show
0 516 moveto (9561 ) show
8 mp_a_x mul 516 moveto (if\(argc > 1\) {) show
0 504 moveto (9562 ) show
16 mp_a_x mul 504 moveto (start_t = uptime\(\);) show
0 492 moveto (9563 ) show
16 mp_a_x mul 492 moveto (pid = fork\(\);) show
0 480 moveto (9564 ) show
16 mp_a_x mul 480 moveto (if\(pid > 0\) {) show
0 468 moveto (9565 ) show
24 mp_a_x mul 468 moveto (pid = wait\(\);) show
0 456 moveto (9566 ) show
24 mp_a_x mul 456 moveto (end_t= uptime\(\);) show
0 444 moveto (9567 ) show
24 mp_a_x mul 444 moveto (}) show
0 432 moveto (9568 ) show
16 mp_a_x mul 432 moveto (else if\(pid == 0\) {) show
0 420 moveto (9569 ) show
24 mp_a_x mul 420 moveto (//child process running) show
0 408 moveto (9570 ) show
24 mp_a_x mul 408 moveto (if\(exec\(argv[1], argv+1\) < 0\)) show
0 396 moveto (9571 ) show
32 mp_a_x mul 396 moveto (printf\(2,"%s failed to execute.", argv[1]\);) show
0 384 moveto (9572 ) show
24 mp_a_x mul 384 moveto (exit\(\);) show
0 372 moveto (9573 ) show
24 mp_a_x mul 372 moveto (}) show
0 360 moveto (9574 ) show
16 mp_a_x mul 360 moveto (else {) show
0 348 moveto (9575 ) show
24 mp_a_x mul 348 moveto (// error: fork failed) show
0 336 moveto (9576 ) show
24 mp_a_x mul 336 moveto (printf\(2,"Error: Fork failed"\);) show
0 324 moveto (9577 ) show
24 mp_a_x mul 324 moveto (exit\(\);) show
0 312 moveto (9578 ) show
24 mp_a_x mul 312 moveto (}) show
0 300 moveto (9579 ) show
16 mp_a_x mul 300 moveto (}) show
0 288 moveto (9580 ) show
8 mp_a_x mul 288 moveto (elapsed_t = end_t - start_t;) show
0 276 moveto (9581 ) show
8 mp_a_x mul 276 moveto (char *proc_name = argv[1] ? argv[1] : "";) show
0 264 moveto (9582   printf\(1,"%s ran in %d.%d seconds\\n",proc_name, elapsed_t/100, elapsed_t%100\);) show
0 252 moveto (9583 ) show
0 240 moveto (9584   exit\(\);) show
0 228 moveto (9585 }) show
0 216 moveto (9586 #else) show
0 204 moveto (9587 int) show
0 192 moveto (9588 main\(int argc, char *argv[]\)) show
0 180 moveto (9589 {) show
0 168 moveto (9590 ) show
8 mp_a_x mul 168 moveto (printf\(2, "Please compile with CS333_P2 on to enable this feature.\\n"\);) show
0 156 moveto (9591 ) show
8 mp_a_x mul 156 moveto (exit\(\);) show
0 144 moveto (9592 }) show
0 132 moveto (9593 #endif) show
0 120 moveto (9594 ) show
0 108 moveto (9595 ) show
0 96 moveto (9596 ) show
0 84 moveto (9597 ) show
0 72 moveto (9598 ) show
0 60 moveto (9599 ) show
0 24 moveto (Sheet 95) show
grestore
restore
showpage
%%Page: 105 105
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Nov  7 00:11 2016  xv6/testSched.c  Page 1) show
0 648 moveto (9600 // This program can be freely used to test your scheduler. It is) show
0 636 moveto (9601 // by no means a complete test.) show
0 624 moveto (9602 ) show
0 612 moveto (9603 #include "types.h") show
0 600 moveto (9604 #include "user.h") show
0 588 moveto (9605 ) show
0 576 moveto (9606 // PrioCount should be set to the nummber of priority levels) show
0 564 moveto (9607 #define PrioCount 3) show
0 552 moveto (9608 #define numChildren 10) show
0 540 moveto (9609 ) show
0 528 moveto (9610 void) show
0 516 moveto (9611 countForever\(int p\)) show
0 504 moveto (9612 {) show
0 492 moveto (9613   int j;) show
0 480 moveto (9614   unsigned long count = 0;) show
0 468 moveto (9615 ) show
0 456 moveto (9616   j = getpid\(\);) show
0 444 moveto (9617   p = p%PrioCount;) show
0 432 moveto (9618   setpriority\(j, p\);) show
0 420 moveto (9619   printf\(1, "%d: start prio %d\\n", j, p\);) show
0 408 moveto (9620 ) show
0 396 moveto (9621   while \(1\) {) show
0 384 moveto (9622     count++;) show
0 372 moveto (9623     if \(\(count & 0xFFFFFFF\) == 0\) {) show
0 360 moveto (9624       p = \(p+1\) % PrioCount;) show
0 348 moveto (9625       setpriority\(j, p\);) show
0 336 moveto (9626       printf\(1, "%d: new prio %d\\n", j, p\);) show
0 324 moveto (9627     }) show
0 312 moveto (9628   }) show
0 300 moveto (9629 }) show
0 288 moveto (9630 ) show
0 276 moveto (9631 int) show
0 264 moveto (9632 main\(void\)) show
0 252 moveto (9633 {) show
0 240 moveto (9634   int i, rc;) show
0 228 moveto (9635 ) show
0 216 moveto (9636   for \(i=0; i<numChildren; i++\) {) show
0 204 moveto (9637     rc = fork\(\);) show
0 192 moveto (9638     if \(!rc\) { // child) show
0 180 moveto (9639       countForever\(i\);) show
0 168 moveto (9640     }) show
0 156 moveto (9641   }) show
0 144 moveto (9642   // what the heck, let's have the parent waste time as well!) show
0 132 moveto (9643   countForever\(1\);) show
0 120 moveto (9644   exit\(\);) show
0 108 moveto (9645 }) show
0 96 moveto (9646 ) show
0 84 moveto (9647 ) show
0 72 moveto (9648 ) show
0 60 moveto (9649 ) show
0 24 moveto (Sheet 96) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
grestore
restore
showpage
%%Trailer
%%Pages: 105
