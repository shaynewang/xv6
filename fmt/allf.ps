%!PS-Adobe-2.0
%%DocumentFonts: Courier Times-Bold
%%Title: <stdin> (mpage)
%%Creator: mpage 2.5.6 Januari 2008
%%CreationDate: Sat Oct 15 20:55:53 2016
%%Orientation: Landscape
%%DocumentMedia: letter 612 792
%%BoundingBox: 18 50 594 742
%%Pages: (atend)
%%EndComments

%%BeginProlog

/mp_stm usertime def
/mp_pgc statusdict begin pagecount end def
statusdict begin /jobname (<stdin>) def end
/reencsmalldict 12 dict def /ReEncodeSmall { reencsmalldict begin
/newcodesandnames exch def /newfontname exch def /basefontname exch def
/basefontdict basefontname findfont def /newfont basefontdict maxlength dict def
basefontdict { exch dup /FID ne { dup /Encoding eq { exch dup length array copy newfont 3 1 roll put } { exch newfont 3 1 roll put }
ifelse }
  { pop pop }
  ifelse } forall
newfont /FontName newfontname put
newcodesandnames aload pop newcodesandnames length 2 idiv
{ newfont /Encoding get 3 1 roll put } repeat
newfontname newfont definefont pop end } def
/charvec [
026 /Scaron
027 /Ydieresis
028 /Zcaron
029 /scaron
030 /trademark
031 /zcaron
032 /space
033 /exclam
034 /quotedbl
035 /numbersign
036 /dollar
037 /percent
038 /ampersand
039 /quoteright
040 /parenleft
041 /parenright
042 /asterisk
043 /plus
044 /comma
045 /minus
046 /period
047 /slash
048 /zero
049 /one
050 /two
051 /three
052 /four
053 /five
054 /six
055 /seven
056 /eight
057 /nine
058 /colon
059 /semicolon
060 /less
061 /equal
062 /greater
063 /question
064 /at
065 /A
066 /B
067 /C
068 /D
069 /E
070 /F
071 /G
072 /H
073 /I
074 /J
075 /K
076 /L
077 /M
078 /N
079 /O
080 /P
081 /Q
082 /R
083 /S
084 /T
085 /U
086 /V
087 /W
088 /X
089 /Y
090 /Z
091 /bracketleft
092 /backslash
093 /bracketright
094 /asciicircum
095 /underscore
096 /quoteleft
097 /a
098 /b
099 /c
100 /d
101 /e
102 /f
103 /g
104 /h
105 /i
106 /j
107 /k
108 /l
109 /m
110 /n
111 /o
112 /p
113 /q
114 /r
115 /s
116 /t
117 /u
118 /v
119 /w
120 /x
121 /y
122 /z
123 /braceleft
124 /bar
125 /braceright
126 /asciitilde
127 /.notdef
128 /fraction
129 /florin
130 /quotesingle
131 /quotedblleft
132 /guilsinglleft
133 /guilsinglright
134 /fi
135 /fl
136 /endash
137 /dagger
138 /daggerdbl
139 /bullet
140 /quotesinglbase
141 /quotedblbase
142 /quotedblright
143 /ellipsis
144 /dotlessi
145 /grave
146 /acute
147 /circumflex
148 /tilde
149 /oe
150 /breve
151 /dotaccent
152 /perthousand
153 /emdash
154 /ring
155 /Lslash
156 /OE
157 /hungarumlaut
158 /ogonek
159 /caron
160 /lslash
161 /exclamdown
162 /cent
163 /sterling
164 /currency
165 /yen
166 /brokenbar
167 /section
168 /dieresis
169 /copyright
170 /ordfeminine
171 /guillemotleft
172 /logicalnot
173 /hyphen
174 /registered
175 /macron
176 /degree
177 /plusminus
178 /twosuperior
179 /threesuperior
180 /acute
181 /mu
182 /paragraph
183 /periodcentered
184 /cedilla
185 /onesuperior
186 /ordmasculine
187 /guillemotright
188 /onequarter
189 /onehalf
190 /threequarters
191 /questiondown
192 /Agrave
193 /Aacute
194 /Acircumflex
195 /Atilde
196 /Adieresis
197 /Aring
198 /AE
199 /Ccedilla
200 /Egrave
201 /Eacute
202 /Ecircumflex
203 /Edieresis
204 /Igrave
205 /Iacute
206 /Icircumflex
207 /Idieresis
208 /Eth
209 /Ntilde
210 /Ograve
211 /Oacute
212 /Ocircumflex
213 /Otilde
214 /Odieresis
215 /multiply
216 /Oslash
217 /Ugrave
218 /Uacute
219 /Ucircumflex
220 /Udieresis
221 /Yacute
222 /Thorn
223 /germandbls
224 /agrave
225 /aacute
226 /acircumflex
227 /atilde
228 /adieresis
229 /aring
230 /ae
231 /ccedilla
232 /egrave
233 /eacute
234 /ecircumflex
235 /edieresis
236 /igrave
237 /iacute
238 /icircumflex
239 /idieresis
240 /eth
241 /ntilde
242 /ograve
243 /oacute
244 /ocircumflex
245 /otilde
246 /odieresis
247 /divide
248 /oslash
249 /ugrave
250 /uacute
251 /ucircumflex
252 /udieresis
253 /yacute
254 /thorn
255 /ydieresis
] def
/Courier /OurCharSet charvec ReEncodeSmall
/textfont /OurCharSet findfont 11 scalefont def
/textfontbold /OurCharSet-Bold findfont 11 scalefont def
/fnamefont /Times-Bold findfont 14 scalefont def
/headerfont /Times-Bold findfont 12 scalefont def
textfont setfont
(a) stringwidth pop /mp_a_x exch def
%%EndProlog
%%Page: 1 1
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  README  Page 1) show
0 648 moveto (xv6 is a re-implementation of Dennis Ritchie's and Ken Thompson's Unix) show
0 636 moveto (Version 6 \(v6\).  xv6 loosely follows the structure and style of v6,) show
0 624 moveto (but is implemented for a modern x86-based multiprocessor using ANSI C.) show
0 600 moveto (ACKNOWLEDGMENTS) show
0 576 moveto (xv6 is inspired by John Lions's Commentary on UNIX 6th Edition \(Peer) show
0 564 moveto (to Peer Communications; ISBN: 1-57398-013-7; 1st edition \(June 14,) show
0 552 moveto (2000\)\). See also http://pdos.csail.mit.edu/6.828/2014/xv6.html, which) show
0 540 moveto (provides pointers to on-line resources for v6.) show
0 516 moveto (xv6 borrows code from the following sources:) show
4 mp_a_x mul 504 moveto (JOS \(asm.h, elf.h, mmu.h, bootasm.S, ide.c, console.c, and others\)) show
4 mp_a_x mul 492 moveto (Plan 9 \(entryother.S, mp.h, mp.c, lapic.c\)) show
4 mp_a_x mul 480 moveto (FreeBSD \(ioapic.c\)) show
4 mp_a_x mul 468 moveto (NetBSD \(console.c\)) show
0 444 moveto (The following people have made contributions:) show
4 mp_a_x mul 432 moveto (Russ Cox \(context switching, locking\)) show
4 mp_a_x mul 420 moveto (Cliff Frey \(MP\)) show
4 mp_a_x mul 408 moveto (Xiao Yu \(MP\)) show
4 mp_a_x mul 396 moveto (Nickolai Zeldovich) show
4 mp_a_x mul 384 moveto (Austin Clements) show
0 360 moveto (In addition, we are grateful for the bug reports and patches contributed by) show
0 348 moveto (Silas Boyd-Wickizer, Peter Froehlich, Shivam Handa, Anders Kaseorg, Eddie) show
0 336 moveto (Kohler, Yandong Mao, Hitoshi Mitake, Carmi Merimovich, Joel Nider, Greg Price,) show
0 324 moveto (Eldar Sehayek, Yongming Shen, Stephen Tu, and Zouchangwei.) show
0 300 moveto (The code in the files that constitute xv6 is) show
0 288 moveto (Copyright 2006-2014 Frans Kaashoek, Robert Morris, and Russ Cox.) show
0 264 moveto (ERROR REPORTS) show
0 240 moveto (If you spot errors or have suggestions for improvement, please send) show
0 228 moveto (email to Frans Kaashoek and Robert Morris \(kaashoek,rtm@csail.mit.edu\). ) show
0 204 moveto (BUILDING AND RUNNING XV6) show
0 180 moveto (To build xv6 on an x86 ELF machine \(like Linux or FreeBSD\), run "make".) show
0 168 moveto (On non-x86 or non-ELF machines \(like OS X, even on x86\), you will) show
0 156 moveto (need to install a cross-compiler gcc suite capable of producing x86 ELF) show
0 144 moveto (binaries.  See http://pdos.csail.mit.edu/6.828/2014/tools.html.) show
0 132 moveto (Then run "make TOOLPREFIX=i386-jos-elf-".) show
0 108 moveto (To run xv6, install the QEMU PC simulators.  To run in QEMU, run "make qemu".) show
0 84 moveto (To create a typeset version of the code, run "make xv6.pdf".  This) show
0 72 moveto (requires the "mpage" utility.  See http://www.mesa.nl/pub/mpage/.) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  table of contents  Page 1) show
0 648 moveto (The numbers to the left of the file names in the table are sheet numbers.) show
0 636 moveto (The source code has been printed in a double column format with fifty) show
0 624 moveto (lines per column, giving one hundred lines per sheet \(or page\).) show
0 612 moveto (Thus there is a convenient relationship between line numbers and sheet numbers.) show
0 576 moveto (# basic headers) show
24 mp_a_x mul 576 moveto (30 vectors.pl) show
48 mp_a_x mul 576 moveto (65 mp.h) show
0 564 moveto (01 types.h) show
24 mp_a_x mul 564 moveto (30 trapasm.S) show
48 mp_a_x mul 564 moveto (66 mp.c) show
0 552 moveto (01 param.h) show
24 mp_a_x mul 552 moveto (31 trap.c) show
48 mp_a_x mul 552 moveto (68 lapic.c) show
0 540 moveto (02 memlayout.h) show
24 mp_a_x mul 540 moveto (32 syscall.h) show
48 mp_a_x mul 540 moveto (70 ioapic.c) show
0 528 moveto (02 date.h) show
24 mp_a_x mul 528 moveto (33 syscall.c) show
48 mp_a_x mul 528 moveto (71 picirq.c) show
0 516 moveto (03 defs.h) show
24 mp_a_x mul 516 moveto (35 sysproc.c) show
48 mp_a_x mul 516 moveto (72 kbd.h) show
0 504 moveto (05 x86.h) show
24 mp_a_x mul 504 moveto (37 halt.c) show
48 mp_a_x mul 504 moveto (74 kbd.c) show
0 492 moveto (07 asm.h) show
48 mp_a_x mul 492 moveto (74 console.c) show
0 480 moveto (07 mmu.h) show
24 mp_a_x mul 480 moveto (# file system) show
48 mp_a_x mul 480 moveto (77 timer.c) show
0 468 moveto (10 elf.h) show
24 mp_a_x mul 468 moveto (38 buf.h) show
48 mp_a_x mul 468 moveto (78 uart.c) show
24 mp_a_x mul 456 moveto (38 fcntl.h) show
0 444 moveto (# entering xv6) show
24 mp_a_x mul 444 moveto (39 stat.h) show
48 mp_a_x mul 444 moveto (# user-level) show
0 432 moveto (10 entry.S) show
24 mp_a_x mul 432 moveto (39 fs.h) show
48 mp_a_x mul 432 moveto (79 initcode.S) show
0 420 moveto (11 entryother.S) show
24 mp_a_x mul 420 moveto (40 file.h) show
48 mp_a_x mul 420 moveto (79 usys.S) show
0 408 moveto (12 main.c) show
24 mp_a_x mul 408 moveto (41 ide.c) show
48 mp_a_x mul 408 moveto (80 init.c) show
24 mp_a_x mul 396 moveto (43 bio.c) show
48 mp_a_x mul 396 moveto (80 sh.c) show
0 384 moveto (# locks) show
24 mp_a_x mul 384 moveto (44 log.c) show
0 372 moveto (14 spinlock.h) show
24 mp_a_x mul 372 moveto (47 fs.c) show
48 mp_a_x mul 372 moveto (# bootloader) show
0 360 moveto (14 spinlock.c) show
24 mp_a_x mul 360 moveto (54 file.c) show
48 mp_a_x mul 360 moveto (87 bootasm.S) show
24 mp_a_x mul 348 moveto (56 sysfile.c) show
48 mp_a_x mul 348 moveto (88 bootmain.c) show
0 336 moveto (# processes) show
24 mp_a_x mul 336 moveto (60 exec.c) show
0 324 moveto (16 vm.c) show
48 mp_a_x mul 324 moveto (# add student files her) show
0 312 moveto (20 proc.h) show
24 mp_a_x mul 312 moveto (# pipes) show
48 mp_a_x mul 312 moveto (89 print_mode.c) show
0 300 moveto (21 proc.c) show
24 mp_a_x mul 300 moveto (62 pipe.c) show
48 mp_a_x mul 300 moveto (90 date.c) show
0 288 moveto (28 swtch.S) show
48 mp_a_x mul 288 moveto (90 uproc.h) show
0 276 moveto (28 kalloc.c) show
24 mp_a_x mul 276 moveto (# string operations) show
48 mp_a_x mul 276 moveto (91 testgiduid.c) show
24 mp_a_x mul 264 moveto (63 string.c) show
48 mp_a_x mul 264 moveto (91 ps.c) show
0 252 moveto (# system calls) show
48 mp_a_x mul 252 moveto (92 time.c) show
0 240 moveto (29 traps.h) show
24 mp_a_x mul 240 moveto (# low-level hardware) show
0 204 moveto (The source listing is preceded by a cross-reference that lists every defined ) show
0 192 moveto (constant, struct, global variable, and function in xv6.  Each entry gives,) show
0 180 moveto (on the same line as the name, the line number \(or, in a few cases, numbers\)) show
0 168 moveto (where the name is defined.  Successive lines in an entry list the line) show
0 156 moveto (numbers where the name is used.  For example, this entry:) show
4 mp_a_x mul 132 moveto (swtch 2658) show
8 mp_a_x mul 120 moveto (0374 2428 2466 2657 2658) show
0 96 moveto (indicates that swtch is defined on line 2658 and is mentioned on five lines) show
0 84 moveto (on sheets 03, 24, and 26.) show
grestore
restore
showpage
%%Page: 2 2
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  cross-references  Page 1) show
0 648 moveto (acquire 1474) show
40 mp_a_x mul 648 moveto (4388 4417 4428 4440) show
4 mp_a_x mul 636 moveto (0429 1474 1478 2189 2221) show
36 mp_a_x mul 636 moveto (B_DIRTY 3811) show
4 mp_a_x mul 624 moveto (2330 2375 2408 2469 2481) show
40 mp_a_x mul 624 moveto (3811 4193 4216 4221 4241) show
4 mp_a_x mul 612 moveto (2525 2538 2589 2603 2623) show
40 mp_a_x mul 612 moveto (4261 4385 4419 4689) show
4 mp_a_x mul 600 moveto (2636 2729 2740 2925 2942) show
36 mp_a_x mul 600 moveto (begin_op 4578) show
4 mp_a_x mul 588 moveto (3150 3622 3642 4207 4246) show
40 mp_a_x mul 588 moveto (0388 2370 4578 5483 5557) show
4 mp_a_x mul 576 moveto (4365 4431 4580 4607 4624) show
40 mp_a_x mul 576 moveto (5721 5788 5890 5935 5958) show
4 mp_a_x mul 564 moveto (4681 4929 4965 4982 5011) show
40 mp_a_x mul 564 moveto (5977 6070) show
4 mp_a_x mul 552 moveto (5027 5037 5429 5454 5468) show
36 mp_a_x mul 552 moveto (bfree 4779) show
4 mp_a_x mul 540 moveto (6263 6283 6305 7510 7644) show
40 mp_a_x mul 540 moveto (4779 5114 5124 5127) show
4 mp_a_x mul 528 moveto (7690 7726) show
36 mp_a_x mul 528 moveto (bget 4361) show
0 516 moveto (allocproc 2184) show
40 mp_a_x mul 516 moveto (4361 4393 4406) show
4 mp_a_x mul 504 moveto (2184 2237 2293) show
36 mp_a_x mul 504 moveto (binit 4339) show
0 492 moveto (allocuvm 1853) show
40 mp_a_x mul 492 moveto (0316 1281 4339) show
4 mp_a_x mul 480 moveto (0478 1853 1867 2272 6096) show
36 mp_a_x mul 480 moveto (bmap 5068) show
4 mp_a_x mul 468 moveto (6108) show
40 mp_a_x mul 468 moveto (4872 5068 5094 5169 5196) show
0 456 moveto (alltraps 3054) show
36 mp_a_x mul 456 moveto (bootmain 8817) show
4 mp_a_x mul 444 moveto (3009 3017 3030 3035 3053) show
40 mp_a_x mul 444 moveto (8763 8817) show
4 mp_a_x mul 432 moveto (3054) show
36 mp_a_x mul 432 moveto (BPB 4007) show
0 420 moveto (ALT 7260) show
40 mp_a_x mul 420 moveto (4007 4010 4760 4762 4786) show
4 mp_a_x mul 408 moveto (7260 7288 7290) show
36 mp_a_x mul 408 moveto (bread 4402) show
0 396 moveto (argfd 5619) show
40 mp_a_x mul 396 moveto (0317 4402 4527 4528 4540) show
4 mp_a_x mul 384 moveto (5619 5656 5671 5683 5694) show
40 mp_a_x mul 384 moveto (4556 4638 4639 4732 4743) show
4 mp_a_x mul 372 moveto (5706) show
40 mp_a_x mul 372 moveto (4761 4785 4888 4909 4989) show
0 360 moveto (argint 3345) show
40 mp_a_x mul 360 moveto (5084 5120 5169 5196) show
4 mp_a_x mul 348 moveto (0451 3345 3358 3374 3584) show
36 mp_a_x mul 348 moveto (brelse 4426) show
4 mp_a_x mul 336 moveto (3606 3620 3676 3689 3731) show
40 mp_a_x mul 336 moveto (0318 4426 4429 4531 4532) show
4 mp_a_x mul 324 moveto (5624 5671 5683 5887 5960) show
40 mp_a_x mul 324 moveto (4547 4564 4642 4643 4734) show
4 mp_a_x mul 312 moveto (5961 6007) show
40 mp_a_x mul 312 moveto (4746 4767 4772 4792 4894) show
0 300 moveto (argptr 3354) show
40 mp_a_x mul 300 moveto (4897 4918 4997 5090 5126) show
4 mp_a_x mul 288 moveto (0452 3354 3664 3733 5671) show
40 mp_a_x mul 288 moveto (5172 5200) show
4 mp_a_x mul 276 moveto (5683 5706 6033) show
36 mp_a_x mul 276 moveto (BSIZE 3955) show
0 264 moveto (argstr 3371) show
40 mp_a_x mul 264 moveto (3807 3955 3973 4001 4007) show
4 mp_a_x mul 252 moveto (0453 3371 5718 5785 5887) show
40 mp_a_x mul 252 moveto (4181 4195 4217 4508 4529) show
4 mp_a_x mul 240 moveto (5936 5959 5978 6007) show
40 mp_a_x mul 240 moveto (4640 4744 5169 5170 5171) show
0 228 moveto (__attribute__ 1360) show
40 mp_a_x mul 228 moveto (5192 5196 5197 5198) show
4 mp_a_x mul 216 moveto (0324 0414 1259 1360) show
36 mp_a_x mul 216 moveto (buf 3800) show
0 204 moveto (BACK 8062) show
40 mp_a_x mul 204 moveto (0300 0317 0318 0319 0360) show
4 mp_a_x mul 192 moveto (8062 8177 8433 8689) show
40 mp_a_x mul 192 moveto (0387 2006 2009 2018 2020) show
0 180 moveto (backcmd 8100 8427) show
40 mp_a_x mul 180 moveto (3800 3804 3805 3806 4112) show
4 mp_a_x mul 168 moveto (8100 8114 8178 8427 8429) show
40 mp_a_x mul 168 moveto (4128 4131 4175 4204 4235) show
4 mp_a_x mul 156 moveto (8542 8655 8690) show
40 mp_a_x mul 156 moveto (4237 4240 4327 4331 4335) show
0 144 moveto (BACKSPACE 7573) show
40 mp_a_x mul 144 moveto (4341 4348 4360 4363 4401) show
4 mp_a_x mul 132 moveto (7573 7590 7622 7654 7660) show
40 mp_a_x mul 132 moveto (4404 4415 4426 4455 4527) show
0 120 moveto (balloc 4754) show
40 mp_a_x mul 120 moveto (4528 4540 4541 4547 4556) show
4 mp_a_x mul 108 moveto (4754 4774 5075 5083 5087) show
40 mp_a_x mul 108 moveto (4557 4563 4564 4638 4639) show
0 96 moveto (BBLOCK 4010) show
40 mp_a_x mul 96 moveto (4672 4719 4730 4741 4757) show
4 mp_a_x mul 84 moveto (4010 4761 4785) show
40 mp_a_x mul 84 moveto (4781 4884 4906 4976 5071) show
0 72 moveto (B_BUSY 3809) show
40 mp_a_x mul 72 moveto (5109 5155 5182 7479 7490) show
4 mp_a_x mul 60 moveto (3809 4239 4371 4372 4385) show
40 mp_a_x mul 60 moveto (7494 7497 7631 7652 7666) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  cross-references  Page 2) show
4 mp_a_x mul 648 moveto (7700 7721 7728 8187 8190) show
40 mp_a_x mul 648 moveto (6935 6949 6950 6988) show
4 mp_a_x mul 636 moveto (8191 8192 8306 8318 8320) show
36 mp_a_x mul 636 moveto (CMOS_RETURN 6936) show
4 mp_a_x mul 624 moveto (8323 8324 8325 8329 8330) show
40 mp_a_x mul 624 moveto (6936 6991) show
4 mp_a_x mul 612 moveto (8335) show
36 mp_a_x mul 612 moveto (CMOS_STATA 6975) show
0 600 moveto (B_VALID 3810) show
40 mp_a_x mul 600 moveto (6975 7023) show
4 mp_a_x mul 588 moveto (3810 4220 4241 4261 4407) show
36 mp_a_x mul 588 moveto (CMOS_STATB 6976) show
0 576 moveto (bwrite 4415) show
40 mp_a_x mul 576 moveto (6976 7016) show
4 mp_a_x mul 564 moveto (0319 4415 4418 4530 4563) show
36 mp_a_x mul 564 moveto (CMOS_UIP 6977) show
4 mp_a_x mul 552 moveto (4641) show
40 mp_a_x mul 552 moveto (6977 7023) show
0 540 moveto (bzero 4739) show
36 mp_a_x mul 540 moveto (COM1 7813) show
4 mp_a_x mul 528 moveto (4739 4768) show
40 mp_a_x mul 528 moveto (7813 7823 7826 7827 7828) show
0 516 moveto (C 7281 7637) show
40 mp_a_x mul 516 moveto (7829 7830 7831 7834 7840) show
4 mp_a_x mul 504 moveto (7281 7329 7354 7355 7356) show
40 mp_a_x mul 504 moveto (7841 7857 7859 7867 7869) show
4 mp_a_x mul 492 moveto (7357 7358 7360 7637 7647) show
36 mp_a_x mul 492 moveto (commit 4651) show
4 mp_a_x mul 480 moveto (7650 7657 7668 7701) show
40 mp_a_x mul 480 moveto (4503 4623 4651) show
0 468 moveto (CAPSLOCK 7262) show
36 mp_a_x mul 468 moveto (CONSOLE 4087) show
4 mp_a_x mul 456 moveto (7262 7295 7436) show
40 mp_a_x mul 456 moveto (4087 7740 7741) show
0 444 moveto (cgaputc 7578) show
36 mp_a_x mul 444 moveto (consoleinit 7736) show
4 mp_a_x mul 432 moveto (7578 7626) show
40 mp_a_x mul 432 moveto (0321 1277 7736) show
0 420 moveto (clearpteu 1929) show
36 mp_a_x mul 420 moveto (consoleintr 7640) show
4 mp_a_x mul 408 moveto (0487 1929 1935 6110) show
40 mp_a_x mul 408 moveto (0323 7448 7640 7875) show
0 396 moveto (cli 0607) show
36 mp_a_x mul 396 moveto (consoleread 7683) show
4 mp_a_x mul 384 moveto (0607 0609 1176 1560 7560) show
40 mp_a_x mul 384 moveto (7683 7741) show
4 mp_a_x mul 372 moveto (7617 8712) show
36 mp_a_x mul 372 moveto (consolewrite 7721) show
0 360 moveto (cmd 8066) show
40 mp_a_x mul 360 moveto (7721 7740) show
4 mp_a_x mul 348 moveto (8066 8078 8087 8088 8093) show
36 mp_a_x mul 348 moveto (consputc 7614) show
4 mp_a_x mul 336 moveto (8094 8102 8107 8111 8120) show
40 mp_a_x mul 336 moveto (7466 7497 7518 7536 7539) show
4 mp_a_x mul 324 moveto (8123 8128 8136 8142 8146) show
40 mp_a_x mul 324 moveto (7543 7544 7614 7654 7660) show
4 mp_a_x mul 312 moveto (8154 8178 8180 8269 8281) show
40 mp_a_x mul 312 moveto (7667 7728) show
4 mp_a_x mul 300 moveto (8285 8286 8363 8366 8368) show
36 mp_a_x mul 300 moveto (context 2096) show
4 mp_a_x mul 288 moveto (8369 8370 8371 8374 8375) show
40 mp_a_x mul 288 moveto (0301 0426 2060 2096 2115) show
4 mp_a_x mul 276 moveto (8377 8379 8380 8381 8382) show
40 mp_a_x mul 276 moveto (2216 2217 2218 2219 2485) show
4 mp_a_x mul 264 moveto (8383 8384 8385 8386 8387) show
40 mp_a_x mul 264 moveto (2530 2702) show
4 mp_a_x mul 252 moveto (8400 8401 8403 8405 8406) show
36 mp_a_x mul 252 moveto (CONV 7032) show
4 mp_a_x mul 240 moveto (8407 8408 8409 8410 8413) show
40 mp_a_x mul 240 moveto (7032 7033 7034 7035 7036) show
4 mp_a_x mul 228 moveto (8414 8416 8418 8419 8420) show
40 mp_a_x mul 228 moveto (7037 7038 7039) show
4 mp_a_x mul 216 moveto (8421 8422 8423 8426 8427) show
36 mp_a_x mul 216 moveto (copyout 2004) show
4 mp_a_x mul 204 moveto (8429 8431 8432 8433 8434) show
40 mp_a_x mul 204 moveto (0486 2004 6118 6129) show
4 mp_a_x mul 192 moveto (8435 8512 8513 8514 8515) show
36 mp_a_x mul 192 moveto (copyuvm 1953) show
4 mp_a_x mul 180 moveto (8517 8521 8524 8530 8531) show
40 mp_a_x mul 180 moveto (0483 1953 1964 1966 2301) show
4 mp_a_x mul 168 moveto (8534 8537 8539 8542 8546) show
36 mp_a_x mul 168 moveto (cprintf 7502) show
4 mp_a_x mul 156 moveto (8548 8550 8553 8555 8558) show
40 mp_a_x mul 156 moveto (0322 1274 1314 1867 2658) show
4 mp_a_x mul 144 moveto (8560 8563 8564 8575 8578) show
40 mp_a_x mul 144 moveto (2660 2661 2662 2664 2666) show
4 mp_a_x mul 132 moveto (8581 8585 8600 8603 8608) show
40 mp_a_x mul 132 moveto (2687 2689 2699 2704 2706) show
4 mp_a_x mul 120 moveto (8612 8613 8616 8621 8622) show
40 mp_a_x mul 120 moveto (3174 3182 3187 3512 3515) show
4 mp_a_x mul 108 moveto (8628 8637 8638 8644 8645) show
40 mp_a_x mul 108 moveto (3652 4872 6719 6739 6911) show
4 mp_a_x mul 96 moveto (8651 8652 8661 8664 8666) show
40 mp_a_x mul 96 moveto (7112 7502 7562 7563 7564) show
4 mp_a_x mul 84 moveto (8672 8673 8678 8684 8690) show
40 mp_a_x mul 84 moveto (7567) show
4 mp_a_x mul 72 moveto (8691 8694) show
36 mp_a_x mul 72 moveto (cpu 2058) show
0 60 moveto (CMOS_PORT 6935) show
40 mp_a_x mul 60 moveto (0363 1274 1314 1316 1328) show
grestore
restore
showpage
%%Page: 3 3
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  cross-references  Page 3) show
4 mp_a_x mul 648 moveto (1406 1466 1487 1508 1546) show
36 mp_a_x mul 648 moveto (dobuiltin 8281) show
4 mp_a_x mul 636 moveto (1561 1562 1570 1572 1618) show
40 mp_a_x mul 636 moveto (8281 8330) show
4 mp_a_x mul 624 moveto (1631 1637 1776 1777 1778) show
36 mp_a_x mul 624 moveto (DPL_USER 0829) show
4 mp_a_x mul 612 moveto (1779 2058 2068 2072 2083) show
40 mp_a_x mul 612 moveto (0829 1627 1628 2244 2245) show
4 mp_a_x mul 600 moveto (2485 2518 2529 2530 2531) show
40 mp_a_x mul 600 moveto (3123 3197 3206) show
4 mp_a_x mul 588 moveto (3149 3174 3175 3182 3183) show
36 mp_a_x mul 588 moveto (E0ESC 7266) show
4 mp_a_x mul 576 moveto (3187 3189 6613 6614 6911) show
40 mp_a_x mul 576 moveto (7266 7420 7424 7425 7427) show
4 mp_a_x mul 564 moveto (7562) show
40 mp_a_x mul 564 moveto (7430) show
0 552 moveto (cpunum 6901) show
36 mp_a_x mul 552 moveto (elfhdr 1005) show
4 mp_a_x mul 540 moveto (0378 1338 1624 6901 7123) show
40 mp_a_x mul 540 moveto (1005 6065 8819 8824) show
4 mp_a_x mul 528 moveto (7132) show
36 mp_a_x mul 528 moveto (ELF_MAGIC 1002) show
0 516 moveto (CR0_PE 0777) show
40 mp_a_x mul 516 moveto (1002 6081 8830) show
4 mp_a_x mul 504 moveto (0777 1185 1209 8743) show
36 mp_a_x mul 504 moveto (ELF_PROG_LOAD 1036) show
0 492 moveto (CR0_PG 0787) show
40 mp_a_x mul 492 moveto (1036 6092) show
4 mp_a_x mul 480 moveto (0787 1100 1209) show
36 mp_a_x mul 480 moveto (end_op 4603) show
0 468 moveto (CR0_WP 0783) show
40 mp_a_x mul 468 moveto (0389 2372 4603 5485 5562) show
4 mp_a_x mul 456 moveto (0783 1100 1209) show
40 mp_a_x mul 456 moveto (5723 5730 5748 5757 5790) show
0 444 moveto (CR4_PSE 0789) show
40 mp_a_x mul 444 moveto (5824 5830 5895 5900 5906) show
4 mp_a_x mul 432 moveto (0789 1093 1202) show
40 mp_a_x mul 432 moveto (5915 5919 5937 5941 5963) show
0 420 moveto (create 5835) show
40 mp_a_x mul 420 moveto (5967 5979 5985 5990 6072) show
4 mp_a_x mul 408 moveto (5835 5855 5868 5872 5893) show
40 mp_a_x mul 408 moveto (6102 6155) show
4 mp_a_x mul 396 moveto (5936 5962) show
36 mp_a_x mul 396 moveto (entry 1090) show
0 384 moveto (CRTPORT 7574) show
40 mp_a_x mul 384 moveto (1011 1086 1089 1090 3002) show
4 mp_a_x mul 372 moveto (7574 7583 7584 7585 7586) show
40 mp_a_x mul 372 moveto (3003 6142 6521 8821 8845) show
4 mp_a_x mul 360 moveto (7606 7607 7608 7609) show
40 mp_a_x mul 360 moveto (8846) show
0 348 moveto (CTL 7259) show
36 mp_a_x mul 348 moveto (EOI 6816) show
4 mp_a_x mul 336 moveto (7259 7285 7289 7435) show
40 mp_a_x mul 336 moveto (6816 6886 6925) show
0 324 moveto (DAY 6982) show
36 mp_a_x mul 324 moveto (ERROR 6837) show
4 mp_a_x mul 312 moveto (6982 7005) show
40 mp_a_x mul 312 moveto (6837 6879) show
0 300 moveto (deallocuvm 1882) show
36 mp_a_x mul 300 moveto (ESR 6819) show
4 mp_a_x mul 288 moveto (0479 1868 1882 1916 2275) show
40 mp_a_x mul 288 moveto (6819 6882 6883) show
0 276 moveto (DEVSPACE 0204) show
36 mp_a_x mul 276 moveto (exec 6060) show
4 mp_a_x mul 264 moveto (0204 1732 1745) show
40 mp_a_x mul 264 moveto (0327 3459 6023 6060 7968) show
0 252 moveto (devsw 4080) show
40 mp_a_x mul 252 moveto (8029 8030 8131 8132 9220) show
4 mp_a_x mul 240 moveto (4080 4085 5158 5160 5185) show
36 mp_a_x mul 240 moveto (EXEC 8058) show
4 mp_a_x mul 228 moveto (5187 5411 7740 7741) show
40 mp_a_x mul 228 moveto (8058 8127 8370 8665) show
0 216 moveto (dinode 3977) show
36 mp_a_x mul 216 moveto (execcmd 8070 8364) show
4 mp_a_x mul 204 moveto (3977 4001 4885 4889 4907) show
40 mp_a_x mul 204 moveto (8070 8115 8128 8364 8366) show
4 mp_a_x mul 192 moveto (4910 4977 4990) show
40 mp_a_x mul 192 moveto (8621 8627 8628 8656 8666) show
0 180 moveto (dirent 4015) show
36 mp_a_x mul 180 moveto (exit 2354) show
4 mp_a_x mul 168 moveto (4015 5224 5255 5766 5781) show
40 mp_a_x mul 168 moveto (0408 2354 2392 3139 3143) show
0 156 moveto (dirlink 5252) show
40 mp_a_x mul 156 moveto (3198 3207 3454 3569 7916) show
4 mp_a_x mul 144 moveto (0340 5231 5252 5267 5275) show
40 mp_a_x mul 144 moveto (7919 7961 8026 8031 8121) show
4 mp_a_x mul 132 moveto (5741 5867 5871 5872) show
40 mp_a_x mul 132 moveto (8130 8140 8183 8338 8345) show
0 120 moveto (dirlookup 5221) show
40 mp_a_x mul 120 moveto (9011 9015 9135 9142 9166) show
4 mp_a_x mul 108 moveto (0341 5221 5227 5259 5344) show
40 mp_a_x mul 108 moveto (9180 9187 9221 9225 9232) show
4 mp_a_x mul 96 moveto (5800 5845) show
40 mp_a_x mul 96 moveto (9239) show
0 84 moveto (DIRSIZ 4013) show
36 mp_a_x mul 84 moveto (EXTMEM 0202) show
4 mp_a_x mul 72 moveto (4013 4017 5215 5272 5308) show
40 mp_a_x mul 72 moveto (0202 0208 1729) show
4 mp_a_x mul 60 moveto (5309 5361 5715 5782 5839) show
36 mp_a_x mul 60 moveto (fdalloc 5638) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  cross-references  Page 4) show
4 mp_a_x mul 648 moveto (5638 5658 5911 6038) show
36 mp_a_x mul 648 moveto (getbuiltin 8251) show
0 636 moveto (fetchint 3317) show
40 mp_a_x mul 636 moveto (8251 8276) show
4 mp_a_x mul 624 moveto (0454 3317 3347 6014) show
36 mp_a_x mul 624 moveto (getcallerpcs 1526) show
0 612 moveto (fetchstr 3329) show
40 mp_a_x mul 612 moveto (0430 1488 1526 2702 7565) show
4 mp_a_x mul 600 moveto (0455 3329 3376 6020) show
36 mp_a_x mul 600 moveto (getcmd 8187) show
0 588 moveto (file 4050) show
40 mp_a_x mul 588 moveto (8187 8318) show
4 mp_a_x mul 576 moveto (0302 0330 0331 0332 0334) show
36 mp_a_x mul 576 moveto (getprocs 2713) show
4 mp_a_x mul 564 moveto (0335 0336 0401 2118 4050) show
40 mp_a_x mul 564 moveto (0422 2713 3482 3735 7988) show
4 mp_a_x mul 552 moveto (4720 5408 5414 5424 5427) show
40 mp_a_x mul 552 moveto (9163) show
4 mp_a_x mul 540 moveto (5430 5451 5452 5464 5466) show
36 mp_a_x mul 540 moveto (gettoken 8456) show
4 mp_a_x mul 528 moveto (5502 5515 5535 5613 5619) show
40 mp_a_x mul 528 moveto (8456 8541 8545 8557 8570) show
4 mp_a_x mul 516 moveto (5622 5638 5653 5667 5679) show
40 mp_a_x mul 516 moveto (8571 8607 8611 8633) show
4 mp_a_x mul 504 moveto (5692 5703 5884 6030 6206) show
36 mp_a_x mul 504 moveto (growproc 2266) show
4 mp_a_x mul 492 moveto (6221 7460 7808 8079 8138) show
40 mp_a_x mul 492 moveto (0410 2266 3609) show
4 mp_a_x mul 480 moveto (8139 8375 8383 8572) show
36 mp_a_x mul 480 moveto (havedisk1 4130) show
0 468 moveto (filealloc 5425) show
40 mp_a_x mul 468 moveto (4130 4164 4243) show
4 mp_a_x mul 456 moveto (0330 5425 5911 6227) show
36 mp_a_x mul 456 moveto (holding 1544) show
0 444 moveto (fileclose 5464) show
40 mp_a_x mul 444 moveto (0431 1477 1504 1544 2516) show
4 mp_a_x mul 432 moveto (0331 2365 5464 5470 5697) show
36 mp_a_x mul 432 moveto (HOURS 6981) show
4 mp_a_x mul 420 moveto (5913 6041 6042 6254 6256) show
40 mp_a_x mul 420 moveto (6981 7004) show
0 408 moveto (filedup 5452) show
36 mp_a_x mul 408 moveto (ialloc 4881) show
4 mp_a_x mul 396 moveto (0332 2322 5452 5456 5660) show
40 mp_a_x mul 396 moveto (0342 4881 4899 5854 5855) show
0 384 moveto (fileinit 5418) show
36 mp_a_x mul 384 moveto (IBLOCK 4004) show
4 mp_a_x mul 372 moveto (0333 1282 5418) show
40 mp_a_x mul 372 moveto (4004 4888 4909 4989) show
0 360 moveto (fileread 5515) show
36 mp_a_x mul 360 moveto (I_BUSY 4075) show
4 mp_a_x mul 348 moveto (0334 5515 5530 5673) show
40 mp_a_x mul 348 moveto (4075 4983 4985 5008 5012) show
0 336 moveto (filestat 5502) show
40 mp_a_x mul 336 moveto (5030 5032) show
4 mp_a_x mul 324 moveto (0335 5502 5708) show
36 mp_a_x mul 324 moveto (ICRHI 6830) show
0 312 moveto (filewrite 5535) show
40 mp_a_x mul 312 moveto (6830 6889 6957 6969) show
4 mp_a_x mul 300 moveto (0336 5535 5567 5572 5685) show
36 mp_a_x mul 300 moveto (ICRLO 6820) show
0 288 moveto (FL_IF 0760) show
40 mp_a_x mul 288 moveto (6820 6890 6891 6958 6960) show
4 mp_a_x mul 276 moveto (0760 1562 1568 2248 2522) show
40 mp_a_x mul 276 moveto (6970) show
4 mp_a_x mul 264 moveto (6908) show
36 mp_a_x mul 264 moveto (ID 6813) show
0 252 moveto (fork 2287) show
40 mp_a_x mul 252 moveto (6813 6849 6916) show
4 mp_a_x mul 240 moveto (0409 2287 3453 3563 7960) show
36 mp_a_x mul 240 moveto (IDE_BSY 4115) show
4 mp_a_x mul 228 moveto (8023 8025 8355 8357 9212) show
40 mp_a_x mul 228 moveto (4115 4139) show
0 216 moveto (fork1 8351) show
36 mp_a_x mul 216 moveto (IDE_CMD_READ 4120) show
4 mp_a_x mul 204 moveto (8105 8147 8157 8164 8179) show
40 mp_a_x mul 204 moveto (4120 4197) show
4 mp_a_x mul 192 moveto (8334 8351) show
36 mp_a_x mul 192 moveto (IDE_CMD_WRITE 4121) show
0 180 moveto (forkret 2553) show
40 mp_a_x mul 180 moveto (4121 4194) show
4 mp_a_x mul 168 moveto (2168 2219 2553) show
36 mp_a_x mul 168 moveto (IDE_DF 4117) show
0 156 moveto (freerange 2901) show
40 mp_a_x mul 156 moveto (4117 4141) show
4 mp_a_x mul 144 moveto (2861 2884 2890 2901) show
36 mp_a_x mul 144 moveto (IDE_DRDY 4116) show
0 132 moveto (freevm 1910) show
40 mp_a_x mul 132 moveto (4116 4139) show
4 mp_a_x mul 120 moveto (0480 1910 1915 1978 2421) show
36 mp_a_x mul 120 moveto (IDE_ERR 4118) show
4 mp_a_x mul 108 moveto (6145 6152) show
40 mp_a_x mul 108 moveto (4118 4141) show
0 96 moveto (FSSIZE 0162) show
36 mp_a_x mul 96 moveto (ideinit 4151) show
4 mp_a_x mul 84 moveto (0162 4179) show
40 mp_a_x mul 84 moveto (0358 1283 4151) show
0 72 moveto (gatedesc 0951) show
36 mp_a_x mul 72 moveto (ideintr 4202) show
4 mp_a_x mul 60 moveto (0573 0576 0951 3111) show
40 mp_a_x mul 60 moveto (0359 3158 4202) show
grestore
restore
showpage
%%Page: 4 4
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  cross-references  Page 5) show
0 648 moveto (idelock 4127) show
40 mp_a_x mul 648 moveto (4962 4963 4974 5006 5025) show
4 mp_a_x mul 636 moveto (4127 4155 4207 4209 4228) show
40 mp_a_x mul 636 moveto (5052 5068 5106 5137 5152) show
4 mp_a_x mul 624 moveto (4246 4262 4265) show
40 mp_a_x mul 624 moveto (5179 5220 5221 5252 5256) show
0 612 moveto (iderw 4235) show
40 mp_a_x mul 612 moveto (5323 5326 5358 5365 5716) show
4 mp_a_x mul 600 moveto (0360 4235 4240 4242 4244) show
40 mp_a_x mul 600 moveto (5763 5780 5834 5838 5885) show
4 mp_a_x mul 588 moveto (4408 4420) show
40 mp_a_x mul 588 moveto (5933 5953 5975 6066 7683) show
0 576 moveto (idestart 4175) show
40 mp_a_x mul 576 moveto (7721) show
4 mp_a_x mul 564 moveto (4131 4175 4178 4184 4226) show
36 mp_a_x mul 564 moveto (INPUT_BUF 7629) show
4 mp_a_x mul 552 moveto (4258) show
40 mp_a_x mul 552 moveto (7629 7631 7652 7664 7666) show
0 540 moveto (idewait 4135) show
40 mp_a_x mul 540 moveto (7668 7700) show
4 mp_a_x mul 528 moveto (4135 4158 4186 4216) show
36 mp_a_x mul 528 moveto (insl 0512) show
0 516 moveto (idtinit 3129) show
40 mp_a_x mul 516 moveto (0512 0514 4217 8873) show
4 mp_a_x mul 504 moveto (0462 1315 3129) show
36 mp_a_x mul 504 moveto (install_trans 4522) show
0 492 moveto (idup 4963) show
40 mp_a_x mul 492 moveto (4522 4571 4656) show
4 mp_a_x mul 480 moveto (0343 2323 4963 5331) show
36 mp_a_x mul 480 moveto (INT_DISABLED 7069) show
0 468 moveto (iget 4925) show
40 mp_a_x mul 468 moveto (7069 7117) show
4 mp_a_x mul 456 moveto (4876 4895 4925 4945 5239) show
36 mp_a_x mul 456 moveto (ioapic 7077) show
4 mp_a_x mul 444 moveto (5329) show
40 mp_a_x mul 444 moveto (6707 6729 6730 7074 7077) show
0 432 moveto (iinit 4868) show
40 mp_a_x mul 432 moveto (7086 7087 7093 7094 7108) show
4 mp_a_x mul 420 moveto (0344 2564 4868) show
36 mp_a_x mul 420 moveto (IOAPIC 7058) show
0 408 moveto (ilock 4974) show
40 mp_a_x mul 408 moveto (7058 7108) show
4 mp_a_x mul 396 moveto (0345 4974 4980 5000 5334) show
36 mp_a_x mul 396 moveto (ioapicenable 7123) show
4 mp_a_x mul 384 moveto (5505 5524 5558 5727 5740) show
40 mp_a_x mul 384 moveto (0363 4157 7123 7745 7843) show
4 mp_a_x mul 372 moveto (5753 5794 5802 5843 5847) show
36 mp_a_x mul 372 moveto (ioapicid 6617) show
4 mp_a_x mul 360 moveto (5857 5903 5982 6075 7695) show
40 mp_a_x mul 360 moveto (0364 6617 6730 6747 7111) show
4 mp_a_x mul 348 moveto (7715 7730) show
40 mp_a_x mul 348 moveto (7112) show
0 336 moveto (inb 0503) show
36 mp_a_x mul 336 moveto (ioapicinit 7101) show
4 mp_a_x mul 324 moveto (0503 4139 4163 6754 6991) show
40 mp_a_x mul 324 moveto (0365 1276 7101 7112) show
4 mp_a_x mul 312 moveto (7414 7417 7584 7586 7834) show
36 mp_a_x mul 312 moveto (ioapicread 7084) show
4 mp_a_x mul 300 moveto (7840 7841 7857 7867 7869) show
40 mp_a_x mul 300 moveto (7084 7109 7110) show
4 mp_a_x mul 288 moveto (8723 8731 8854) show
36 mp_a_x mul 288 moveto (ioapicwrite 7091) show
0 276 moveto (INITGID 2055) show
40 mp_a_x mul 276 moveto (7091 7117 7118 7131 7132) show
4 mp_a_x mul 264 moveto (2055 2259) show
36 mp_a_x mul 264 moveto (IO_PIC1 7157) show
0 252 moveto (initlock 1462) show
40 mp_a_x mul 252 moveto (7157 7170 7185 7194 7197) show
4 mp_a_x mul 240 moveto (0432 1462 2176 2882 3125) show
40 mp_a_x mul 240 moveto (7202 7212 7226 7227) show
4 mp_a_x mul 228 moveto (4155 4343 4512 4870 5420) show
36 mp_a_x mul 228 moveto (IO_PIC2 7158) show
4 mp_a_x mul 216 moveto (6235 7738) show
40 mp_a_x mul 216 moveto (7158 7171 7186 7215 7216) show
0 204 moveto (initlog 4506) show
40 mp_a_x mul 204 moveto (7217 7220 7229 7230) show
4 mp_a_x mul 192 moveto (0386 2565 4506 4509) show
36 mp_a_x mul 192 moveto (IO_TIMER1 7759) show
0 180 moveto (INITUID 2054) show
40 mp_a_x mul 180 moveto (7759 7768 7778 7779) show
4 mp_a_x mul 168 moveto (2054 2258) show
36 mp_a_x mul 168 moveto (IPB 4001) show
0 156 moveto (inituvm 1803) show
40 mp_a_x mul 156 moveto (4001 4004 4889 4910 4990) show
4 mp_a_x mul 144 moveto (0481 1803 1808 2241) show
36 mp_a_x mul 144 moveto (iput 5025) show
0 132 moveto (inode 4062) show
40 mp_a_x mul 132 moveto (0346 2371 5025 5031 5055) show
4 mp_a_x mul 120 moveto (0303 0340 0341 0342 0343) show
40 mp_a_x mul 120 moveto (5260 5352 5484 5746 5989) show
4 mp_a_x mul 108 moveto (0345 0346 0347 0348 0349) show
36 mp_a_x mul 108 moveto (IRQ_COM1 2983) show
4 mp_a_x mul 96 moveto (0351 0352 0353 0354 0355) show
40 mp_a_x mul 96 moveto (2983 3168 7842 7843) show
4 mp_a_x mul 84 moveto (0482 1818 2119 4056 4062) show
36 mp_a_x mul 84 moveto (IRQ_ERROR 2985) show
4 mp_a_x mul 72 moveto (4081 4082 4723 4864 4876) show
40 mp_a_x mul 72 moveto (2985 6879) show
4 mp_a_x mul 60 moveto (4880 4904 4924 4927 4933) show
36 mp_a_x mul 60 moveto (IRQ_IDE 2984) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  cross-references  Page 6) show
4 mp_a_x mul 648 moveto (2984 3157 3161 4156 4157) show
40 mp_a_x mul 648 moveto (0208 1730) show
0 636 moveto (IRQ_KBD 2982) show
36 mp_a_x mul 636 moveto (KEY_DEL 7278) show
4 mp_a_x mul 624 moveto (2982 3164 7744 7745) show
40 mp_a_x mul 624 moveto (7278 7319 7341 7365) show
0 612 moveto (IRQ_SLAVE 7160) show
36 mp_a_x mul 612 moveto (KEY_DN 7272) show
4 mp_a_x mul 600 moveto (7160 7164 7202 7217) show
40 mp_a_x mul 600 moveto (7272 7315 7337 7361) show
0 588 moveto (IRQ_SPURIOUS 2986) show
36 mp_a_x mul 588 moveto (KEY_END 7270) show
4 mp_a_x mul 576 moveto (2986 3173 6859) show
40 mp_a_x mul 576 moveto (7270 7318 7340 7364) show
0 564 moveto (IRQ_TIMER 2981) show
36 mp_a_x mul 564 moveto (KEY_HOME 7269) show
4 mp_a_x mul 552 moveto (2981 3148 3202 6866 7780) show
40 mp_a_x mul 552 moveto (7269 7318 7340 7364) show
0 540 moveto (isdirempty 5763) show
36 mp_a_x mul 540 moveto (KEY_INS 7277) show
4 mp_a_x mul 528 moveto (5763 5770 5806) show
40 mp_a_x mul 528 moveto (7277 7319 7341 7365) show
0 516 moveto (ismp 6615) show
36 mp_a_x mul 516 moveto (KEY_LF 7273) show
4 mp_a_x mul 504 moveto (0392 1284 6615 6712 6720) show
40 mp_a_x mul 504 moveto (7273 7317 7339 7363) show
4 mp_a_x mul 492 moveto (6740 6743 7105 7125) show
36 mp_a_x mul 492 moveto (KEY_PGDN 7276) show
0 480 moveto (itrunc 5106) show
40 mp_a_x mul 480 moveto (7276 7316 7338 7362) show
4 mp_a_x mul 468 moveto (4723 5034 5106) show
36 mp_a_x mul 468 moveto (KEY_PGUP 7275) show
0 456 moveto (iunlock 5006) show
40 mp_a_x mul 456 moveto (7275 7316 7338 7362) show
4 mp_a_x mul 444 moveto (0347 5006 5009 5054 5341) show
36 mp_a_x mul 444 moveto (KEY_RT 7274) show
4 mp_a_x mul 432 moveto (5507 5527 5561 5736 5918) show
40 mp_a_x mul 432 moveto (7274 7317 7339 7363) show
4 mp_a_x mul 420 moveto (5988 7688 7725) show
36 mp_a_x mul 420 moveto (KEY_UP 7271) show
0 408 moveto (iunlockput 5052) show
40 mp_a_x mul 408 moveto (7271 7315 7337 7361) show
4 mp_a_x mul 396 moveto (0348 5052 5336 5345 5348) show
36 mp_a_x mul 396 moveto (kfree 2914) show
4 mp_a_x mul 384 moveto (5729 5742 5745 5756 5807) show
40 mp_a_x mul 384 moveto (0369 1898 1900 1920 1923) show
4 mp_a_x mul 372 moveto (5818 5822 5829 5846 5850) show
40 mp_a_x mul 372 moveto (2302 2419 2906 2914 2919) show
4 mp_a_x mul 360 moveto (5874 5905 5914 5940 5966) show
40 mp_a_x mul 360 moveto (6252 6273) show
4 mp_a_x mul 348 moveto (5984 6101 6154) show
36 mp_a_x mul 348 moveto (kill 2632) show
0 336 moveto (iupdate 4904) show
40 mp_a_x mul 336 moveto (0411 2632 3188 3458 3586) show
4 mp_a_x mul 324 moveto (0349 4904 5036 5132 5205) show
40 mp_a_x mul 324 moveto (7967) show
4 mp_a_x mul 312 moveto (5735 5755 5816 5821 5861) show
36 mp_a_x mul 312 moveto (kinit1 2880) show
4 mp_a_x mul 300 moveto (5865) show
40 mp_a_x mul 300 moveto (0370 1269 2880) show
0 288 moveto (I_VALID 4076) show
36 mp_a_x mul 288 moveto (kinit2 2888) show
4 mp_a_x mul 276 moveto (4076 4988 4998 5028) show
40 mp_a_x mul 276 moveto (0371 1287 2888) show
0 264 moveto (kalloc 2937) show
36 mp_a_x mul 264 moveto (KSTACKSIZE 0151) show
4 mp_a_x mul 252 moveto (0368 1344 1663 1742 1809) show
40 mp_a_x mul 252 moveto (0151 1104 1113 1345 1779) show
4 mp_a_x mul 240 moveto (1865 1969 2201 2937 6229) show
40 mp_a_x mul 240 moveto (2205) show
0 228 moveto (KBDATAP 7254) show
36 mp_a_x mul 228 moveto (kvmalloc 1757) show
4 mp_a_x mul 216 moveto (7254 7417) show
40 mp_a_x mul 216 moveto (0474 1270 1757) show
0 204 moveto (kbdgetc 7406) show
36 mp_a_x mul 204 moveto (lapiceoi 6922) show
4 mp_a_x mul 192 moveto (7406 7448) show
40 mp_a_x mul 192 moveto (0380 3155 3159 3166 3170) show
0 180 moveto (kbdintr 7446) show
40 mp_a_x mul 180 moveto (3176 6922) show
4 mp_a_x mul 168 moveto (0374 3165 7446) show
36 mp_a_x mul 168 moveto (lapicinit 6853) show
0 156 moveto (KBS_DIB 7253) show
40 mp_a_x mul 156 moveto (0381 1272 1306 6853) show
4 mp_a_x mul 144 moveto (7253 7415) show
36 mp_a_x mul 144 moveto (lapicstartap 6941) show
0 132 moveto (KBSTATP 7252) show
40 mp_a_x mul 132 moveto (0382 1349 6941) show
4 mp_a_x mul 120 moveto (7252 7414) show
36 mp_a_x mul 120 moveto (lapicw 6846) show
0 108 moveto (KERNBASE 0207) show
40 mp_a_x mul 108 moveto (6846 6859 6865 6866 6867) show
4 mp_a_x mul 96 moveto (0207 0208 0212 0213 0217) show
40 mp_a_x mul 96 moveto (6870 6871 6876 6879 6882) show
4 mp_a_x mul 84 moveto (0218 0220 0221 1365 1533) show
40 mp_a_x mul 84 moveto (6883 6886 6889 6890 6895) show
4 mp_a_x mul 72 moveto (1729 1858 1916) show
40 mp_a_x mul 72 moveto (6925 6957 6958 6960 6969) show
0 60 moveto (KERNLINK 0208) show
40 mp_a_x mul 60 moveto (6970) show
grestore
restore
showpage
%%Page: 5 5
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  cross-references  Page 7) show
0 648 moveto (lcr3 0640) show
40 mp_a_x mul 648 moveto (3974 5192) show
4 mp_a_x mul 636 moveto (0640 1768 1783) show
36 mp_a_x mul 636 moveto (MAXOPBLOCKS 0159) show
0 624 moveto (lgdt 0562) show
40 mp_a_x mul 624 moveto (0159 0160 0161 4584) show
4 mp_a_x mul 612 moveto (0562 0570 1183 1633 8741) show
36 mp_a_x mul 612 moveto (memcmp 6365) show
0 600 moveto (lidt 0576) show
40 mp_a_x mul 600 moveto (0438 6365 6645 6688 7026) show
4 mp_a_x mul 588 moveto (0576 0584 3131) show
36 mp_a_x mul 588 moveto (memmove 6381) show
0 576 moveto (LINT0 6835) show
40 mp_a_x mul 576 moveto (0439 1335 1812 1971 2018) show
4 mp_a_x mul 564 moveto (6835 6870) show
40 mp_a_x mul 564 moveto (4529 4640 4733 4916 4996) show
0 552 moveto (LINT1 6836) show
40 mp_a_x mul 552 moveto (5171 5198 5309 5311 6381) show
4 mp_a_x mul 540 moveto (6836 6871) show
40 mp_a_x mul 540 moveto (6404 7601) show
0 528 moveto (LIST 8061) show
36 mp_a_x mul 528 moveto (memset 6354) show
4 mp_a_x mul 516 moveto (8061 8145 8420 8683) show
40 mp_a_x mul 516 moveto (0440 1666 1744 1810 1871) show
0 504 moveto (listcmd 8091 8414) show
40 mp_a_x mul 504 moveto (2218 2243 2922 4744 4891) show
4 mp_a_x mul 492 moveto (8091 8116 8146 8414 8416) show
40 mp_a_x mul 492 moveto (5811 6010 6354 7603 8190) show
4 mp_a_x mul 480 moveto (8546 8657 8684) show
40 mp_a_x mul 480 moveto (8369 8380 8406 8419 8432) show
0 468 moveto (loadgs 0601) show
36 mp_a_x mul 468 moveto (microdelay 6931) show
4 mp_a_x mul 456 moveto (0601 1634) show
40 mp_a_x mul 456 moveto (0383 6931 6959 6961 6971) show
0 444 moveto (loaduvm 1818) show
40 mp_a_x mul 444 moveto (6989 7858) show
4 mp_a_x mul 432 moveto (0482 1818 1824 1827 6098) show
36 mp_a_x mul 432 moveto (min 4722) show
0 420 moveto (log 4487 4500) show
40 mp_a_x mul 420 moveto (4722 5170 5197) show
4 mp_a_x mul 408 moveto (4487 4500 4512 4514 4515) show
36 mp_a_x mul 408 moveto (MINS 6980) show
4 mp_a_x mul 396 moveto (4516 4526 4527 4528 4540) show
40 mp_a_x mul 396 moveto (6980 7003) show
4 mp_a_x mul 384 moveto (4543 4544 4545 4556 4559) show
36 mp_a_x mul 384 moveto (MONTH 6983) show
4 mp_a_x mul 372 moveto (4560 4561 4572 4580 4582) show
40 mp_a_x mul 372 moveto (6983 7006) show
4 mp_a_x mul 360 moveto (4583 4584 4586 4588 4589) show
36 mp_a_x mul 360 moveto (mp 6502) show
4 mp_a_x mul 348 moveto (4607 4608 4609 4610 4611) show
40 mp_a_x mul 348 moveto (6502 6608 6637 6644 6645) show
4 mp_a_x mul 336 moveto (4613 4616 4618 4624 4625) show
40 mp_a_x mul 336 moveto (6646 6655 6660 6664 6665) show
4 mp_a_x mul 324 moveto (4626 4627 4637 4638 4639) show
40 mp_a_x mul 324 moveto (6668 6669 6680 6683 6685) show
4 mp_a_x mul 312 moveto (4653 4657 4676 4678 4681) show
40 mp_a_x mul 312 moveto (6687 6694 6704 6710 6750) show
4 mp_a_x mul 300 moveto (4682 4683 4686 4687 4688) show
36 mp_a_x mul 300 moveto (mpbcpu 6620) show
4 mp_a_x mul 288 moveto (4690) show
40 mp_a_x mul 288 moveto (0393 6620) show
0 276 moveto (logheader 4482) show
36 mp_a_x mul 276 moveto (MPBUS 6552) show
4 mp_a_x mul 264 moveto (4482 4494 4508 4509 4541) show
40 mp_a_x mul 264 moveto (6552 6733) show
4 mp_a_x mul 252 moveto (4557) show
36 mp_a_x mul 252 moveto (mpconf 6513) show
0 240 moveto (LOGSIZE 0160) show
40 mp_a_x mul 240 moveto (6513 6679 6682 6687 6705) show
4 mp_a_x mul 228 moveto (0160 4484 4584 4676 5550) show
36 mp_a_x mul 228 moveto (mpconfig 6680) show
0 216 moveto (log_write 4672) show
40 mp_a_x mul 216 moveto (6680 6710) show
4 mp_a_x mul 204 moveto (0387 4672 4679 4745 4766) show
36 mp_a_x mul 204 moveto (mpenter 1302) show
4 mp_a_x mul 192 moveto (4791 4893 4917 5088 5199) show
40 mp_a_x mul 192 moveto (1302 1346) show
0 180 moveto (ltr 0588) show
36 mp_a_x mul 180 moveto (mpinit 6701) show
4 mp_a_x mul 168 moveto (0588 0590 1780) show
40 mp_a_x mul 168 moveto (0394 1271 6701 6719 6739) show
0 156 moveto (makeint 8214) show
36 mp_a_x mul 156 moveto (mpioapic 6539) show
4 mp_a_x mul 144 moveto (8214 8235 8241) show
40 mp_a_x mul 144 moveto (6539 6707 6729 6731) show
0 132 moveto (mappages 1679) show
36 mp_a_x mul 132 moveto (MPIOAPIC 6553) show
4 mp_a_x mul 120 moveto (1679 1748 1811 1872 1972) show
40 mp_a_x mul 120 moveto (6553 6728) show
0 108 moveto (MAXARG 0158) show
36 mp_a_x mul 108 moveto (MPIOINTR 6554) show
4 mp_a_x mul 96 moveto (0158 6003 6064 6115) show
40 mp_a_x mul 96 moveto (6554 6734) show
0 84 moveto (MAXARGS 8064) show
36 mp_a_x mul 84 moveto (MPLINTR 6555) show
4 mp_a_x mul 72 moveto (8064 8072 8073 8640) show
40 mp_a_x mul 72 moveto (6555 6735) show
0 60 moveto (MAXFILE 3974) show
36 mp_a_x mul 60 moveto (mpmain 1312) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  cross-references  Page 8) show
4 mp_a_x mul 648 moveto (1259 1290 1307 1312) show
40 mp_a_x mul 648 moveto (7358) show
0 636 moveto (mpproc 6528) show
36 mp_a_x mul 636 moveto (NOFILE 0153) show
4 mp_a_x mul 624 moveto (6528 6706 6717 6726) show
40 mp_a_x mul 624 moveto (0153 2118 2320 2363 5626) show
0 612 moveto (MPPROC 6551) show
40 mp_a_x mul 612 moveto (5642) show
4 mp_a_x mul 600 moveto (6551 6716) show
36 mp_a_x mul 600 moveto (NPDENTRIES 0871) show
0 588 moveto (mpsearch 6656) show
40 mp_a_x mul 588 moveto (0871 1361 1917) show
4 mp_a_x mul 576 moveto (6656 6685) show
36 mp_a_x mul 576 moveto (NPROC 0150) show
0 564 moveto (mpsearch1 6638) show
40 mp_a_x mul 564 moveto (0150 2162 2190 2381 2412) show
4 mp_a_x mul 552 moveto (6638 6664 6668 6671) show
40 mp_a_x mul 552 moveto (2470 2614 2637 2692 2727) show
0 540 moveto (multiboot_header 1075) show
40 mp_a_x mul 540 moveto (2728) show
4 mp_a_x mul 528 moveto (1074 1075) show
36 mp_a_x mul 528 moveto (NPTENTRIES 0872) show
0 516 moveto (namecmp 5213) show
40 mp_a_x mul 516 moveto (0872 1894) show
4 mp_a_x mul 504 moveto (0350 5213 5234 5797) show
36 mp_a_x mul 504 moveto (NSEGS 2051) show
0 492 moveto (namei 5359) show
40 mp_a_x mul 492 moveto (1611 2051 2062) show
4 mp_a_x mul 480 moveto (0351 2253 5359 5722 5899) show
36 mp_a_x mul 480 moveto (nulterminate 8652) show
4 mp_a_x mul 468 moveto (5978 6071) show
40 mp_a_x mul 468 moveto (8515 8530 8652 8673 8679) show
0 456 moveto (nameiparent 5366) show
40 mp_a_x mul 456 moveto (8680 8685 8686 8691) show
4 mp_a_x mul 444 moveto (0352 5324 5339 5351 5366) show
36 mp_a_x mul 444 moveto (NUMLOCK 7263) show
4 mp_a_x mul 432 moveto (5738 5789 5841) show
40 mp_a_x mul 432 moveto (7263 7296) show
0 420 moveto (namex 5324) show
36 mp_a_x mul 420 moveto (O_CREATE 3853) show
4 mp_a_x mul 408 moveto (5324 5362 5368) show
40 mp_a_x mul 408 moveto (3853 5892 8578 8581) show
0 396 moveto (NBUF 0161) show
36 mp_a_x mul 396 moveto (O_RDONLY 3850) show
4 mp_a_x mul 384 moveto (0161 4331 4348) show
40 mp_a_x mul 384 moveto (3850 5904 8575) show
0 372 moveto (ncpu 6616) show
36 mp_a_x mul 372 moveto (O_RDWR 3852) show
4 mp_a_x mul 360 moveto (1274 1337 2073 4157 6616) show
40 mp_a_x mul 360 moveto (3852 5925 8014 8016 8310) show
4 mp_a_x mul 348 moveto (6718 6719 6723 6724 6725) show
36 mp_a_x mul 348 moveto (outb 0521) show
4 mp_a_x mul 336 moveto (6745) show
40 mp_a_x mul 336 moveto (0521 4161 4170 4187 4188) show
0 324 moveto (NCPU 0152) show
40 mp_a_x mul 324 moveto (4189 4190 4191 4192 4194) show
4 mp_a_x mul 312 moveto (0152 2072 6613) show
40 mp_a_x mul 312 moveto (4197 6753 6754 6949 6950) show
0 300 moveto (NDEV 0156) show
40 mp_a_x mul 300 moveto (6988 7170 7171 7185 7186) show
4 mp_a_x mul 288 moveto (0156 5158 5185 5411) show
40 mp_a_x mul 288 moveto (7194 7197 7202 7212 7215) show
0 276 moveto (NDIRECT 3972) show
40 mp_a_x mul 276 moveto (7216 7217 7220 7226 7227) show
4 mp_a_x mul 264 moveto (3972 3974 3983 4073 5073) show
40 mp_a_x mul 264 moveto (7229 7230 7583 7585 7606) show
4 mp_a_x mul 252 moveto (5078 5082 5083 5112 5119) show
40 mp_a_x mul 252 moveto (7607 7608 7609 7777 7778) show
4 mp_a_x mul 240 moveto (5120 5127 5128) show
40 mp_a_x mul 240 moveto (7779 7823 7826 7827 7828) show
0 228 moveto (NELEM 0490) show
40 mp_a_x mul 228 moveto (7829 7830 7831 7859 8728) show
4 mp_a_x mul 216 moveto (0490 1747 2695 3508 6012) show
40 mp_a_x mul 216 moveto (8736 8864 8865 8866 8867) show
0 204 moveto (nextpid 2167) show
40 mp_a_x mul 204 moveto (8868 8869) show
4 mp_a_x mul 192 moveto (2167 2198) show
36 mp_a_x mul 192 moveto (outsl 0533) show
0 180 moveto (NFILE 0154) show
40 mp_a_x mul 180 moveto (0533 0535 4195) show
4 mp_a_x mul 168 moveto (0154 5414 5430) show
36 mp_a_x mul 168 moveto (outw 0527) show
0 156 moveto (NINDIRECT 3973) show
40 mp_a_x mul 156 moveto (0527 1219 1221 3654 8769) show
4 mp_a_x mul 144 moveto (3973 3974 5080 5122) show
40 mp_a_x mul 144 moveto (8771) show
0 132 moveto (NINODE 0155) show
36 mp_a_x mul 132 moveto (O_WRONLY 3851) show
4 mp_a_x mul 120 moveto (0155 4864 4933) show
40 mp_a_x mul 120 moveto (3851 5924 5925 8578 8581) show
0 108 moveto (NO 7256) show
36 mp_a_x mul 108 moveto (P2V 0218) show
4 mp_a_x mul 96 moveto (7256 7302 7305 7307 7308) show
40 mp_a_x mul 96 moveto (0218 1269 1287 6662 6951) show
4 mp_a_x mul 84 moveto (7309 7310 7312 7324 7327) show
40 mp_a_x mul 84 moveto (7575) show
4 mp_a_x mul 72 moveto (7329 7330 7331 7332 7334) show
36 mp_a_x mul 72 moveto (panic 7555 8342) show
4 mp_a_x mul 60 moveto (7352 7353 7355 7356 7357) show
40 mp_a_x mul 60 moveto (0324 1478 1505 1569 1571) show
grestore
restore
showpage
%%Page: 6 6
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  cross-references  Page 9) show
4 mp_a_x mul 648 moveto (1690 1746 1782 1808 1824) show
36 mp_a_x mul 648 moveto (PGSIZE 0873) show
4 mp_a_x mul 636 moveto (1827 1898 1915 1935 1964) show
40 mp_a_x mul 636 moveto (0873 0879 0880 1360 1666) show
4 mp_a_x mul 624 moveto (1966 2240 2360 2392 2517) show
40 mp_a_x mul 624 moveto (1694 1695 1744 1807 1810) show
4 mp_a_x mul 612 moveto (2519 2521 2523 2577 2580) show
40 mp_a_x mul 612 moveto (1811 1823 1825 1829 1832) show
4 mp_a_x mul 600 moveto (2919 3184 4178 4180 4184) show
40 mp_a_x mul 600 moveto (1864 1871 1872 1891 1894) show
4 mp_a_x mul 588 moveto (4240 4242 4244 4393 4418) show
40 mp_a_x mul 588 moveto (1962 1971 1972 2015 2021) show
4 mp_a_x mul 576 moveto (4429 4509 4610 4677 4679) show
40 mp_a_x mul 576 moveto (2242 2249 2905 2918 2922) show
4 mp_a_x mul 564 moveto (4774 4789 4899 4945 4980) show
40 mp_a_x mul 564 moveto (6108 6110) show
4 mp_a_x mul 552 moveto (5000 5009 5031 5094 5227) show
36 mp_a_x mul 552 moveto (PHYSTOP 0203) show
4 mp_a_x mul 540 moveto (5231 5267 5275 5456 5470) show
40 mp_a_x mul 540 moveto (0203 1287 1731 1745 1746) show
4 mp_a_x mul 528 moveto (5530 5567 5572 5770 5805) show
40 mp_a_x mul 528 moveto (2918) show
4 mp_a_x mul 516 moveto (5813 5855 5868 5872 7513) show
36 mp_a_x mul 516 moveto (picenable 7175) show
4 mp_a_x mul 504 moveto (7555 7562 7596 8106 8125) show
40 mp_a_x mul 504 moveto (0398 4156 7175 7744 7780) show
4 mp_a_x mul 492 moveto (8156 8342 8357 8528 8572) show
40 mp_a_x mul 492 moveto (7842) show
4 mp_a_x mul 480 moveto (8606 8610 8636 8641) show
36 mp_a_x mul 480 moveto (picinit 7182) show
0 468 moveto (panicked 7468) show
40 mp_a_x mul 468 moveto (0399 1275 7182) show
4 mp_a_x mul 456 moveto (7468 7568 7616) show
36 mp_a_x mul 456 moveto (picsetmask 7167) show
0 444 moveto (parseblock 8601) show
40 mp_a_x mul 444 moveto (7167 7177 7233) show
4 mp_a_x mul 432 moveto (8601 8606 8625) show
36 mp_a_x mul 432 moveto (pinit 2174) show
0 420 moveto (parsecmd 8518) show
40 mp_a_x mul 420 moveto (0412 1279 2174) show
4 mp_a_x mul 408 moveto (8107 8335 8518) show
36 mp_a_x mul 408 moveto (pipe 6211) show
0 396 moveto (parseexec 8617) show
40 mp_a_x mul 396 moveto (0304 0402 0403 0404 3456) show
4 mp_a_x mul 384 moveto (8514 8555 8617) show
40 mp_a_x mul 384 moveto (4055 5481 5522 5542 6211) show
0 372 moveto (parseline 8535) show
40 mp_a_x mul 372 moveto (6223 6229 6235 6239 6243) show
4 mp_a_x mul 360 moveto (8512 8524 8535 8546 8608) show
40 mp_a_x mul 360 moveto (6261 6279 6301 7963 8155) show
0 348 moveto (parsepipe 8551) show
40 mp_a_x mul 348 moveto (8156) show
4 mp_a_x mul 336 moveto (8513 8539 8551 8558) show
36 mp_a_x mul 336 moveto (PIPE 8060) show
0 324 moveto (parseredirs 8564) show
40 mp_a_x mul 324 moveto (8060 8153 8407 8677) show
4 mp_a_x mul 312 moveto (8564 8612 8631 8642) show
36 mp_a_x mul 312 moveto (pipealloc 6221) show
0 300 moveto (PCINT 6834) show
40 mp_a_x mul 300 moveto (0401 6035 6221) show
4 mp_a_x mul 288 moveto (6834 6876) show
36 mp_a_x mul 288 moveto (pipeclose 6261) show
0 276 moveto (pde_t 0103) show
40 mp_a_x mul 276 moveto (0402 5481 6261) show
4 mp_a_x mul 264 moveto (0103 0476 0477 0478 0479) show
36 mp_a_x mul 264 moveto (pipecmd 8085 8401) show
4 mp_a_x mul 252 moveto (0480 0481 0482 0483 0486) show
40 mp_a_x mul 252 moveto (8085 8117 8154 8401 8403) show
4 mp_a_x mul 240 moveto (0487 1260 1320 1361 1610) show
40 mp_a_x mul 240 moveto (8558 8658 8678) show
4 mp_a_x mul 228 moveto (1654 1656 1679 1736 1739) show
36 mp_a_x mul 228 moveto (piperead 6301) show
4 mp_a_x mul 216 moveto (1742 1803 1818 1853 1882) show
40 mp_a_x mul 216 moveto (0403 5522 6301) show
4 mp_a_x mul 204 moveto (1910 1929 1952 1953 1955) show
36 mp_a_x mul 204 moveto (PIPESIZE 6209) show
4 mp_a_x mul 192 moveto (1984 2004 2109 6068) show
40 mp_a_x mul 192 moveto (6209 6213 6285 6293 6316) show
0 180 moveto (PDX 0862) show
36 mp_a_x mul 180 moveto (pipewrite 6279) show
4 mp_a_x mul 168 moveto (0862 1659) show
40 mp_a_x mul 168 moveto (0404 5542 6279) show
0 156 moveto (PDXSHIFT 0877) show
36 mp_a_x mul 156 moveto (popcli 1566) show
4 mp_a_x mul 144 moveto (0862 0868 0877 1365) show
40 mp_a_x mul 144 moveto (0435 1521 1566 1569 1571) show
0 132 moveto (peek 8501) show
40 mp_a_x mul 132 moveto (1784) show
4 mp_a_x mul 120 moveto (8501 8525 8540 8544 8556) show
36 mp_a_x mul 120 moveto (print_elapsed 2654) show
4 mp_a_x mul 108 moveto (8569 8605 8609 8624 8632) show
40 mp_a_x mul 108 moveto (2654 2700) show
0 96 moveto (PGROUNDDOWN 0880) show
36 mp_a_x mul 96 moveto (printint 7476) show
4 mp_a_x mul 84 moveto (0880 1684 1685 2011) show
40 mp_a_x mul 84 moveto (7476 7526 7530) show
0 72 moveto (PGROUNDUP 0879) show
36 mp_a_x mul 72 moveto (proc 2107) show
4 mp_a_x mul 60 moveto (0879 1863 1890 2904 6107) show
40 mp_a_x mul 60 moveto (0305 0407 0484 1255 1458) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  cross-references  Page 10) show
4 mp_a_x mul 648 moveto (1606 1638 1773 1779 2069) show
40 mp_a_x mul 648 moveto (0884 1363 1365 1670 1729) show
4 mp_a_x mul 636 moveto (2084 2107 2113 2156 2162) show
40 mp_a_x mul 636 moveto (1731 1732 1811 1872) show
4 mp_a_x mul 624 moveto (2165 2183 2186 2190 2234) show
36 mp_a_x mul 624 moveto (PTX 0865) show
4 mp_a_x mul 612 moveto (2270 2272 2275 2278 2279) show
40 mp_a_x mul 612 moveto (0865 1672) show
4 mp_a_x mul 600 moveto (2290 2301 2307 2308 2309) show
36 mp_a_x mul 600 moveto (PTXSHIFT 0876) show
4 mp_a_x mul 588 moveto (2313 2314 2321 2322 2323) show
40 mp_a_x mul 588 moveto (0865 0868 0876) show
4 mp_a_x mul 576 moveto (2325 2356 2359 2364 2365) show
36 mp_a_x mul 576 moveto (pushcli 1555) show
4 mp_a_x mul 564 moveto (2366 2371 2373 2378 2381) show
40 mp_a_x mul 564 moveto (0434 1476 1555 1775) show
4 mp_a_x mul 552 moveto (2382 2390 2405 2412 2413) show
36 mp_a_x mul 552 moveto (rcr2 0632) show
4 mp_a_x mul 540 moveto (2433 2439 2462 2470 2477) show
40 mp_a_x mul 540 moveto (0632 3183 3190) show
4 mp_a_x mul 528 moveto (2485 2490 2520 2526 2530) show
36 mp_a_x mul 528 moveto (readeflags 0594) show
4 mp_a_x mul 516 moveto (2539 2576 2594 2595 2599) show
40 mp_a_x mul 516 moveto (0594 1559 1568 2522 6908) show
4 mp_a_x mul 504 moveto (2612 2614 2634 2637 2654) show
36 mp_a_x mul 504 moveto (read_head 4538) show
4 mp_a_x mul 492 moveto (2682 2692 2726 2730 3105) show
40 mp_a_x mul 492 moveto (4538 4570) show
4 mp_a_x mul 480 moveto (3138 3140 3142 3180 3188) show
36 mp_a_x mul 480 moveto (readi 5152) show
4 mp_a_x mul 468 moveto (3189 3191 3197 3202 3206) show
40 mp_a_x mul 468 moveto (0353 1833 5152 5230 5266) show
4 mp_a_x mul 456 moveto (3305 3319 3333 3336 3347) show
40 mp_a_x mul 456 moveto (5525 5769 5770 6079 6090) show
4 mp_a_x mul 444 moveto (3360 3507 3509 3512 3516) show
36 mp_a_x mul 444 moveto (readsb 4728) show
4 mp_a_x mul 432 moveto (3517 3557 3592 3608 3625) show
40 mp_a_x mul 432 moveto (0339 4513 4728 4784 4871) show
4 mp_a_x mul 420 moveto (3680 3693 3704 3711 3718) show
36 mp_a_x mul 420 moveto (readsect 8860) show
4 mp_a_x mul 408 moveto (3719 3720 3721 3722 4107) show
40 mp_a_x mul 408 moveto (8860 8895) show
4 mp_a_x mul 396 moveto (4716 5331 5611 5626 5643) show
36 mp_a_x mul 396 moveto (readseg 8879) show
4 mp_a_x mul 384 moveto (5644 5696 5989 5991 6040) show
40 mp_a_x mul 384 moveto (8814 8827 8838 8879) show
4 mp_a_x mul 372 moveto (6054 6136 6139 6140 6141) show
36 mp_a_x mul 372 moveto (recover_from_log 4568) show
4 mp_a_x mul 360 moveto (6142 6143 6144 6204 6286) show
40 mp_a_x mul 360 moveto (4502 4517 4568) show
4 mp_a_x mul 348 moveto (6307 6611 6706 6717 6718) show
36 mp_a_x mul 348 moveto (REDIR 8059) show
4 mp_a_x mul 336 moveto (6719 6722 7463 7693 7810) show
40 mp_a_x mul 336 moveto (8059 8135 8381 8671) show
0 324 moveto (procdump 2671) show
36 mp_a_x mul 324 moveto (redircmd 8076 8375) show
4 mp_a_x mul 312 moveto (0413 2671 7678) show
40 mp_a_x mul 312 moveto (8076 8118 8136 8375 8377) show
0 300 moveto (proghdr 1024) show
40 mp_a_x mul 300 moveto (8575 8578 8581 8659 8672) show
4 mp_a_x mul 288 moveto (1024 6067 8820 8834) show
36 mp_a_x mul 288 moveto (REG_ID 7060) show
0 276 moveto (PTE_ADDR 0894) show
40 mp_a_x mul 276 moveto (7060 7110) show
4 mp_a_x mul 264 moveto (0894 1661 1828 1896 1919) show
36 mp_a_x mul 264 moveto (REG_TABLE 7062) show
4 mp_a_x mul 252 moveto (1967 1993) show
40 mp_a_x mul 252 moveto (7062 7117 7118 7131 7132) show
0 240 moveto (PTE_FLAGS 0895) show
36 mp_a_x mul 240 moveto (REG_VER 7061) show
4 mp_a_x mul 228 moveto (0895 1968) show
40 mp_a_x mul 228 moveto (7061 7109) show
0 216 moveto (PTE_P 0883) show
36 mp_a_x mul 216 moveto (release 1502) show
4 mp_a_x mul 204 moveto (0883 1363 1365 1660 1670) show
40 mp_a_x mul 204 moveto (0433 1502 1505 2193 2199) show
4 mp_a_x mul 192 moveto (1689 1691 1895 1918 1965) show
40 mp_a_x mul 192 moveto (2223 2332 2427 2434 2483) show
4 mp_a_x mul 180 moveto (1989) show
40 mp_a_x mul 180 moveto (2492 2527 2541 2557 2590) show
0 168 moveto (PTE_PS 0890) show
40 mp_a_x mul 168 moveto (2602 2625 2643 2647 2743) show
4 mp_a_x mul 156 moveto (0890 1363 1365) show
40 mp_a_x mul 156 moveto (2750 2930 2947 3152 3626) show
0 144 moveto (pte_t 0898) show
40 mp_a_x mul 144 moveto (3631 3644 4209 4228 4265) show
4 mp_a_x mul 132 moveto (0898 1653 1657 1661 1663) show
40 mp_a_x mul 132 moveto (4373 4389 4443 4589 4618) show
4 mp_a_x mul 120 moveto (1682 1821 1884 1931 1956) show
40 mp_a_x mul 120 moveto (4627 4690 4936 4955 4967) show
4 mp_a_x mul 108 moveto (1986) show
40 mp_a_x mul 108 moveto (4986 5014 5033 5042 5433) show
0 96 moveto (PTE_U 0885) show
40 mp_a_x mul 96 moveto (5437 5458 5472 5478 6272) show
4 mp_a_x mul 84 moveto (0885 1670 1811 1872 1936) show
40 mp_a_x mul 84 moveto (6275 6287 6296 6308 6319) show
4 mp_a_x mul 72 moveto (1991) show
40 mp_a_x mul 72 moveto (7551 7676 7694 7714 7729) show
0 60 moveto (PTE_W 0884) show
36 mp_a_x mul 60 moveto (ROOTDEV 0157) show
grestore
restore
showpage
%%Page: 7 7
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  cross-references  Page 11) show
4 mp_a_x mul 648 moveto (0157 2564 2565 5329) show
36 mp_a_x mul 648 moveto (SEG_KCODE 0791) show
0 636 moveto (ROOTINO 3954) show
40 mp_a_x mul 636 moveto (0791 1188 1625 3122 3123) show
4 mp_a_x mul 624 moveto (3954 5329) show
40 mp_a_x mul 624 moveto (8749) show
0 612 moveto (rtcdate 0250) show
36 mp_a_x mul 612 moveto (SEG_KCPU 0793) show
4 mp_a_x mul 600 moveto (0250 0306 0377 3663 7000) show
40 mp_a_x mul 600 moveto (0793 1631 1634 3066) show
4 mp_a_x mul 588 moveto (7011 7013 9008) show
36 mp_a_x mul 588 moveto (SEG_KDATA 0792) show
0 576 moveto (run 2864) show
40 mp_a_x mul 576 moveto (0792 1192 1626 1778 3063) show
4 mp_a_x mul 564 moveto (2678 2721 2864 2865 2871) show
40 mp_a_x mul 564 moveto (8753) show
4 mp_a_x mul 552 moveto (2916 2926 2939) show
36 mp_a_x mul 552 moveto (SEG_NULLASM 0704) show
0 540 moveto (runcmd 8111) show
40 mp_a_x mul 540 moveto (0704 1227 8778) show
4 mp_a_x mul 528 moveto (8111 8125 8142 8148 8150) show
36 mp_a_x mul 528 moveto (SEG_TSS 0796) show
4 mp_a_x mul 516 moveto (8162 8169 8180 8335) show
40 mp_a_x mul 516 moveto (0796 1776 1777 1780) show
0 504 moveto (RUNNING 2104) show
36 mp_a_x mul 504 moveto (SEG_UCODE 0794) show
4 mp_a_x mul 492 moveto (2104 2479 2520 2678 2721) show
40 mp_a_x mul 492 moveto (0794 1627 2244) show
4 mp_a_x mul 480 moveto (3202) show
36 mp_a_x mul 480 moveto (SEG_UDATA 0795) show
0 468 moveto (safestrcpy 6432) show
40 mp_a_x mul 468 moveto (0795 1628 2245) show
4 mp_a_x mul 456 moveto (0441 2252 2325 2744 2746) show
36 mp_a_x mul 456 moveto (setbuiltin 8226) show
4 mp_a_x mul 444 moveto (6136 6432) show
40 mp_a_x mul 444 moveto (8226 8275) show
0 432 moveto (sb 4724) show
36 mp_a_x mul 432 moveto (SETGATE 0971) show
4 mp_a_x mul 420 moveto (0339 4004 4010 4511 4513) show
40 mp_a_x mul 420 moveto (0971 3122 3123) show
4 mp_a_x mul 408 moveto (4514 4515 4724 4728 4733) show
36 mp_a_x mul 408 moveto (setupkvm 1737) show
4 mp_a_x mul 396 moveto (4760 4761 4762 4784 4785) show
40 mp_a_x mul 396 moveto (0476 1737 1759 1960 2239) show
4 mp_a_x mul 384 moveto (4871 4872 4873 4887 4888) show
40 mp_a_x mul 384 moveto (6084) show
4 mp_a_x mul 372 moveto (4909 4989 7014 7016 7018) show
36 mp_a_x mul 372 moveto (SHIFT 7258) show
0 360 moveto (sched 2512) show
40 mp_a_x mul 360 moveto (7258 7286 7287 7435) show
4 mp_a_x mul 348 moveto (0415 2391 2512 2517 2519) show
36 mp_a_x mul 348 moveto (skipelem 5295) show
4 mp_a_x mul 336 moveto (2521 2523 2540 2596) show
40 mp_a_x mul 336 moveto (5295 5333) show
0 324 moveto (scheduler 2460 2503) show
36 mp_a_x mul 324 moveto (sleep 2574) show
4 mp_a_x mul 312 moveto (0414 1317 2060 2460 2485) show
40 mp_a_x mul 312 moveto (0416 2439 2574 2577 2580) show
4 mp_a_x mul 300 moveto (2503 2530) show
40 mp_a_x mul 300 moveto (2676 2719 3465 3629 4262) show
0 288 moveto (SCROLLLOCK 7264) show
40 mp_a_x mul 288 moveto (4376 4583 4586 4984 6291) show
4 mp_a_x mul 276 moveto (7264 7297) show
40 mp_a_x mul 276 moveto (6311 7698 7979) show
0 264 moveto (SECS 6979) show
36 mp_a_x mul 264 moveto (spinlock 1401) show
4 mp_a_x mul 252 moveto (6979 7002) show
40 mp_a_x mul 252 moveto (0307 0416 0429 0431 0432) show
0 240 moveto (SECTOR_SIZE 4114) show
40 mp_a_x mul 240 moveto (0433 0465 1401 1459 1462) show
4 mp_a_x mul 228 moveto (4114 4181) show
40 mp_a_x mul 228 moveto (1474 1502 1544 2157 2161) show
0 216 moveto (SECTSIZE 8812) show
40 mp_a_x mul 216 moveto (2574 2859 2869 3108 3113) show
4 mp_a_x mul 204 moveto (8812 8873 8886 8889 8894) show
40 mp_a_x mul 204 moveto (4110 4127 4325 4330 4453) show
0 192 moveto (SEG 0819) show
40 mp_a_x mul 192 moveto (4488 4717 4863 5409 5413) show
4 mp_a_x mul 180 moveto (0819 1625 1626 1627 1628) show
40 mp_a_x mul 180 moveto (6207 6212 7458 7471 7806) show
4 mp_a_x mul 168 moveto (1631) show
36 mp_a_x mul 168 moveto (STA_R 0719 0836) show
0 156 moveto (SEG16 0823) show
40 mp_a_x mul 156 moveto (0719 0836 1228 1625 1627) show
4 mp_a_x mul 144 moveto (0823 1776) show
40 mp_a_x mul 144 moveto (8779) show
0 132 moveto (SEG_ASM 0710) show
36 mp_a_x mul 132 moveto (start 1175 7908 8711) show
4 mp_a_x mul 120 moveto (0710 1228 1229 8779 8780) show
40 mp_a_x mul 120 moveto (1174 1175 1205 1213 1215) show
0 108 moveto (segdesc 0802) show
40 mp_a_x mul 108 moveto (4489 4514 4527 4540 4556) show
4 mp_a_x mul 96 moveto (0559 0562 0802 0819 0823) show
40 mp_a_x mul 96 moveto (4638 4872 7907 7908 8710) show
4 mp_a_x mul 84 moveto (1611 2062) show
40 mp_a_x mul 84 moveto (8711 8762) show
0 72 moveto (seginit 1616) show
36 mp_a_x mul 72 moveto (startothers 1324) show
4 mp_a_x mul 60 moveto (0473 1273 1305 1616) show
40 mp_a_x mul 60 moveto (1258 1286 1324) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  cross-references  Page 12) show
0 648 moveto (stat 3904) show
40 mp_a_x mul 648 moveto (0426 2485 2530 2807 2808) show
4 mp_a_x mul 636 moveto (0308 0335 0354 3904 4714) show
36 mp_a_x mul 636 moveto (syscall 3503) show
4 mp_a_x mul 624 moveto (5137 5502 5609 5704 8003) show
40 mp_a_x mul 624 moveto (0456 3141 3307 3503) show
4 mp_a_x mul 612 moveto (8903) show
36 mp_a_x mul 612 moveto (SYSCALL 7953 7960 7961 7962 7963 79) show
0 600 moveto (stati 5137) show
40 mp_a_x mul 600 moveto (7960 7961 7962 7963 7964) show
4 mp_a_x mul 588 moveto (0354 5137 5506) show
40 mp_a_x mul 588 moveto (7965 7966 7967 7968 7969) show
0 576 moveto (STA_W 0718 0835) show
40 mp_a_x mul 576 moveto (7970 7971 7972 7973 7974) show
4 mp_a_x mul 564 moveto (0718 0835 1229 1626 1628) show
40 mp_a_x mul 564 moveto (7975 7976 7977 7978 7979) show
4 mp_a_x mul 552 moveto (1631 8780) show
40 mp_a_x mul 552 moveto (7980 7981 7982 7983 7984) show
0 540 moveto (STA_X 0715 0832) show
40 mp_a_x mul 540 moveto (7985 7986 7987 7988) show
4 mp_a_x mul 528 moveto (0715 0832 1228 1625 1627) show
36 mp_a_x mul 528 moveto (sys_chdir 5972) show
4 mp_a_x mul 516 moveto (8779) show
40 mp_a_x mul 516 moveto (3379 3420 5972) show
0 504 moveto (sti 0613) show
36 mp_a_x mul 504 moveto (SYS_chdir 3259) show
4 mp_a_x mul 492 moveto (0613 0615 1573 2466) show
40 mp_a_x mul 492 moveto (3259 3260 3420 3461) show
0 480 moveto (stosb 0542) show
36 mp_a_x mul 480 moveto (sys_close 5689) show
4 mp_a_x mul 468 moveto (0542 0544 6360 8840) show
40 mp_a_x mul 468 moveto (3380 3432 5689) show
0 456 moveto (stosl 0551) show
36 mp_a_x mul 456 moveto (SYS_close 3271) show
4 mp_a_x mul 444 moveto (0551 0553 6358) show
40 mp_a_x mul 444 moveto (3271 3272 3432 3473) show
0 432 moveto (strlen 6451) show
36 mp_a_x mul 432 moveto (sys_date 3661) show
4 mp_a_x mul 420 moveto (0442 6117 6118 6451 8230) show
40 mp_a_x mul 420 moveto (3401 3434 3661) show
4 mp_a_x mul 408 moveto (8233 8239 8253 8285 8323) show
36 mp_a_x mul 408 moveto (SYS_date 3274) show
4 mp_a_x mul 396 moveto (8523) show
40 mp_a_x mul 396 moveto (3274 3275 3434 3475) show
0 384 moveto (STRMAX 9050) show
36 mp_a_x mul 384 moveto (sys_dup 5651) show
4 mp_a_x mul 372 moveto (9050 9059 9061) show
40 mp_a_x mul 372 moveto (3381 3421 5651) show
0 360 moveto (strncmp 6408 8204) show
36 mp_a_x mul 360 moveto (SYS_dup 3260) show
4 mp_a_x mul 348 moveto (0443 5215 6408 8204 8231) show
40 mp_a_x mul 348 moveto (3260 3261 3421 3462) show
4 mp_a_x mul 336 moveto (8232 8234 8238 8240 8254) show
36 mp_a_x mul 336 moveto (sys_exec 6001) show
4 mp_a_x mul 324 moveto (8255 8259 8285) show
40 mp_a_x mul 324 moveto (3382 3418 6001) show
0 312 moveto (strncpy 6418) show
36 mp_a_x mul 312 moveto (SYS_exec 3257) show
4 mp_a_x mul 300 moveto (0444 5272 6418) show
40 mp_a_x mul 300 moveto (3257 3258 3418 3459 7912) show
0 288 moveto (STS_IG32 0850) show
36 mp_a_x mul 288 moveto (sys_exit 3567) show
4 mp_a_x mul 276 moveto (0850 0977) show
40 mp_a_x mul 276 moveto (3383 3413 3567) show
0 264 moveto (STS_T32A 0847) show
36 mp_a_x mul 264 moveto (SYS_exit 3252) show
4 mp_a_x mul 252 moveto (0847 1776) show
40 mp_a_x mul 252 moveto (3252 3253 3413 3454 7917) show
0 240 moveto (STS_TG32 0851) show
36 mp_a_x mul 240 moveto (sys_fork 3561) show
4 mp_a_x mul 228 moveto (0851 0977) show
40 mp_a_x mul 228 moveto (3384 3412 3561) show
0 216 moveto (sum 6626) show
36 mp_a_x mul 216 moveto (SYS_fork 3251) show
4 mp_a_x mul 204 moveto (6626 6628 6630 6632 6633) show
40 mp_a_x mul 204 moveto (3251 3252 3412 3453) show
4 mp_a_x mul 192 moveto (6645 6692) show
36 mp_a_x mul 192 moveto (sys_fstat 5701) show
0 180 moveto (superblock 3962) show
40 mp_a_x mul 180 moveto (3385 3419 5701) show
4 mp_a_x mul 168 moveto (0309 0339 3962 4511 4724) show
36 mp_a_x mul 168 moveto (SYS_fstat 3258) show
4 mp_a_x mul 156 moveto (4728) show
40 mp_a_x mul 156 moveto (3258 3259 3419 3460) show
0 144 moveto (SVR 6817) show
36 mp_a_x mul 144 moveto (sys_getgid 3709) show
4 mp_a_x mul 132 moveto (6817 6859) show
40 mp_a_x mul 132 moveto (3404 3437 3709) show
0 120 moveto (switchkvm 1766) show
36 mp_a_x mul 120 moveto (SYS_getgid 3276) show
4 mp_a_x mul 108 moveto (0485 1304 1760 1766 2486) show
40 mp_a_x mul 108 moveto (3276 3277 3437 3477) show
0 96 moveto (switchuvm 1773) show
36 mp_a_x mul 96 moveto (sys_getpid 3590) show
4 mp_a_x mul 84 moveto (0484 1773 1782 2279 2478) show
40 mp_a_x mul 84 moveto (3386 3422 3590) show
4 mp_a_x mul 72 moveto (6144) show
36 mp_a_x mul 72 moveto (SYS_getpid 3261) show
0 60 moveto (swtch 2808) show
40 mp_a_x mul 60 moveto (3261 3262 3422 3463) show
grestore
restore
showpage
%%Page: 8 8
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  cross-references  Page 13) show
0 648 moveto (sys_getppid 3716) show
36 mp_a_x mul 648 moveto (sys_setuid 3673) show
4 mp_a_x mul 636 moveto (3405 3438 3716) show
40 mp_a_x mul 636 moveto (3406 3439 3673) show
0 624 moveto (SYS_getppid 3277) show
36 mp_a_x mul 624 moveto (SYS_setuid 3278) show
4 mp_a_x mul 612 moveto (3277 3278 3438 3479) show
40 mp_a_x mul 612 moveto (3278 3279 3439 3481) show
0 600 moveto (sys_getprocs 3727) show
36 mp_a_x mul 600 moveto (sys_sleep 3615) show
4 mp_a_x mul 588 moveto (3408 3441 3727) show
40 mp_a_x mul 588 moveto (3395 3424 3615) show
0 576 moveto (SYS_getprocs 3280) show
36 mp_a_x mul 576 moveto (SYS_sleep 3263) show
4 mp_a_x mul 564 moveto (3280 3441 3482) show
40 mp_a_x mul 564 moveto (3263 3264 3424 3465) show
0 552 moveto (sys_getuid 3702) show
36 mp_a_x mul 552 moveto (sys_unlink 5778) show
4 mp_a_x mul 540 moveto (3403 3436 3702) show
40 mp_a_x mul 540 moveto (3396 3429 5778) show
0 528 moveto (SYS_getuid 3275) show
36 mp_a_x mul 528 moveto (SYS_unlink 3268) show
4 mp_a_x mul 516 moveto (3275 3276 3436 3478) show
40 mp_a_x mul 516 moveto (3268 3269 3429 3470) show
0 504 moveto (SYS_halt 3272) show
36 mp_a_x mul 504 moveto (sys_uptime 3638) show
4 mp_a_x mul 492 moveto (3272 3274 3433 3474) show
40 mp_a_x mul 492 moveto (3399 3425 3638) show
0 480 moveto (sys_kill 3580) show
36 mp_a_x mul 480 moveto (SYS_uptime 3264) show
4 mp_a_x mul 468 moveto (3387 3417 3580) show
40 mp_a_x mul 468 moveto (3264 3265 3425 3466) show
0 456 moveto (SYS_kill 3256) show
36 mp_a_x mul 456 moveto (sys_wait 3574) show
4 mp_a_x mul 444 moveto (3256 3257 3417 3458) show
40 mp_a_x mul 444 moveto (3397 3414 3574) show
0 432 moveto (sys_link 5713) show
36 mp_a_x mul 432 moveto (SYS_wait 3253) show
4 mp_a_x mul 420 moveto (3388 3430 5713) show
40 mp_a_x mul 420 moveto (3253 3254 3414 3455) show
0 408 moveto (SYS_link 3269) show
36 mp_a_x mul 408 moveto (sys_write 5677) show
4 mp_a_x mul 396 moveto (3269 3270 3430 3471) show
40 mp_a_x mul 396 moveto (3398 3427 5677) show
0 384 moveto (sys_mkdir 5930) show
36 mp_a_x mul 384 moveto (SYS_write 3266) show
4 mp_a_x mul 372 moveto (3389 3431 5930) show
40 mp_a_x mul 372 moveto (3266 3267 3427 3468) show
0 360 moveto (SYS_mkdir 3270) show
36 mp_a_x mul 360 moveto (taskstate 0901) show
4 mp_a_x mul 348 moveto (3270 3271 3431 3472) show
40 mp_a_x mul 348 moveto (0901 2061) show
0 336 moveto (sys_mknod 5951) show
36 mp_a_x mul 336 moveto (TDCR 6841) show
4 mp_a_x mul 324 moveto (3390 3428 5951) show
40 mp_a_x mul 324 moveto (6841 6865) show
0 312 moveto (SYS_mknod 3267) show
36 mp_a_x mul 312 moveto (T_DEV 3902) show
4 mp_a_x mul 300 moveto (3267 3268 3428 3469) show
40 mp_a_x mul 300 moveto (3902 5157 5184 5962 8908) show
0 288 moveto (sys_open 5880) show
36 mp_a_x mul 288 moveto (T_DIR 3900) show
4 mp_a_x mul 276 moveto (3391 3426 5880) show
40 mp_a_x mul 276 moveto (3900 5226 5335 5728 5806) show
0 264 moveto (SYS_open 3265) show
40 mp_a_x mul 264 moveto (5814 5863 5904 5936 5983) show
4 mp_a_x mul 252 moveto (3265 3266 3426 3467) show
40 mp_a_x mul 252 moveto (8906) show
0 240 moveto (sys_pipe 6027) show
36 mp_a_x mul 240 moveto (testgiduid 9106) show
4 mp_a_x mul 228 moveto (3392 3415 6027) show
40 mp_a_x mul 228 moveto (9106 9134) show
0 216 moveto (SYS_pipe 3254) show
36 mp_a_x mul 216 moveto (T_FILE 3901) show
4 mp_a_x mul 204 moveto (3254 3255 3415 3456) show
40 mp_a_x mul 204 moveto (3901 5848 5893 8907) show
0 192 moveto (sys_read 5665) show
36 mp_a_x mul 192 moveto (ticks 3114) show
4 mp_a_x mul 180 moveto (3393 3416 5665) show
40 mp_a_x mul 180 moveto (0463 2222 2482 2526 2657) show
0 168 moveto (SYS_read 3255) show
40 mp_a_x mul 168 moveto (2741 3114 3151 3153 3623) show
4 mp_a_x mul 156 moveto (3255 3256 3416 3457) show
40 mp_a_x mul 156 moveto (3624 3629 3643) show
0 144 moveto (sys_sbrk 3601) show
36 mp_a_x mul 144 moveto (tickslock 3113) show
4 mp_a_x mul 132 moveto (3394 3423 3601) show
40 mp_a_x mul 132 moveto (0465 2221 2223 2481 2483) show
0 120 moveto (SYS_sbrk 3262) show
40 mp_a_x mul 120 moveto (2525 2527 2740 2743 3113) show
4 mp_a_x mul 108 moveto (3262 3263 3423 3464) show
40 mp_a_x mul 108 moveto (3125 3150 3152 3622 3626) show
0 96 moveto (sys_setgid 3686) show
40 mp_a_x mul 96 moveto (3629 3631 3642 3644) show
4 mp_a_x mul 84 moveto (3407 3440 3686) show
36 mp_a_x mul 84 moveto (TICR 6839) show
0 72 moveto (SYS_setgid 3279) show
40 mp_a_x mul 72 moveto (6839 6867) show
4 mp_a_x mul 60 moveto (3279 3280 3440 3480) show
36 mp_a_x mul 60 moveto (TIMER 6831) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  cross-references  Page 14) show
4 mp_a_x mul 648 moveto (6831 6866) show
40 mp_a_x mul 648 moveto (0470 7623 7625 7847 7851) show
0 636 moveto (TIMER_16BIT 7771) show
36 mp_a_x mul 636 moveto (uproc 9052) show
4 mp_a_x mul 624 moveto (7771 7777) show
40 mp_a_x mul 624 moveto (0311 0422 2158 2713 3558) show
0 612 moveto (TIMER_DIV 7766) show
40 mp_a_x mul 612 moveto (3730 9052 9151 9161 9162) show
4 mp_a_x mul 600 moveto (7766 7778 7779) show
36 mp_a_x mul 600 moveto (userinit 2232) show
0 588 moveto (TIMER_FREQ 7765) show
40 mp_a_x mul 588 moveto (0417 1288 2232 2240) show
4 mp_a_x mul 576 moveto (7765 7766) show
36 mp_a_x mul 576 moveto (uva2ka 1984) show
0 564 moveto (timerinit 7774) show
40 mp_a_x mul 564 moveto (0477 1984 2012) show
4 mp_a_x mul 552 moveto (0459 1285 7774) show
36 mp_a_x mul 552 moveto (V2P 0217) show
0 540 moveto (TIMER_MODE 7768) show
40 mp_a_x mul 540 moveto (0217 1730 1731) show
4 mp_a_x mul 528 moveto (7768 7777) show
36 mp_a_x mul 528 moveto (V2P_WO 0220) show
0 516 moveto (TIMER_RATEGEN 7770) show
40 mp_a_x mul 516 moveto (0220 1086 1096) show
4 mp_a_x mul 504 moveto (7770 7777) show
36 mp_a_x mul 504 moveto (VER 6814) show
0 492 moveto (TIMER_SEL0 7769) show
40 mp_a_x mul 492 moveto (6814 6875) show
4 mp_a_x mul 480 moveto (7769 7777) show
36 mp_a_x mul 480 moveto (wait 2403) show
0 468 moveto (T_IRQ0 2979) show
40 mp_a_x mul 468 moveto (0418 2403 3455 3576 7962) show
4 mp_a_x mul 456 moveto (2979 3148 3157 3161 3164) show
40 mp_a_x mul 456 moveto (8033 8149 8173 8174 8336) show
4 mp_a_x mul 444 moveto (3168 3172 3173 3202 6859) show
40 mp_a_x mul 444 moveto (9214) show
4 mp_a_x mul 432 moveto (6866 6879 7117 7131 7197) show
36 mp_a_x mul 432 moveto (waitdisk 8851) show
4 mp_a_x mul 420 moveto (7216) show
40 mp_a_x mul 420 moveto (8851 8863 8872) show
0 408 moveto (TPR 6815) show
36 mp_a_x mul 408 moveto (wakeup 2621) show
4 mp_a_x mul 396 moveto (6815 6895) show
40 mp_a_x mul 396 moveto (0419 2621 3153 4222 4441) show
0 384 moveto (trap 3135) show
40 mp_a_x mul 384 moveto (4616 4626 5013 5039 6266) show
4 mp_a_x mul 372 moveto (3002 3004 3072 3135 3182) show
40 mp_a_x mul 372 moveto (6269 6290 6295 6318 7670) show
4 mp_a_x mul 360 moveto (3184 3187) show
36 mp_a_x mul 360 moveto (wakeup1 2610) show
0 348 moveto (trapframe 0652) show
40 mp_a_x mul 348 moveto (2171 2378 2385 2610 2624) show
4 mp_a_x mul 336 moveto (0652 2114 2209 3135) show
36 mp_a_x mul 336 moveto (walkpgdir 1654) show
0 324 moveto (trapret 3077) show
40 mp_a_x mul 324 moveto (1654 1687 1826 1892 1933) show
4 mp_a_x mul 312 moveto (2169 2214 3076 3077) show
40 mp_a_x mul 312 moveto (1963 1988) show
0 300 moveto (T_SYSCALL 2976) show
36 mp_a_x mul 300 moveto (write_head 4554) show
4 mp_a_x mul 288 moveto (2976 3123 3137 7913 7918) show
40 mp_a_x mul 288 moveto (4554 4573 4655 4658) show
4 mp_a_x mul 276 moveto (7957) show
36 mp_a_x mul 276 moveto (writei 5179) show
0 264 moveto (tvinit 3117) show
40 mp_a_x mul 264 moveto (0355 5179 5274 5559 5812) show
4 mp_a_x mul 252 moveto (0464 1280 3117) show
40 mp_a_x mul 252 moveto (5813) show
0 240 moveto (uart 7815) show
36 mp_a_x mul 240 moveto (write_log 4633) show
4 mp_a_x mul 228 moveto (7815 7836 7855 7865) show
40 mp_a_x mul 228 moveto (4633 4654) show
0 216 moveto (uartgetc 7863) show
36 mp_a_x mul 216 moveto (xchg 0619) show
4 mp_a_x mul 204 moveto (7863 7875) show
40 mp_a_x mul 204 moveto (0619 1316 1483 1519) show
0 192 moveto (uartinit 7818) show
36 mp_a_x mul 192 moveto (YEAR 6984) show
4 mp_a_x mul 180 moveto (0468 1278 7818) show
40 mp_a_x mul 180 moveto (6984 7007) show
0 168 moveto (uartintr 7873) show
36 mp_a_x mul 168 moveto (yield 2536) show
4 mp_a_x mul 156 moveto (0469 3169 7873) show
40 mp_a_x mul 156 moveto (0420 2536 3203) show
0 144 moveto (uartputc 7851) show
grestore
restore
showpage
%%Page: 9 9
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/types.h  Page 1) show
0 648 moveto (0100 typedef unsigned int   uint;) show
0 636 moveto (0101 typedef unsigned short ushort;) show
0 624 moveto (0102 typedef unsigned char  uchar;) show
0 612 moveto (0103 typedef uint pde_t;) show
0 600 moveto (0104 ) show
0 588 moveto (0105 ) show
0 576 moveto (0106 ) show
0 564 moveto (0107 ) show
0 552 moveto (0108 ) show
0 540 moveto (0109 ) show
0 528 moveto (0110 ) show
0 516 moveto (0111 ) show
0 504 moveto (0112 ) show
0 492 moveto (0113 ) show
0 480 moveto (0114 ) show
0 468 moveto (0115 ) show
0 456 moveto (0116 ) show
0 444 moveto (0117 ) show
0 432 moveto (0118 ) show
0 420 moveto (0119 ) show
0 408 moveto (0120 ) show
0 396 moveto (0121 ) show
0 384 moveto (0122 ) show
0 372 moveto (0123 ) show
0 360 moveto (0124 ) show
0 348 moveto (0125 ) show
0 336 moveto (0126 ) show
0 324 moveto (0127 ) show
0 312 moveto (0128 ) show
0 300 moveto (0129 ) show
0 288 moveto (0130 ) show
0 276 moveto (0131 ) show
0 264 moveto (0132 ) show
0 252 moveto (0133 ) show
0 240 moveto (0134 ) show
0 228 moveto (0135 ) show
0 216 moveto (0136 ) show
0 204 moveto (0137 ) show
0 192 moveto (0138 ) show
0 180 moveto (0139 ) show
0 168 moveto (0140 ) show
0 156 moveto (0141 ) show
0 144 moveto (0142 ) show
0 132 moveto (0143 ) show
0 120 moveto (0144 ) show
0 108 moveto (0145 ) show
0 96 moveto (0146 ) show
0 84 moveto (0147 ) show
0 72 moveto (0148 ) show
0 60 moveto (0149 ) show
0 24 moveto (Sheet 01) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/param.h  Page 1) show
0 648 moveto (0150 #define NPROC        64  // maximum number of processes) show
0 636 moveto (0151 #define KSTACKSIZE 4096  // size of per-process kernel stack) show
0 624 moveto (0152 #define NCPU          8  // maximum number of CPUs) show
0 612 moveto (0153 #define NOFILE       16  // open files per process) show
0 600 moveto (0154 #define NFILE       100  // open files per system) show
0 588 moveto (0155 #define NINODE       50  // maximum number of active i-nodes) show
0 576 moveto (0156 #define NDEV         10  // maximum major device number) show
0 564 moveto (0157 #define ROOTDEV       1  // device number of file system root disk) show
0 552 moveto (0158 #define MAXARG       32  // max exec arguments) show
0 540 moveto (0159 #define MAXOPBLOCKS  10  // max # of blocks any FS op writes) show
0 528 moveto (0160 #define LOGSIZE      \(MAXOPBLOCKS*3\)  // max data blocks in on-disk log) show
0 516 moveto (0161 #define NBUF         \(MAXOPBLOCKS*3\)  // size of disk block cache) show
0 504 moveto (0162 #define FSSIZE       1000  // size of file system in blocks) show
0 492 moveto (0163 ) show
0 480 moveto (0164 ) show
0 468 moveto (0165 ) show
0 456 moveto (0166 ) show
0 444 moveto (0167 ) show
0 432 moveto (0168 ) show
0 420 moveto (0169 ) show
0 408 moveto (0170 ) show
0 396 moveto (0171 ) show
0 384 moveto (0172 ) show
0 372 moveto (0173 ) show
0 360 moveto (0174 ) show
0 348 moveto (0175 ) show
0 336 moveto (0176 ) show
0 324 moveto (0177 ) show
0 312 moveto (0178 ) show
0 300 moveto (0179 ) show
0 288 moveto (0180 ) show
0 276 moveto (0181 ) show
0 264 moveto (0182 ) show
0 252 moveto (0183 ) show
0 240 moveto (0184 ) show
0 228 moveto (0185 ) show
0 216 moveto (0186 ) show
0 204 moveto (0187 ) show
0 192 moveto (0188 ) show
0 180 moveto (0189 ) show
0 168 moveto (0190 ) show
0 156 moveto (0191 ) show
0 144 moveto (0192 ) show
0 132 moveto (0193 ) show
0 120 moveto (0194 ) show
0 108 moveto (0195 ) show
0 96 moveto (0196 ) show
0 84 moveto (0197 ) show
0 72 moveto (0198 ) show
0 60 moveto (0199 ) show
0 24 moveto (Sheet 01) show
grestore
restore
showpage
%%Page: 10 10
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/memlayout.h  Page 1) show
0 648 moveto (0200 // Memory layout) show
0 636 moveto (0201 ) show
0 624 moveto (0202 #define EXTMEM  0x100000            // Start of extended memory) show
0 612 moveto (0203 #define PHYSTOP 0xE000000           // Top physical memory) show
0 600 moveto (0204 #define DEVSPACE 0xFE000000         // Other devices are at high addresses) show
0 588 moveto (0205 ) show
0 576 moveto (0206 // Key addresses for address space layout \(see kmap in vm.c for layout\)) show
0 564 moveto (0207 #define KERNBASE 0x80000000         // First kernel virtual address) show
0 552 moveto (0208 #define KERNLINK \(KERNBASE+EXTMEM\)  // Address where kernel is linked) show
0 540 moveto (0209 ) show
0 528 moveto (0210 #ifndef __ASSEMBLER__) show
0 516 moveto (0211 ) show
0 504 moveto (0212 static inline uint v2p\(void *a\) { return \(\(uint\) \(a\)\)  - KERNBASE; }) show
0 492 moveto (0213 static inline void *p2v\(uint a\) { return \(void *\) \(\(a\) + KERNBASE\); }) show
0 480 moveto (0214 ) show
0 468 moveto (0215 #endif) show
0 456 moveto (0216 ) show
0 444 moveto (0217 #define V2P\(a\) \(\(\(uint\) \(a\)\) - KERNBASE\)) show
0 432 moveto (0218 #define P2V\(a\) \(\(\(void *\) \(a\)\) + KERNBASE\)) show
0 420 moveto (0219 ) show
0 408 moveto (0220 #define V2P_WO\(x\) \(\(x\) - KERNBASE\)    // same as V2P, but without casts) show
0 396 moveto (0221 #define P2V_WO\(x\) \(\(x\) + KERNBASE\)    // same as P2V, but without casts) show
0 384 moveto (0222 ) show
0 372 moveto (0223 ) show
0 360 moveto (0224 ) show
0 348 moveto (0225 ) show
0 336 moveto (0226 ) show
0 324 moveto (0227 ) show
0 312 moveto (0228 ) show
0 300 moveto (0229 ) show
0 288 moveto (0230 ) show
0 276 moveto (0231 ) show
0 264 moveto (0232 ) show
0 252 moveto (0233 ) show
0 240 moveto (0234 ) show
0 228 moveto (0235 ) show
0 216 moveto (0236 ) show
0 204 moveto (0237 ) show
0 192 moveto (0238 ) show
0 180 moveto (0239 ) show
0 168 moveto (0240 ) show
0 156 moveto (0241 ) show
0 144 moveto (0242 ) show
0 132 moveto (0243 ) show
0 120 moveto (0244 ) show
0 108 moveto (0245 ) show
0 96 moveto (0246 ) show
0 84 moveto (0247 ) show
0 72 moveto (0248 ) show
0 60 moveto (0249 ) show
0 24 moveto (Sheet 02) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/date.h  Page 1) show
0 648 moveto (0250 struct rtcdate {) show
0 636 moveto (0251   uint second;) show
0 624 moveto (0252   uint minute;) show
0 612 moveto (0253   uint hour;) show
0 600 moveto (0254   uint day;) show
0 588 moveto (0255   uint month;) show
0 576 moveto (0256   uint year;) show
0 564 moveto (0257 };) show
0 552 moveto (0258 ) show
0 540 moveto (0259 ) show
0 528 moveto (0260 ) show
0 516 moveto (0261 ) show
0 504 moveto (0262 ) show
0 492 moveto (0263 ) show
0 480 moveto (0264 ) show
0 468 moveto (0265 ) show
0 456 moveto (0266 ) show
0 444 moveto (0267 ) show
0 432 moveto (0268 ) show
0 420 moveto (0269 ) show
0 408 moveto (0270 ) show
0 396 moveto (0271 ) show
0 384 moveto (0272 ) show
0 372 moveto (0273 ) show
0 360 moveto (0274 ) show
0 348 moveto (0275 ) show
0 336 moveto (0276 ) show
0 324 moveto (0277 ) show
0 312 moveto (0278 ) show
0 300 moveto (0279 ) show
0 288 moveto (0280 ) show
0 276 moveto (0281 ) show
0 264 moveto (0282 ) show
0 252 moveto (0283 ) show
0 240 moveto (0284 ) show
0 228 moveto (0285 ) show
0 216 moveto (0286 ) show
0 204 moveto (0287 ) show
0 192 moveto (0288 ) show
0 180 moveto (0289 ) show
0 168 moveto (0290 ) show
0 156 moveto (0291 ) show
0 144 moveto (0292 ) show
0 132 moveto (0293 ) show
0 120 moveto (0294 ) show
0 108 moveto (0295 ) show
0 96 moveto (0296 ) show
0 84 moveto (0297 ) show
0 72 moveto (0298 ) show
0 60 moveto (0299 ) show
0 24 moveto (Sheet 02) show
grestore
restore
showpage
%%Page: 11 11
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/defs.h  Page 1) show
0 648 moveto (0300 struct buf;) show
0 636 moveto (0301 struct context;) show
0 624 moveto (0302 struct file;) show
0 612 moveto (0303 struct inode;) show
0 600 moveto (0304 struct pipe;) show
0 588 moveto (0305 struct proc;) show
0 576 moveto (0306 struct rtcdate;) show
0 564 moveto (0307 struct spinlock;) show
0 552 moveto (0308 struct stat;) show
0 540 moveto (0309 struct superblock;) show
0 528 moveto (0310 #ifdef CS333_P2) show
0 516 moveto (0311 struct uproc;) show
0 504 moveto (0312 #endif) show
0 492 moveto (0313 ) show
0 480 moveto (0314 ) show
0 468 moveto (0315 // bio.c) show
0 456 moveto (0316 void            binit\(void\);) show
0 444 moveto (0317 struct buf*     bread\(uint, uint\);) show
0 432 moveto (0318 void            brelse\(struct buf*\);) show
0 420 moveto (0319 void            bwrite\(struct buf*\);) show
0 408 moveto (0320 // console.c) show
0 396 moveto (0321 void            consoleinit\(void\);) show
0 384 moveto (0322 void            cprintf\(char*, ...\);) show
0 372 moveto (0323 void            consoleintr\(int\(*\)\(void\)\);) show
0 360 moveto (0324 void            panic\(char*\) __attribute__\(\(noreturn\)\);) show
0 348 moveto (0325 ) show
0 336 moveto (0326 // exec.c) show
0 324 moveto (0327 int             exec\(char*, char**\);) show
0 312 moveto (0328 ) show
0 300 moveto (0329 // file.c) show
0 288 moveto (0330 struct file*    filealloc\(void\);) show
0 276 moveto (0331 void            fileclose\(struct file*\);) show
0 264 moveto (0332 struct file*    filedup\(struct file*\);) show
0 252 moveto (0333 void            fileinit\(void\);) show
0 240 moveto (0334 int             fileread\(struct file*, char*, int n\);) show
0 228 moveto (0335 int             filestat\(struct file*, struct stat*\);) show
0 216 moveto (0336 int             filewrite\(struct file*, char*, int n\);) show
0 204 moveto (0337 ) show
0 192 moveto (0338 // fs.c) show
0 180 moveto (0339 void            readsb\(int dev, struct superblock *sb\);) show
0 168 moveto (0340 int             dirlink\(struct inode*, char*, uint\);) show
0 156 moveto (0341 struct inode*   dirlookup\(struct inode*, char*, uint*\);) show
0 144 moveto (0342 struct inode*   ialloc\(uint, short\);) show
0 132 moveto (0343 struct inode*   idup\(struct inode*\);) show
0 120 moveto (0344 void            iinit\(int dev\);) show
0 108 moveto (0345 void            ilock\(struct inode*\);) show
0 96 moveto (0346 void            iput\(struct inode*\);) show
0 84 moveto (0347 void            iunlock\(struct inode*\);) show
0 72 moveto (0348 void            iunlockput\(struct inode*\);) show
0 60 moveto (0349 void            iupdate\(struct inode*\);) show
0 24 moveto (Sheet 03) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/defs.h  Page 2) show
0 648 moveto (0350 int             namecmp\(const char*, const char*\);) show
0 636 moveto (0351 struct inode*   namei\(char*\);) show
0 624 moveto (0352 struct inode*   nameiparent\(char*, char*\);) show
0 612 moveto (0353 int             readi\(struct inode*, char*, uint, uint\);) show
0 600 moveto (0354 void            stati\(struct inode*, struct stat*\);) show
0 588 moveto (0355 int             writei\(struct inode*, char*, uint, uint\);) show
0 576 moveto (0356 ) show
0 564 moveto (0357 // ide.c) show
0 552 moveto (0358 void            ideinit\(void\);) show
0 540 moveto (0359 void            ideintr\(void\);) show
0 528 moveto (0360 void            iderw\(struct buf*\);) show
0 516 moveto (0361 ) show
0 504 moveto (0362 // ioapic.c) show
0 492 moveto (0363 void            ioapicenable\(int irq, int cpu\);) show
0 480 moveto (0364 extern uchar    ioapicid;) show
0 468 moveto (0365 void            ioapicinit\(void\);) show
0 456 moveto (0366 ) show
0 444 moveto (0367 // kalloc.c) show
0 432 moveto (0368 char*           kalloc\(void\);) show
0 420 moveto (0369 void            kfree\(char*\);) show
0 408 moveto (0370 void            kinit1\(void*, void*\);) show
0 396 moveto (0371 void            kinit2\(void*, void*\);) show
0 384 moveto (0372 ) show
0 372 moveto (0373 // kbd.c) show
0 360 moveto (0374 void            kbdintr\(void\);) show
0 348 moveto (0375 ) show
0 336 moveto (0376 // lapic.c) show
0 324 moveto (0377 void            cmostime\(struct rtcdate *r\);) show
0 312 moveto (0378 int             cpunum\(void\);) show
0 300 moveto (0379 extern volatile uint*    lapic;) show
0 288 moveto (0380 void            lapiceoi\(void\);) show
0 276 moveto (0381 void            lapicinit\(void\);) show
0 264 moveto (0382 void            lapicstartap\(uchar, uint\);) show
0 252 moveto (0383 void            microdelay\(int\);) show
0 240 moveto (0384 ) show
0 228 moveto (0385 // log.c) show
0 216 moveto (0386 void            initlog\(int dev\);) show
0 204 moveto (0387 void            log_write\(struct buf*\);) show
0 192 moveto (0388 void            begin_op\(\);) show
0 180 moveto (0389 void            end_op\(\);) show
0 168 moveto (0390 ) show
0 156 moveto (0391 // mp.c) show
0 144 moveto (0392 extern int      ismp;) show
0 132 moveto (0393 int             mpbcpu\(void\);) show
0 120 moveto (0394 void            mpinit\(void\);) show
0 108 moveto (0395 void            mpstartthem\(void\);) show
0 96 moveto (0396 ) show
0 84 moveto (0397 // picirq.c) show
0 72 moveto (0398 void            picenable\(int\);) show
0 60 moveto (0399 void            picinit\(void\);) show
0 24 moveto (Sheet 03) show
grestore
restore
showpage
%%Page: 12 12
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/defs.h  Page 3) show
0 648 moveto (0400 // pipe.c) show
0 636 moveto (0401 int             pipealloc\(struct file**, struct file**\);) show
0 624 moveto (0402 void            pipeclose\(struct pipe*, int\);) show
0 612 moveto (0403 int             piperead\(struct pipe*, char*, int\);) show
0 600 moveto (0404 int             pipewrite\(struct pipe*, char*, int\);) show
0 588 moveto (0405 ) show
0 576 moveto (0406 // proc.c) show
0 564 moveto (0407 struct proc*    copyproc\(struct proc*\);) show
0 552 moveto (0408 void            exit\(void\);) show
0 540 moveto (0409 int             fork\(void\);) show
0 528 moveto (0410 int             growproc\(int\);) show
0 516 moveto (0411 int             kill\(int\);) show
0 504 moveto (0412 void            pinit\(void\);) show
0 492 moveto (0413 void            procdump\(void\);) show
0 480 moveto (0414 void            scheduler\(void\) __attribute__\(\(noreturn\)\);) show
0 468 moveto (0415 void            sched\(void\);) show
0 456 moveto (0416 void            sleep\(void*, struct spinlock*\);) show
0 444 moveto (0417 void            userinit\(void\);) show
0 432 moveto (0418 int             wait\(void\);) show
0 420 moveto (0419 void            wakeup\(void*\);) show
0 408 moveto (0420 void            yield\(void\);) show
0 396 moveto (0421 #ifdef CS333_P2) show
0 384 moveto (0422 int) show
64 mp_a_x mul 384 moveto (getprocs\(uint max, struct uproc*\);) show
0 372 moveto (0423 #endif) show
0 360 moveto (0424 ) show
0 348 moveto (0425 // swtch.S) show
0 336 moveto (0426 void            swtch\(struct context**, struct context*\);) show
0 324 moveto (0427 ) show
0 312 moveto (0428 // spinlock.c) show
0 300 moveto (0429 void            acquire\(struct spinlock*\);) show
0 288 moveto (0430 void            getcallerpcs\(void*, uint*\);) show
0 276 moveto (0431 int             holding\(struct spinlock*\);) show
0 264 moveto (0432 void            initlock\(struct spinlock*, char*\);) show
0 252 moveto (0433 void            release\(struct spinlock*\);) show
0 240 moveto (0434 void            pushcli\(void\);) show
0 228 moveto (0435 void            popcli\(void\);) show
0 216 moveto (0436 ) show
0 204 moveto (0437 // string.c) show
0 192 moveto (0438 int             memcmp\(const void*, const void*, uint\);) show
0 180 moveto (0439 void*           memmove\(void*, const void*, uint\);) show
0 168 moveto (0440 void*           memset\(void*, int, uint\);) show
0 156 moveto (0441 char*           safestrcpy\(char*, const char*, int\);) show
0 144 moveto (0442 int             strlen\(const char*\);) show
0 132 moveto (0443 int             strncmp\(const char*, const char*, uint\);) show
0 120 moveto (0444 char*           strncpy\(char*, const char*, int\);) show
0 108 moveto (0445 ) show
0 96 moveto (0446 ) show
0 84 moveto (0447 ) show
0 72 moveto (0448 ) show
0 60 moveto (0449 ) show
0 24 moveto (Sheet 04) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/defs.h  Page 4) show
0 648 moveto (0450 // syscall.c) show
0 636 moveto (0451 int             argint\(int, int*\);) show
0 624 moveto (0452 int             argptr\(int, char**, int\);) show
0 612 moveto (0453 int             argstr\(int, char**\);) show
0 600 moveto (0454 int             fetchint\(uint, int*\);) show
0 588 moveto (0455 int             fetchstr\(uint, char**\);) show
0 576 moveto (0456 void            syscall\(void\);) show
0 564 moveto (0457 ) show
0 552 moveto (0458 // timer.c) show
0 540 moveto (0459 void            timerinit\(void\);) show
0 528 moveto (0460 ) show
0 516 moveto (0461 // trap.c) show
0 504 moveto (0462 void            idtinit\(void\);) show
0 492 moveto (0463 extern uint     ticks;) show
0 480 moveto (0464 void            tvinit\(void\);) show
0 468 moveto (0465 extern struct spinlock tickslock;) show
0 456 moveto (0466 ) show
0 444 moveto (0467 // uart.c) show
0 432 moveto (0468 void            uartinit\(void\);) show
0 420 moveto (0469 void            uartintr\(void\);) show
0 408 moveto (0470 void            uartputc\(int\);) show
0 396 moveto (0471 ) show
0 384 moveto (0472 // vm.c) show
0 372 moveto (0473 void            seginit\(void\);) show
0 360 moveto (0474 void            kvmalloc\(void\);) show
0 348 moveto (0475 void            vmenable\(void\);) show
0 336 moveto (0476 pde_t*          setupkvm\(void\);) show
0 324 moveto (0477 char*           uva2ka\(pde_t*, char*\);) show
0 312 moveto (0478 int             allocuvm\(pde_t*, uint, uint\);) show
0 300 moveto (0479 int             deallocuvm\(pde_t*, uint, uint\);) show
0 288 moveto (0480 void            freevm\(pde_t*\);) show
0 276 moveto (0481 void            inituvm\(pde_t*, char*, uint\);) show
0 264 moveto (0482 int             loaduvm\(pde_t*, char*, struct inode*, uint, uint\);) show
0 252 moveto (0483 pde_t*          copyuvm\(pde_t*, uint\);) show
0 240 moveto (0484 void            switchuvm\(struct proc*\);) show
0 228 moveto (0485 void            switchkvm\(void\);) show
0 216 moveto (0486 int             copyout\(pde_t*, uint, void*, uint\);) show
0 204 moveto (0487 void            clearpteu\(pde_t *pgdir, char *uva\);) show
0 192 moveto (0488 ) show
0 180 moveto (0489 // number of elements in fixed-size array) show
0 168 moveto (0490 #define NELEM\(x\) \(sizeof\(x\)/sizeof\(\(x\)[0]\)\)) show
0 156 moveto (0491 ) show
0 144 moveto (0492 ) show
0 132 moveto (0493 ) show
0 120 moveto (0494 ) show
0 108 moveto (0495 ) show
0 96 moveto (0496 ) show
0 84 moveto (0497 ) show
0 72 moveto (0498 ) show
0 60 moveto (0499 ) show
0 24 moveto (Sheet 04) show
grestore
restore
showpage
%%Page: 13 13
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/x86.h  Page 1) show
0 648 moveto (0500 // Routines to let C code use special x86 instructions.) show
0 636 moveto (0501 ) show
0 624 moveto (0502 static inline uchar) show
0 612 moveto (0503 inb\(ushort port\)) show
0 600 moveto (0504 {) show
0 588 moveto (0505   uchar data;) show
0 576 moveto (0506 ) show
0 564 moveto (0507   asm volatile\("in %1,%0" : "=a" \(data\) : "d" \(port\)\);) show
0 552 moveto (0508   return data;) show
0 540 moveto (0509 }) show
0 528 moveto (0510 ) show
0 516 moveto (0511 static inline void) show
0 504 moveto (0512 insl\(int port, void *addr, int cnt\)) show
0 492 moveto (0513 {) show
0 480 moveto (0514   asm volatile\("cld; rep insl" :) show
0 468 moveto (0515                "=D" \(addr\), "=c" \(cnt\) :) show
0 456 moveto (0516                "d" \(port\), "0" \(addr\), "1" \(cnt\) :) show
0 444 moveto (0517                "memory", "cc"\);) show
0 432 moveto (0518 }) show
0 420 moveto (0519 ) show
0 408 moveto (0520 static inline void) show
0 396 moveto (0521 outb\(ushort port, uchar data\)) show
0 384 moveto (0522 {) show
0 372 moveto (0523   asm volatile\("out %0,%1" : : "a" \(data\), "d" \(port\)\);) show
0 360 moveto (0524 }) show
0 348 moveto (0525 ) show
0 336 moveto (0526 static inline void) show
0 324 moveto (0527 outw\(ushort port, ushort data\)) show
0 312 moveto (0528 {) show
0 300 moveto (0529   asm volatile\("out %0,%1" : : "a" \(data\), "d" \(port\)\);) show
0 288 moveto (0530 }) show
0 276 moveto (0531 ) show
0 264 moveto (0532 static inline void) show
0 252 moveto (0533 outsl\(int port, const void *addr, int cnt\)) show
0 240 moveto (0534 {) show
0 228 moveto (0535   asm volatile\("cld; rep outsl" :) show
0 216 moveto (0536                "=S" \(addr\), "=c" \(cnt\) :) show
0 204 moveto (0537                "d" \(port\), "0" \(addr\), "1" \(cnt\) :) show
0 192 moveto (0538                "cc"\);) show
0 180 moveto (0539 }) show
0 168 moveto (0540 ) show
0 156 moveto (0541 static inline void) show
0 144 moveto (0542 stosb\(void *addr, int data, int cnt\)) show
0 132 moveto (0543 {) show
0 120 moveto (0544   asm volatile\("cld; rep stosb" :) show
0 108 moveto (0545                "=D" \(addr\), "=c" \(cnt\) :) show
0 96 moveto (0546                "0" \(addr\), "1" \(cnt\), "a" \(data\) :) show
0 84 moveto (0547                "memory", "cc"\);) show
0 72 moveto (0548 }) show
0 60 moveto (0549 ) show
0 24 moveto (Sheet 05) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/x86.h  Page 2) show
0 648 moveto (0550 static inline void) show
0 636 moveto (0551 stosl\(void *addr, int data, int cnt\)) show
0 624 moveto (0552 {) show
0 612 moveto (0553   asm volatile\("cld; rep stosl" :) show
0 600 moveto (0554                "=D" \(addr\), "=c" \(cnt\) :) show
0 588 moveto (0555                "0" \(addr\), "1" \(cnt\), "a" \(data\) :) show
0 576 moveto (0556                "memory", "cc"\);) show
0 564 moveto (0557 }) show
0 552 moveto (0558 ) show
0 540 moveto (0559 struct segdesc;) show
0 528 moveto (0560 ) show
0 516 moveto (0561 static inline void) show
0 504 moveto (0562 lgdt\(struct segdesc *p, int size\)) show
0 492 moveto (0563 {) show
0 480 moveto (0564   volatile ushort pd[3];) show
0 468 moveto (0565 ) show
0 456 moveto (0566   pd[0] = size-1;) show
0 444 moveto (0567   pd[1] = \(uint\)p;) show
0 432 moveto (0568   pd[2] = \(uint\)p >> 16;) show
0 420 moveto (0569 ) show
0 408 moveto (0570   asm volatile\("lgdt \(%0\)" : : "r" \(pd\)\);) show
0 396 moveto (0571 }) show
0 384 moveto (0572 ) show
0 372 moveto (0573 struct gatedesc;) show
0 360 moveto (0574 ) show
0 348 moveto (0575 static inline void) show
0 336 moveto (0576 lidt\(struct gatedesc *p, int size\)) show
0 324 moveto (0577 {) show
0 312 moveto (0578   volatile ushort pd[3];) show
0 300 moveto (0579 ) show
0 288 moveto (0580   pd[0] = size-1;) show
0 276 moveto (0581   pd[1] = \(uint\)p;) show
0 264 moveto (0582   pd[2] = \(uint\)p >> 16;) show
0 252 moveto (0583 ) show
0 240 moveto (0584   asm volatile\("lidt \(%0\)" : : "r" \(pd\)\);) show
0 228 moveto (0585 }) show
0 216 moveto (0586 ) show
0 204 moveto (0587 static inline void) show
0 192 moveto (0588 ltr\(ushort sel\)) show
0 180 moveto (0589 {) show
0 168 moveto (0590   asm volatile\("ltr %0" : : "r" \(sel\)\);) show
0 156 moveto (0591 }) show
0 144 moveto (0592 ) show
0 132 moveto (0593 static inline uint) show
0 120 moveto (0594 readeflags\(void\)) show
0 108 moveto (0595 {) show
0 96 moveto (0596   uint eflags;) show
0 84 moveto (0597   asm volatile\("pushfl; popl %0" : "=r" \(eflags\)\);) show
0 72 moveto (0598   return eflags;) show
0 60 moveto (0599 }) show
0 24 moveto (Sheet 05) show
grestore
restore
showpage
%%Page: 14 14
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/x86.h  Page 3) show
0 648 moveto (0600 static inline void) show
0 636 moveto (0601 loadgs\(ushort v\)) show
0 624 moveto (0602 {) show
0 612 moveto (0603   asm volatile\("movw %0, %%gs" : : "r" \(v\)\);) show
0 600 moveto (0604 }) show
0 588 moveto (0605 ) show
0 576 moveto (0606 static inline void) show
0 564 moveto (0607 cli\(void\)) show
0 552 moveto (0608 {) show
0 540 moveto (0609   asm volatile\("cli"\);) show
0 528 moveto (0610 }) show
0 516 moveto (0611 ) show
0 504 moveto (0612 static inline void) show
0 492 moveto (0613 sti\(void\)) show
0 480 moveto (0614 {) show
0 468 moveto (0615   asm volatile\("sti"\);) show
0 456 moveto (0616 }) show
0 444 moveto (0617 ) show
0 432 moveto (0618 static inline uint) show
0 420 moveto (0619 xchg\(volatile uint *addr, uint newval\)) show
0 408 moveto (0620 {) show
0 396 moveto (0621   uint result;) show
0 384 moveto (0622 ) show
0 372 moveto (0623   // The + in "+m" denotes a read-modify-write operand.) show
0 360 moveto (0624   asm volatile\("lock; xchgl %0, %1" :) show
0 348 moveto (0625                "+m" \(*addr\), "=a" \(result\) :) show
0 336 moveto (0626                "1" \(newval\) :) show
0 324 moveto (0627                "cc"\);) show
0 312 moveto (0628   return result;) show
0 300 moveto (0629 }) show
0 288 moveto (0630 ) show
0 276 moveto (0631 static inline uint) show
0 264 moveto (0632 rcr2\(void\)) show
0 252 moveto (0633 {) show
0 240 moveto (0634   uint val;) show
0 228 moveto (0635   asm volatile\("movl %%cr2,%0" : "=r" \(val\)\);) show
0 216 moveto (0636   return val;) show
0 204 moveto (0637 }) show
0 192 moveto (0638 ) show
0 180 moveto (0639 static inline void) show
0 168 moveto (0640 lcr3\(uint val\)) show
0 156 moveto (0641 {) show
0 144 moveto (0642   asm volatile\("movl %0,%%cr3" : : "r" \(val\)\);) show
0 132 moveto (0643 }) show
0 120 moveto (0644 ) show
0 108 moveto (0645 ) show
0 96 moveto (0646 ) show
0 84 moveto (0647 ) show
0 72 moveto (0648 ) show
0 60 moveto (0649 ) show
0 24 moveto (Sheet 06) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/x86.h  Page 4) show
0 648 moveto (0650 // Layout of the trap frame built on the stack by the) show
0 636 moveto (0651 // hardware and by trapasm.S, and passed to trap\(\).) show
0 624 moveto (0652 struct trapframe {) show
0 612 moveto (0653   // registers as pushed by pusha) show
0 600 moveto (0654   uint edi;) show
0 588 moveto (0655   uint esi;) show
0 576 moveto (0656   uint ebp;) show
0 564 moveto (0657   uint oesp;      // useless & ignored) show
0 552 moveto (0658   uint ebx;) show
0 540 moveto (0659   uint edx;) show
0 528 moveto (0660   uint ecx;) show
0 516 moveto (0661   uint eax;) show
0 504 moveto (0662 ) show
0 492 moveto (0663   // rest of trap frame) show
0 480 moveto (0664   ushort gs;) show
0 468 moveto (0665   ushort padding1;) show
0 456 moveto (0666   ushort fs;) show
0 444 moveto (0667   ushort padding2;) show
0 432 moveto (0668   ushort es;) show
0 420 moveto (0669   ushort padding3;) show
0 408 moveto (0670   ushort ds;) show
0 396 moveto (0671   ushort padding4;) show
0 384 moveto (0672   uint trapno;) show
0 372 moveto (0673 ) show
0 360 moveto (0674   // below here defined by x86 hardware) show
0 348 moveto (0675   uint err;) show
0 336 moveto (0676   uint eip;) show
0 324 moveto (0677   ushort cs;) show
0 312 moveto (0678   ushort padding5;) show
0 300 moveto (0679   uint eflags;) show
0 288 moveto (0680 ) show
0 276 moveto (0681   // below here only when crossing rings, such as from user to kernel) show
0 264 moveto (0682   uint esp;) show
0 252 moveto (0683   ushort ss;) show
0 240 moveto (0684   ushort padding6;) show
0 228 moveto (0685 };) show
0 216 moveto (0686 ) show
0 204 moveto (0687 ) show
0 192 moveto (0688 ) show
0 180 moveto (0689 ) show
0 168 moveto (0690 ) show
0 156 moveto (0691 ) show
0 144 moveto (0692 ) show
0 132 moveto (0693 ) show
0 120 moveto (0694 ) show
0 108 moveto (0695 ) show
0 96 moveto (0696 ) show
0 84 moveto (0697 ) show
0 72 moveto (0698 ) show
0 60 moveto (0699 ) show
0 24 moveto (Sheet 06) show
grestore
restore
showpage
%%Page: 15 15
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/asm.h  Page 1) show
0 648 moveto (0700 //) show
0 636 moveto (0701 // assembler macros to create x86 segments) show
0 624 moveto (0702 //) show
0 612 moveto (0703 ) show
0 600 moveto (0704 #define SEG_NULLASM                                             \\) show
0 588 moveto (0705         .word 0, 0;                                             \\) show
0 576 moveto (0706         .byte 0, 0, 0, 0) show
0 564 moveto (0707 ) show
0 552 moveto (0708 // The 0xC0 means the limit is in 4096-byte units) show
0 540 moveto (0709 // and \(for executable segments\) 32-bit mode.) show
0 528 moveto (0710 #define SEG_ASM\(type,base,lim\)                                  \\) show
0 516 moveto (0711         .word \(\(\(lim\) >> 12\) & 0xffff\), \(\(base\) & 0xffff\);      \\) show
0 504 moveto (0712         .byte \(\(\(base\) >> 16\) & 0xff\), \(0x90 | \(type\)\),         \\) show
0 492 moveto (0713                 \(0xC0 | \(\(\(lim\) >> 28\) & 0xf\)\), \(\(\(base\) >> 24\) & 0xff\)) show
0 480 moveto (0714 ) show
0 468 moveto (0715 #define STA_X     0x8       // Executable segment) show
0 456 moveto (0716 #define STA_E     0x4       // Expand down \(non-executable segments\)) show
0 444 moveto (0717 #define STA_C     0x4       // Conforming code segment \(executable only\)) show
0 432 moveto (0718 #define STA_W     0x2       // Writeable \(non-executable segments\)) show
0 420 moveto (0719 #define STA_R     0x2       // Readable \(executable segments\)) show
0 408 moveto (0720 #define STA_A     0x1       // Accessed) show
0 396 moveto (0721 ) show
0 384 moveto (0722 ) show
0 372 moveto (0723 ) show
0 360 moveto (0724 ) show
0 348 moveto (0725 ) show
0 336 moveto (0726 ) show
0 324 moveto (0727 ) show
0 312 moveto (0728 ) show
0 300 moveto (0729 ) show
0 288 moveto (0730 ) show
0 276 moveto (0731 ) show
0 264 moveto (0732 ) show
0 252 moveto (0733 ) show
0 240 moveto (0734 ) show
0 228 moveto (0735 ) show
0 216 moveto (0736 ) show
0 204 moveto (0737 ) show
0 192 moveto (0738 ) show
0 180 moveto (0739 ) show
0 168 moveto (0740 ) show
0 156 moveto (0741 ) show
0 144 moveto (0742 ) show
0 132 moveto (0743 ) show
0 120 moveto (0744 ) show
0 108 moveto (0745 ) show
0 96 moveto (0746 ) show
0 84 moveto (0747 ) show
0 72 moveto (0748 ) show
0 60 moveto (0749 ) show
0 24 moveto (Sheet 07) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/mmu.h  Page 1) show
0 648 moveto (0750 // This file contains definitions for the) show
0 636 moveto (0751 // x86 memory management unit \(MMU\).) show
0 624 moveto (0752 ) show
0 612 moveto (0753 // Eflags register) show
0 600 moveto (0754 #define FL_CF           0x00000001      // Carry Flag) show
0 588 moveto (0755 #define FL_PF           0x00000004      // Parity Flag) show
0 576 moveto (0756 #define FL_AF           0x00000010      // Auxiliary carry Flag) show
0 564 moveto (0757 #define FL_ZF           0x00000040      // Zero Flag) show
0 552 moveto (0758 #define FL_SF           0x00000080      // Sign Flag) show
0 540 moveto (0759 #define FL_TF           0x00000100      // Trap Flag) show
0 528 moveto (0760 #define FL_IF           0x00000200      // Interrupt Enable) show
0 516 moveto (0761 #define FL_DF           0x00000400      // Direction Flag) show
0 504 moveto (0762 #define FL_OF           0x00000800      // Overflow Flag) show
0 492 moveto (0763 #define FL_IOPL_MASK    0x00003000      // I/O Privilege Level bitmask) show
0 480 moveto (0764 #define FL_IOPL_0       0x00000000      //   IOPL == 0) show
0 468 moveto (0765 #define FL_IOPL_1       0x00001000      //   IOPL == 1) show
0 456 moveto (0766 #define FL_IOPL_2       0x00002000      //   IOPL == 2) show
0 444 moveto (0767 #define FL_IOPL_3       0x00003000      //   IOPL == 3) show
0 432 moveto (0768 #define FL_NT           0x00004000      // Nested Task) show
0 420 moveto (0769 #define FL_RF           0x00010000      // Resume Flag) show
0 408 moveto (0770 #define FL_VM           0x00020000      // Virtual 8086 mode) show
0 396 moveto (0771 #define FL_AC           0x00040000      // Alignment Check) show
0 384 moveto (0772 #define FL_VIF          0x00080000      // Virtual Interrupt Flag) show
0 372 moveto (0773 #define FL_VIP          0x00100000      // Virtual Interrupt Pending) show
0 360 moveto (0774 #define FL_ID           0x00200000      // ID flag) show
0 348 moveto (0775 ) show
0 336 moveto (0776 // Control Register flags) show
0 324 moveto (0777 #define CR0_PE          0x00000001      // Protection Enable) show
0 312 moveto (0778 #define CR0_MP          0x00000002      // Monitor coProcessor) show
0 300 moveto (0779 #define CR0_EM          0x00000004      // Emulation) show
0 288 moveto (0780 #define CR0_TS          0x00000008      // Task Switched) show
0 276 moveto (0781 #define CR0_ET          0x00000010      // Extension Type) show
0 264 moveto (0782 #define CR0_NE          0x00000020      // Numeric Errror) show
0 252 moveto (0783 #define CR0_WP          0x00010000      // Write Protect) show
0 240 moveto (0784 #define CR0_AM          0x00040000      // Alignment Mask) show
0 228 moveto (0785 #define CR0_NW          0x20000000      // Not Writethrough) show
0 216 moveto (0786 #define CR0_CD          0x40000000      // Cache Disable) show
0 204 moveto (0787 #define CR0_PG          0x80000000      // Paging) show
0 192 moveto (0788 ) show
0 180 moveto (0789 #define CR4_PSE         0x00000010      // Page size extension) show
0 168 moveto (0790 ) show
0 156 moveto (0791 #define SEG_KCODE 1  // kernel code) show
0 144 moveto (0792 #define SEG_KDATA 2  // kernel data+stack) show
0 132 moveto (0793 #define SEG_KCPU  3  // kernel per-cpu data) show
0 120 moveto (0794 #define SEG_UCODE 4  // user code) show
0 108 moveto (0795 #define SEG_UDATA 5  // user data+stack) show
0 96 moveto (0796 #define SEG_TSS   6  // this process's task state) show
0 84 moveto (0797 ) show
0 72 moveto (0798 ) show
0 60 moveto (0799 ) show
0 24 moveto (Sheet 07) show
grestore
restore
showpage
%%Page: 16 16
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/mmu.h  Page 2) show
0 648 moveto (0800 #ifndef __ASSEMBLER__) show
0 636 moveto (0801 // Segment Descriptor) show
0 624 moveto (0802 struct segdesc {) show
0 612 moveto (0803   uint lim_15_0 : 16;  // Low bits of segment limit) show
0 600 moveto (0804   uint base_15_0 : 16; // Low bits of segment base address) show
0 588 moveto (0805   uint base_23_16 : 8; // Middle bits of segment base address) show
0 576 moveto (0806   uint type : 4;       // Segment type \(see STS_ constants\)) show
0 564 moveto (0807   uint s : 1;          // 0 = system, 1 = application) show
0 552 moveto (0808   uint dpl : 2;        // Descriptor Privilege Level) show
0 540 moveto (0809   uint p : 1;          // Present) show
0 528 moveto (0810   uint lim_19_16 : 4;  // High bits of segment limit) show
0 516 moveto (0811   uint avl : 1;        // Unused \(available for software use\)) show
0 504 moveto (0812   uint rsv1 : 1;       // Reserved) show
0 492 moveto (0813   uint db : 1;         // 0 = 16-bit segment, 1 = 32-bit segment) show
0 480 moveto (0814   uint g : 1;          // Granularity: limit scaled by 4K when set) show
0 468 moveto (0815   uint base_31_24 : 8; // High bits of segment base address) show
0 456 moveto (0816 };) show
0 444 moveto (0817 ) show
0 432 moveto (0818 // Normal segment) show
0 420 moveto (0819 #define SEG\(type, base, lim, dpl\) \(struct segdesc\)    \\) show
0 408 moveto (0820 { \(\(lim\) >> 12\) & 0xffff, \(uint\)\(base\) & 0xffff,      \\) show
0 396 moveto (0821   \(\(uint\)\(base\) >> 16\) & 0xff, type, 1, dpl, 1,       \\) show
0 384 moveto (0822   \(uint\)\(lim\) >> 28, 0, 0, 1, 1, \(uint\)\(base\) >> 24 }) show
0 372 moveto (0823 #define SEG16\(type, base, lim, dpl\) \(struct segdesc\)  \\) show
0 360 moveto (0824 { \(lim\) & 0xffff, \(uint\)\(base\) & 0xffff,              \\) show
0 348 moveto (0825   \(\(uint\)\(base\) >> 16\) & 0xff, type, 1, dpl, 1,       \\) show
0 336 moveto (0826   \(uint\)\(lim\) >> 16, 0, 0, 1, 0, \(uint\)\(base\) >> 24 }) show
0 324 moveto (0827 #endif) show
0 312 moveto (0828 ) show
0 300 moveto (0829 #define DPL_USER    0x3     // User DPL) show
0 288 moveto (0830 ) show
0 276 moveto (0831 // Application segment type bits) show
0 264 moveto (0832 #define STA_X       0x8     // Executable segment) show
0 252 moveto (0833 #define STA_E       0x4     // Expand down \(non-executable segments\)) show
0 240 moveto (0834 #define STA_C       0x4     // Conforming code segment \(executable only\)) show
0 228 moveto (0835 #define STA_W       0x2     // Writeable \(non-executable segments\)) show
0 216 moveto (0836 #define STA_R       0x2     // Readable \(executable segments\)) show
0 204 moveto (0837 #define STA_A       0x1     // Accessed) show
0 192 moveto (0838 ) show
0 180 moveto (0839 // System segment type bits) show
0 168 moveto (0840 #define STS_T16A    0x1     // Available 16-bit TSS) show
0 156 moveto (0841 #define STS_LDT     0x2     // Local Descriptor Table) show
0 144 moveto (0842 #define STS_T16B    0x3     // Busy 16-bit TSS) show
0 132 moveto (0843 #define STS_CG16    0x4     // 16-bit Call Gate) show
0 120 moveto (0844 #define STS_TG      0x5     // Task Gate / Coum Transmitions) show
0 108 moveto (0845 #define STS_IG16    0x6     // 16-bit Interrupt Gate) show
0 96 moveto (0846 #define STS_TG16    0x7     // 16-bit Trap Gate) show
0 84 moveto (0847 #define STS_T32A    0x9     // Available 32-bit TSS) show
0 72 moveto (0848 #define STS_T32B    0xB     // Busy 32-bit TSS) show
0 60 moveto (0849 #define STS_CG32    0xC     // 32-bit Call Gate) show
0 24 moveto (Sheet 08) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/mmu.h  Page 3) show
0 648 moveto (0850 #define STS_IG32    0xE     // 32-bit Interrupt Gate) show
0 636 moveto (0851 #define STS_TG32    0xF     // 32-bit Trap Gate) show
0 624 moveto (0852 ) show
0 612 moveto (0853 // A virtual address 'la' has a three-part structure as follows:) show
0 600 moveto (0854 //) show
0 588 moveto (0855 // +--------10------+-------10-------+---------12----------+) show
0 576 moveto (0856 // | Page Directory |   Page Table   | Offset within Page  |) show
0 564 moveto (0857 // |      Index     |      Index     |                     |) show
0 552 moveto (0858 // +----------------+----------------+---------------------+) show
0 540 moveto (0859 //  \\--- PDX\(va\) --/ \\--- PTX\(va\) --/) show
0 528 moveto (0860 ) show
0 516 moveto (0861 // page directory index) show
0 504 moveto (0862 #define PDX\(va\)         \(\(\(uint\)\(va\) >> PDXSHIFT\) & 0x3FF\)) show
0 492 moveto (0863 ) show
0 480 moveto (0864 // page table index) show
0 468 moveto (0865 #define PTX\(va\)         \(\(\(uint\)\(va\) >> PTXSHIFT\) & 0x3FF\)) show
0 456 moveto (0866 ) show
0 444 moveto (0867 // construct virtual address from indexes and offset) show
0 432 moveto (0868 #define PGADDR\(d, t, o\) \(\(uint\)\(\(d\) << PDXSHIFT | \(t\) << PTXSHIFT | \(o\)\)\)) show
0 420 moveto (0869 ) show
0 408 moveto (0870 // Page directory and page table constants.) show
0 396 moveto (0871 #define NPDENTRIES      1024    // # directory entries per page directory) show
0 384 moveto (0872 #define NPTENTRIES      1024    // # PTEs per page table) show
0 372 moveto (0873 #define PGSIZE          4096    // bytes mapped by a page) show
0 360 moveto (0874 ) show
0 348 moveto (0875 #define PGSHIFT         12      // log2\(PGSIZE\)) show
0 336 moveto (0876 #define PTXSHIFT        12      // offset of PTX in a linear address) show
0 324 moveto (0877 #define PDXSHIFT        22      // offset of PDX in a linear address) show
0 312 moveto (0878 ) show
0 300 moveto (0879 #define PGROUNDUP\(sz\)  \(\(\(sz\)+PGSIZE-1\) & ~\(PGSIZE-1\)\)) show
0 288 moveto (0880 #define PGROUNDDOWN\(a\) \(\(\(a\)\) & ~\(PGSIZE-1\)\)) show
0 276 moveto (0881 ) show
0 264 moveto (0882 // Page table/directory entry flags.) show
0 252 moveto (0883 #define PTE_P           0x001   // Present) show
0 240 moveto (0884 #define PTE_W           0x002   // Writeable) show
0 228 moveto (0885 #define PTE_U           0x004   // User) show
0 216 moveto (0886 #define PTE_PWT         0x008   // Write-Through) show
0 204 moveto (0887 #define PTE_PCD         0x010   // Cache-Disable) show
0 192 moveto (0888 #define PTE_A           0x020   // Accessed) show
0 180 moveto (0889 #define PTE_D           0x040   // Dirty) show
0 168 moveto (0890 #define PTE_PS          0x080   // Page Size) show
0 156 moveto (0891 #define PTE_MBZ         0x180   // Bits must be zero) show
0 144 moveto (0892 ) show
0 132 moveto (0893 // Address in page table or page directory entry) show
0 120 moveto (0894 #define PTE_ADDR\(pte\)   \(\(uint\)\(pte\) & ~0xFFF\)) show
0 108 moveto (0895 #define PTE_FLAGS\(pte\)  \(\(uint\)\(pte\) &  0xFFF\)) show
0 96 moveto (0896 ) show
0 84 moveto (0897 #ifndef __ASSEMBLER__) show
0 72 moveto (0898 typedef uint pte_t;) show
0 60 moveto (0899 ) show
0 24 moveto (Sheet 08) show
grestore
restore
showpage
%%Page: 17 17
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/mmu.h  Page 4) show
0 648 moveto (0900 // Task state segment format) show
0 636 moveto (0901 struct taskstate {) show
0 624 moveto (0902   uint link;         // Old ts selector) show
0 612 moveto (0903   uint esp0;         // Stack pointers and segment selectors) show
0 600 moveto (0904   ushort ss0;        //   after an increase in privilege level) show
0 588 moveto (0905   ushort padding1;) show
0 576 moveto (0906   uint *esp1;) show
0 564 moveto (0907   ushort ss1;) show
0 552 moveto (0908   ushort padding2;) show
0 540 moveto (0909   uint *esp2;) show
0 528 moveto (0910   ushort ss2;) show
0 516 moveto (0911   ushort padding3;) show
0 504 moveto (0912   void *cr3;         // Page directory base) show
0 492 moveto (0913   uint *eip;         // Saved state from last task switch) show
0 480 moveto (0914   uint eflags;) show
0 468 moveto (0915   uint eax;          // More saved state \(registers\)) show
0 456 moveto (0916   uint ecx;) show
0 444 moveto (0917   uint edx;) show
0 432 moveto (0918   uint ebx;) show
0 420 moveto (0919   uint *esp;) show
0 408 moveto (0920   uint *ebp;) show
0 396 moveto (0921   uint esi;) show
0 384 moveto (0922   uint edi;) show
0 372 moveto (0923   ushort es;         // Even more saved state \(segment selectors\)) show
0 360 moveto (0924   ushort padding4;) show
0 348 moveto (0925   ushort cs;) show
0 336 moveto (0926   ushort padding5;) show
0 324 moveto (0927   ushort ss;) show
0 312 moveto (0928   ushort padding6;) show
0 300 moveto (0929   ushort ds;) show
0 288 moveto (0930   ushort padding7;) show
0 276 moveto (0931   ushort fs;) show
0 264 moveto (0932   ushort padding8;) show
0 252 moveto (0933   ushort gs;) show
0 240 moveto (0934   ushort padding9;) show
0 228 moveto (0935   ushort ldt;) show
0 216 moveto (0936   ushort padding10;) show
0 204 moveto (0937   ushort t;          // Trap on task switch) show
0 192 moveto (0938   ushort iomb;       // I/O map base address) show
0 180 moveto (0939 };) show
0 168 moveto (0940 ) show
0 156 moveto (0941 ) show
0 144 moveto (0942 ) show
0 132 moveto (0943 ) show
0 120 moveto (0944 ) show
0 108 moveto (0945 ) show
0 96 moveto (0946 ) show
0 84 moveto (0947 ) show
0 72 moveto (0948 ) show
0 60 moveto (0949 ) show
0 24 moveto (Sheet 09) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/mmu.h  Page 5) show
0 648 moveto (0950 // Gate descriptors for interrupts and traps) show
0 636 moveto (0951 struct gatedesc {) show
0 624 moveto (0952   uint off_15_0 : 16;   // low 16 bits of offset in segment) show
0 612 moveto (0953   uint cs : 16;         // code segment selector) show
0 600 moveto (0954   uint args : 5;        // # args, 0 for interrupt/trap gates) show
0 588 moveto (0955   uint rsv1 : 3;        // reserved\(should be zero I guess\)) show
0 576 moveto (0956   uint type : 4;        // type\(STS_{TG,IG32,TG32}\)) show
0 564 moveto (0957   uint s : 1;           // must be 0 \(system\)) show
0 552 moveto (0958   uint dpl : 2;         // descriptor\(meaning new\) privilege level) show
0 540 moveto (0959   uint p : 1;           // Present) show
0 528 moveto (0960   uint off_31_16 : 16;  // high bits of offset in segment) show
0 516 moveto (0961 };) show
0 504 moveto (0962 ) show
0 492 moveto (0963 // Set up a normal interrupt/trap gate descriptor.) show
0 480 moveto (0964 // - istrap: 1 for a trap \(= exception\) gate, 0 for an interrupt gate.) show
0 468 moveto (0965 //   interrupt gate clears FL_IF, trap gate leaves FL_IF alone) show
0 456 moveto (0966 // - sel: Code segment selector for interrupt/trap handler) show
0 444 moveto (0967 // - off: Offset in code segment for interrupt/trap handler) show
0 432 moveto (0968 // - dpl: Descriptor Privilege Level -) show
0 420 moveto (0969 //        the privilege level required for software to invoke) show
0 408 moveto (0970 //        this interrupt/trap gate explicitly using an int instruction.) show
0 396 moveto (0971 #define SETGATE\(gate, istrap, sel, off, d\)                \\) show
0 384 moveto (0972 {                                                         \\) show
0 372 moveto (0973   \(gate\).off_15_0 = \(uint\)\(off\) & 0xffff;                \\) show
0 360 moveto (0974   \(gate\).cs = \(sel\);                                      \\) show
0 348 moveto (0975   \(gate\).args = 0;                                        \\) show
0 336 moveto (0976   \(gate\).rsv1 = 0;                                        \\) show
0 324 moveto (0977   \(gate\).type = \(istrap\) ? STS_TG32 : STS_IG32;           \\) show
0 312 moveto (0978   \(gate\).s = 0;                                           \\) show
0 300 moveto (0979   \(gate\).dpl = \(d\);                                       \\) show
0 288 moveto (0980   \(gate\).p = 1;                                           \\) show
0 276 moveto (0981   \(gate\).off_31_16 = \(uint\)\(off\) >> 16;                  \\) show
0 264 moveto (0982 }) show
0 252 moveto (0983 ) show
0 240 moveto (0984 #endif) show
0 228 moveto (0985 ) show
0 216 moveto (0986 ) show
0 204 moveto (0987 ) show
0 192 moveto (0988 ) show
0 180 moveto (0989 ) show
0 168 moveto (0990 ) show
0 156 moveto (0991 ) show
0 144 moveto (0992 ) show
0 132 moveto (0993 ) show
0 120 moveto (0994 ) show
0 108 moveto (0995 ) show
0 96 moveto (0996 ) show
0 84 moveto (0997 ) show
0 72 moveto (0998 ) show
0 60 moveto (0999 ) show
0 24 moveto (Sheet 09) show
grestore
restore
showpage
%%Page: 18 18
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/elf.h  Page 1) show
0 648 moveto (1000 // Format of an ELF executable file) show
0 636 moveto (1001 ) show
0 624 moveto (1002 #define ELF_MAGIC 0x464C457FU  // "\\x7FELF" in little endian) show
0 612 moveto (1003 ) show
0 600 moveto (1004 // File header) show
0 588 moveto (1005 struct elfhdr {) show
0 576 moveto (1006   uint magic;  // must equal ELF_MAGIC) show
0 564 moveto (1007   uchar elf[12];) show
0 552 moveto (1008   ushort type;) show
0 540 moveto (1009   ushort machine;) show
0 528 moveto (1010   uint version;) show
0 516 moveto (1011   uint entry;) show
0 504 moveto (1012   uint phoff;) show
0 492 moveto (1013   uint shoff;) show
0 480 moveto (1014   uint flags;) show
0 468 moveto (1015   ushort ehsize;) show
0 456 moveto (1016   ushort phentsize;) show
0 444 moveto (1017   ushort phnum;) show
0 432 moveto (1018   ushort shentsize;) show
0 420 moveto (1019   ushort shnum;) show
0 408 moveto (1020   ushort shstrndx;) show
0 396 moveto (1021 };) show
0 384 moveto (1022 ) show
0 372 moveto (1023 // Program section header) show
0 360 moveto (1024 struct proghdr {) show
0 348 moveto (1025   uint type;) show
0 336 moveto (1026   uint off;) show
0 324 moveto (1027   uint vaddr;) show
0 312 moveto (1028   uint paddr;) show
0 300 moveto (1029   uint filesz;) show
0 288 moveto (1030   uint memsz;) show
0 276 moveto (1031   uint flags;) show
0 264 moveto (1032   uint align;) show
0 252 moveto (1033 };) show
0 240 moveto (1034 ) show
0 228 moveto (1035 // Values for Proghdr type) show
0 216 moveto (1036 #define ELF_PROG_LOAD           1) show
0 204 moveto (1037 ) show
0 192 moveto (1038 // Flag bits for Proghdr flags) show
0 180 moveto (1039 #define ELF_PROG_FLAG_EXEC      1) show
0 168 moveto (1040 #define ELF_PROG_FLAG_WRITE     2) show
0 156 moveto (1041 #define ELF_PROG_FLAG_READ      4) show
0 144 moveto (1042 ) show
0 132 moveto (1043 ) show
0 120 moveto (1044 ) show
0 108 moveto (1045 ) show
0 96 moveto (1046 ) show
0 84 moveto (1047 ) show
0 72 moveto (1048 ) show
0 60 moveto (1049 ) show
0 24 moveto (Sheet 10) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/entry.S  Page 1) show
0 648 moveto (1050 # Multiboot header, for multiboot boot loaders like GNU Grub.) show
0 636 moveto (1051 # http://www.gnu.org/software/grub/manual/multiboot/multiboot.html) show
0 624 moveto (1052 #) show
0 612 moveto (1053 # Using GRUB 2, you can boot xv6 from a file stored in a) show
0 600 moveto (1054 # Linux file system by copying kernel or kernelmemfs to /boot) show
0 588 moveto (1055 # and then adding this menu entry:) show
0 576 moveto (1056 #) show
0 564 moveto (1057 # menuentry "xv6" {) show
0 552 moveto (1058 # ) show
8 mp_a_x mul 552 moveto (insmod ext2) show
0 540 moveto (1059 # ) show
8 mp_a_x mul 540 moveto (set root='\(hd0,msdos1\)') show
0 528 moveto (1060 # ) show
8 mp_a_x mul 528 moveto (set kernel='/boot/kernel') show
0 516 moveto (1061 # ) show
8 mp_a_x mul 516 moveto (echo "Loading ${kernel}...") show
0 504 moveto (1062 # ) show
8 mp_a_x mul 504 moveto (multiboot ${kernel} ${kernel}) show
0 492 moveto (1063 # ) show
8 mp_a_x mul 492 moveto (boot) show
0 480 moveto (1064 # }) show
0 468 moveto (1065 ) show
0 456 moveto (1066 #include "asm.h") show
0 444 moveto (1067 #include "memlayout.h") show
0 432 moveto (1068 #include "mmu.h") show
0 420 moveto (1069 #include "param.h") show
0 408 moveto (1070 ) show
0 396 moveto (1071 # Multiboot header.  Data to direct multiboot loader.) show
0 384 moveto (1072 .p2align 2) show
0 372 moveto (1073 .text) show
0 360 moveto (1074 .globl multiboot_header) show
0 348 moveto (1075 multiboot_header:) show
0 336 moveto (1076   #define magic 0x1badb002) show
0 324 moveto (1077   #define flags 0) show
0 312 moveto (1078   .long magic) show
0 300 moveto (1079   .long flags) show
0 288 moveto (1080   .long \(-magic-flags\)) show
0 276 moveto (1081 ) show
0 264 moveto (1082 # By convention, the _start symbol specifies the ELF entry point.) show
0 252 moveto (1083 # Since we haven't set up virtual memory yet, our entry point is) show
0 240 moveto (1084 # the physical address of 'entry'.) show
0 228 moveto (1085 .globl _start) show
0 216 moveto (1086 _start = V2P_WO\(entry\)) show
0 204 moveto (1087 ) show
0 192 moveto (1088 # Entering xv6 on boot processor, with paging off.) show
0 180 moveto (1089 .globl entry) show
0 168 moveto (1090 entry:) show
0 156 moveto (1091   # Turn on page size extension for 4Mbyte pages) show
0 144 moveto (1092   movl    %cr4, %eax) show
0 132 moveto (1093   orl     $\(CR4_PSE\), %eax) show
0 120 moveto (1094   movl    %eax, %cr4) show
0 108 moveto (1095   # Set page directory) show
0 96 moveto (1096   movl    $\(V2P_WO\(entrypgdir\)\), %eax) show
0 84 moveto (1097   movl    %eax, %cr3) show
0 72 moveto (1098   # Turn on paging.) show
0 60 moveto (1099   movl    %cr0, %eax) show
0 24 moveto (Sheet 10) show
grestore
restore
showpage
%%Page: 19 19
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/entry.S  Page 2) show
0 648 moveto (1100   orl     $\(CR0_PG|CR0_WP\), %eax) show
0 636 moveto (1101   movl    %eax, %cr0) show
0 624 moveto (1102 ) show
0 612 moveto (1103   # Set up the stack pointer.) show
0 600 moveto (1104   movl $\(stack + KSTACKSIZE\), %esp) show
0 588 moveto (1105 ) show
0 576 moveto (1106   # Jump to main\(\), and switch to executing at) show
0 564 moveto (1107   # high addresses. The indirect call is needed because) show
0 552 moveto (1108   # the assembler produces a PC-relative instruction) show
0 540 moveto (1109   # for a direct jump.) show
0 528 moveto (1110   mov $main, %eax) show
0 516 moveto (1111   jmp *%eax) show
0 504 moveto (1112 ) show
0 492 moveto (1113 .comm stack, KSTACKSIZE) show
0 480 moveto (1114 ) show
0 468 moveto (1115 ) show
0 456 moveto (1116 ) show
0 444 moveto (1117 ) show
0 432 moveto (1118 ) show
0 420 moveto (1119 ) show
0 408 moveto (1120 ) show
0 396 moveto (1121 ) show
0 384 moveto (1122 ) show
0 372 moveto (1123 ) show
0 360 moveto (1124 ) show
0 348 moveto (1125 ) show
0 336 moveto (1126 ) show
0 324 moveto (1127 ) show
0 312 moveto (1128 ) show
0 300 moveto (1129 ) show
0 288 moveto (1130 ) show
0 276 moveto (1131 ) show
0 264 moveto (1132 ) show
0 252 moveto (1133 ) show
0 240 moveto (1134 ) show
0 228 moveto (1135 ) show
0 216 moveto (1136 ) show
0 204 moveto (1137 ) show
0 192 moveto (1138 ) show
0 180 moveto (1139 ) show
0 168 moveto (1140 ) show
0 156 moveto (1141 ) show
0 144 moveto (1142 ) show
0 132 moveto (1143 ) show
0 120 moveto (1144 ) show
0 108 moveto (1145 ) show
0 96 moveto (1146 ) show
0 84 moveto (1147 ) show
0 72 moveto (1148 ) show
0 60 moveto (1149 ) show
0 24 moveto (Sheet 11) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/entryother.S  Page 1) show
0 648 moveto (1150 #include "asm.h") show
0 636 moveto (1151 #include "memlayout.h") show
0 624 moveto (1152 #include "mmu.h") show
0 612 moveto (1153 ) show
0 600 moveto (1154 # Each non-boot CPU \("AP"\) is started up in response to a STARTUP) show
0 588 moveto (1155 # IPI from the boot CPU.  Section B.4.2 of the Multi-Processor) show
0 576 moveto (1156 # Specification says that the AP will start in real mode with CS:IP) show
0 564 moveto (1157 # set to XY00:0000, where XY is an 8-bit value sent with the) show
0 552 moveto (1158 # STARTUP. Thus this code must start at a 4096-byte boundary.) show
0 540 moveto (1159 #) show
0 528 moveto (1160 # Because this code sets DS to zero, it must sit) show
0 516 moveto (1161 # at an address in the low 2^16 bytes.) show
0 504 moveto (1162 #) show
0 492 moveto (1163 # Startothers \(in main.c\) sends the STARTUPs one at a time.) show
0 480 moveto (1164 # It copies this code \(start\) at 0x7000.  It puts the address of) show
0 468 moveto (1165 # a newly allocated per-core stack in start-4,the address of the) show
0 456 moveto (1166 # place to jump to \(mpenter\) in start-8, and the physical address) show
0 444 moveto (1167 # of entrypgdir in start-12.) show
0 432 moveto (1168 #) show
0 420 moveto (1169 # This code is identical to bootasm.S except:) show
0 408 moveto (1170 #   - it does not need to enable A20) show
0 396 moveto (1171 #   - it uses the address at start-4, start-8, and start-12) show
0 384 moveto (1172 ) show
0 372 moveto (1173 .code16) show
0 360 moveto (1174 .globl start) show
0 348 moveto (1175 start:) show
0 336 moveto (1176   cli) show
0 324 moveto (1177 ) show
0 312 moveto (1178   xorw    %ax,%ax) show
0 300 moveto (1179   movw    %ax,%ds) show
0 288 moveto (1180   movw    %ax,%es) show
0 276 moveto (1181   movw    %ax,%ss) show
0 264 moveto (1182 ) show
0 252 moveto (1183   lgdt    gdtdesc) show
0 240 moveto (1184   movl    %cr0, %eax) show
0 228 moveto (1185   orl     $CR0_PE, %eax) show
0 216 moveto (1186   movl    %eax, %cr0) show
0 204 moveto (1187 ) show
0 192 moveto (1188   ljmpl    $\(SEG_KCODE<<3\), $\(start32\)) show
0 180 moveto (1189 ) show
0 168 moveto (1190 .code32) show
0 156 moveto (1191 start32:) show
0 144 moveto (1192   movw    $\(SEG_KDATA<<3\), %ax) show
0 132 moveto (1193   movw    %ax, %ds) show
0 120 moveto (1194   movw    %ax, %es) show
0 108 moveto (1195   movw    %ax, %ss) show
0 96 moveto (1196   movw    $0, %ax) show
0 84 moveto (1197   movw    %ax, %fs) show
0 72 moveto (1198   movw    %ax, %gs) show
0 60 moveto (1199 ) show
0 24 moveto (Sheet 11) show
grestore
restore
showpage
%%Page: 20 20
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/entryother.S  Page 2) show
0 648 moveto (1200   # Turn on page size extension for 4Mbyte pages) show
0 636 moveto (1201   movl    %cr4, %eax) show
0 624 moveto (1202   orl     $\(CR4_PSE\), %eax) show
0 612 moveto (1203   movl    %eax, %cr4) show
0 600 moveto (1204   # Use enterpgdir as our initial page table) show
0 588 moveto (1205   movl    \(start-12\), %eax) show
0 576 moveto (1206   movl    %eax, %cr3) show
0 564 moveto (1207   # Turn on paging.) show
0 552 moveto (1208   movl    %cr0, %eax) show
0 540 moveto (1209   orl     $\(CR0_PE|CR0_PG|CR0_WP\), %eax) show
0 528 moveto (1210   movl    %eax, %cr0) show
0 516 moveto (1211 ) show
0 504 moveto (1212   # Switch to the stack allocated by startothers\(\)) show
0 492 moveto (1213   movl    \(start-4\), %esp) show
0 480 moveto (1214   # Call mpenter\(\)) show
0 468 moveto (1215   call) show
17 mp_a_x mul 468 moveto (*\(start-8\)) show
0 456 moveto (1216 ) show
0 444 moveto (1217   movw    $0x8a00, %ax) show
0 432 moveto (1218   movw    %ax, %dx) show
0 420 moveto (1219   outw    %ax, %dx) show
0 408 moveto (1220   movw    $0x8ae0, %ax) show
0 396 moveto (1221   outw    %ax, %dx) show
0 384 moveto (1222 spin:) show
0 372 moveto (1223   jmp     spin) show
0 360 moveto (1224 ) show
0 348 moveto (1225 .p2align 2) show
0 336 moveto (1226 gdt:) show
0 324 moveto (1227   SEG_NULLASM) show
0 312 moveto (1228   SEG_ASM\(STA_X|STA_R, 0, 0xffffffff\)) show
0 300 moveto (1229   SEG_ASM\(STA_W, 0, 0xffffffff\)) show
0 288 moveto (1230 ) show
0 276 moveto (1231 ) show
0 264 moveto (1232 gdtdesc:) show
0 252 moveto (1233   .word   \(gdtdesc - gdt - 1\)) show
0 240 moveto (1234   .long   gdt) show
0 228 moveto (1235 ) show
0 216 moveto (1236 ) show
0 204 moveto (1237 ) show
0 192 moveto (1238 ) show
0 180 moveto (1239 ) show
0 168 moveto (1240 ) show
0 156 moveto (1241 ) show
0 144 moveto (1242 ) show
0 132 moveto (1243 ) show
0 120 moveto (1244 ) show
0 108 moveto (1245 ) show
0 96 moveto (1246 ) show
0 84 moveto (1247 ) show
0 72 moveto (1248 ) show
0 60 moveto (1249 ) show
0 24 moveto (Sheet 12) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/main.c  Page 1) show
0 648 moveto (1250 #include "types.h") show
0 636 moveto (1251 #include "defs.h") show
0 624 moveto (1252 #include "param.h") show
0 612 moveto (1253 #include "memlayout.h") show
0 600 moveto (1254 #include "mmu.h") show
0 588 moveto (1255 #include "proc.h") show
0 576 moveto (1256 #include "x86.h") show
0 564 moveto (1257 ) show
0 552 moveto (1258 static void startothers\(void\);) show
0 540 moveto (1259 static void mpmain\(void\)  __attribute__\(\(noreturn\)\);) show
0 528 moveto (1260 extern pde_t *kpgdir;) show
0 516 moveto (1261 extern char end[]; // first address after kernel loaded from ELF file) show
0 504 moveto (1262 ) show
0 492 moveto (1263 // Bootstrap processor starts running C code here.) show
0 480 moveto (1264 // Allocate a real stack and switch to it, first) show
0 468 moveto (1265 // doing some setup required for memory allocator to work.) show
0 456 moveto (1266 int) show
0 444 moveto (1267 main\(void\)) show
0 432 moveto (1268 {) show
0 420 moveto (1269   kinit1\(end, P2V\(4*1024*1024\)\); // phys page allocator) show
0 408 moveto (1270   kvmalloc\(\);      // kernel page table) show
0 396 moveto (1271   mpinit\(\);        // collect info about this machine) show
0 384 moveto (1272   lapicinit\(\);) show
0 372 moveto (1273   seginit\(\);       // set up segments) show
0 360 moveto (1274   cprintf\("\\ncpu%d: starting xv6\\n\\n", cpu->id\);) show
0 348 moveto (1275   picinit\(\);       // interrupt controller) show
0 336 moveto (1276   ioapicinit\(\);    // another interrupt controller) show
0 324 moveto (1277   consoleinit\(\);   // I/O devices & their interrupts) show
0 312 moveto (1278   uartinit\(\);      // serial port) show
0 300 moveto (1279   pinit\(\);         // process table) show
0 288 moveto (1280   tvinit\(\);        // trap vectors) show
0 276 moveto (1281   binit\(\);         // buffer cache) show
0 264 moveto (1282   fileinit\(\);      // file table) show
0 252 moveto (1283   ideinit\(\);       // disk) show
0 240 moveto (1284   if\(!ismp\)) show
0 228 moveto (1285     timerinit\(\);   // uniprocessor timer) show
0 216 moveto (1286   startothers\(\);   // start other processors) show
0 204 moveto (1287   kinit2\(P2V\(4*1024*1024\), P2V\(PHYSTOP\)\); // must come after startothers\(\)) show
0 192 moveto (1288   userinit\(\);      // first user process) show
0 180 moveto (1289   // Finish setting up this processor in mpmain.) show
0 168 moveto (1290   mpmain\(\);) show
0 156 moveto (1291 }) show
0 144 moveto (1292 ) show
0 132 moveto (1293 ) show
0 120 moveto (1294 ) show
0 108 moveto (1295 ) show
0 96 moveto (1296 ) show
0 84 moveto (1297 ) show
0 72 moveto (1298 ) show
0 60 moveto (1299 ) show
0 24 moveto (Sheet 12) show
grestore
restore
showpage
%%Page: 21 21
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/main.c  Page 2) show
0 648 moveto (1300 // Other CPUs jump here from entryother.S.) show
0 636 moveto (1301 static void) show
0 624 moveto (1302 mpenter\(void\)) show
0 612 moveto (1303 {) show
0 600 moveto (1304   switchkvm\(\);) show
0 588 moveto (1305   seginit\(\);) show
0 576 moveto (1306   lapicinit\(\);) show
0 564 moveto (1307   mpmain\(\);) show
0 552 moveto (1308 }) show
0 540 moveto (1309 ) show
0 528 moveto (1310 // Common CPU setup code.) show
0 516 moveto (1311 static void) show
0 504 moveto (1312 mpmain\(void\)) show
0 492 moveto (1313 {) show
0 480 moveto (1314   cprintf\("cpu%d: starting\\n", cpu->id\);) show
0 468 moveto (1315   idtinit\(\);       // load idt register) show
0 456 moveto (1316   xchg\(&cpu->started, 1\); // tell startothers\(\) we're up) show
0 444 moveto (1317   scheduler\(\);     // start running processes) show
0 432 moveto (1318 }) show
0 420 moveto (1319 ) show
0 408 moveto (1320 pde_t entrypgdir[];  // For entry.S) show
0 396 moveto (1321 ) show
0 384 moveto (1322 // Start the non-boot \(AP\) processors.) show
0 372 moveto (1323 static void) show
0 360 moveto (1324 startothers\(void\)) show
0 348 moveto (1325 {) show
0 336 moveto (1326   extern uchar _binary_entryother_start[], _binary_entryother_size[];) show
0 324 moveto (1327   uchar *code;) show
0 312 moveto (1328   struct cpu *c;) show
0 300 moveto (1329   char *stack;) show
0 288 moveto (1330 ) show
0 276 moveto (1331   // Write entry code to unused memory at 0x7000.) show
0 264 moveto (1332   // The linker has placed the image of entryother.S in) show
0 252 moveto (1333   // _binary_entryother_start.) show
0 240 moveto (1334   code = p2v\(0x7000\);) show
0 228 moveto (1335   memmove\(code, _binary_entryother_start, \(uint\)_binary_entryother_size\);) show
0 216 moveto (1336 ) show
0 204 moveto (1337   for\(c = cpus; c < cpus+ncpu; c++\){) show
0 192 moveto (1338     if\(c == cpus+cpunum\(\)\)  // We've started already.) show
0 180 moveto (1339       continue;) show
0 168 moveto (1340 ) show
0 156 moveto (1341     // Tell entryother.S what stack to use, where to enter, and what) show
0 144 moveto (1342     // pgdir to use. We cannot use kpgdir yet, because the AP processor) show
0 132 moveto (1343     // is running in low  memory, so we use entrypgdir for the APs too.) show
0 120 moveto (1344     stack = kalloc\(\);) show
0 108 moveto (1345     *\(void**\)\(code-4\) = stack + KSTACKSIZE;) show
0 96 moveto (1346     *\(void**\)\(code-8\) = mpenter;) show
0 84 moveto (1347     *\(int**\)\(code-12\) = \(void *\) v2p\(entrypgdir\);) show
0 72 moveto (1348 ) show
0 60 moveto (1349     lapicstartap\(c->id, v2p\(code\)\);) show
0 24 moveto (Sheet 13) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/main.c  Page 3) show
0 648 moveto (1350     // wait for cpu to finish mpmain\(\)) show
0 636 moveto (1351     while\(c->started == 0\)) show
0 624 moveto (1352       ;) show
0 612 moveto (1353   }) show
0 600 moveto (1354 }) show
0 588 moveto (1355 ) show
0 576 moveto (1356 // Boot page table used in entry.S and entryother.S.) show
0 564 moveto (1357 // Page directories \(and page tables\), must start on a page boundary,) show
0 552 moveto (1358 // hence the "__aligned__" attribute.) show
0 540 moveto (1359 // Use PTE_PS in page directory entry to enable 4Mbyte pages.) show
0 528 moveto (1360 __attribute__\(\(__aligned__\(PGSIZE\)\)\)) show
0 516 moveto (1361 pde_t entrypgdir[NPDENTRIES] = {) show
0 504 moveto (1362   // Map VA's [0, 4MB\) to PA's [0, 4MB\)) show
0 492 moveto (1363   [0] = \(0\) | PTE_P | PTE_W | PTE_PS,) show
0 480 moveto (1364   // Map VA's [KERNBASE, KERNBASE+4MB\) to PA's [0, 4MB\)) show
0 468 moveto (1365   [KERNBASE>>PDXSHIFT] = \(0\) | PTE_P | PTE_W | PTE_PS,) show
0 456 moveto (1366 };) show
0 444 moveto (1367 ) show
0 432 moveto (1368 // Blank page.) show
0 420 moveto (1369 // Blank page.) show
0 408 moveto (1370 // Blank page.) show
0 396 moveto (1371 ) show
0 384 moveto (1372 ) show
0 372 moveto (1373 ) show
0 360 moveto (1374 ) show
0 348 moveto (1375 ) show
0 336 moveto (1376 ) show
0 324 moveto (1377 ) show
0 312 moveto (1378 ) show
0 300 moveto (1379 ) show
0 288 moveto (1380 ) show
0 276 moveto (1381 ) show
0 264 moveto (1382 ) show
0 252 moveto (1383 ) show
0 240 moveto (1384 ) show
0 228 moveto (1385 ) show
0 216 moveto (1386 ) show
0 204 moveto (1387 ) show
0 192 moveto (1388 ) show
0 180 moveto (1389 ) show
0 168 moveto (1390 ) show
0 156 moveto (1391 ) show
0 144 moveto (1392 ) show
0 132 moveto (1393 ) show
0 120 moveto (1394 ) show
0 108 moveto (1395 ) show
0 96 moveto (1396 ) show
0 84 moveto (1397 ) show
0 72 moveto (1398 ) show
0 60 moveto (1399 ) show
0 24 moveto (Sheet 13) show
grestore
restore
showpage
%%Page: 22 22
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/spinlock.h  Page 1) show
0 648 moveto (1400 // Mutual exclusion lock.) show
0 636 moveto (1401 struct spinlock {) show
0 624 moveto (1402   uint locked;       // Is the lock held?) show
0 612 moveto (1403 ) show
0 600 moveto (1404   // For debugging:) show
0 588 moveto (1405   char *name;        // Name of lock.) show
0 576 moveto (1406   struct cpu *cpu;   // The cpu holding the lock.) show
0 564 moveto (1407   uint pcs[10];      // The call stack \(an array of program counters\)) show
0 552 moveto (1408                      // that locked the lock.) show
0 540 moveto (1409 };) show
0 528 moveto (1410 ) show
0 516 moveto (1411 ) show
0 504 moveto (1412 ) show
0 492 moveto (1413 ) show
0 480 moveto (1414 ) show
0 468 moveto (1415 ) show
0 456 moveto (1416 ) show
0 444 moveto (1417 ) show
0 432 moveto (1418 ) show
0 420 moveto (1419 ) show
0 408 moveto (1420 ) show
0 396 moveto (1421 ) show
0 384 moveto (1422 ) show
0 372 moveto (1423 ) show
0 360 moveto (1424 ) show
0 348 moveto (1425 ) show
0 336 moveto (1426 ) show
0 324 moveto (1427 ) show
0 312 moveto (1428 ) show
0 300 moveto (1429 ) show
0 288 moveto (1430 ) show
0 276 moveto (1431 ) show
0 264 moveto (1432 ) show
0 252 moveto (1433 ) show
0 240 moveto (1434 ) show
0 228 moveto (1435 ) show
0 216 moveto (1436 ) show
0 204 moveto (1437 ) show
0 192 moveto (1438 ) show
0 180 moveto (1439 ) show
0 168 moveto (1440 ) show
0 156 moveto (1441 ) show
0 144 moveto (1442 ) show
0 132 moveto (1443 ) show
0 120 moveto (1444 ) show
0 108 moveto (1445 ) show
0 96 moveto (1446 ) show
0 84 moveto (1447 ) show
0 72 moveto (1448 ) show
0 60 moveto (1449 ) show
0 24 moveto (Sheet 14) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/spinlock.c  Page 1) show
0 648 moveto (1450 // Mutual exclusion spin locks.) show
0 636 moveto (1451 ) show
0 624 moveto (1452 #include "types.h") show
0 612 moveto (1453 #include "defs.h") show
0 600 moveto (1454 #include "param.h") show
0 588 moveto (1455 #include "x86.h") show
0 576 moveto (1456 #include "memlayout.h") show
0 564 moveto (1457 #include "mmu.h") show
0 552 moveto (1458 #include "proc.h") show
0 540 moveto (1459 #include "spinlock.h") show
0 528 moveto (1460 ) show
0 516 moveto (1461 void) show
0 504 moveto (1462 initlock\(struct spinlock *lk, char *name\)) show
0 492 moveto (1463 {) show
0 480 moveto (1464   lk->name = name;) show
0 468 moveto (1465   lk->locked = 0;) show
0 456 moveto (1466   lk->cpu = 0;) show
0 444 moveto (1467 }) show
0 432 moveto (1468 ) show
0 420 moveto (1469 // Acquire the lock.) show
0 408 moveto (1470 // Loops \(spins\) until the lock is acquired.) show
0 396 moveto (1471 // Holding a lock for a long time may cause) show
0 384 moveto (1472 // other CPUs to waste time spinning to acquire it.) show
0 372 moveto (1473 void) show
0 360 moveto (1474 acquire\(struct spinlock *lk\)) show
0 348 moveto (1475 {) show
0 336 moveto (1476   pushcli\(\); // disable interrupts to avoid deadlock.) show
0 324 moveto (1477   if\(holding\(lk\)\)) show
0 312 moveto (1478     panic\("acquire"\);) show
0 300 moveto (1479 ) show
0 288 moveto (1480   // The xchg is atomic.) show
0 276 moveto (1481   // It also serializes, so that reads after acquire are not) show
0 264 moveto (1482   // reordered before it.) show
0 252 moveto (1483   while\(xchg\(&lk->locked, 1\) != 0\)) show
0 240 moveto (1484     ;) show
0 228 moveto (1485 ) show
0 216 moveto (1486   // Record info about lock acquisition for debugging.) show
0 204 moveto (1487   lk->cpu = cpu;) show
0 192 moveto (1488   getcallerpcs\(&lk, lk->pcs\);) show
0 180 moveto (1489 }) show
0 168 moveto (1490 ) show
0 156 moveto (1491 ) show
0 144 moveto (1492 ) show
0 132 moveto (1493 ) show
0 120 moveto (1494 ) show
0 108 moveto (1495 ) show
0 96 moveto (1496 ) show
0 84 moveto (1497 ) show
0 72 moveto (1498 ) show
0 60 moveto (1499 ) show
0 24 moveto (Sheet 14) show
grestore
restore
showpage
%%Page: 23 23
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/spinlock.c  Page 2) show
0 648 moveto (1500 // Release the lock.) show
0 636 moveto (1501 void) show
0 624 moveto (1502 release\(struct spinlock *lk\)) show
0 612 moveto (1503 {) show
0 600 moveto (1504   if\(!holding\(lk\)\)) show
0 588 moveto (1505     panic\("release"\);) show
0 576 moveto (1506 ) show
0 564 moveto (1507   lk->pcs[0] = 0;) show
0 552 moveto (1508   lk->cpu = 0;) show
0 540 moveto (1509 ) show
0 528 moveto (1510   // The xchg serializes, so that reads before release are) show
0 516 moveto (1511   // not reordered after it.  The 1996 PentiumPro manual \(Volume 3,) show
0 504 moveto (1512   // 7.2\) says reads can be carried out speculatively and in) show
0 492 moveto (1513   // any order, which implies we need to serialize here.) show
0 480 moveto (1514   // But the 2007 Intel 64 Architecture Memory Ordering White) show
0 468 moveto (1515   // Paper says that Intel 64 and IA-32 will not move a load) show
0 456 moveto (1516   // after a store. So lock->locked = 0 would work here.) show
0 444 moveto (1517   // The xchg being asm volatile ensures gcc emits it after) show
0 432 moveto (1518   // the above assignments \(and after the critical section\).) show
0 420 moveto (1519   xchg\(&lk->locked, 0\);) show
0 408 moveto (1520 ) show
0 396 moveto (1521   popcli\(\);) show
0 384 moveto (1522 }) show
0 372 moveto (1523 ) show
0 360 moveto (1524 // Record the current call stack in pcs[] by following the %ebp chain.) show
0 348 moveto (1525 void) show
0 336 moveto (1526 getcallerpcs\(void *v, uint pcs[]\)) show
0 324 moveto (1527 {) show
0 312 moveto (1528   uint *ebp;) show
0 300 moveto (1529   int i;) show
0 288 moveto (1530 ) show
0 276 moveto (1531   ebp = \(uint*\)v - 2;) show
0 264 moveto (1532   for\(i = 0; i < 10; i++\){) show
0 252 moveto (1533     if\(ebp == 0 || ebp < \(uint*\)KERNBASE || ebp == \(uint*\)0xffffffff\)) show
0 240 moveto (1534       break;) show
0 228 moveto (1535     pcs[i] = ebp[1];     // saved %eip) show
0 216 moveto (1536     ebp = \(uint*\)ebp[0]; // saved %ebp) show
0 204 moveto (1537   }) show
0 192 moveto (1538   for\(; i < 10; i++\)) show
0 180 moveto (1539     pcs[i] = 0;) show
0 168 moveto (1540 }) show
0 156 moveto (1541 ) show
0 144 moveto (1542 // Check whether this cpu is holding the lock.) show
0 132 moveto (1543 int) show
0 120 moveto (1544 holding\(struct spinlock *lock\)) show
0 108 moveto (1545 {) show
0 96 moveto (1546   return lock->locked && lock->cpu == cpu;) show
0 84 moveto (1547 }) show
0 72 moveto (1548 ) show
0 60 moveto (1549 ) show
0 24 moveto (Sheet 15) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/spinlock.c  Page 3) show
0 648 moveto (1550 // Pushcli/popcli are like cli/sti except that they are matched:) show
0 636 moveto (1551 // it takes two popcli to undo two pushcli.  Also, if interrupts) show
0 624 moveto (1552 // are off, then pushcli, popcli leaves them off.) show
0 612 moveto (1553 ) show
0 600 moveto (1554 void) show
0 588 moveto (1555 pushcli\(void\)) show
0 576 moveto (1556 {) show
0 564 moveto (1557   int eflags;) show
0 552 moveto (1558 ) show
0 540 moveto (1559   eflags = readeflags\(\);) show
0 528 moveto (1560   cli\(\);) show
0 516 moveto (1561   if\(cpu->ncli++ == 0\)) show
0 504 moveto (1562     cpu->intena = eflags & FL_IF;) show
0 492 moveto (1563 }) show
0 480 moveto (1564 ) show
0 468 moveto (1565 void) show
0 456 moveto (1566 popcli\(void\)) show
0 444 moveto (1567 {) show
0 432 moveto (1568   if\(readeflags\(\)&FL_IF\)) show
0 420 moveto (1569     panic\("popcli - interruptible"\);) show
0 408 moveto (1570   if\(--cpu->ncli < 0\)) show
0 396 moveto (1571     panic\("popcli"\);) show
0 384 moveto (1572   if\(cpu->ncli == 0 && cpu->intena\)) show
0 372 moveto (1573     sti\(\);) show
0 360 moveto (1574 }) show
0 348 moveto (1575 ) show
0 336 moveto (1576 ) show
0 324 moveto (1577 ) show
0 312 moveto (1578 ) show
0 300 moveto (1579 ) show
0 288 moveto (1580 ) show
0 276 moveto (1581 ) show
0 264 moveto (1582 ) show
0 252 moveto (1583 ) show
0 240 moveto (1584 ) show
0 228 moveto (1585 ) show
0 216 moveto (1586 ) show
0 204 moveto (1587 ) show
0 192 moveto (1588 ) show
0 180 moveto (1589 ) show
0 168 moveto (1590 ) show
0 156 moveto (1591 ) show
0 144 moveto (1592 ) show
0 132 moveto (1593 ) show
0 120 moveto (1594 ) show
0 108 moveto (1595 ) show
0 96 moveto (1596 ) show
0 84 moveto (1597 ) show
0 72 moveto (1598 ) show
0 60 moveto (1599 ) show
0 24 moveto (Sheet 15) show
grestore
restore
showpage
%%Page: 24 24
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/vm.c  Page 1) show
0 648 moveto (1600 #include "param.h") show
0 636 moveto (1601 #include "types.h") show
0 624 moveto (1602 #include "defs.h") show
0 612 moveto (1603 #include "x86.h") show
0 600 moveto (1604 #include "memlayout.h") show
0 588 moveto (1605 #include "mmu.h") show
0 576 moveto (1606 #include "proc.h") show
0 564 moveto (1607 #include "elf.h") show
0 552 moveto (1608 ) show
0 540 moveto (1609 extern char data[];  // defined by kernel.ld) show
0 528 moveto (1610 pde_t *kpgdir;  // for use in scheduler\(\)) show
0 516 moveto (1611 struct segdesc gdt[NSEGS];) show
0 504 moveto (1612 ) show
0 492 moveto (1613 // Set up CPU's kernel segment descriptors.) show
0 480 moveto (1614 // Run once on entry on each CPU.) show
0 468 moveto (1615 void) show
0 456 moveto (1616 seginit\(void\)) show
0 444 moveto (1617 {) show
0 432 moveto (1618   struct cpu *c;) show
0 420 moveto (1619 ) show
0 408 moveto (1620   // Map "logical" addresses to virtual addresses using identity map.) show
0 396 moveto (1621   // Cannot share a CODE descriptor for both kernel and user) show
0 384 moveto (1622   // because it would have to have DPL_USR, but the CPU forbids) show
0 372 moveto (1623   // an interrupt from CPL=0 to DPL=3.) show
0 360 moveto (1624   c = &cpus[cpunum\(\)];) show
0 348 moveto (1625   c->gdt[SEG_KCODE] = SEG\(STA_X|STA_R, 0, 0xffffffff, 0\);) show
0 336 moveto (1626   c->gdt[SEG_KDATA] = SEG\(STA_W, 0, 0xffffffff, 0\);) show
0 324 moveto (1627   c->gdt[SEG_UCODE] = SEG\(STA_X|STA_R, 0, 0xffffffff, DPL_USER\);) show
0 312 moveto (1628   c->gdt[SEG_UDATA] = SEG\(STA_W, 0, 0xffffffff, DPL_USER\);) show
0 300 moveto (1629 ) show
0 288 moveto (1630   // Map cpu, and curproc) show
0 276 moveto (1631   c->gdt[SEG_KCPU] = SEG\(STA_W, &c->cpu, 8, 0\);) show
0 264 moveto (1632 ) show
0 252 moveto (1633   lgdt\(c->gdt, sizeof\(c->gdt\)\);) show
0 240 moveto (1634   loadgs\(SEG_KCPU << 3\);) show
0 228 moveto (1635 ) show
0 216 moveto (1636   // Initialize cpu-local storage.) show
0 204 moveto (1637   cpu = c;) show
0 192 moveto (1638   proc = 0;) show
0 180 moveto (1639 }) show
0 168 moveto (1640 ) show
0 156 moveto (1641 ) show
0 144 moveto (1642 ) show
0 132 moveto (1643 ) show
0 120 moveto (1644 ) show
0 108 moveto (1645 ) show
0 96 moveto (1646 ) show
0 84 moveto (1647 ) show
0 72 moveto (1648 ) show
0 60 moveto (1649 ) show
0 24 moveto (Sheet 16) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/vm.c  Page 2) show
0 648 moveto (1650 // Return the address of the PTE in page table pgdir) show
0 636 moveto (1651 // that corresponds to virtual address va.  If alloc!=0,) show
0 624 moveto (1652 // create any required page table pages.) show
0 612 moveto (1653 static pte_t *) show
0 600 moveto (1654 walkpgdir\(pde_t *pgdir, const void *va, int alloc\)) show
0 588 moveto (1655 {) show
0 576 moveto (1656   pde_t *pde;) show
0 564 moveto (1657   pte_t *pgtab;) show
0 552 moveto (1658 ) show
0 540 moveto (1659   pde = &pgdir[PDX\(va\)];) show
0 528 moveto (1660   if\(*pde & PTE_P\){) show
0 516 moveto (1661     pgtab = \(pte_t*\)p2v\(PTE_ADDR\(*pde\)\);) show
0 504 moveto (1662   } else {) show
0 492 moveto (1663     if\(!alloc || \(pgtab = \(pte_t*\)kalloc\(\)\) == 0\)) show
0 480 moveto (1664       return 0;) show
0 468 moveto (1665     // Make sure all those PTE_P bits are zero.) show
0 456 moveto (1666     memset\(pgtab, 0, PGSIZE\);) show
0 444 moveto (1667     // The permissions here are overly generous, but they can) show
0 432 moveto (1668     // be further restricted by the permissions in the page table) show
0 420 moveto (1669     // entries, if necessary.) show
0 408 moveto (1670     *pde = v2p\(pgtab\) | PTE_P | PTE_W | PTE_U;) show
0 396 moveto (1671   }) show
0 384 moveto (1672   return &pgtab[PTX\(va\)];) show
0 372 moveto (1673 }) show
0 360 moveto (1674 ) show
0 348 moveto (1675 // Create PTEs for virtual addresses starting at va that refer to) show
0 336 moveto (1676 // physical addresses starting at pa. va and size might not) show
0 324 moveto (1677 // be page-aligned.) show
0 312 moveto (1678 static int) show
0 300 moveto (1679 mappages\(pde_t *pgdir, void *va, uint size, uint pa, int perm\)) show
0 288 moveto (1680 {) show
0 276 moveto (1681   char *a, *last;) show
0 264 moveto (1682   pte_t *pte;) show
0 252 moveto (1683 ) show
0 240 moveto (1684   a = \(char*\)PGROUNDDOWN\(\(uint\)va\);) show
0 228 moveto (1685   last = \(char*\)PGROUNDDOWN\(\(\(uint\)va\) + size - 1\);) show
0 216 moveto (1686   for\(;;\){) show
0 204 moveto (1687     if\(\(pte = walkpgdir\(pgdir, a, 1\)\) == 0\)) show
0 192 moveto (1688       return -1;) show
0 180 moveto (1689     if\(*pte & PTE_P\)) show
0 168 moveto (1690       panic\("remap"\);) show
0 156 moveto (1691     *pte = pa | perm | PTE_P;) show
0 144 moveto (1692     if\(a == last\)) show
0 132 moveto (1693       break;) show
0 120 moveto (1694     a += PGSIZE;) show
0 108 moveto (1695     pa += PGSIZE;) show
0 96 moveto (1696   }) show
0 84 moveto (1697   return 0;) show
0 72 moveto (1698 }) show
0 60 moveto (1699 ) show
0 24 moveto (Sheet 16) show
grestore
restore
showpage
%%Page: 25 25
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/vm.c  Page 3) show
0 648 moveto (1700 // There is one page table per process, plus one that's used when) show
0 636 moveto (1701 // a CPU is not running any process \(kpgdir\). The kernel uses the) show
0 624 moveto (1702 // current process's page table during system calls and interrupts;) show
0 612 moveto (1703 // page protection bits prevent user code from using the kernel's) show
0 600 moveto (1704 // mappings.) show
0 588 moveto (1705 //) show
0 576 moveto (1706 // setupkvm\(\) and exec\(\) set up every page table like this:) show
0 564 moveto (1707 //) show
0 552 moveto (1708 //   0..KERNBASE: user memory \(text+data+stack+heap\), mapped to) show
0 540 moveto (1709 //                phys memory allocated by the kernel) show
0 528 moveto (1710 //   KERNBASE..KERNBASE+EXTMEM: mapped to 0..EXTMEM \(for I/O space\)) show
0 516 moveto (1711 //   KERNBASE+EXTMEM..data: mapped to EXTMEM..V2P\(data\)) show
0 504 moveto (1712 //                for the kernel's instructions and r/o data) show
0 492 moveto (1713 //   data..KERNBASE+PHYSTOP: mapped to V2P\(data\)..PHYSTOP,) show
0 480 moveto (1714 //                                  rw data + free physical memory) show
0 468 moveto (1715 //   0xfe000000..0: mapped direct \(devices such as ioapic\)) show
0 456 moveto (1716 //) show
0 444 moveto (1717 // The kernel allocates physical memory for its heap and for user memory) show
0 432 moveto (1718 // between V2P\(end\) and the end of physical memory \(PHYSTOP\)) show
0 420 moveto (1719 // \(directly addressable from end..P2V\(PHYSTOP\)\).) show
0 408 moveto (1720 ) show
0 396 moveto (1721 // This table defines the kernel's mappings, which are present in) show
0 384 moveto (1722 // every process's page table.) show
0 372 moveto (1723 static struct kmap {) show
0 360 moveto (1724   void *virt;) show
0 348 moveto (1725   uint phys_start;) show
0 336 moveto (1726   uint phys_end;) show
0 324 moveto (1727   int perm;) show
0 312 moveto (1728 } kmap[] = {) show
0 300 moveto (1729  { \(void*\)KERNBASE, 0,             EXTMEM,    PTE_W}, // I/O space) show
0 288 moveto (1730  { \(void*\)KERNLINK, V2P\(KERNLINK\), V2P\(data\), 0},     // kern text+rodata) show
0 276 moveto (1731  { \(void*\)data,     V2P\(data\),     PHYSTOP,   PTE_W}, // kern data+memory) show
0 264 moveto (1732  { \(void*\)DEVSPACE, DEVSPACE,      0,         PTE_W}, // more devices) show
0 252 moveto (1733 };) show
0 240 moveto (1734 ) show
0 228 moveto (1735 // Set up kernel part of a page table.) show
0 216 moveto (1736 pde_t*) show
0 204 moveto (1737 setupkvm\(void\)) show
0 192 moveto (1738 {) show
0 180 moveto (1739   pde_t *pgdir;) show
0 168 moveto (1740   struct kmap *k;) show
0 156 moveto (1741 ) show
0 144 moveto (1742   if\(\(pgdir = \(pde_t*\)kalloc\(\)\) == 0\)) show
0 132 moveto (1743     return 0;) show
0 120 moveto (1744   memset\(pgdir, 0, PGSIZE\);) show
0 108 moveto (1745   if \(p2v\(PHYSTOP\) > \(void*\)DEVSPACE\)) show
0 96 moveto (1746     panic\("PHYSTOP too high"\);) show
0 84 moveto (1747   for\(k = kmap; k < &kmap[NELEM\(kmap\)]; k++\)) show
0 72 moveto (1748     if\(mappages\(pgdir, k->virt, k->phys_end - k->phys_start,) show
0 60 moveto (1749                 \(uint\)k->phys_start, k->perm\) < 0\)) show
0 24 moveto (Sheet 17) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/vm.c  Page 4) show
0 648 moveto (1750       return 0;) show
0 636 moveto (1751   return pgdir;) show
0 624 moveto (1752 }) show
0 612 moveto (1753 ) show
0 600 moveto (1754 // Allocate one page table for the machine for the kernel address) show
0 588 moveto (1755 // space for scheduler processes.) show
0 576 moveto (1756 void) show
0 564 moveto (1757 kvmalloc\(void\)) show
0 552 moveto (1758 {) show
0 540 moveto (1759   kpgdir = setupkvm\(\);) show
0 528 moveto (1760   switchkvm\(\);) show
0 516 moveto (1761 }) show
0 504 moveto (1762 ) show
0 492 moveto (1763 // Switch h/w page table register to the kernel-only page table,) show
0 480 moveto (1764 // for when no process is running.) show
0 468 moveto (1765 void) show
0 456 moveto (1766 switchkvm\(void\)) show
0 444 moveto (1767 {) show
0 432 moveto (1768   lcr3\(v2p\(kpgdir\)\);   // switch to the kernel page table) show
0 420 moveto (1769 }) show
0 408 moveto (1770 ) show
0 396 moveto (1771 // Switch TSS and h/w page table to correspond to process p.) show
0 384 moveto (1772 void) show
0 372 moveto (1773 switchuvm\(struct proc *p\)) show
0 360 moveto (1774 {) show
0 348 moveto (1775   pushcli\(\);) show
0 336 moveto (1776   cpu->gdt[SEG_TSS] = SEG16\(STS_T32A, &cpu->ts, sizeof\(cpu->ts\)-1, 0\);) show
0 324 moveto (1777   cpu->gdt[SEG_TSS].s = 0;) show
0 312 moveto (1778   cpu->ts.ss0 = SEG_KDATA << 3;) show
0 300 moveto (1779   cpu->ts.esp0 = \(uint\)proc->kstack + KSTACKSIZE;) show
0 288 moveto (1780   ltr\(SEG_TSS << 3\);) show
0 276 moveto (1781   if\(p->pgdir == 0\)) show
0 264 moveto (1782     panic\("switchuvm: no pgdir"\);) show
0 252 moveto (1783   lcr3\(v2p\(p->pgdir\)\);  // switch to new address space) show
0 240 moveto (1784   popcli\(\);) show
0 228 moveto (1785 }) show
0 216 moveto (1786 ) show
0 204 moveto (1787 ) show
0 192 moveto (1788 ) show
0 180 moveto (1789 ) show
0 168 moveto (1790 ) show
0 156 moveto (1791 ) show
0 144 moveto (1792 ) show
0 132 moveto (1793 ) show
0 120 moveto (1794 ) show
0 108 moveto (1795 ) show
0 96 moveto (1796 ) show
0 84 moveto (1797 ) show
0 72 moveto (1798 ) show
0 60 moveto (1799 ) show
0 24 moveto (Sheet 17) show
grestore
restore
showpage
%%Page: 26 26
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/vm.c  Page 5) show
0 648 moveto (1800 // Load the initcode into address 0 of pgdir.) show
0 636 moveto (1801 // sz must be less than a page.) show
0 624 moveto (1802 void) show
0 612 moveto (1803 inituvm\(pde_t *pgdir, char *init, uint sz\)) show
0 600 moveto (1804 {) show
0 588 moveto (1805   char *mem;) show
0 576 moveto (1806 ) show
0 564 moveto (1807   if\(sz >= PGSIZE\)) show
0 552 moveto (1808     panic\("inituvm: more than a page"\);) show
0 540 moveto (1809   mem = kalloc\(\);) show
0 528 moveto (1810   memset\(mem, 0, PGSIZE\);) show
0 516 moveto (1811   mappages\(pgdir, 0, PGSIZE, v2p\(mem\), PTE_W|PTE_U\);) show
0 504 moveto (1812   memmove\(mem, init, sz\);) show
0 492 moveto (1813 }) show
0 480 moveto (1814 ) show
0 468 moveto (1815 // Load a program segment into pgdir.  addr must be page-aligned) show
0 456 moveto (1816 // and the pages from addr to addr+sz must already be mapped.) show
0 444 moveto (1817 int) show
0 432 moveto (1818 loaduvm\(pde_t *pgdir, char *addr, struct inode *ip, uint offset, uint sz\)) show
0 420 moveto (1819 {) show
0 408 moveto (1820   uint i, pa, n;) show
0 396 moveto (1821   pte_t *pte;) show
0 384 moveto (1822 ) show
0 372 moveto (1823   if\(\(uint\) addr % PGSIZE != 0\)) show
0 360 moveto (1824     panic\("loaduvm: addr must be page aligned"\);) show
0 348 moveto (1825   for\(i = 0; i < sz; i += PGSIZE\){) show
0 336 moveto (1826     if\(\(pte = walkpgdir\(pgdir, addr+i, 0\)\) == 0\)) show
0 324 moveto (1827       panic\("loaduvm: address should exist"\);) show
0 312 moveto (1828     pa = PTE_ADDR\(*pte\);) show
0 300 moveto (1829     if\(sz - i < PGSIZE\)) show
0 288 moveto (1830       n = sz - i;) show
0 276 moveto (1831     else) show
0 264 moveto (1832       n = PGSIZE;) show
0 252 moveto (1833     if\(readi\(ip, p2v\(pa\), offset+i, n\) != n\)) show
0 240 moveto (1834       return -1;) show
0 228 moveto (1835   }) show
0 216 moveto (1836   return 0;) show
0 204 moveto (1837 }) show
0 192 moveto (1838 ) show
0 180 moveto (1839 ) show
0 168 moveto (1840 ) show
0 156 moveto (1841 ) show
0 144 moveto (1842 ) show
0 132 moveto (1843 ) show
0 120 moveto (1844 ) show
0 108 moveto (1845 ) show
0 96 moveto (1846 ) show
0 84 moveto (1847 ) show
0 72 moveto (1848 ) show
0 60 moveto (1849 ) show
0 24 moveto (Sheet 18) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/vm.c  Page 6) show
0 648 moveto (1850 // Allocate page tables and physical memory to grow process from oldsz to) show
0 636 moveto (1851 // newsz, which need not be page aligned.  Returns new size or 0 on error.) show
0 624 moveto (1852 int) show
0 612 moveto (1853 allocuvm\(pde_t *pgdir, uint oldsz, uint newsz\)) show
0 600 moveto (1854 {) show
0 588 moveto (1855   char *mem;) show
0 576 moveto (1856   uint a;) show
0 564 moveto (1857 ) show
0 552 moveto (1858   if\(newsz >= KERNBASE\)) show
0 540 moveto (1859     return 0;) show
0 528 moveto (1860   if\(newsz < oldsz\)) show
0 516 moveto (1861     return oldsz;) show
0 504 moveto (1862 ) show
0 492 moveto (1863   a = PGROUNDUP\(oldsz\);) show
0 480 moveto (1864   for\(; a < newsz; a += PGSIZE\){) show
0 468 moveto (1865     mem = kalloc\(\);) show
0 456 moveto (1866     if\(mem == 0\){) show
0 444 moveto (1867       cprintf\("allocuvm out of memory\\n"\);) show
0 432 moveto (1868       deallocuvm\(pgdir, newsz, oldsz\);) show
0 420 moveto (1869       return 0;) show
0 408 moveto (1870     }) show
0 396 moveto (1871     memset\(mem, 0, PGSIZE\);) show
0 384 moveto (1872     mappages\(pgdir, \(char*\)a, PGSIZE, v2p\(mem\), PTE_W|PTE_U\);) show
0 372 moveto (1873   }) show
0 360 moveto (1874   return newsz;) show
0 348 moveto (1875 }) show
0 336 moveto (1876 ) show
0 324 moveto (1877 // Deallocate user pages to bring the process size from oldsz to) show
0 312 moveto (1878 // newsz.  oldsz and newsz need not be page-aligned, nor does newsz) show
0 300 moveto (1879 // need to be less than oldsz.  oldsz can be larger than the actual) show
0 288 moveto (1880 // process size.  Returns the new process size.) show
0 276 moveto (1881 int) show
0 264 moveto (1882 deallocuvm\(pde_t *pgdir, uint oldsz, uint newsz\)) show
0 252 moveto (1883 {) show
0 240 moveto (1884   pte_t *pte;) show
0 228 moveto (1885   uint a, pa;) show
0 216 moveto (1886 ) show
0 204 moveto (1887   if\(newsz >= oldsz\)) show
0 192 moveto (1888     return oldsz;) show
0 180 moveto (1889 ) show
0 168 moveto (1890   a = PGROUNDUP\(newsz\);) show
0 156 moveto (1891   for\(; a  < oldsz; a += PGSIZE\){) show
0 144 moveto (1892     pte = walkpgdir\(pgdir, \(char*\)a, 0\);) show
0 132 moveto (1893     if\(!pte\)) show
0 120 moveto (1894       a += \(NPTENTRIES - 1\) * PGSIZE;) show
0 108 moveto (1895     else if\(\(*pte & PTE_P\) != 0\){) show
0 96 moveto (1896       pa = PTE_ADDR\(*pte\);) show
0 84 moveto (1897       if\(pa == 0\)) show
0 72 moveto (1898         panic\("kfree"\);) show
0 60 moveto (1899       char *v = p2v\(pa\);) show
0 24 moveto (Sheet 18) show
grestore
restore
showpage
%%Page: 27 27
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/vm.c  Page 7) show
0 648 moveto (1900       kfree\(v\);) show
0 636 moveto (1901       *pte = 0;) show
0 624 moveto (1902     }) show
0 612 moveto (1903   }) show
0 600 moveto (1904   return newsz;) show
0 588 moveto (1905 }) show
0 576 moveto (1906 ) show
0 564 moveto (1907 // Free a page table and all the physical memory pages) show
0 552 moveto (1908 // in the user part.) show
0 540 moveto (1909 void) show
0 528 moveto (1910 freevm\(pde_t *pgdir\)) show
0 516 moveto (1911 {) show
0 504 moveto (1912   uint i;) show
0 492 moveto (1913 ) show
0 480 moveto (1914   if\(pgdir == 0\)) show
0 468 moveto (1915     panic\("freevm: no pgdir"\);) show
0 456 moveto (1916   deallocuvm\(pgdir, KERNBASE, 0\);) show
0 444 moveto (1917   for\(i = 0; i < NPDENTRIES; i++\){) show
0 432 moveto (1918     if\(pgdir[i] & PTE_P\){) show
0 420 moveto (1919       char * v = p2v\(PTE_ADDR\(pgdir[i]\)\);) show
0 408 moveto (1920       kfree\(v\);) show
0 396 moveto (1921     }) show
0 384 moveto (1922   }) show
0 372 moveto (1923   kfree\(\(char*\)pgdir\);) show
0 360 moveto (1924 }) show
0 348 moveto (1925 ) show
0 336 moveto (1926 // Clear PTE_U on a page. Used to create an inaccessible) show
0 324 moveto (1927 // page beneath the user stack.) show
0 312 moveto (1928 void) show
0 300 moveto (1929 clearpteu\(pde_t *pgdir, char *uva\)) show
0 288 moveto (1930 {) show
0 276 moveto (1931   pte_t *pte;) show
0 264 moveto (1932 ) show
0 252 moveto (1933   pte = walkpgdir\(pgdir, uva, 0\);) show
0 240 moveto (1934   if\(pte == 0\)) show
0 228 moveto (1935     panic\("clearpteu"\);) show
0 216 moveto (1936   *pte &= ~PTE_U;) show
0 204 moveto (1937 }) show
0 192 moveto (1938 ) show
0 180 moveto (1939 ) show
0 168 moveto (1940 ) show
0 156 moveto (1941 ) show
0 144 moveto (1942 ) show
0 132 moveto (1943 ) show
0 120 moveto (1944 ) show
0 108 moveto (1945 ) show
0 96 moveto (1946 ) show
0 84 moveto (1947 ) show
0 72 moveto (1948 ) show
0 60 moveto (1949 ) show
0 24 moveto (Sheet 19) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/vm.c  Page 8) show
0 648 moveto (1950 // Given a parent process's page table, create a copy) show
0 636 moveto (1951 // of it for a child.) show
0 624 moveto (1952 pde_t*) show
0 612 moveto (1953 copyuvm\(pde_t *pgdir, uint sz\)) show
0 600 moveto (1954 {) show
0 588 moveto (1955   pde_t *d;) show
0 576 moveto (1956   pte_t *pte;) show
0 564 moveto (1957   uint pa, i, flags;) show
0 552 moveto (1958   char *mem;) show
0 540 moveto (1959 ) show
0 528 moveto (1960   if\(\(d = setupkvm\(\)\) == 0\)) show
0 516 moveto (1961     return 0;) show
0 504 moveto (1962   for\(i = 0; i < sz; i += PGSIZE\){) show
0 492 moveto (1963     if\(\(pte = walkpgdir\(pgdir, \(void *\) i, 0\)\) == 0\)) show
0 480 moveto (1964       panic\("copyuvm: pte should exist"\);) show
0 468 moveto (1965     if\(!\(*pte & PTE_P\)\)) show
0 456 moveto (1966       panic\("copyuvm: page not present"\);) show
0 444 moveto (1967     pa = PTE_ADDR\(*pte\);) show
0 432 moveto (1968     flags = PTE_FLAGS\(*pte\);) show
0 420 moveto (1969     if\(\(mem = kalloc\(\)\) == 0\)) show
0 408 moveto (1970       goto bad;) show
0 396 moveto (1971     memmove\(mem, \(char*\)p2v\(pa\), PGSIZE\);) show
0 384 moveto (1972     if\(mappages\(d, \(void*\)i, PGSIZE, v2p\(mem\), flags\) < 0\)) show
0 372 moveto (1973       goto bad;) show
0 360 moveto (1974   }) show
0 348 moveto (1975   return d;) show
0 336 moveto (1976 ) show
0 324 moveto (1977 bad:) show
0 312 moveto (1978   freevm\(d\);) show
0 300 moveto (1979   return 0;) show
0 288 moveto (1980 }) show
0 276 moveto (1981 ) show
0 264 moveto (1982 // Map user virtual address to kernel address.) show
0 252 moveto (1983 char*) show
0 240 moveto (1984 uva2ka\(pde_t *pgdir, char *uva\)) show
0 228 moveto (1985 {) show
0 216 moveto (1986   pte_t *pte;) show
0 204 moveto (1987 ) show
0 192 moveto (1988   pte = walkpgdir\(pgdir, uva, 0\);) show
0 180 moveto (1989   if\(\(*pte & PTE_P\) == 0\)) show
0 168 moveto (1990     return 0;) show
0 156 moveto (1991   if\(\(*pte & PTE_U\) == 0\)) show
0 144 moveto (1992     return 0;) show
0 132 moveto (1993   return \(char*\)p2v\(PTE_ADDR\(*pte\)\);) show
0 120 moveto (1994 }) show
0 108 moveto (1995 ) show
0 96 moveto (1996 ) show
0 84 moveto (1997 ) show
0 72 moveto (1998 ) show
0 60 moveto (1999 ) show
0 24 moveto (Sheet 19) show
grestore
restore
showpage
%%Page: 28 28
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/vm.c  Page 9) show
0 648 moveto (2000 // Copy len bytes from p to user address va in page table pgdir.) show
0 636 moveto (2001 // Most useful when pgdir is not the current page table.) show
0 624 moveto (2002 // uva2ka ensures this only works for PTE_U pages.) show
0 612 moveto (2003 int) show
0 600 moveto (2004 copyout\(pde_t *pgdir, uint va, void *p, uint len\)) show
0 588 moveto (2005 {) show
0 576 moveto (2006   char *buf, *pa0;) show
0 564 moveto (2007   uint n, va0;) show
0 552 moveto (2008 ) show
0 540 moveto (2009   buf = \(char*\)p;) show
0 528 moveto (2010   while\(len > 0\){) show
0 516 moveto (2011     va0 = \(uint\)PGROUNDDOWN\(va\);) show
0 504 moveto (2012     pa0 = uva2ka\(pgdir, \(char*\)va0\);) show
0 492 moveto (2013     if\(pa0 == 0\)) show
0 480 moveto (2014       return -1;) show
0 468 moveto (2015     n = PGSIZE - \(va - va0\);) show
0 456 moveto (2016     if\(n > len\)) show
0 444 moveto (2017       n = len;) show
0 432 moveto (2018     memmove\(pa0 + \(va - va0\), buf, n\);) show
0 420 moveto (2019     len -= n;) show
0 408 moveto (2020     buf += n;) show
0 396 moveto (2021     va = va0 + PGSIZE;) show
0 384 moveto (2022   }) show
0 372 moveto (2023   return 0;) show
0 360 moveto (2024 }) show
0 348 moveto (2025 ) show
0 336 moveto (2026 // Blank page.) show
0 324 moveto (2027 // Blank page.) show
0 312 moveto (2028 // Blank page.) show
0 300 moveto (2029 ) show
0 288 moveto (2030 ) show
0 276 moveto (2031 ) show
0 264 moveto (2032 ) show
0 252 moveto (2033 ) show
0 240 moveto (2034 ) show
0 228 moveto (2035 ) show
0 216 moveto (2036 ) show
0 204 moveto (2037 ) show
0 192 moveto (2038 ) show
0 180 moveto (2039 ) show
0 168 moveto (2040 ) show
0 156 moveto (2041 ) show
0 144 moveto (2042 ) show
0 132 moveto (2043 ) show
0 120 moveto (2044 ) show
0 108 moveto (2045 ) show
0 96 moveto (2046 ) show
0 84 moveto (2047 ) show
0 72 moveto (2048 ) show
0 60 moveto (2049 ) show
0 24 moveto (Sheet 20) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/proc.h  Page 1) show
0 648 moveto (2050 // Segments in proc->gdt.) show
0 636 moveto (2051 #define NSEGS     7) show
0 624 moveto (2052 ) show
0 612 moveto (2053 // Default UID and GID for init) show
0 600 moveto (2054 #define INITUID     0) show
0 588 moveto (2055 #define INITGID     0) show
0 576 moveto (2056 ) show
0 564 moveto (2057 // Per-CPU state) show
0 552 moveto (2058 struct cpu {) show
0 540 moveto (2059   uchar id;                    // Local APIC ID; index into cpus[] below) show
0 528 moveto (2060   struct context *scheduler;   // swtch\(\) here to enter scheduler) show
0 516 moveto (2061   struct taskstate ts;         // Used by x86 to find stack for interrupt) show
0 504 moveto (2062   struct segdesc gdt[NSEGS];   // x86 global descriptor table) show
0 492 moveto (2063   volatile uint started;       // Has the CPU started?) show
0 480 moveto (2064   int ncli;                    // Depth of pushcli nesting.) show
0 468 moveto (2065   int intena;                  // Were interrupts enabled before pushcli?) show
0 456 moveto (2066 ) show
0 444 moveto (2067   // Cpu-local storage variables; see below) show
0 432 moveto (2068   struct cpu *cpu;) show
0 420 moveto (2069   struct proc *proc;           // The currently-running process.) show
0 408 moveto (2070 };) show
0 396 moveto (2071 ) show
0 384 moveto (2072 extern struct cpu cpus[NCPU];) show
0 372 moveto (2073 extern int ncpu;) show
0 360 moveto (2074 ) show
0 348 moveto (2075 // Per-CPU variables, holding pointers to the) show
0 336 moveto (2076 // current cpu and to the current process.) show
0 324 moveto (2077 // The asm suffix tells gcc to use "%gs:0" to refer to cpu) show
0 312 moveto (2078 // and "%gs:4" to refer to proc.  seginit sets up the) show
0 300 moveto (2079 // %gs segment register so that %gs refers to the memory) show
0 288 moveto (2080 // holding those two variables in the local cpu's struct cpu.) show
0 276 moveto (2081 // This is similar to how thread-local variables are implemented) show
0 264 moveto (2082 // in thread libraries such as Linux pthreads.) show
0 252 moveto (2083 extern struct cpu *cpu asm\("%gs:0"\);       // &cpus[cpunum\(\)]) show
0 240 moveto (2084 extern struct proc *proc asm\("%gs:4"\);     // cpus[cpunum\(\)].proc) show
0 228 moveto (2085 ) show
0 216 moveto (2086 // Saved registers for kernel context switches.) show
0 204 moveto (2087 // Don't need to save all the segment registers \(%cs, etc\),) show
0 192 moveto (2088 // because they are constant across kernel contexts.) show
0 180 moveto (2089 // Don't need to save %eax, %ecx, %edx, because the) show
0 168 moveto (2090 // x86 convention is that the caller has saved them.) show
0 156 moveto (2091 // Contexts are stored at the bottom of the stack they) show
0 144 moveto (2092 // describe; the stack pointer is the address of the context.) show
0 132 moveto (2093 // The layout of the context matches the layout of the stack in swtch.S) show
0 120 moveto (2094 // at the "Switch stacks" comment. Switch doesn't save eip explicitly,) show
0 108 moveto (2095 // but it is on the stack and allocproc\(\) manipulates it.) show
0 96 moveto (2096 struct context {) show
0 84 moveto (2097   uint edi;) show
0 72 moveto (2098   uint esi;) show
0 60 moveto (2099   uint ebx;) show
0 24 moveto (Sheet 20) show
grestore
restore
showpage
%%Page: 29 29
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/proc.h  Page 2) show
0 648 moveto (2100   uint ebp;) show
0 636 moveto (2101   uint eip;) show
0 624 moveto (2102 };) show
0 612 moveto (2103 ) show
0 600 moveto (2104 enum procstate { UNUSED, EMBRYO, SLEEPING, RUNNABLE, RUNNING, ZOMBIE };) show
0 588 moveto (2105 ) show
0 576 moveto (2106 // Per-process state) show
0 564 moveto (2107 struct proc {) show
0 552 moveto (2108   uint sz;                     // Size of process memory \(bytes\)) show
0 540 moveto (2109   pde_t* pgdir;                // Page table) show
0 528 moveto (2110   char *kstack;                // Bottom of kernel stack for this process) show
0 516 moveto (2111   enum procstate state;        // Process state) show
0 504 moveto (2112   uint pid;                    // Process ID) show
0 492 moveto (2113   struct proc *parent;         // Parent process) show
0 480 moveto (2114   struct trapframe *tf;        // Trap frame for current syscall) show
0 468 moveto (2115   struct context *context;     // swtch\(\) here to run process) show
0 456 moveto (2116   void *chan;                  // If non-zero, sleeping on chan) show
0 444 moveto (2117   int killed;                  // If non-zero, have been killed) show
0 432 moveto (2118   struct file *ofile[NOFILE];  // Open files) show
0 420 moveto (2119   struct inode *cwd;           // Current directory) show
0 408 moveto (2120   char name[16];               // Process name \(debugging\)) show
0 396 moveto (2121   uint start_ticks;) show
43 mp_a_x mul 396 moveto (// Start ticks \(debugging\)) show
0 384 moveto (2122 #ifdef CS333_P2) show
0 372 moveto (2123 ) show
8 mp_a_x mul 372 moveto (uint cpu_ticks_total;) show
57 mp_a_x mul 372 moveto (// Total elapsed ticks in CPU) show
0 360 moveto (2124 ) show
8 mp_a_x mul 360 moveto (uint cpu_ticks_in;) show
57 mp_a_x mul 360 moveto (// Ticks when scheduled) show
0 348 moveto (2125   uint uid;                    // Process owner's user id) show
0 336 moveto (2126   uint gid;                    // Process owner's group id) show
0 324 moveto (2127 #endif) show
0 312 moveto (2128 };) show
0 300 moveto (2129 ) show
0 288 moveto (2130 // Process memory is laid out contiguously, low addresses first:) show
0 276 moveto (2131 //   text) show
0 264 moveto (2132 //   original data and bss) show
0 252 moveto (2133 //   fixed-size stack) show
0 240 moveto (2134 //   expandable heap) show
0 228 moveto (2135 ) show
0 216 moveto (2136 ) show
0 204 moveto (2137 ) show
0 192 moveto (2138 ) show
0 180 moveto (2139 ) show
0 168 moveto (2140 ) show
0 156 moveto (2141 ) show
0 144 moveto (2142 ) show
0 132 moveto (2143 ) show
0 120 moveto (2144 ) show
0 108 moveto (2145 ) show
0 96 moveto (2146 ) show
0 84 moveto (2147 ) show
0 72 moveto (2148 ) show
0 60 moveto (2149 ) show
0 24 moveto (Sheet 21) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/proc.c  Page 1) show
0 648 moveto (2150 #include "types.h") show
0 636 moveto (2151 #include "defs.h") show
0 624 moveto (2152 #include "param.h") show
0 612 moveto (2153 #include "memlayout.h") show
0 600 moveto (2154 #include "mmu.h") show
0 588 moveto (2155 #include "x86.h") show
0 576 moveto (2156 #include "proc.h") show
0 564 moveto (2157 #include "spinlock.h") show
0 552 moveto (2158 #include "uproc.h") show
0 540 moveto (2159 ) show
0 528 moveto (2160 struct {) show
0 516 moveto (2161   struct spinlock lock;) show
0 504 moveto (2162   struct proc proc[NPROC];) show
0 492 moveto (2163 } ptable;) show
0 480 moveto (2164 ) show
0 468 moveto (2165 static struct proc *initproc;) show
0 456 moveto (2166 ) show
0 444 moveto (2167 int nextpid = 1;) show
0 432 moveto (2168 extern void forkret\(void\);) show
0 420 moveto (2169 extern void trapret\(void\);) show
0 408 moveto (2170 ) show
0 396 moveto (2171 static void wakeup1\(void *chan\);) show
0 384 moveto (2172 ) show
0 372 moveto (2173 void) show
0 360 moveto (2174 pinit\(void\)) show
0 348 moveto (2175 {) show
0 336 moveto (2176   initlock\(&ptable.lock, "ptable"\);) show
0 324 moveto (2177 }) show
0 312 moveto (2178 ) show
0 300 moveto (2179 // Look in the process table for an UNUSED proc.) show
0 288 moveto (2180 // If found, change state to EMBRYO and initialize) show
0 276 moveto (2181 // state required to run in the kernel.) show
0 264 moveto (2182 // Otherwise return 0.) show
0 252 moveto (2183 static struct proc*) show
0 240 moveto (2184 allocproc\(void\)) show
0 228 moveto (2185 {) show
0 216 moveto (2186   struct proc *p;) show
0 204 moveto (2187   char *sp;) show
0 192 moveto (2188 ) show
0 180 moveto (2189   acquire\(&ptable.lock\);) show
0 168 moveto (2190   for\(p = ptable.proc; p < &ptable.proc[NPROC]; p++\)) show
0 156 moveto (2191     if\(p->state == UNUSED\)) show
0 144 moveto (2192       goto found;) show
0 132 moveto (2193   release\(&ptable.lock\);) show
0 120 moveto (2194   return 0;) show
0 108 moveto (2195 ) show
0 96 moveto (2196 found:) show
0 84 moveto (2197   p->state = EMBRYO;) show
0 72 moveto (2198   p->pid = nextpid++;) show
0 60 moveto (2199   release\(&ptable.lock\);) show
0 24 moveto (Sheet 21) show
grestore
restore
showpage
%%Page: 30 30
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/proc.c  Page 2) show
0 648 moveto (2200   // Allocate kernel stack.) show
0 636 moveto (2201   if\(\(p->kstack = kalloc\(\)\) == 0\){) show
0 624 moveto (2202     p->state = UNUSED;) show
0 612 moveto (2203     return 0;) show
0 600 moveto (2204   }) show
0 588 moveto (2205   sp = p->kstack + KSTACKSIZE;) show
0 576 moveto (2206 ) show
0 564 moveto (2207   // Leave room for trap frame.) show
0 552 moveto (2208   sp -= sizeof *p->tf;) show
0 540 moveto (2209   p->tf = \(struct trapframe*\)sp;) show
0 528 moveto (2210 ) show
0 516 moveto (2211   // Set up new context to start executing at forkret,) show
0 504 moveto (2212   // which returns to trapret.) show
0 492 moveto (2213   sp -= 4;) show
0 480 moveto (2214   *\(uint*\)sp = \(uint\)trapret;) show
0 468 moveto (2215 ) show
0 456 moveto (2216   sp -= sizeof *p->context;) show
0 444 moveto (2217   p->context = \(struct context*\)sp;) show
0 432 moveto (2218   memset\(p->context, 0, sizeof *p->context\);) show
0 420 moveto (2219   p->context->eip = \(uint\)forkret;) show
0 408 moveto (2220 ) show
0 396 moveto (2221   acquire\(&tickslock\);) show
0 384 moveto (2222   p->start_ticks = ticks;) show
0 372 moveto (2223   release\(&tickslock\);) show
0 360 moveto (2224 ) show
8 mp_a_x mul 360 moveto (p->cpu_ticks_in = 0;) show
0 348 moveto (2225 ) show
8 mp_a_x mul 348 moveto (p->cpu_ticks_in = 0;) show
0 336 moveto (2226 ) show
0 324 moveto (2227   return p;) show
0 312 moveto (2228 }) show
0 300 moveto (2229 ) show
0 288 moveto (2230 // Set up first user process.) show
0 276 moveto (2231 void) show
0 264 moveto (2232 userinit\(void\)) show
0 252 moveto (2233 {) show
0 240 moveto (2234   struct proc *p;) show
0 228 moveto (2235   extern char _binary_initcode_start[], _binary_initcode_size[];) show
0 216 moveto (2236 ) show
0 204 moveto (2237   p = allocproc\(\);) show
0 192 moveto (2238   initproc = p;) show
0 180 moveto (2239   if\(\(p->pgdir = setupkvm\(\)\) == 0\)) show
0 168 moveto (2240     panic\("userinit: out of memory?"\);) show
0 156 moveto (2241   inituvm\(p->pgdir, _binary_initcode_start, \(int\)_binary_initcode_size\);) show
0 144 moveto (2242   p->sz = PGSIZE;) show
0 132 moveto (2243   memset\(p->tf, 0, sizeof\(*p->tf\)\);) show
0 120 moveto (2244   p->tf->cs = \(SEG_UCODE << 3\) | DPL_USER;) show
0 108 moveto (2245   p->tf->ds = \(SEG_UDATA << 3\) | DPL_USER;) show
0 96 moveto (2246   p->tf->es = p->tf->ds;) show
0 84 moveto (2247   p->tf->ss = p->tf->ds;) show
0 72 moveto (2248   p->tf->eflags = FL_IF;) show
0 60 moveto (2249   p->tf->esp = PGSIZE;) show
0 24 moveto (Sheet 22) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/proc.c  Page 3) show
0 648 moveto (2250   p->tf->eip = 0;  // beginning of initcode.S) show
0 636 moveto (2251 ) show
0 624 moveto (2252   safestrcpy\(p->name, "initcode", sizeof\(p->name\)\);) show
0 612 moveto (2253   p->cwd = namei\("/"\);) show
0 600 moveto (2254 ) show
0 588 moveto (2255   p->state = RUNNABLE;) show
0 576 moveto (2256 ) show
0 564 moveto (2257 #ifdef CS333_P2) show
0 552 moveto (2258 ) show
8 mp_a_x mul 552 moveto (p->uid = INITUID;) show
0 540 moveto (2259 ) show
8 mp_a_x mul 540 moveto (p->gid = INITGID;) show
0 528 moveto (2260 #endif) show
0 516 moveto (2261 }) show
0 504 moveto (2262 ) show
0 492 moveto (2263 // Grow current process's memory by n bytes.) show
0 480 moveto (2264 // Return 0 on success, -1 on failure.) show
0 468 moveto (2265 int) show
0 456 moveto (2266 growproc\(int n\)) show
0 444 moveto (2267 {) show
0 432 moveto (2268   uint sz;) show
0 420 moveto (2269 ) show
0 408 moveto (2270   sz = proc->sz;) show
0 396 moveto (2271   if\(n > 0\){) show
0 384 moveto (2272     if\(\(sz = allocuvm\(proc->pgdir, sz, sz + n\)\) == 0\)) show
0 372 moveto (2273       return -1;) show
0 360 moveto (2274   } else if\(n < 0\){) show
0 348 moveto (2275     if\(\(sz = deallocuvm\(proc->pgdir, sz, sz + n\)\) == 0\)) show
0 336 moveto (2276       return -1;) show
0 324 moveto (2277   }) show
0 312 moveto (2278   proc->sz = sz;) show
0 300 moveto (2279   switchuvm\(proc\);) show
0 288 moveto (2280   return 0;) show
0 276 moveto (2281 }) show
0 264 moveto (2282 ) show
0 252 moveto (2283 // Create a new process copying p as the parent.) show
0 240 moveto (2284 // Sets up stack to return as if from system call.) show
0 228 moveto (2285 // Caller must set state of returned proc to RUNNABLE.) show
0 216 moveto (2286 int) show
0 204 moveto (2287 fork\(void\)) show
0 192 moveto (2288 {) show
0 180 moveto (2289   int i, pid;) show
0 168 moveto (2290   struct proc *np;) show
0 156 moveto (2291 ) show
0 144 moveto (2292   // Allocate process.) show
0 132 moveto (2293   if\(\(np = allocproc\(\)\) == 0\)) show
0 120 moveto (2294     return -1;) show
0 108 moveto (2295 ) show
0 96 moveto (2296 ) show
0 84 moveto (2297 ) show
0 72 moveto (2298 ) show
0 60 moveto (2299 ) show
0 24 moveto (Sheet 22) show
grestore
restore
showpage
%%Page: 31 31
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/proc.c  Page 4) show
0 648 moveto (2300   // Copy process state from p.) show
0 636 moveto (2301   if\(\(np->pgdir = copyuvm\(proc->pgdir, proc->sz\)\) == 0\){) show
0 624 moveto (2302     kfree\(np->kstack\);) show
0 612 moveto (2303     np->kstack = 0;) show
0 600 moveto (2304     np->state = UNUSED;) show
0 588 moveto (2305     return -1;) show
0 576 moveto (2306   }) show
0 564 moveto (2307   np->sz = proc->sz;) show
0 552 moveto (2308   np->parent = proc;) show
0 540 moveto (2309   *np->tf = *proc->tf;) show
0 528 moveto (2310 ) show
0 516 moveto (2311 #ifdef CS333_P2) show
0 504 moveto (2312 ) show
8 mp_a_x mul 504 moveto (// Copy process UID, GID) show
0 492 moveto (2313 ) show
8 mp_a_x mul 492 moveto (np->uid = proc->uid;) show
0 480 moveto (2314 ) show
8 mp_a_x mul 480 moveto (np->gid = proc->gid;) show
0 468 moveto (2315 #endif) show
0 456 moveto (2316 ) show
0 444 moveto (2317   // Clear %eax so that fork returns 0 in the child.) show
0 432 moveto (2318   np->tf->eax = 0;) show
0 420 moveto (2319 ) show
0 408 moveto (2320   for\(i = 0; i < NOFILE; i++\)) show
0 396 moveto (2321     if\(proc->ofile[i]\)) show
0 384 moveto (2322       np->ofile[i] = filedup\(proc->ofile[i]\);) show
0 372 moveto (2323   np->cwd = idup\(proc->cwd\);) show
0 360 moveto (2324 ) show
0 348 moveto (2325   safestrcpy\(np->name, proc->name, sizeof\(proc->name\)\);) show
0 336 moveto (2326 ) show
0 324 moveto (2327   pid = np->pid;) show
0 312 moveto (2328 ) show
0 300 moveto (2329   // lock to force the compiler to emit the np->state write last.) show
0 288 moveto (2330   acquire\(&ptable.lock\);) show
0 276 moveto (2331   np->state = RUNNABLE;) show
0 264 moveto (2332   release\(&ptable.lock\);) show
0 252 moveto (2333 ) show
0 240 moveto (2334   return pid;) show
0 228 moveto (2335 }) show
0 216 moveto (2336 ) show
0 204 moveto (2337 ) show
0 192 moveto (2338 ) show
0 180 moveto (2339 ) show
0 168 moveto (2340 ) show
0 156 moveto (2341 ) show
0 144 moveto (2342 ) show
0 132 moveto (2343 ) show
0 120 moveto (2344 ) show
0 108 moveto (2345 ) show
0 96 moveto (2346 ) show
0 84 moveto (2347 ) show
0 72 moveto (2348 ) show
0 60 moveto (2349 ) show
0 24 moveto (Sheet 23) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/proc.c  Page 5) show
0 648 moveto (2350 // Exit the current process.  Does not return.) show
0 636 moveto (2351 // An exited process remains in the zombie state) show
0 624 moveto (2352 // until its parent calls wait\(\) to find out it exited.) show
0 612 moveto (2353 void) show
0 600 moveto (2354 exit\(void\)) show
0 588 moveto (2355 {) show
0 576 moveto (2356   struct proc *p;) show
0 564 moveto (2357   int fd;) show
0 552 moveto (2358 ) show
0 540 moveto (2359   if\(proc == initproc\)) show
0 528 moveto (2360     panic\("init exiting"\);) show
0 516 moveto (2361 ) show
0 504 moveto (2362   // Close all open files.) show
0 492 moveto (2363   for\(fd = 0; fd < NOFILE; fd++\){) show
0 480 moveto (2364     if\(proc->ofile[fd]\){) show
0 468 moveto (2365       fileclose\(proc->ofile[fd]\);) show
0 456 moveto (2366       proc->ofile[fd] = 0;) show
0 444 moveto (2367     }) show
0 432 moveto (2368   }) show
0 420 moveto (2369 ) show
0 408 moveto (2370   begin_op\(\);) show
0 396 moveto (2371   iput\(proc->cwd\);) show
0 384 moveto (2372   end_op\(\);) show
0 372 moveto (2373   proc->cwd = 0;) show
0 360 moveto (2374 ) show
0 348 moveto (2375   acquire\(&ptable.lock\);) show
0 336 moveto (2376 ) show
0 324 moveto (2377   // Parent might be sleeping in wait\(\).) show
0 312 moveto (2378   wakeup1\(proc->parent\);) show
0 300 moveto (2379 ) show
0 288 moveto (2380   // Pass abandoned children to init.) show
0 276 moveto (2381   for\(p = ptable.proc; p < &ptable.proc[NPROC]; p++\){) show
0 264 moveto (2382     if\(p->parent == proc\){) show
0 252 moveto (2383       p->parent = initproc;) show
0 240 moveto (2384       if\(p->state == ZOMBIE\)) show
0 228 moveto (2385         wakeup1\(initproc\);) show
0 216 moveto (2386     }) show
0 204 moveto (2387   }) show
0 192 moveto (2388 ) show
0 180 moveto (2389   // Jump into the scheduler, never to return.) show
0 168 moveto (2390   proc->state = ZOMBIE;) show
0 156 moveto (2391   sched\(\);) show
0 144 moveto (2392   panic\("zombie exit"\);) show
0 132 moveto (2393 }) show
0 120 moveto (2394 ) show
0 108 moveto (2395 ) show
0 96 moveto (2396 ) show
0 84 moveto (2397 ) show
0 72 moveto (2398 ) show
0 60 moveto (2399 ) show
0 24 moveto (Sheet 23) show
grestore
restore
showpage
%%Page: 32 32
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/proc.c  Page 6) show
0 648 moveto (2400 // Wait for a child process to exit and return its pid.) show
0 636 moveto (2401 // Return -1 if this process has no children.) show
0 624 moveto (2402 int) show
0 612 moveto (2403 wait\(void\)) show
0 600 moveto (2404 {) show
0 588 moveto (2405   struct proc *p;) show
0 576 moveto (2406   int havekids, pid;) show
0 564 moveto (2407 ) show
0 552 moveto (2408   acquire\(&ptable.lock\);) show
0 540 moveto (2409   for\(;;\){) show
0 528 moveto (2410     // Scan through table looking for zombie children.) show
0 516 moveto (2411     havekids = 0;) show
0 504 moveto (2412     for\(p = ptable.proc; p < &ptable.proc[NPROC]; p++\){) show
0 492 moveto (2413       if\(p->parent != proc\)) show
0 480 moveto (2414         continue;) show
0 468 moveto (2415       havekids = 1;) show
0 456 moveto (2416       if\(p->state == ZOMBIE\){) show
0 444 moveto (2417         // Found one.) show
0 432 moveto (2418         pid = p->pid;) show
0 420 moveto (2419         kfree\(p->kstack\);) show
0 408 moveto (2420         p->kstack = 0;) show
0 396 moveto (2421         freevm\(p->pgdir\);) show
0 384 moveto (2422         p->state = UNUSED;) show
0 372 moveto (2423         p->pid = 0;) show
0 360 moveto (2424         p->parent = 0;) show
0 348 moveto (2425         p->name[0] = 0;) show
0 336 moveto (2426         p->killed = 0;) show
0 324 moveto (2427         release\(&ptable.lock\);) show
0 312 moveto (2428         return pid;) show
0 300 moveto (2429       }) show
0 288 moveto (2430     }) show
0 276 moveto (2431 ) show
0 264 moveto (2432     // No point waiting if we don't have any children.) show
0 252 moveto (2433     if\(!havekids || proc->killed\){) show
0 240 moveto (2434       release\(&ptable.lock\);) show
0 228 moveto (2435       return -1;) show
0 216 moveto (2436     }) show
0 204 moveto (2437 ) show
0 192 moveto (2438     // Wait for children to exit.  \(See wakeup1 call in proc_exit.\)) show
0 180 moveto (2439     sleep\(proc, &ptable.lock\);  ) show
0 168 moveto (2440   }) show
0 156 moveto (2441 }) show
0 144 moveto (2442 ) show
0 132 moveto (2443 ) show
0 120 moveto (2444 ) show
0 108 moveto (2445 ) show
0 96 moveto (2446 ) show
0 84 moveto (2447 ) show
0 72 moveto (2448 ) show
0 60 moveto (2449 ) show
0 24 moveto (Sheet 24) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/proc.c  Page 7) show
0 648 moveto (2450 // Per-CPU process scheduler.) show
0 636 moveto (2451 // Each CPU calls scheduler\(\) after setting itself up.) show
0 624 moveto (2452 // Scheduler never returns.  It loops, doing:) show
0 612 moveto (2453 //  - choose a process to run) show
0 600 moveto (2454 //  - swtch to start running that process) show
0 588 moveto (2455 //  - eventually that process transfers control) show
0 576 moveto (2456 //      via swtch back to the scheduler.) show
0 564 moveto (2457 #ifndef CS333_P3) show
0 552 moveto (2458 // original xv6 scheduler. Use if CS333_P3 NOT defined.) show
0 540 moveto (2459 void) show
0 528 moveto (2460 scheduler\(void\)) show
0 516 moveto (2461 {) show
0 504 moveto (2462   struct proc *p;) show
0 492 moveto (2463 ) show
0 480 moveto (2464   for\(;;\){) show
0 468 moveto (2465     // Enable interrupts on this processor.) show
0 456 moveto (2466     sti\(\);) show
0 444 moveto (2467 ) show
0 432 moveto (2468     // Loop over process table looking for process to run.) show
0 420 moveto (2469     acquire\(&ptable.lock\);) show
0 408 moveto (2470     for\(p = ptable.proc; p < &ptable.proc[NPROC]; p++\){) show
0 396 moveto (2471       if\(p->state != RUNNABLE\)) show
0 384 moveto (2472         continue;) show
0 372 moveto (2473 ) show
0 360 moveto (2474       // Switch to chosen process.  It is the process's job) show
0 348 moveto (2475       // to release ptable.lock and then reacquire it) show
0 336 moveto (2476       // before jumping back to us.) show
0 324 moveto (2477       proc = p;) show
0 312 moveto (2478       switchuvm\(p\);) show
0 300 moveto (2479       p->state = RUNNING;) show
0 288 moveto (2480 #ifdef CS333_P2) show
0 276 moveto (2481 ) show
12 mp_a_x mul 276 moveto (acquire\(&tickslock\);) show
0 264 moveto (2482 ) show
24 mp_a_x mul 264 moveto (p->cpu_ticks_in = ticks;) show
0 252 moveto (2483 ) show
24 mp_a_x mul 252 moveto (release\(&tickslock\);) show
0 240 moveto (2484 #endif) show
0 228 moveto (2485       swtch\(&cpu->scheduler, proc->context\);) show
0 216 moveto (2486       switchkvm\(\);) show
0 204 moveto (2487 ) show
0 192 moveto (2488       // Process is done running for now.) show
0 180 moveto (2489       // It should have changed its p->state before coming back.) show
0 168 moveto (2490       proc = 0;) show
0 156 moveto (2491     }) show
0 144 moveto (2492     release\(&ptable.lock\);) show
0 132 moveto (2493 ) show
0 120 moveto (2494   }) show
0 108 moveto (2495 }) show
0 96 moveto (2496 ) show
0 84 moveto (2497 ) show
0 72 moveto (2498 ) show
0 60 moveto (2499 ) show
0 24 moveto (Sheet 24) show
grestore
restore
showpage
%%Page: 33 33
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/proc.c  Page 8) show
0 648 moveto (2500 #else) show
0 636 moveto (2501 // CS333_P3 MLFQ scheduler implementation goes here) show
0 624 moveto (2502 void) show
0 612 moveto (2503 scheduler\(void\)) show
0 600 moveto (2504 {) show
0 588 moveto (2505 ) show
0 576 moveto (2506 }) show
0 564 moveto (2507 #endif) show
0 552 moveto (2508 ) show
0 540 moveto (2509 // Enter scheduler.  Must hold only ptable.lock) show
0 528 moveto (2510 // and have changed proc->state.) show
0 516 moveto (2511 void) show
0 504 moveto (2512 sched\(void\)) show
0 492 moveto (2513 {) show
0 480 moveto (2514   int intena;) show
0 468 moveto (2515 ) show
0 456 moveto (2516   if\(!holding\(&ptable.lock\)\)) show
0 444 moveto (2517     panic\("sched ptable.lock"\);) show
0 432 moveto (2518   if\(cpu->ncli != 1\)) show
0 420 moveto (2519     panic\("sched locks"\);) show
0 408 moveto (2520   if\(proc->state == RUNNING\)) show
0 396 moveto (2521     panic\("sched running"\);) show
0 384 moveto (2522   if\(readeflags\(\)&FL_IF\)) show
0 372 moveto (2523     panic\("sched interrible"\);) show
0 360 moveto (2524 #ifdef CS333_P2) show
0 348 moveto (2525 ) show
8 mp_a_x mul 348 moveto (acquire\(&tickslock\);) show
0 336 moveto (2526 ) show
8 mp_a_x mul 336 moveto (proc->cpu_ticks_total += ticks - proc->cpu_ticks_in;) show
0 324 moveto (2527 ) show
8 mp_a_x mul 324 moveto (release\(&tickslock\);) show
0 312 moveto (2528 #endif) show
0 300 moveto (2529   intena = cpu->intena;) show
0 288 moveto (2530   swtch\(&proc->context, cpu->scheduler\);) show
0 276 moveto (2531   cpu->intena = intena;) show
0 264 moveto (2532 }) show
0 252 moveto (2533 ) show
0 240 moveto (2534 // Give up the CPU for one scheduling round.) show
0 228 moveto (2535 void) show
0 216 moveto (2536 yield\(void\)) show
0 204 moveto (2537 {) show
0 192 moveto (2538   acquire\(&ptable.lock\);  ) show
0 180 moveto (2539   proc->state = RUNNABLE;) show
0 168 moveto (2540   sched\(\);) show
0 156 moveto (2541   release\(&ptable.lock\);) show
0 144 moveto (2542 }) show
0 132 moveto (2543 ) show
0 120 moveto (2544 ) show
0 108 moveto (2545 ) show
0 96 moveto (2546 ) show
0 84 moveto (2547 ) show
0 72 moveto (2548 ) show
0 60 moveto (2549 ) show
0 24 moveto (Sheet 25) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/proc.c  Page 9) show
0 648 moveto (2550 // A fork child's very first scheduling by scheduler\(\)) show
0 636 moveto (2551 // will swtch here.  "Return" to user space.) show
0 624 moveto (2552 void) show
0 612 moveto (2553 forkret\(void\)) show
0 600 moveto (2554 {) show
0 588 moveto (2555   static int first = 1;) show
0 576 moveto (2556   // Still holding ptable.lock from scheduler.) show
0 564 moveto (2557   release\(&ptable.lock\);) show
0 552 moveto (2558 ) show
0 540 moveto (2559   if \(first\) {) show
0 528 moveto (2560     // Some initialization functions must be run in the context) show
0 516 moveto (2561     // of a regular process \(e.g., they call sleep\), and thus cannot) show
0 504 moveto (2562     // be run from main\(\).) show
0 492 moveto (2563     first = 0;) show
0 480 moveto (2564     iinit\(ROOTDEV\);) show
0 468 moveto (2565     initlog\(ROOTDEV\);) show
0 456 moveto (2566   }) show
0 444 moveto (2567 ) show
0 432 moveto (2568   // Return to "caller", actually trapret \(see allocproc\).) show
0 420 moveto (2569 }) show
0 408 moveto (2570 ) show
0 396 moveto (2571 // Atomically release lock and sleep on chan.) show
0 384 moveto (2572 // Reacquires lock when awakened.) show
0 372 moveto (2573 void) show
0 360 moveto (2574 sleep\(void *chan, struct spinlock *lk\)) show
0 348 moveto (2575 {) show
0 336 moveto (2576   if\(proc == 0\)) show
0 324 moveto (2577     panic\("sleep"\);) show
0 312 moveto (2578 ) show
0 300 moveto (2579   if\(lk == 0\)) show
0 288 moveto (2580     panic\("sleep without lk"\);) show
0 276 moveto (2581 ) show
0 264 moveto (2582   // Must acquire ptable.lock in order to) show
0 252 moveto (2583   // change p->state and then call sched.) show
0 240 moveto (2584   // Once we hold ptable.lock, we can be) show
0 228 moveto (2585   // guaranteed that we won't miss any wakeup) show
0 216 moveto (2586   // \(wakeup runs with ptable.lock locked\),) show
0 204 moveto (2587   // so it's okay to release lk.) show
0 192 moveto (2588   if\(lk != &ptable.lock\){  ) show
0 180 moveto (2589     acquire\(&ptable.lock\);  ) show
0 168 moveto (2590     release\(lk\);) show
0 156 moveto (2591   }) show
0 144 moveto (2592 ) show
0 132 moveto (2593   // Go to sleep.) show
0 120 moveto (2594   proc->chan = chan;) show
0 108 moveto (2595   proc->state = SLEEPING;) show
0 96 moveto (2596   sched\(\);) show
0 84 moveto (2597 ) show
0 72 moveto (2598   // Tidy up.) show
0 60 moveto (2599   proc->chan = 0;) show
0 24 moveto (Sheet 25) show
grestore
restore
showpage
%%Page: 34 34
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/proc.c  Page 10) show
0 648 moveto (2600   // Reacquire original lock.) show
0 636 moveto (2601   if\(lk != &ptable.lock\){  ) show
0 624 moveto (2602     release\(&ptable.lock\);) show
0 612 moveto (2603     acquire\(lk\);) show
0 600 moveto (2604   }) show
0 588 moveto (2605 }) show
0 576 moveto (2606 ) show
0 564 moveto (2607 // Wake up all processes sleeping on chan.) show
0 552 moveto (2608 // The ptable lock must be held.) show
0 540 moveto (2609 static void) show
0 528 moveto (2610 wakeup1\(void *chan\)) show
0 516 moveto (2611 {) show
0 504 moveto (2612   struct proc *p;) show
0 492 moveto (2613 ) show
0 480 moveto (2614   for\(p = ptable.proc; p < &ptable.proc[NPROC]; p++\)) show
0 468 moveto (2615     if\(p->state == SLEEPING && p->chan == chan\)) show
0 456 moveto (2616       p->state = RUNNABLE;) show
0 444 moveto (2617 }) show
0 432 moveto (2618 ) show
0 420 moveto (2619 // Wake up all processes sleeping on chan.) show
0 408 moveto (2620 void) show
0 396 moveto (2621 wakeup\(void *chan\)) show
0 384 moveto (2622 {) show
0 372 moveto (2623   acquire\(&ptable.lock\);) show
0 360 moveto (2624   wakeup1\(chan\);) show
0 348 moveto (2625   release\(&ptable.lock\);) show
0 336 moveto (2626 }) show
0 324 moveto (2627 ) show
0 312 moveto (2628 // Kill the process with the given pid.) show
0 300 moveto (2629 // Process won't exit until it returns) show
0 288 moveto (2630 // to user space \(see trap in trap.c\).) show
0 276 moveto (2631 int) show
0 264 moveto (2632 kill\(int pid\)) show
0 252 moveto (2633 {) show
0 240 moveto (2634   struct proc *p;) show
0 228 moveto (2635 ) show
0 216 moveto (2636   acquire\(&ptable.lock\);) show
0 204 moveto (2637   for\(p = ptable.proc; p < &ptable.proc[NPROC]; p++\){) show
0 192 moveto (2638     if\(p->pid == pid\){) show
0 180 moveto (2639       p->killed = 1;) show
0 168 moveto (2640       // Wake process from sleep if necessary.) show
0 156 moveto (2641       if\(p->state == SLEEPING\)) show
0 144 moveto (2642         p->state = RUNNABLE;) show
0 132 moveto (2643       release\(&ptable.lock\);) show
0 120 moveto (2644       return 0;) show
0 108 moveto (2645     }) show
0 96 moveto (2646   }) show
0 84 moveto (2647   release\(&ptable.lock\);) show
0 72 moveto (2648   return -1;) show
0 60 moveto (2649 }) show
0 24 moveto (Sheet 26) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/proc.c  Page 11) show
0 648 moveto (2650 // Print a process listing to console.  For debugging.) show
0 636 moveto (2651 // Runs when user types ^P on console.) show
0 624 moveto (2652 // No lock to avoid wedging a stuck machine further.) show
0 612 moveto (2653 static void) show
0 600 moveto (2654 print_elapsed\(struct proc *p\)) show
0 588 moveto (2655 {) show
0 576 moveto (2656   uint temp = p->start_ticks;) show
0 564 moveto (2657   temp = ticks - temp;) show
0 552 moveto (2658   cprintf\("%d.%d",temp/100, temp%100\);) show
0 540 moveto (2659 #ifdef CS333_P2) show
0 528 moveto (2660   cprintf\("  %d.%d",p->cpu_ticks_total/100, p->cpu_ticks_total%100\);) show
0 516 moveto (2661   cprintf\("    %d  ", p->uid\);) show
0 504 moveto (2662   cprintf\("  %d  ", p->gid\);) show
0 492 moveto (2663   if\(p->parent && p->pid != 1\)) show
0 480 moveto (2664 ) show
16 mp_a_x mul 480 moveto (cprintf\("  %d  ", p->parent->pid\);) show
0 468 moveto (2665 ) show
8 mp_a_x mul 468 moveto (else) show
0 456 moveto (2666 ) show
16 mp_a_x mul 456 moveto (cprintf\("  %d  ", p->pid\);) show
0 444 moveto (2667 #endif) show
0 432 moveto (2668 }) show
0 420 moveto (2669 ) show
0 408 moveto (2670 void) show
0 396 moveto (2671 procdump\(void\)) show
0 384 moveto (2672 {) show
0 372 moveto (2673   static char *states[] = {) show
0 360 moveto (2674   [UNUSED]    "unused",) show
0 348 moveto (2675   [EMBRYO]    "embryo",) show
0 336 moveto (2676   [SLEEPING]  "sleep ",) show
0 324 moveto (2677   [RUNNABLE]  "runble",) show
0 312 moveto (2678   [RUNNING]   "run   ",) show
0 300 moveto (2679   [ZOMBIE]    "zombie") show
0 288 moveto (2680   };) show
0 276 moveto (2681   int i;) show
0 264 moveto (2682   struct proc *p;) show
0 252 moveto (2683   char *state;) show
0 240 moveto (2684   uint pc[10];) show
0 228 moveto (2685 ) show
0 216 moveto (2686 #ifdef CS333_P2) show
0 204 moveto (2687   cprintf\("\\nPID  State  Name  Elapsed    TotalCpuTime    UID    GID    PPID     PCs\\n"\);) show
0 192 moveto (2688 #else) show
0 180 moveto (2689 ) show
8 mp_a_x mul 180 moveto (cprintf\("\\nPID  State  Name  Elapsed    PCs\\n"\);) show
0 168 moveto (2690 #endif) show
0 156 moveto (2691 ) show
0 144 moveto (2692   for\(p = ptable.proc; p < &ptable.proc[NPROC]; p++\){) show
0 132 moveto (2693     if\(p->state == UNUSED\)) show
0 120 moveto (2694       continue;) show
0 108 moveto (2695     if\(p->state >= 0 && p->state < NELEM\(states\) && states[p->state]\)) show
0 96 moveto (2696       state = states[p->state];) show
0 84 moveto (2697     else) show
0 72 moveto (2698       state = "???";) show
0 60 moveto (2699     cprintf\("%d    %s %s   ", p->pid, state, p->name\);) show
0 24 moveto (Sheet 26) show
grestore
restore
showpage
%%Page: 35 35
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/proc.c  Page 12) show
0 648 moveto (2700     print_elapsed\(p\);) show
0 636 moveto (2701     if\(p->state == SLEEPING\){) show
0 624 moveto (2702       getcallerpcs\(\(uint*\)p->context->ebp+2, pc\);) show
0 612 moveto (2703       for\(i=0; i<10 && pc[i] != 0; i++\)) show
0 600 moveto (2704         cprintf\(" %p", pc[i]\);) show
0 588 moveto (2705     }) show
0 576 moveto (2706     cprintf\("\\n"\);) show
0 564 moveto (2707   }) show
0 552 moveto (2708 }) show
0 540 moveto (2709 ) show
0 528 moveto (2710 #ifdef CS333_P2) show
0 516 moveto (2711 // Get process information) show
0 504 moveto (2712 int) show
0 492 moveto (2713 getprocs\(uint max, struct uproc* table\)) show
0 480 moveto (2714 {) show
0 468 moveto (2715 ) show
8 mp_a_x mul 468 moveto (if\(!table || max == 0\) return -1;) show
0 456 moveto (2716   static char *states[] = {) show
0 444 moveto (2717   [UNUSED]    "unused",) show
0 432 moveto (2718   [EMBRYO]    "embryo",) show
0 420 moveto (2719   [SLEEPING]  "sleep ",) show
0 408 moveto (2720   [RUNNABLE]  "runble",) show
0 396 moveto (2721   [RUNNING]   "run   ",) show
0 384 moveto (2722   [ZOMBIE]    "zombie") show
0 372 moveto (2723   };) show
0 360 moveto (2724 ) show
0 348 moveto (2725 ) show
8 mp_a_x mul 348 moveto (int procscount = 0;) show
0 336 moveto (2726   struct proc *p;) show
0 324 moveto (2727 ) show
8 mp_a_x mul 324 moveto (if\(max > NPROC\)) show
0 312 moveto (2728 ) show
16 mp_a_x mul 312 moveto (max = NPROC;) show
0 300 moveto (2729 ) show
8 mp_a_x mul 300 moveto (acquire\(&ptable.lock\);) show
0 288 moveto (2730 ) show
8 mp_a_x mul 288 moveto (for\(p = ptable.proc; p < &ptable.proc[max]; p++\){) show
0 276 moveto (2731 ) show
16 mp_a_x mul 276 moveto (if\(p->state == UNUSED || p->state == EMBRYO || p->state == ZOMBIE\)) show
0 264 moveto (2732 ) show
24 mp_a_x mul 264 moveto (continue;) show
0 252 moveto (2733 ) show
16 mp_a_x mul 252 moveto (table->pid = p->pid;) show
0 240 moveto (2734 ) show
16 mp_a_x mul 240 moveto (table->uid = p->uid;) show
0 228 moveto (2735 ) show
16 mp_a_x mul 228 moveto (table->gid = p->gid;) show
0 216 moveto (2736 ) show
16 mp_a_x mul 216 moveto (if\(!p->parent || p->pid ==1\)) show
0 204 moveto (2737 ) show
24 mp_a_x mul 204 moveto (table->ppid = p->pid;) show
0 192 moveto (2738 ) show
16 mp_a_x mul 192 moveto (else) show
0 180 moveto (2739 ) show
24 mp_a_x mul 180 moveto (table->ppid = p->parent->pid;) show
0 168 moveto (2740 ) show
16 mp_a_x mul 168 moveto (acquire\(&tickslock\);) show
0 156 moveto (2741 ) show
16 mp_a_x mul 156 moveto (table->elapsed_ticks = ticks - p->start_ticks;) show
0 144 moveto (2742 ) show
16 mp_a_x mul 144 moveto (table->CPU_total_ticks = p->cpu_ticks_total;) show
0 132 moveto (2743 ) show
16 mp_a_x mul 132 moveto (release\(&tickslock\);) show
0 120 moveto (2744 ) show
16 mp_a_x mul 120 moveto (safestrcpy\(table->state, states[p->state], sizeof\(table->state\)\);) show
0 108 moveto (2745 ) show
16 mp_a_x mul 108 moveto (table->size = p->sz;) show
0 96 moveto (2746 ) show
16 mp_a_x mul 96 moveto (safestrcpy\(table->name, p->name, sizeof\(table->name\)\);) show
0 84 moveto (2747 ) show
16 mp_a_x mul 84 moveto (++procscount;) show
0 72 moveto (2748 ) show
16 mp_a_x mul 72 moveto (++table;) show
0 60 moveto (2749 ) show
8 mp_a_x mul 60 moveto (}) show
0 24 moveto (Sheet 27) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/proc.c  Page 13) show
0 648 moveto (2750 ) show
8 mp_a_x mul 648 moveto (release\(&ptable.lock\);) show
0 636 moveto (2751 ) show
0 624 moveto (2752   return procscount;) show
0 612 moveto (2753 }) show
0 600 moveto (2754 #endif) show
0 588 moveto (2755 ) show
0 576 moveto (2756 ) show
0 564 moveto (2757 ) show
0 552 moveto (2758 ) show
0 540 moveto (2759 ) show
0 528 moveto (2760 ) show
0 516 moveto (2761 ) show
0 504 moveto (2762 ) show
0 492 moveto (2763 ) show
0 480 moveto (2764 ) show
0 468 moveto (2765 ) show
0 456 moveto (2766 ) show
0 444 moveto (2767 ) show
0 432 moveto (2768 ) show
0 420 moveto (2769 ) show
0 408 moveto (2770 ) show
0 396 moveto (2771 ) show
0 384 moveto (2772 ) show
0 372 moveto (2773 ) show
0 360 moveto (2774 ) show
0 348 moveto (2775 ) show
0 336 moveto (2776 ) show
0 324 moveto (2777 ) show
0 312 moveto (2778 ) show
0 300 moveto (2779 ) show
0 288 moveto (2780 ) show
0 276 moveto (2781 ) show
0 264 moveto (2782 ) show
0 252 moveto (2783 ) show
0 240 moveto (2784 ) show
0 228 moveto (2785 ) show
0 216 moveto (2786 ) show
0 204 moveto (2787 ) show
0 192 moveto (2788 ) show
0 180 moveto (2789 ) show
0 168 moveto (2790 ) show
0 156 moveto (2791 ) show
0 144 moveto (2792 ) show
0 132 moveto (2793 ) show
0 120 moveto (2794 ) show
0 108 moveto (2795 ) show
0 96 moveto (2796 ) show
0 84 moveto (2797 ) show
0 72 moveto (2798 ) show
0 60 moveto (2799 ) show
0 24 moveto (Sheet 27) show
grestore
restore
showpage
%%Page: 36 36
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/swtch.S  Page 1) show
0 648 moveto (2800 # Context switch) show
0 636 moveto (2801 #) show
0 624 moveto (2802 #   void swtch\(struct context **old, struct context *new\);) show
0 612 moveto (2803 #) show
0 600 moveto (2804 # Save current register context in old) show
0 588 moveto (2805 # and then load register context from new.) show
0 576 moveto (2806 ) show
0 564 moveto (2807 .globl swtch) show
0 552 moveto (2808 swtch:) show
0 540 moveto (2809   movl 4\(%esp\), %eax) show
0 528 moveto (2810   movl 8\(%esp\), %edx) show
0 516 moveto (2811 ) show
0 504 moveto (2812   # Save old callee-save registers) show
0 492 moveto (2813   pushl %ebp) show
0 480 moveto (2814   pushl %ebx) show
0 468 moveto (2815   pushl %esi) show
0 456 moveto (2816   pushl %edi) show
0 444 moveto (2817 ) show
0 432 moveto (2818   # Switch stacks) show
0 420 moveto (2819   movl %esp, \(%eax\)) show
0 408 moveto (2820   movl %edx, %esp) show
0 396 moveto (2821 ) show
0 384 moveto (2822   # Load new callee-save registers) show
0 372 moveto (2823   popl %edi) show
0 360 moveto (2824   popl %esi) show
0 348 moveto (2825   popl %ebx) show
0 336 moveto (2826   popl %ebp) show
0 324 moveto (2827   ret) show
0 312 moveto (2828 ) show
0 300 moveto (2829 ) show
0 288 moveto (2830 ) show
0 276 moveto (2831 ) show
0 264 moveto (2832 ) show
0 252 moveto (2833 ) show
0 240 moveto (2834 ) show
0 228 moveto (2835 ) show
0 216 moveto (2836 ) show
0 204 moveto (2837 ) show
0 192 moveto (2838 ) show
0 180 moveto (2839 ) show
0 168 moveto (2840 ) show
0 156 moveto (2841 ) show
0 144 moveto (2842 ) show
0 132 moveto (2843 ) show
0 120 moveto (2844 ) show
0 108 moveto (2845 ) show
0 96 moveto (2846 ) show
0 84 moveto (2847 ) show
0 72 moveto (2848 ) show
0 60 moveto (2849 ) show
0 24 moveto (Sheet 28) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/kalloc.c  Page 1) show
0 648 moveto (2850 // Physical memory allocator, intended to allocate) show
0 636 moveto (2851 // memory for user processes, kernel stacks, page table pages,) show
0 624 moveto (2852 // and pipe buffers. Allocates 4096-byte pages.) show
0 612 moveto (2853 ) show
0 600 moveto (2854 #include "types.h") show
0 588 moveto (2855 #include "defs.h") show
0 576 moveto (2856 #include "param.h") show
0 564 moveto (2857 #include "memlayout.h") show
0 552 moveto (2858 #include "mmu.h") show
0 540 moveto (2859 #include "spinlock.h") show
0 528 moveto (2860 ) show
0 516 moveto (2861 void freerange\(void *vstart, void *vend\);) show
0 504 moveto (2862 extern char end[]; // first address after kernel loaded from ELF file) show
0 492 moveto (2863 ) show
0 480 moveto (2864 struct run {) show
0 468 moveto (2865   struct run *next;) show
0 456 moveto (2866 };) show
0 444 moveto (2867 ) show
0 432 moveto (2868 struct {) show
0 420 moveto (2869   struct spinlock lock;) show
0 408 moveto (2870   int use_lock;) show
0 396 moveto (2871   struct run *freelist;) show
0 384 moveto (2872 } kmem;) show
0 372 moveto (2873 ) show
0 360 moveto (2874 // Initialization happens in two phases.) show
0 348 moveto (2875 // 1. main\(\) calls kinit1\(\) while still using entrypgdir to place just) show
0 336 moveto (2876 // the pages mapped by entrypgdir on free list.) show
0 324 moveto (2877 // 2. main\(\) calls kinit2\(\) with the rest of the physical pages) show
0 312 moveto (2878 // after installing a full page table that maps them on all cores.) show
0 300 moveto (2879 void) show
0 288 moveto (2880 kinit1\(void *vstart, void *vend\)) show
0 276 moveto (2881 {) show
0 264 moveto (2882   initlock\(&kmem.lock, "kmem"\);) show
0 252 moveto (2883   kmem.use_lock = 0;) show
0 240 moveto (2884   freerange\(vstart, vend\);) show
0 228 moveto (2885 }) show
0 216 moveto (2886 ) show
0 204 moveto (2887 void) show
0 192 moveto (2888 kinit2\(void *vstart, void *vend\)) show
0 180 moveto (2889 {) show
0 168 moveto (2890   freerange\(vstart, vend\);) show
0 156 moveto (2891   kmem.use_lock = 1;) show
0 144 moveto (2892 }) show
0 132 moveto (2893 ) show
0 120 moveto (2894 ) show
0 108 moveto (2895 ) show
0 96 moveto (2896 ) show
0 84 moveto (2897 ) show
0 72 moveto (2898 ) show
0 60 moveto (2899 ) show
0 24 moveto (Sheet 28) show
grestore
restore
showpage
%%Page: 37 37
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/kalloc.c  Page 2) show
0 648 moveto (2900 void) show
0 636 moveto (2901 freerange\(void *vstart, void *vend\)) show
0 624 moveto (2902 {) show
0 612 moveto (2903   char *p;) show
0 600 moveto (2904   p = \(char*\)PGROUNDUP\(\(uint\)vstart\);) show
0 588 moveto (2905   for\(; p + PGSIZE <= \(char*\)vend; p += PGSIZE\)) show
0 576 moveto (2906     kfree\(p\);) show
0 564 moveto (2907 }) show
0 552 moveto (2908 ) show
0 540 moveto (2909 // Free the page of physical memory pointed at by v,) show
0 528 moveto (2910 // which normally should have been returned by a) show
0 516 moveto (2911 // call to kalloc\(\).  \(The exception is when) show
0 504 moveto (2912 // initializing the allocator; see kinit above.\)) show
0 492 moveto (2913 void) show
0 480 moveto (2914 kfree\(char *v\)) show
0 468 moveto (2915 {) show
0 456 moveto (2916   struct run *r;) show
0 444 moveto (2917 ) show
0 432 moveto (2918   if\(\(uint\)v % PGSIZE || v < end || v2p\(v\) >= PHYSTOP\)) show
0 420 moveto (2919     panic\("kfree"\);) show
0 408 moveto (2920 ) show
0 396 moveto (2921   // Fill with junk to catch dangling refs.) show
0 384 moveto (2922   memset\(v, 1, PGSIZE\);) show
0 372 moveto (2923 ) show
0 360 moveto (2924   if\(kmem.use_lock\)) show
0 348 moveto (2925     acquire\(&kmem.lock\);) show
0 336 moveto (2926   r = \(struct run*\)v;) show
0 324 moveto (2927   r->next = kmem.freelist;) show
0 312 moveto (2928   kmem.freelist = r;) show
0 300 moveto (2929   if\(kmem.use_lock\)) show
0 288 moveto (2930     release\(&kmem.lock\);) show
0 276 moveto (2931 }) show
0 264 moveto (2932 ) show
0 252 moveto (2933 // Allocate one 4096-byte page of physical memory.) show
0 240 moveto (2934 // Returns a pointer that the kernel can use.) show
0 228 moveto (2935 // Returns 0 if the memory cannot be allocated.) show
0 216 moveto (2936 char*) show
0 204 moveto (2937 kalloc\(void\)) show
0 192 moveto (2938 {) show
0 180 moveto (2939   struct run *r;) show
0 168 moveto (2940 ) show
0 156 moveto (2941   if\(kmem.use_lock\)) show
0 144 moveto (2942     acquire\(&kmem.lock\);) show
0 132 moveto (2943   r = kmem.freelist;) show
0 120 moveto (2944   if\(r\)) show
0 108 moveto (2945     kmem.freelist = r->next;) show
0 96 moveto (2946   if\(kmem.use_lock\)) show
0 84 moveto (2947     release\(&kmem.lock\);) show
0 72 moveto (2948   return \(char*\)r;) show
0 60 moveto (2949 }) show
0 24 moveto (Sheet 29) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/traps.h  Page 1) show
0 648 moveto (2950 // x86 trap and interrupt constants.) show
0 636 moveto (2951 ) show
0 624 moveto (2952 // Processor-defined:) show
0 612 moveto (2953 #define T_DIVIDE         0      // divide error) show
0 600 moveto (2954 #define T_DEBUG          1      // debug exception) show
0 588 moveto (2955 #define T_NMI            2      // non-maskable interrupt) show
0 576 moveto (2956 #define T_BRKPT          3      // breakpoint) show
0 564 moveto (2957 #define T_OFLOW          4      // overflow) show
0 552 moveto (2958 #define T_BOUND          5      // bounds check) show
0 540 moveto (2959 #define T_ILLOP          6      // illegal opcode) show
0 528 moveto (2960 #define T_DEVICE         7      // device not available) show
0 516 moveto (2961 #define T_DBLFLT         8      // double fault) show
0 504 moveto (2962 // #define T_COPROC      9      // reserved \(not used since 486\)) show
0 492 moveto (2963 #define T_TSS           10      // invalid task switch segment) show
0 480 moveto (2964 #define T_SEGNP         11      // segment not present) show
0 468 moveto (2965 #define T_STACK         12      // stack exception) show
0 456 moveto (2966 #define T_GPFLT         13      // general protection fault) show
0 444 moveto (2967 #define T_PGFLT         14      // page fault) show
0 432 moveto (2968 // #define T_RES        15      // reserved) show
0 420 moveto (2969 #define T_FPERR         16      // floating point error) show
0 408 moveto (2970 #define T_ALIGN         17      // aligment check) show
0 396 moveto (2971 #define T_MCHK          18      // machine check) show
0 384 moveto (2972 #define T_SIMDERR       19      // SIMD floating point error) show
0 372 moveto (2973 ) show
0 360 moveto (2974 // These are arbitrarily chosen, but with care not to overlap) show
0 348 moveto (2975 // processor defined exceptions or interrupt vectors.) show
0 336 moveto (2976 #define T_SYSCALL       64      // system call) show
0 324 moveto (2977 #define T_DEFAULT      500      // catchall) show
0 312 moveto (2978 ) show
0 300 moveto (2979 #define T_IRQ0          32      // IRQ 0 corresponds to int T_IRQ) show
0 288 moveto (2980 ) show
0 276 moveto (2981 #define IRQ_TIMER        0) show
0 264 moveto (2982 #define IRQ_KBD          1) show
0 252 moveto (2983 #define IRQ_COM1         4) show
0 240 moveto (2984 #define IRQ_IDE         14) show
0 228 moveto (2985 #define IRQ_ERROR       19) show
0 216 moveto (2986 #define IRQ_SPURIOUS    31) show
0 204 moveto (2987 ) show
0 192 moveto (2988 ) show
0 180 moveto (2989 ) show
0 168 moveto (2990 ) show
0 156 moveto (2991 ) show
0 144 moveto (2992 ) show
0 132 moveto (2993 ) show
0 120 moveto (2994 ) show
0 108 moveto (2995 ) show
0 96 moveto (2996 ) show
0 84 moveto (2997 ) show
0 72 moveto (2998 ) show
0 60 moveto (2999 ) show
0 24 moveto (Sheet 29) show
grestore
restore
showpage
%%Page: 38 38
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/vectors.pl  Page 1) show
0 648 moveto (3000 #!/usr/bin/perl -w) show
0 636 moveto (3001 ) show
0 624 moveto (3002 # Generate vectors.S, the trap/interrupt entry points.) show
0 612 moveto (3003 # There has to be one entry point per interrupt number) show
0 600 moveto (3004 # since otherwise there's no way for trap\(\) to discover) show
0 588 moveto (3005 # the interrupt number.) show
0 576 moveto (3006 ) show
0 564 moveto (3007 print "# generated by vectors.pl - do not edit\\n";) show
0 552 moveto (3008 print "# handlers\\n";) show
0 540 moveto (3009 print ".globl alltraps\\n";) show
0 528 moveto (3010 for\(my $i = 0; $i < 256; $i++\){) show
0 516 moveto (3011     print ".globl vector$i\\n";) show
0 504 moveto (3012     print "vector$i:\\n";) show
0 492 moveto (3013     if\(!\($i == 8 || \($i >= 10 && $i <= 14\) || $i == 17\)\){) show
0 480 moveto (3014         print "  pushl \\$0\\n";) show
0 468 moveto (3015     }) show
0 456 moveto (3016     print "  pushl \\$$i\\n";) show
0 444 moveto (3017     print "  jmp alltraps\\n";) show
0 432 moveto (3018 }) show
0 420 moveto (3019 ) show
0 408 moveto (3020 print "\\n# vector table\\n";) show
0 396 moveto (3021 print ".data\\n";) show
0 384 moveto (3022 print ".globl vectors\\n";) show
0 372 moveto (3023 print "vectors:\\n";) show
0 360 moveto (3024 for\(my $i = 0; $i < 256; $i++\){) show
0 348 moveto (3025     print "  .long vector$i\\n";) show
0 336 moveto (3026 }) show
0 324 moveto (3027 ) show
0 312 moveto (3028 # sample output:) show
0 300 moveto (3029 #   # handlers) show
0 288 moveto (3030 #   .globl alltraps) show
0 276 moveto (3031 #   .globl vector0) show
0 264 moveto (3032 #   vector0:) show
0 252 moveto (3033 #     pushl $0) show
0 240 moveto (3034 #     pushl $0) show
0 228 moveto (3035 #     jmp alltraps) show
0 216 moveto (3036 #   ...) show
0 204 moveto (3037 #) show
0 192 moveto (3038 #   # vector table) show
0 180 moveto (3039 #   .data) show
0 168 moveto (3040 #   .globl vectors) show
0 156 moveto (3041 #   vectors:) show
0 144 moveto (3042 #     .long vector0) show
0 132 moveto (3043 #     .long vector1) show
0 120 moveto (3044 #     .long vector2) show
0 108 moveto (3045 #   ...) show
0 96 moveto (3046 ) show
0 84 moveto (3047 ) show
0 72 moveto (3048 ) show
0 60 moveto (3049 ) show
0 24 moveto (Sheet 30) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/trapasm.S  Page 1) show
0 648 moveto (3050 #include "mmu.h") show
0 636 moveto (3051 ) show
0 624 moveto (3052   # vectors.S sends all traps here.) show
0 612 moveto (3053 .globl alltraps) show
0 600 moveto (3054 alltraps:) show
0 588 moveto (3055   # Build trap frame.) show
0 576 moveto (3056   pushl %ds) show
0 564 moveto (3057   pushl %es) show
0 552 moveto (3058   pushl %fs) show
0 540 moveto (3059   pushl %gs) show
0 528 moveto (3060   pushal) show
0 516 moveto (3061 ) show
0 504 moveto (3062   # Set up data and per-cpu segments.) show
0 492 moveto (3063   movw $\(SEG_KDATA<<3\), %ax) show
0 480 moveto (3064   movw %ax, %ds) show
0 468 moveto (3065   movw %ax, %es) show
0 456 moveto (3066   movw $\(SEG_KCPU<<3\), %ax) show
0 444 moveto (3067   movw %ax, %fs) show
0 432 moveto (3068   movw %ax, %gs) show
0 420 moveto (3069 ) show
0 408 moveto (3070   # Call trap\(tf\), where tf=%esp) show
0 396 moveto (3071   pushl %esp) show
0 384 moveto (3072   call trap) show
0 372 moveto (3073   addl $4, %esp) show
0 360 moveto (3074 ) show
0 348 moveto (3075   # Return falls through to trapret...) show
0 336 moveto (3076 .globl trapret) show
0 324 moveto (3077 trapret:) show
0 312 moveto (3078   popal) show
0 300 moveto (3079   popl %gs) show
0 288 moveto (3080   popl %fs) show
0 276 moveto (3081   popl %es) show
0 264 moveto (3082   popl %ds) show
0 252 moveto (3083   addl $0x8, %esp  # trapno and errcode) show
0 240 moveto (3084   iret) show
0 228 moveto (3085 ) show
0 216 moveto (3086 ) show
0 204 moveto (3087 ) show
0 192 moveto (3088 ) show
0 180 moveto (3089 ) show
0 168 moveto (3090 ) show
0 156 moveto (3091 ) show
0 144 moveto (3092 ) show
0 132 moveto (3093 ) show
0 120 moveto (3094 ) show
0 108 moveto (3095 ) show
0 96 moveto (3096 ) show
0 84 moveto (3097 ) show
0 72 moveto (3098 ) show
0 60 moveto (3099 ) show
0 24 moveto (Sheet 30) show
grestore
restore
showpage
%%Page: 39 39
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/trap.c  Page 1) show
0 648 moveto (3100 #include "types.h") show
0 636 moveto (3101 #include "defs.h") show
0 624 moveto (3102 #include "param.h") show
0 612 moveto (3103 #include "memlayout.h") show
0 600 moveto (3104 #include "mmu.h") show
0 588 moveto (3105 #include "proc.h") show
0 576 moveto (3106 #include "x86.h") show
0 564 moveto (3107 #include "traps.h") show
0 552 moveto (3108 #include "spinlock.h") show
0 540 moveto (3109 ) show
0 528 moveto (3110 // Interrupt descriptor table \(shared by all CPUs\).) show
0 516 moveto (3111 struct gatedesc idt[256];) show
0 504 moveto (3112 extern uint vectors[];  // in vectors.S: array of 256 entry pointers) show
0 492 moveto (3113 struct spinlock tickslock;) show
0 480 moveto (3114 uint ticks;) show
0 468 moveto (3115 ) show
0 456 moveto (3116 void) show
0 444 moveto (3117 tvinit\(void\)) show
0 432 moveto (3118 {) show
0 420 moveto (3119   int i;) show
0 408 moveto (3120 ) show
0 396 moveto (3121   for\(i = 0; i < 256; i++\)) show
0 384 moveto (3122     SETGATE\(idt[i], 0, SEG_KCODE<<3, vectors[i], 0\);) show
0 372 moveto (3123   SETGATE\(idt[T_SYSCALL], 1, SEG_KCODE<<3, vectors[T_SYSCALL], DPL_USER\);) show
0 360 moveto (3124 ) show
0 348 moveto (3125   initlock\(&tickslock, "time"\);) show
0 336 moveto (3126 }) show
0 324 moveto (3127 ) show
0 312 moveto (3128 void) show
0 300 moveto (3129 idtinit\(void\)) show
0 288 moveto (3130 {) show
0 276 moveto (3131   lidt\(idt, sizeof\(idt\)\);) show
0 264 moveto (3132 }) show
0 252 moveto (3133 ) show
0 240 moveto (3134 void) show
0 228 moveto (3135 trap\(struct trapframe *tf\)) show
0 216 moveto (3136 {) show
0 204 moveto (3137   if\(tf->trapno == T_SYSCALL\){) show
0 192 moveto (3138     if\(proc->killed\)) show
0 180 moveto (3139       exit\(\);) show
0 168 moveto (3140     proc->tf = tf;) show
0 156 moveto (3141     syscall\(\);) show
0 144 moveto (3142     if\(proc->killed\)) show
0 132 moveto (3143       exit\(\);) show
0 120 moveto (3144     return;) show
0 108 moveto (3145   }) show
0 96 moveto (3146 ) show
0 84 moveto (3147   switch\(tf->trapno\){) show
0 72 moveto (3148   case T_IRQ0 + IRQ_TIMER:) show
0 60 moveto (3149     if\(cpu->id == 0\){) show
0 24 moveto (Sheet 31) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/trap.c  Page 2) show
0 648 moveto (3150       acquire\(&tickslock\);) show
0 636 moveto (3151       ticks++;) show
0 624 moveto (3152       release\(&tickslock\);    // NOTE: MarkM has reversed these two lines.) show
0 612 moveto (3153       wakeup\(&ticks\);         // wakeup\(\) should not require the tickslock to be held) show
0 600 moveto (3154     }) show
0 588 moveto (3155     lapiceoi\(\);) show
0 576 moveto (3156     break;) show
0 564 moveto (3157   case T_IRQ0 + IRQ_IDE:) show
0 552 moveto (3158     ideintr\(\);) show
0 540 moveto (3159     lapiceoi\(\);) show
0 528 moveto (3160     break;) show
0 516 moveto (3161   case T_IRQ0 + IRQ_IDE+1:) show
0 504 moveto (3162     // Bochs generates spurious IDE1 interrupts.) show
0 492 moveto (3163     break;) show
0 480 moveto (3164   case T_IRQ0 + IRQ_KBD:) show
0 468 moveto (3165     kbdintr\(\);) show
0 456 moveto (3166     lapiceoi\(\);) show
0 444 moveto (3167     break;) show
0 432 moveto (3168   case T_IRQ0 + IRQ_COM1:) show
0 420 moveto (3169     uartintr\(\);) show
0 408 moveto (3170     lapiceoi\(\);) show
0 396 moveto (3171     break;) show
0 384 moveto (3172   case T_IRQ0 + 7:) show
0 372 moveto (3173   case T_IRQ0 + IRQ_SPURIOUS:) show
0 360 moveto (3174     cprintf\("cpu%d: spurious interrupt at %x:%x\\n",) show
0 348 moveto (3175             cpu->id, tf->cs, tf->eip\);) show
0 336 moveto (3176     lapiceoi\(\);) show
0 324 moveto (3177     break;) show
0 312 moveto (3178 ) show
0 300 moveto (3179   default:) show
0 288 moveto (3180     if\(proc == 0 || \(tf->cs&3\) == 0\){) show
0 276 moveto (3181       // In kernel, it must be our mistake.) show
0 264 moveto (3182       cprintf\("unexpected trap %d from cpu %d eip %x \(cr2=0x%x\)\\n",) show
0 252 moveto (3183               tf->trapno, cpu->id, tf->eip, rcr2\(\)\);) show
0 240 moveto (3184       panic\("trap"\);) show
0 228 moveto (3185     }) show
0 216 moveto (3186     // In user space, assume process misbehaved.) show
0 204 moveto (3187     cprintf\("pid %d %s: trap %d err %d on cpu %d ") show
0 192 moveto (3188             "eip 0x%x addr 0x%x--kill proc\\n",) show
0 180 moveto (3189             proc->pid, proc->name, tf->trapno, tf->err, cpu->id, tf->eip,) show
0 168 moveto (3190             rcr2\(\)\);) show
0 156 moveto (3191     proc->killed = 1;) show
0 144 moveto (3192   }) show
0 132 moveto (3193 ) show
0 120 moveto (3194   // Force process exit if it has been killed and is in user space.) show
0 108 moveto (3195   // \(If it is still executing in the kernel, let it keep running) show
0 96 moveto (3196   // until it gets to the regular system call return.\)) show
0 84 moveto (3197   if\(proc && proc->killed && \(tf->cs&3\) == DPL_USER\)) show
0 72 moveto (3198     exit\(\);) show
0 60 moveto (3199 ) show
0 24 moveto (Sheet 31) show
grestore
restore
showpage
%%Page: 40 40
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/trap.c  Page 3) show
0 648 moveto (3200   // Force process to give up CPU on clock tick.) show
0 636 moveto (3201   // If interrupts were on while locks held, would need to check nlock.) show
0 624 moveto (3202   if\(proc && proc->state == RUNNING && tf->trapno == T_IRQ0+IRQ_TIMER\)) show
0 612 moveto (3203     yield\(\);) show
0 600 moveto (3204 ) show
0 588 moveto (3205   // Check if the process has been killed since we yielded) show
0 576 moveto (3206   if\(proc && proc->killed && \(tf->cs&3\) == DPL_USER\)) show
0 564 moveto (3207     exit\(\);) show
0 552 moveto (3208 }) show
0 540 moveto (3209 ) show
0 528 moveto (3210 ) show
0 516 moveto (3211 ) show
0 504 moveto (3212 ) show
0 492 moveto (3213 ) show
0 480 moveto (3214 ) show
0 468 moveto (3215 ) show
0 456 moveto (3216 ) show
0 444 moveto (3217 ) show
0 432 moveto (3218 ) show
0 420 moveto (3219 ) show
0 408 moveto (3220 ) show
0 396 moveto (3221 ) show
0 384 moveto (3222 ) show
0 372 moveto (3223 ) show
0 360 moveto (3224 ) show
0 348 moveto (3225 ) show
0 336 moveto (3226 ) show
0 324 moveto (3227 ) show
0 312 moveto (3228 ) show
0 300 moveto (3229 ) show
0 288 moveto (3230 ) show
0 276 moveto (3231 ) show
0 264 moveto (3232 ) show
0 252 moveto (3233 ) show
0 240 moveto (3234 ) show
0 228 moveto (3235 ) show
0 216 moveto (3236 ) show
0 204 moveto (3237 ) show
0 192 moveto (3238 ) show
0 180 moveto (3239 ) show
0 168 moveto (3240 ) show
0 156 moveto (3241 ) show
0 144 moveto (3242 ) show
0 132 moveto (3243 ) show
0 120 moveto (3244 ) show
0 108 moveto (3245 ) show
0 96 moveto (3246 ) show
0 84 moveto (3247 ) show
0 72 moveto (3248 ) show
0 60 moveto (3249 ) show
0 24 moveto (Sheet 32) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/syscall.h  Page 1) show
0 648 moveto (3250 // System call numbers) show
0 636 moveto (3251 #define SYS_fork) show
40 mp_a_x mul 636 moveto (1) show
0 624 moveto (3252 #define SYS_exit    ) show
32 mp_a_x mul 624 moveto (SYS_fork+1) show
0 612 moveto (3253 #define SYS_wait    ) show
32 mp_a_x mul 612 moveto (SYS_exit+1) show
0 600 moveto (3254 #define SYS_pipe    ) show
32 mp_a_x mul 600 moveto (SYS_wait+1) show
0 588 moveto (3255 #define SYS_read    ) show
32 mp_a_x mul 588 moveto (SYS_pipe+1) show
0 576 moveto (3256 #define SYS_kill    ) show
32 mp_a_x mul 576 moveto (SYS_read+1) show
0 564 moveto (3257 #define SYS_exec    ) show
32 mp_a_x mul 564 moveto (SYS_kill+1) show
0 552 moveto (3258 #define SYS_fstat   ) show
32 mp_a_x mul 552 moveto (SYS_exec+1) show
0 540 moveto (3259 #define SYS_chdir   ) show
32 mp_a_x mul 540 moveto (SYS_fstat+1) show
0 528 moveto (3260 #define SYS_dup     ) show
32 mp_a_x mul 528 moveto (SYS_chdir+1) show
0 516 moveto (3261 #define SYS_getpid  ) show
32 mp_a_x mul 516 moveto (SYS_dup+1) show
0 504 moveto (3262 #define SYS_sbrk    ) show
32 mp_a_x mul 504 moveto (SYS_getpid+1) show
0 492 moveto (3263 #define SYS_sleep   ) show
32 mp_a_x mul 492 moveto (SYS_sbrk+1) show
0 480 moveto (3264 #define SYS_uptime  ) show
32 mp_a_x mul 480 moveto (SYS_sleep+1) show
0 468 moveto (3265 #define SYS_open    ) show
32 mp_a_x mul 468 moveto (SYS_uptime+1) show
0 456 moveto (3266 #define SYS_write   ) show
32 mp_a_x mul 456 moveto (SYS_open+1) show
0 444 moveto (3267 #define SYS_mknod   ) show
32 mp_a_x mul 444 moveto (SYS_write+1) show
0 432 moveto (3268 #define SYS_unlink  ) show
32 mp_a_x mul 432 moveto (SYS_mknod+1) show
0 420 moveto (3269 #define SYS_link    ) show
32 mp_a_x mul 420 moveto (SYS_unlink+1) show
0 408 moveto (3270 #define SYS_mkdir   ) show
32 mp_a_x mul 408 moveto (SYS_link+1) show
0 396 moveto (3271 #define SYS_close   ) show
32 mp_a_x mul 396 moveto (SYS_mkdir+1) show
0 384 moveto (3272 #define SYS_halt    ) show
32 mp_a_x mul 384 moveto (SYS_close+1) show
0 372 moveto (3273 // student system calls begin here. Follow the existing pattern.) show
0 360 moveto (3274 #define SYS_date) show
40 mp_a_x mul 360 moveto (SYS_halt+1) show
0 348 moveto (3275 #define SYS_getuid) show
32 mp_a_x mul 348 moveto (SYS_date+1) show
0 336 moveto (3276 #define SYS_getgid) show
32 mp_a_x mul 336 moveto (SYS_getuid+1) show
0 324 moveto (3277 #define SYS_getppid) show
40 mp_a_x mul 324 moveto (SYS_getgid+1) show
0 312 moveto (3278 #define SYS_setuid) show
32 mp_a_x mul 312 moveto (SYS_getppid+1) show
0 300 moveto (3279 #define SYS_setgid) show
32 mp_a_x mul 300 moveto (SYS_setuid+1) show
0 288 moveto (3280 #define SYS_getprocs  SYS_setgid+1) show
0 276 moveto (3281 ) show
0 264 moveto (3282 ) show
0 252 moveto (3283 ) show
0 240 moveto (3284 ) show
0 228 moveto (3285 ) show
0 216 moveto (3286 ) show
0 204 moveto (3287 ) show
0 192 moveto (3288 ) show
0 180 moveto (3289 ) show
0 168 moveto (3290 ) show
0 156 moveto (3291 ) show
0 144 moveto (3292 ) show
0 132 moveto (3293 ) show
0 120 moveto (3294 ) show
0 108 moveto (3295 ) show
0 96 moveto (3296 ) show
0 84 moveto (3297 ) show
0 72 moveto (3298 ) show
0 60 moveto (3299 ) show
0 24 moveto (Sheet 32) show
grestore
restore
showpage
%%Page: 41 41
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/syscall.c  Page 1) show
0 648 moveto (3300 #include "types.h") show
0 636 moveto (3301 #include "defs.h") show
0 624 moveto (3302 #include "param.h") show
0 612 moveto (3303 #include "memlayout.h") show
0 600 moveto (3304 #include "mmu.h") show
0 588 moveto (3305 #include "proc.h") show
0 576 moveto (3306 #include "x86.h") show
0 564 moveto (3307 #include "syscall.h") show
0 552 moveto (3308 ) show
0 540 moveto (3309 // User code makes a system call with INT T_SYSCALL.) show
0 528 moveto (3310 // System call number in %eax.) show
0 516 moveto (3311 // Arguments on the stack, from the user call to the C) show
0 504 moveto (3312 // library system call function. The saved user %esp points) show
0 492 moveto (3313 // to a saved program counter, and then the first argument.) show
0 480 moveto (3314 ) show
0 468 moveto (3315 // Fetch the int at addr from the current process.) show
0 456 moveto (3316 int) show
0 444 moveto (3317 fetchint\(uint addr, int *ip\)) show
0 432 moveto (3318 {) show
0 420 moveto (3319   if\(addr >= proc->sz || addr+4 > proc->sz\)) show
0 408 moveto (3320     return -1;) show
0 396 moveto (3321   *ip = *\(int*\)\(addr\);) show
0 384 moveto (3322   return 0;) show
0 372 moveto (3323 }) show
0 360 moveto (3324 ) show
0 348 moveto (3325 // Fetch the nul-terminated string at addr from the current process.) show
0 336 moveto (3326 // Doesn't actually copy the string - just sets *pp to point at it.) show
0 324 moveto (3327 // Returns length of string, not including nul.) show
0 312 moveto (3328 int) show
0 300 moveto (3329 fetchstr\(uint addr, char **pp\)) show
0 288 moveto (3330 {) show
0 276 moveto (3331   char *s, *ep;) show
0 264 moveto (3332 ) show
0 252 moveto (3333   if\(addr >= proc->sz\)) show
0 240 moveto (3334     return -1;) show
0 228 moveto (3335   *pp = \(char*\)addr;) show
0 216 moveto (3336   ep = \(char*\)proc->sz;) show
0 204 moveto (3337   for\(s = *pp; s < ep; s++\)) show
0 192 moveto (3338     if\(*s == 0\)) show
0 180 moveto (3339       return s - *pp;) show
0 168 moveto (3340   return -1;) show
0 156 moveto (3341 }) show
0 144 moveto (3342 ) show
0 132 moveto (3343 // Fetch the nth 32-bit system call argument.) show
0 120 moveto (3344 int) show
0 108 moveto (3345 argint\(int n, int *ip\)) show
0 96 moveto (3346 {) show
0 84 moveto (3347   return fetchint\(proc->tf->esp + 4 + 4*n, ip\);) show
0 72 moveto (3348 }) show
0 60 moveto (3349 ) show
0 24 moveto (Sheet 33) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/syscall.c  Page 2) show
0 648 moveto (3350 // Fetch the nth word-sized system call argument as a pointer) show
0 636 moveto (3351 // to a block of memory of size n bytes.  Check that the pointer) show
0 624 moveto (3352 // lies within the process address space.) show
0 612 moveto (3353 int) show
0 600 moveto (3354 argptr\(int n, char **pp, int size\)) show
0 588 moveto (3355 {) show
0 576 moveto (3356   int i;) show
0 564 moveto (3357 ) show
0 552 moveto (3358   if\(argint\(n, &i\) < 0\)) show
0 540 moveto (3359     return -1;) show
0 528 moveto (3360   if\(\(uint\)i >= proc->sz || \(uint\)i+size > proc->sz\)) show
0 516 moveto (3361     return -1;) show
0 504 moveto (3362   *pp = \(char*\)i;) show
0 492 moveto (3363   return 0;) show
0 480 moveto (3364 }) show
0 468 moveto (3365 ) show
0 456 moveto (3366 // Fetch the nth word-sized system call argument as a string pointer.) show
0 444 moveto (3367 // Check that the pointer is valid and the string is nul-terminated.) show
0 432 moveto (3368 // \(There is no shared writable memory, so the string can't change) show
0 420 moveto (3369 // between this check and being used by the kernel.\)) show
0 408 moveto (3370 int) show
0 396 moveto (3371 argstr\(int n, char **pp\)) show
0 384 moveto (3372 {) show
0 372 moveto (3373   int addr;) show
0 360 moveto (3374   if\(argint\(n, &addr\) < 0\)) show
0 348 moveto (3375     return -1;) show
0 336 moveto (3376   return fetchstr\(addr, pp\);) show
0 324 moveto (3377 }) show
0 312 moveto (3378 ) show
0 300 moveto (3379 extern int sys_chdir\(void\);) show
0 288 moveto (3380 extern int sys_close\(void\);) show
0 276 moveto (3381 extern int sys_dup\(void\);) show
0 264 moveto (3382 extern int sys_exec\(void\);) show
0 252 moveto (3383 extern int sys_exit\(void\);) show
0 240 moveto (3384 extern int sys_fork\(void\);) show
0 228 moveto (3385 extern int sys_fstat\(void\);) show
0 216 moveto (3386 extern int sys_getpid\(void\);) show
0 204 moveto (3387 extern int sys_kill\(void\);) show
0 192 moveto (3388 extern int sys_link\(void\);) show
0 180 moveto (3389 extern int sys_mkdir\(void\);) show
0 168 moveto (3390 extern int sys_mknod\(void\);) show
0 156 moveto (3391 extern int sys_open\(void\);) show
0 144 moveto (3392 extern int sys_pipe\(void\);) show
0 132 moveto (3393 extern int sys_read\(void\);) show
0 120 moveto (3394 extern int sys_sbrk\(void\);) show
0 108 moveto (3395 extern int sys_sleep\(void\);) show
0 96 moveto (3396 extern int sys_unlink\(void\);) show
0 84 moveto (3397 extern int sys_wait\(void\);) show
0 72 moveto (3398 extern int sys_write\(void\);) show
0 60 moveto (3399 extern int sys_uptime\(void\);) show
0 24 moveto (Sheet 33) show
grestore
restore
showpage
%%Page: 42 42
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/syscall.c  Page 3) show
0 648 moveto (3400 extern int sys_halt\(void\);) show
0 636 moveto (3401 extern int sys_date\(void\);) show
0 624 moveto (3402 #ifdef CS333_P2) show
0 612 moveto (3403 extern int sys_getuid\(void\);) show
0 600 moveto (3404 extern int sys_getgid\(void\);) show
0 588 moveto (3405 extern int sys_getppid\(void\);) show
0 576 moveto (3406 extern int sys_setuid\(void\);) show
0 564 moveto (3407 extern int sys_setgid\(void\);) show
0 552 moveto (3408 extern int sys_getprocs\(void\);) show
0 540 moveto (3409 #endif) show
0 528 moveto (3410 ) show
0 516 moveto (3411 static int \(*syscalls[]\)\(void\) = {) show
0 504 moveto (3412 [SYS_fork]    sys_fork,) show
0 492 moveto (3413 [SYS_exit]    sys_exit,) show
0 480 moveto (3414 [SYS_wait]    sys_wait,) show
0 468 moveto (3415 [SYS_pipe]    sys_pipe,) show
0 456 moveto (3416 [SYS_read]    sys_read,) show
0 444 moveto (3417 [SYS_kill]    sys_kill,) show
0 432 moveto (3418 [SYS_exec]    sys_exec,) show
0 420 moveto (3419 [SYS_fstat]   sys_fstat,) show
0 408 moveto (3420 [SYS_chdir]   sys_chdir,) show
0 396 moveto (3421 [SYS_dup]     sys_dup,) show
0 384 moveto (3422 [SYS_getpid]  sys_getpid,) show
0 372 moveto (3423 [SYS_sbrk]    sys_sbrk,) show
0 360 moveto (3424 [SYS_sleep]   sys_sleep,) show
0 348 moveto (3425 [SYS_uptime]  sys_uptime,) show
0 336 moveto (3426 [SYS_open]    sys_open,) show
0 324 moveto (3427 [SYS_write]   sys_write,) show
0 312 moveto (3428 [SYS_mknod]   sys_mknod,) show
0 300 moveto (3429 [SYS_unlink]  sys_unlink,) show
0 288 moveto (3430 [SYS_link]    sys_link,) show
0 276 moveto (3431 [SYS_mkdir]   sys_mkdir,) show
0 264 moveto (3432 [SYS_close]   sys_close,) show
0 252 moveto (3433 [SYS_halt]    sys_halt,) show
0 240 moveto (3434 [SYS_date]    sys_date,) show
0 228 moveto (3435 #ifdef CS333_P2) show
0 216 moveto (3436 [SYS_getuid]  sys_getuid,) show
0 204 moveto (3437 [SYS_getgid]  sys_getgid,) show
0 192 moveto (3438 [SYS_getppid] sys_getppid,) show
0 180 moveto (3439 [SYS_setuid]  sys_setuid,) show
0 168 moveto (3440 [SYS_setgid]  sys_setgid,) show
0 156 moveto (3441 [SYS_getprocs]  sys_getprocs,) show
0 144 moveto (3442 #endif) show
0 132 moveto (3443 };) show
0 120 moveto (3444 ) show
0 108 moveto (3445 ) show
0 96 moveto (3446 ) show
0 84 moveto (3447 ) show
0 72 moveto (3448 ) show
0 60 moveto (3449 ) show
0 24 moveto (Sheet 34) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/syscall.c  Page 4) show
0 648 moveto (3450 // put data structure for printing out system call invocation information here) show
0 636 moveto (3451 #ifdef PRINT_SYSCALLS) show
0 624 moveto (3452 static const char * \(print_syscalls[]\) = {) show
0 612 moveto (3453 [SYS_fork] = "fork",) show
0 600 moveto (3454 [SYS_exit]   = "exit",) show
0 588 moveto (3455 [SYS_wait]     = "wait",) show
0 576 moveto (3456 [SYS_pipe]     = "pipe",) show
0 564 moveto (3457 [SYS_read]     = "read",) show
0 552 moveto (3458 [SYS_kill]     = "kill",) show
0 540 moveto (3459 [SYS_exec]     = "exec",) show
0 528 moveto (3460 [SYS_fstat]    = "fstat",) show
0 516 moveto (3461 [SYS_chdir]    = "chdir",) show
0 504 moveto (3462 [SYS_dup]      = "dup",) show
0 492 moveto (3463 [SYS_getpid]   = "getpid",) show
0 480 moveto (3464 [SYS_sbrk]     = "sbrk",) show
0 468 moveto (3465 [SYS_sleep]    = "sleep",) show
0 456 moveto (3466 [SYS_uptime]   = "uptime",) show
0 444 moveto (3467 [SYS_open]     = "open",) show
0 432 moveto (3468 [SYS_write]    = "write",) show
0 420 moveto (3469 [SYS_mknod]    = "mknod",) show
0 408 moveto (3470 [SYS_unlink]   = "unlink",) show
0 396 moveto (3471 [SYS_link]     = "link",) show
0 384 moveto (3472 [SYS_mkdir]    = "mkdir",) show
0 372 moveto (3473 [SYS_close]    = "close",) show
0 360 moveto (3474 [SYS_halt]     = "halt",) show
0 348 moveto (3475 [SYS_date]     = "date",) show
0 336 moveto (3476 #ifdef CS333_P2) show
0 324 moveto (3477 [SYS_getgid]   = "getuid",) show
0 312 moveto (3478 [SYS_getuid]   = "getgid",) show
0 300 moveto (3479 [SYS_getppid]  = "getppid",) show
0 288 moveto (3480 [SYS_setgid]   = "setuid",) show
0 276 moveto (3481 [SYS_setuid]   = "setgid",) show
0 264 moveto (3482 [SYS_getprocs]   = "getprocs",) show
0 252 moveto (3483 #endif) show
0 240 moveto (3484 };) show
0 228 moveto (3485 ) show
0 216 moveto (3486 ) show
0 204 moveto (3487 ) show
0 192 moveto (3488 ) show
0 180 moveto (3489 ) show
0 168 moveto (3490 ) show
0 156 moveto (3491 ) show
0 144 moveto (3492 ) show
0 132 moveto (3493 ) show
0 120 moveto (3494 ) show
0 108 moveto (3495 ) show
0 96 moveto (3496 ) show
0 84 moveto (3497 ) show
0 72 moveto (3498 ) show
0 60 moveto (3499 ) show
0 24 moveto (Sheet 34) show
grestore
restore
showpage
%%Page: 43 43
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/syscall.c  Page 5) show
0 648 moveto (3500 #endif) show
0 636 moveto (3501 ) show
0 624 moveto (3502 void) show
0 612 moveto (3503 syscall\(void\)) show
0 600 moveto (3504 {) show
0 588 moveto (3505   int num;) show
0 576 moveto (3506 ) show
0 564 moveto (3507   num = proc->tf->eax;) show
0 552 moveto (3508   if\(num > 0 && num < NELEM\(syscalls\) && syscalls[num]\) {) show
0 540 moveto (3509     proc->tf->eax = syscalls[num]\(\);) show
0 528 moveto (3510 // some code goes here) show
0 516 moveto (3511 #ifdef PRINT_SYSCALLS) show
0 504 moveto (3512 ) show
8 mp_a_x mul 504 moveto (cprintf\("%s -> %d\\n", print_syscalls[num], proc->tf->eax\);) show
0 492 moveto (3513 #endif) show
0 480 moveto (3514   } else {) show
0 468 moveto (3515     cprintf\("%d %s: unknown sys call %d\\n",) show
0 456 moveto (3516             proc->pid, proc->name, num\);) show
0 444 moveto (3517     proc->tf->eax = -1;) show
0 432 moveto (3518   }) show
0 420 moveto (3519 }) show
0 408 moveto (3520 ) show
0 396 moveto (3521 ) show
0 384 moveto (3522 ) show
0 372 moveto (3523 ) show
0 360 moveto (3524 ) show
0 348 moveto (3525 ) show
0 336 moveto (3526 ) show
0 324 moveto (3527 ) show
0 312 moveto (3528 ) show
0 300 moveto (3529 ) show
0 288 moveto (3530 ) show
0 276 moveto (3531 ) show
0 264 moveto (3532 ) show
0 252 moveto (3533 ) show
0 240 moveto (3534 ) show
0 228 moveto (3535 ) show
0 216 moveto (3536 ) show
0 204 moveto (3537 ) show
0 192 moveto (3538 ) show
0 180 moveto (3539 ) show
0 168 moveto (3540 ) show
0 156 moveto (3541 ) show
0 144 moveto (3542 ) show
0 132 moveto (3543 ) show
0 120 moveto (3544 ) show
0 108 moveto (3545 ) show
0 96 moveto (3546 ) show
0 84 moveto (3547 ) show
0 72 moveto (3548 ) show
0 60 moveto (3549 ) show
0 24 moveto (Sheet 35) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/sysproc.c  Page 1) show
0 648 moveto (3550 #include "types.h") show
0 636 moveto (3551 #include "x86.h") show
0 624 moveto (3552 #include "defs.h") show
0 612 moveto (3553 #include "date.h") show
0 600 moveto (3554 #include "param.h") show
0 588 moveto (3555 #include "memlayout.h") show
0 576 moveto (3556 #include "mmu.h") show
0 564 moveto (3557 #include "proc.h") show
0 552 moveto (3558 #include "uproc.h") show
0 540 moveto (3559 ) show
0 528 moveto (3560 int) show
0 516 moveto (3561 sys_fork\(void\)) show
0 504 moveto (3562 {) show
0 492 moveto (3563   return fork\(\);) show
0 480 moveto (3564 }) show
0 468 moveto (3565 ) show
0 456 moveto (3566 int) show
0 444 moveto (3567 sys_exit\(void\)) show
0 432 moveto (3568 {) show
0 420 moveto (3569   exit\(\);) show
0 408 moveto (3570   return 0;  // not reached) show
0 396 moveto (3571 }) show
0 384 moveto (3572 ) show
0 372 moveto (3573 int) show
0 360 moveto (3574 sys_wait\(void\)) show
0 348 moveto (3575 {) show
0 336 moveto (3576   return wait\(\);) show
0 324 moveto (3577 }) show
0 312 moveto (3578 ) show
0 300 moveto (3579 int) show
0 288 moveto (3580 sys_kill\(void\)) show
0 276 moveto (3581 {) show
0 264 moveto (3582   int pid;) show
0 252 moveto (3583 ) show
0 240 moveto (3584   if\(argint\(0, &pid\) < 0\)) show
0 228 moveto (3585     return -1;) show
0 216 moveto (3586   return kill\(pid\);) show
0 204 moveto (3587 }) show
0 192 moveto (3588 ) show
0 180 moveto (3589 int) show
0 168 moveto (3590 sys_getpid\(void\)) show
0 156 moveto (3591 {) show
0 144 moveto (3592   return proc->pid;) show
0 132 moveto (3593 }) show
0 120 moveto (3594 ) show
0 108 moveto (3595 ) show
0 96 moveto (3596 ) show
0 84 moveto (3597 ) show
0 72 moveto (3598 ) show
0 60 moveto (3599 ) show
0 24 moveto (Sheet 35) show
grestore
restore
showpage
%%Page: 44 44
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/sysproc.c  Page 2) show
0 648 moveto (3600 int) show
0 636 moveto (3601 sys_sbrk\(void\)) show
0 624 moveto (3602 {) show
0 612 moveto (3603   int addr;) show
0 600 moveto (3604   int n;) show
0 588 moveto (3605 ) show
0 576 moveto (3606   if\(argint\(0, &n\) < 0\)) show
0 564 moveto (3607     return -1;) show
0 552 moveto (3608   addr = proc->sz;) show
0 540 moveto (3609   if\(growproc\(n\) < 0\)) show
0 528 moveto (3610     return -1;) show
0 516 moveto (3611   return addr;) show
0 504 moveto (3612 }) show
0 492 moveto (3613 ) show
0 480 moveto (3614 int) show
0 468 moveto (3615 sys_sleep\(void\)) show
0 456 moveto (3616 {) show
0 444 moveto (3617   int n;) show
0 432 moveto (3618   uint ticks0;) show
0 420 moveto (3619 ) show
0 408 moveto (3620   if\(argint\(0, &n\) < 0\)) show
0 396 moveto (3621     return -1;) show
0 384 moveto (3622   acquire\(&tickslock\);) show
0 372 moveto (3623   ticks0 = ticks;) show
0 360 moveto (3624   while\(ticks - ticks0 < n\){) show
0 348 moveto (3625     if\(proc->killed\){) show
0 336 moveto (3626       release\(&tickslock\);) show
0 324 moveto (3627       return -1;) show
0 312 moveto (3628     }) show
0 300 moveto (3629     sleep\(&ticks, &tickslock\);) show
0 288 moveto (3630   }) show
0 276 moveto (3631   release\(&tickslock\);) show
0 264 moveto (3632   return 0;) show
0 252 moveto (3633 }) show
0 240 moveto (3634 ) show
0 228 moveto (3635 // return how many clock tick interrupts have occurred) show
0 216 moveto (3636 // since start.) show
0 204 moveto (3637 int) show
0 192 moveto (3638 sys_uptime\(void\)) show
0 180 moveto (3639 {) show
0 168 moveto (3640   uint xticks;) show
0 156 moveto (3641 ) show
0 144 moveto (3642   acquire\(&tickslock\);) show
0 132 moveto (3643   xticks = ticks;) show
0 120 moveto (3644   release\(&tickslock\);) show
0 108 moveto (3645   return xticks;) show
0 96 moveto (3646 }) show
0 84 moveto (3647 ) show
0 72 moveto (3648 ) show
0 60 moveto (3649 ) show
0 24 moveto (Sheet 36) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/sysproc.c  Page 3) show
0 648 moveto (3650 //Turn of the computer) show
0 636 moveto (3651 int sys_halt\(void\){) show
0 624 moveto (3652   cprintf\("Shutting down ...\\n"\);) show
0 612 moveto (3653   //outw \(0xB004, 0x0 | 0x2000\);) show
0 600 moveto (3654 ) show
8 mp_a_x mul 600 moveto (outw\( 0x604, 0x0 | 0x2000 \);) show
0 588 moveto (3655 ) show
8 mp_a_x mul 588 moveto (return 0;) show
0 576 moveto (3656 ) show
0 564 moveto (3657 }) show
0 552 moveto (3658 ) show
0 540 moveto (3659 //Get current UTC date of the system) show
0 528 moveto (3660 int) show
0 516 moveto (3661 sys_date\(void\)) show
0 504 moveto (3662 {) show
0 492 moveto (3663   struct rtcdate *d;) show
0 480 moveto (3664   if\(argptr\(0, \(void*\)&d, sizeof\(*d\)\) < 0\)) show
0 468 moveto (3665     return -1;) show
0 456 moveto (3666   cmostime\(d\);) show
0 444 moveto (3667   return 0;) show
0 432 moveto (3668 }) show
0 420 moveto (3669 ) show
0 408 moveto (3670 #ifdef CS333_P2) show
0 396 moveto (3671 // Set UID) show
0 384 moveto (3672 int) show
0 372 moveto (3673 sys_setuid\(void\)) show
0 360 moveto (3674 {) show
0 348 moveto (3675 ) show
8 mp_a_x mul 348 moveto (uint new_uid;) show
0 336 moveto (3676   if\(argint\(0,\(int*\) &new_uid\) < 0\)) show
0 324 moveto (3677 ) show
16 mp_a_x mul 324 moveto (return -1;) show
0 312 moveto (3678 ) show
8 mp_a_x mul 312 moveto (if\(new_uid < 0 || new_uid > 32767\)) show
0 300 moveto (3679 ) show
16 mp_a_x mul 300 moveto (return -1;) show
0 288 moveto (3680 ) show
8 mp_a_x mul 288 moveto (proc->uid = new_uid;) show
0 276 moveto (3681 ) show
8 mp_a_x mul 276 moveto (return 0;) show
0 264 moveto (3682 }) show
0 252 moveto (3683 ) show
0 240 moveto (3684 // Set GID) show
0 228 moveto (3685 int) show
0 216 moveto (3686 sys_setgid\(void\)) show
0 204 moveto (3687 {) show
0 192 moveto (3688 ) show
8 mp_a_x mul 192 moveto (uint new_gid;) show
0 180 moveto (3689   if\(argint\(0,\(int*\) &new_gid\) < 0\)) show
0 168 moveto (3690 ) show
16 mp_a_x mul 168 moveto (return -1;) show
0 156 moveto (3691 ) show
8 mp_a_x mul 156 moveto (if\(new_gid < 0 || new_gid > 32767\)) show
0 144 moveto (3692 ) show
16 mp_a_x mul 144 moveto (return -1;) show
0 132 moveto (3693 ) show
8 mp_a_x mul 132 moveto (proc->gid = new_gid;) show
0 120 moveto (3694 ) show
8 mp_a_x mul 120 moveto (return 0;) show
0 108 moveto (3695 }) show
0 96 moveto (3696 ) show
0 84 moveto (3697 ) show
0 72 moveto (3698 ) show
0 60 moveto (3699 ) show
0 24 moveto (Sheet 36) show
grestore
restore
showpage
%%Page: 45 45
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/sysproc.c  Page 4) show
0 648 moveto (3700 // Get UID of current process) show
0 636 moveto (3701 uint) show
0 624 moveto (3702 sys_getuid\(void\)) show
0 612 moveto (3703 {) show
0 600 moveto (3704 ) show
8 mp_a_x mul 600 moveto (return proc->uid;) show
0 588 moveto (3705 }) show
0 576 moveto (3706 ) show
0 564 moveto (3707 // Get GID of current process) show
0 552 moveto (3708 uint) show
0 540 moveto (3709 sys_getgid\(void\)) show
0 528 moveto (3710 {) show
0 516 moveto (3711 ) show
8 mp_a_x mul 516 moveto (return proc->gid;) show
0 504 moveto (3712 }) show
0 492 moveto (3713 ) show
0 480 moveto (3714 // Get PPID of current process) show
0 468 moveto (3715 uint) show
0 456 moveto (3716 sys_getppid\(void\)) show
0 444 moveto (3717 {) show
0 432 moveto (3718 ) show
8 mp_a_x mul 432 moveto (if\(proc->pid == 1\)) show
0 420 moveto (3719 ) show
16 mp_a_x mul 420 moveto (return proc->pid;) show
0 408 moveto (3720 ) show
8 mp_a_x mul 408 moveto (if\(!proc->parent\)) show
0 396 moveto (3721 ) show
16 mp_a_x mul 396 moveto (return proc->pid;) show
0 384 moveto (3722 ) show
8 mp_a_x mul 384 moveto (return proc->parent->pid;) show
0 372 moveto (3723 }) show
0 360 moveto (3724 ) show
0 348 moveto (3725 // Get process info) show
0 336 moveto (3726 int) show
0 324 moveto (3727 sys_getprocs\(void\)) show
0 312 moveto (3728 {) show
0 300 moveto (3729 ) show
8 mp_a_x mul 300 moveto (uint arg1;) show
0 288 moveto (3730 ) show
8 mp_a_x mul 288 moveto (struct uproc* table;) show
0 276 moveto (3731 ) show
8 mp_a_x mul 276 moveto (if\(argint\(0,\(int*\) &arg1\) < 0\)) show
0 264 moveto (3732 ) show
16 mp_a_x mul 264 moveto (return -1;) show
0 252 moveto (3733 ) show
8 mp_a_x mul 252 moveto (if\(argptr\(1,\(void*\)&table, sizeof\(*table\)\) < 0\)) show
0 240 moveto (3734 ) show
16 mp_a_x mul 240 moveto (return -1;;) show
0 228 moveto (3735 ) show
8 mp_a_x mul 228 moveto (return getprocs\(arg1, table\);) show
0 216 moveto (3736 }) show
0 204 moveto (3737 #endif) show
0 192 moveto (3738 ) show
0 180 moveto (3739 ) show
0 168 moveto (3740 ) show
0 156 moveto (3741 ) show
0 144 moveto (3742 ) show
0 132 moveto (3743 ) show
0 120 moveto (3744 ) show
0 108 moveto (3745 ) show
0 96 moveto (3746 ) show
0 84 moveto (3747 ) show
0 72 moveto (3748 ) show
0 60 moveto (3749 ) show
0 24 moveto (Sheet 37) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/halt.c  Page 1) show
0 648 moveto (3750 // halt the system.) show
0 636 moveto (3751 #include "types.h") show
0 624 moveto (3752 #include "user.h") show
0 612 moveto (3753 ) show
0 600 moveto (3754 int) show
0 588 moveto (3755 main\(void\) {) show
0 576 moveto (3756   halt\(\);) show
0 564 moveto (3757   return 0;) show
0 552 moveto (3758 }) show
0 540 moveto (3759 ) show
0 528 moveto (3760 ) show
0 516 moveto (3761 ) show
0 504 moveto (3762 ) show
0 492 moveto (3763 ) show
0 480 moveto (3764 ) show
0 468 moveto (3765 ) show
0 456 moveto (3766 ) show
0 444 moveto (3767 ) show
0 432 moveto (3768 ) show
0 420 moveto (3769 ) show
0 408 moveto (3770 ) show
0 396 moveto (3771 ) show
0 384 moveto (3772 ) show
0 372 moveto (3773 ) show
0 360 moveto (3774 ) show
0 348 moveto (3775 ) show
0 336 moveto (3776 ) show
0 324 moveto (3777 ) show
0 312 moveto (3778 ) show
0 300 moveto (3779 ) show
0 288 moveto (3780 ) show
0 276 moveto (3781 ) show
0 264 moveto (3782 ) show
0 252 moveto (3783 ) show
0 240 moveto (3784 ) show
0 228 moveto (3785 ) show
0 216 moveto (3786 ) show
0 204 moveto (3787 ) show
0 192 moveto (3788 ) show
0 180 moveto (3789 ) show
0 168 moveto (3790 ) show
0 156 moveto (3791 ) show
0 144 moveto (3792 ) show
0 132 moveto (3793 ) show
0 120 moveto (3794 ) show
0 108 moveto (3795 ) show
0 96 moveto (3796 ) show
0 84 moveto (3797 ) show
0 72 moveto (3798 ) show
0 60 moveto (3799 ) show
0 24 moveto (Sheet 37) show
grestore
restore
showpage
%%Page: 46 46
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/buf.h  Page 1) show
0 648 moveto (3800 struct buf {) show
0 636 moveto (3801   int flags;) show
0 624 moveto (3802   uint dev;) show
0 612 moveto (3803   uint blockno;) show
0 600 moveto (3804   struct buf *prev; // LRU cache list) show
0 588 moveto (3805   struct buf *next;) show
0 576 moveto (3806   struct buf *qnext; // disk queue) show
0 564 moveto (3807   uchar data[BSIZE];) show
0 552 moveto (3808 };) show
0 540 moveto (3809 #define B_BUSY  0x1  // buffer is locked by some process) show
0 528 moveto (3810 #define B_VALID 0x2  // buffer has been read from disk) show
0 516 moveto (3811 #define B_DIRTY 0x4  // buffer needs to be written to disk) show
0 504 moveto (3812 ) show
0 492 moveto (3813 ) show
0 480 moveto (3814 ) show
0 468 moveto (3815 ) show
0 456 moveto (3816 ) show
0 444 moveto (3817 ) show
0 432 moveto (3818 ) show
0 420 moveto (3819 ) show
0 408 moveto (3820 ) show
0 396 moveto (3821 ) show
0 384 moveto (3822 ) show
0 372 moveto (3823 ) show
0 360 moveto (3824 ) show
0 348 moveto (3825 ) show
0 336 moveto (3826 ) show
0 324 moveto (3827 ) show
0 312 moveto (3828 ) show
0 300 moveto (3829 ) show
0 288 moveto (3830 ) show
0 276 moveto (3831 ) show
0 264 moveto (3832 ) show
0 252 moveto (3833 ) show
0 240 moveto (3834 ) show
0 228 moveto (3835 ) show
0 216 moveto (3836 ) show
0 204 moveto (3837 ) show
0 192 moveto (3838 ) show
0 180 moveto (3839 ) show
0 168 moveto (3840 ) show
0 156 moveto (3841 ) show
0 144 moveto (3842 ) show
0 132 moveto (3843 ) show
0 120 moveto (3844 ) show
0 108 moveto (3845 ) show
0 96 moveto (3846 ) show
0 84 moveto (3847 ) show
0 72 moveto (3848 ) show
0 60 moveto (3849 ) show
0 24 moveto (Sheet 38) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/fcntl.h  Page 1) show
0 648 moveto (3850 #define O_RDONLY  0x000) show
0 636 moveto (3851 #define O_WRONLY  0x001) show
0 624 moveto (3852 #define O_RDWR    0x002) show
0 612 moveto (3853 #define O_CREATE  0x200) show
0 600 moveto (3854 ) show
0 588 moveto (3855 ) show
0 576 moveto (3856 ) show
0 564 moveto (3857 ) show
0 552 moveto (3858 ) show
0 540 moveto (3859 ) show
0 528 moveto (3860 ) show
0 516 moveto (3861 ) show
0 504 moveto (3862 ) show
0 492 moveto (3863 ) show
0 480 moveto (3864 ) show
0 468 moveto (3865 ) show
0 456 moveto (3866 ) show
0 444 moveto (3867 ) show
0 432 moveto (3868 ) show
0 420 moveto (3869 ) show
0 408 moveto (3870 ) show
0 396 moveto (3871 ) show
0 384 moveto (3872 ) show
0 372 moveto (3873 ) show
0 360 moveto (3874 ) show
0 348 moveto (3875 ) show
0 336 moveto (3876 ) show
0 324 moveto (3877 ) show
0 312 moveto (3878 ) show
0 300 moveto (3879 ) show
0 288 moveto (3880 ) show
0 276 moveto (3881 ) show
0 264 moveto (3882 ) show
0 252 moveto (3883 ) show
0 240 moveto (3884 ) show
0 228 moveto (3885 ) show
0 216 moveto (3886 ) show
0 204 moveto (3887 ) show
0 192 moveto (3888 ) show
0 180 moveto (3889 ) show
0 168 moveto (3890 ) show
0 156 moveto (3891 ) show
0 144 moveto (3892 ) show
0 132 moveto (3893 ) show
0 120 moveto (3894 ) show
0 108 moveto (3895 ) show
0 96 moveto (3896 ) show
0 84 moveto (3897 ) show
0 72 moveto (3898 ) show
0 60 moveto (3899 ) show
0 24 moveto (Sheet 38) show
grestore
restore
showpage
%%Page: 47 47
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/stat.h  Page 1) show
0 648 moveto (3900 #define T_DIR  1   // Directory) show
0 636 moveto (3901 #define T_FILE 2   // File) show
0 624 moveto (3902 #define T_DEV  3   // Device) show
0 612 moveto (3903 ) show
0 600 moveto (3904 struct stat {) show
0 588 moveto (3905   short type;  // Type of file) show
0 576 moveto (3906   int dev;     // File system's disk device) show
0 564 moveto (3907   uint ino;    // Inode number) show
0 552 moveto (3908   short nlink; // Number of links to file) show
0 540 moveto (3909   uint size;   // Size of file in bytes) show
0 528 moveto (3910 };) show
0 516 moveto (3911 ) show
0 504 moveto (3912 ) show
0 492 moveto (3913 ) show
0 480 moveto (3914 ) show
0 468 moveto (3915 ) show
0 456 moveto (3916 ) show
0 444 moveto (3917 ) show
0 432 moveto (3918 ) show
0 420 moveto (3919 ) show
0 408 moveto (3920 ) show
0 396 moveto (3921 ) show
0 384 moveto (3922 ) show
0 372 moveto (3923 ) show
0 360 moveto (3924 ) show
0 348 moveto (3925 ) show
0 336 moveto (3926 ) show
0 324 moveto (3927 ) show
0 312 moveto (3928 ) show
0 300 moveto (3929 ) show
0 288 moveto (3930 ) show
0 276 moveto (3931 ) show
0 264 moveto (3932 ) show
0 252 moveto (3933 ) show
0 240 moveto (3934 ) show
0 228 moveto (3935 ) show
0 216 moveto (3936 ) show
0 204 moveto (3937 ) show
0 192 moveto (3938 ) show
0 180 moveto (3939 ) show
0 168 moveto (3940 ) show
0 156 moveto (3941 ) show
0 144 moveto (3942 ) show
0 132 moveto (3943 ) show
0 120 moveto (3944 ) show
0 108 moveto (3945 ) show
0 96 moveto (3946 ) show
0 84 moveto (3947 ) show
0 72 moveto (3948 ) show
0 60 moveto (3949 ) show
0 24 moveto (Sheet 39) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/fs.h  Page 1) show
0 648 moveto (3950 // On-disk file system format.) show
0 636 moveto (3951 // Both the kernel and user programs use this header file.) show
0 624 moveto (3952 ) show
0 612 moveto (3953 ) show
0 600 moveto (3954 #define ROOTINO 1  // root i-number) show
0 588 moveto (3955 #define BSIZE 512  // block size) show
0 576 moveto (3956 ) show
0 564 moveto (3957 // Disk layout:) show
0 552 moveto (3958 // [ boot block | super block | log | inode blocks | free bit map | data blocks ]) show
0 540 moveto (3959 //) show
0 528 moveto (3960 // mkfs computes the super block and builds an initial file system. The super describes) show
0 516 moveto (3961 // the disk layout:) show
0 504 moveto (3962 struct superblock {) show
0 492 moveto (3963   uint size;         // Size of file system image \(blocks\)) show
0 480 moveto (3964   uint nblocks;      // Number of data blocks) show
0 468 moveto (3965   uint ninodes;      // Number of inodes.) show
0 456 moveto (3966   uint nlog;         // Number of log blocks) show
0 444 moveto (3967   uint logstart;     // Block number of first log block) show
0 432 moveto (3968   uint inodestart;   // Block number of first inode block) show
0 420 moveto (3969   uint bmapstart;    // Block number of first free map block) show
0 408 moveto (3970 };) show
0 396 moveto (3971 ) show
0 384 moveto (3972 #define NDIRECT 12) show
0 372 moveto (3973 #define NINDIRECT \(BSIZE / sizeof\(uint\)\)) show
0 360 moveto (3974 #define MAXFILE \(NDIRECT + NINDIRECT\)) show
0 348 moveto (3975 ) show
0 336 moveto (3976 // On-disk inode structure) show
0 324 moveto (3977 struct dinode {) show
0 312 moveto (3978   short type;           // File type) show
0 300 moveto (3979   short major;          // Major device number \(T_DEV only\)) show
0 288 moveto (3980   short minor;          // Minor device number \(T_DEV only\)) show
0 276 moveto (3981   short nlink;          // Number of links to inode in file system) show
0 264 moveto (3982   uint size;            // Size of file \(bytes\)) show
0 252 moveto (3983   uint addrs[NDIRECT+1];   // Data block addresses) show
0 240 moveto (3984 };) show
0 228 moveto (3985 ) show
0 216 moveto (3986 ) show
0 204 moveto (3987 ) show
0 192 moveto (3988 ) show
0 180 moveto (3989 ) show
0 168 moveto (3990 ) show
0 156 moveto (3991 ) show
0 144 moveto (3992 ) show
0 132 moveto (3993 ) show
0 120 moveto (3994 ) show
0 108 moveto (3995 ) show
0 96 moveto (3996 ) show
0 84 moveto (3997 ) show
0 72 moveto (3998 ) show
0 60 moveto (3999 ) show
0 24 moveto (Sheet 39) show
grestore
restore
showpage
%%Page: 48 48
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/fs.h  Page 2) show
0 648 moveto (4000 // Inodes per block.) show
0 636 moveto (4001 #define IPB           \(BSIZE / sizeof\(struct dinode\)\)) show
0 624 moveto (4002 ) show
0 612 moveto (4003 // Block containing inode i) show
0 600 moveto (4004 #define IBLOCK\(i, sb\)     \(\(i\) / IPB + sb.inodestart\)) show
0 588 moveto (4005 ) show
0 576 moveto (4006 // Bitmap bits per block) show
0 564 moveto (4007 #define BPB           \(BSIZE*8\)) show
0 552 moveto (4008 ) show
0 540 moveto (4009 // Block of free map containing bit for block b) show
0 528 moveto (4010 #define BBLOCK\(b, sb\) \(b/BPB + sb.bmapstart\)) show
0 516 moveto (4011 ) show
0 504 moveto (4012 // Directory is a file containing a sequence of dirent structures.) show
0 492 moveto (4013 #define DIRSIZ 14) show
0 480 moveto (4014 ) show
0 468 moveto (4015 struct dirent {) show
0 456 moveto (4016   ushort inum;) show
0 444 moveto (4017   char name[DIRSIZ];) show
0 432 moveto (4018 };) show
0 420 moveto (4019 ) show
0 408 moveto (4020 ) show
0 396 moveto (4021 ) show
0 384 moveto (4022 ) show
0 372 moveto (4023 ) show
0 360 moveto (4024 ) show
0 348 moveto (4025 ) show
0 336 moveto (4026 ) show
0 324 moveto (4027 ) show
0 312 moveto (4028 ) show
0 300 moveto (4029 ) show
0 288 moveto (4030 ) show
0 276 moveto (4031 ) show
0 264 moveto (4032 ) show
0 252 moveto (4033 ) show
0 240 moveto (4034 ) show
0 228 moveto (4035 ) show
0 216 moveto (4036 ) show
0 204 moveto (4037 ) show
0 192 moveto (4038 ) show
0 180 moveto (4039 ) show
0 168 moveto (4040 ) show
0 156 moveto (4041 ) show
0 144 moveto (4042 ) show
0 132 moveto (4043 ) show
0 120 moveto (4044 ) show
0 108 moveto (4045 ) show
0 96 moveto (4046 ) show
0 84 moveto (4047 ) show
0 72 moveto (4048 ) show
0 60 moveto (4049 ) show
0 24 moveto (Sheet 40) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/file.h  Page 1) show
0 648 moveto (4050 struct file {) show
0 636 moveto (4051   enum { FD_NONE, FD_PIPE, FD_INODE } type;) show
0 624 moveto (4052   int ref; // reference count) show
0 612 moveto (4053   char readable;) show
0 600 moveto (4054   char writable;) show
0 588 moveto (4055   struct pipe *pipe;) show
0 576 moveto (4056   struct inode *ip;) show
0 564 moveto (4057   uint off;) show
0 552 moveto (4058 };) show
0 540 moveto (4059 ) show
0 528 moveto (4060 ) show
0 516 moveto (4061 // in-memory copy of an inode) show
0 504 moveto (4062 struct inode {) show
0 492 moveto (4063   uint dev;           // Device number) show
0 480 moveto (4064   uint inum;          // Inode number) show
0 468 moveto (4065   int ref;            // Reference count) show
0 456 moveto (4066   int flags;          // I_BUSY, I_VALID) show
0 444 moveto (4067 ) show
0 432 moveto (4068   short type;         // copy of disk inode) show
0 420 moveto (4069   short major;) show
0 408 moveto (4070   short minor;) show
0 396 moveto (4071   short nlink;) show
0 384 moveto (4072   uint size;) show
0 372 moveto (4073   uint addrs[NDIRECT+1];) show
0 360 moveto (4074 };) show
0 348 moveto (4075 #define I_BUSY 0x1) show
0 336 moveto (4076 #define I_VALID 0x2) show
0 324 moveto (4077 ) show
0 312 moveto (4078 // table mapping major device number to) show
0 300 moveto (4079 // device functions) show
0 288 moveto (4080 struct devsw {) show
0 276 moveto (4081   int \(*read\)\(struct inode*, char*, int\);) show
0 264 moveto (4082   int \(*write\)\(struct inode*, char*, int\);) show
0 252 moveto (4083 };) show
0 240 moveto (4084 ) show
0 228 moveto (4085 extern struct devsw devsw[];) show
0 216 moveto (4086 ) show
0 204 moveto (4087 #define CONSOLE 1) show
0 192 moveto (4088 ) show
0 180 moveto (4089 // Blank page.) show
0 168 moveto (4090 ) show
0 156 moveto (4091 ) show
0 144 moveto (4092 ) show
0 132 moveto (4093 ) show
0 120 moveto (4094 ) show
0 108 moveto (4095 ) show
0 96 moveto (4096 ) show
0 84 moveto (4097 ) show
0 72 moveto (4098 ) show
0 60 moveto (4099 ) show
0 24 moveto (Sheet 40) show
grestore
restore
showpage
%%Page: 49 49
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/ide.c  Page 1) show
0 648 moveto (4100 // Simple PIO-based \(non-DMA\) IDE driver code.) show
0 636 moveto (4101 ) show
0 624 moveto (4102 #include "types.h") show
0 612 moveto (4103 #include "defs.h") show
0 600 moveto (4104 #include "param.h") show
0 588 moveto (4105 #include "memlayout.h") show
0 576 moveto (4106 #include "mmu.h") show
0 564 moveto (4107 #include "proc.h") show
0 552 moveto (4108 #include "x86.h") show
0 540 moveto (4109 #include "traps.h") show
0 528 moveto (4110 #include "spinlock.h") show
0 516 moveto (4111 #include "fs.h") show
0 504 moveto (4112 #include "buf.h") show
0 492 moveto (4113 ) show
0 480 moveto (4114 #define SECTOR_SIZE   512) show
0 468 moveto (4115 #define IDE_BSY       0x80) show
0 456 moveto (4116 #define IDE_DRDY      0x40) show
0 444 moveto (4117 #define IDE_DF        0x20) show
0 432 moveto (4118 #define IDE_ERR       0x01) show
0 420 moveto (4119 ) show
0 408 moveto (4120 #define IDE_CMD_READ  0x20) show
0 396 moveto (4121 #define IDE_CMD_WRITE 0x30) show
0 384 moveto (4122 ) show
0 372 moveto (4123 // idequeue points to the buf now being read/written to the disk.) show
0 360 moveto (4124 // idequeue->qnext points to the next buf to be processed.) show
0 348 moveto (4125 // You must hold idelock while manipulating queue.) show
0 336 moveto (4126 ) show
0 324 moveto (4127 static struct spinlock idelock;) show
0 312 moveto (4128 static struct buf *idequeue;) show
0 300 moveto (4129 ) show
0 288 moveto (4130 static int havedisk1;) show
0 276 moveto (4131 static void idestart\(struct buf*\);) show
0 264 moveto (4132 ) show
0 252 moveto (4133 // Wait for IDE disk to become ready.) show
0 240 moveto (4134 static int) show
0 228 moveto (4135 idewait\(int checkerr\)) show
0 216 moveto (4136 {) show
0 204 moveto (4137   int r;) show
0 192 moveto (4138 ) show
0 180 moveto (4139   while\(\(\(r = inb\(0x1f7\)\) & \(IDE_BSY|IDE_DRDY\)\) != IDE_DRDY\)) show
0 168 moveto (4140     ;) show
0 156 moveto (4141   if\(checkerr && \(r & \(IDE_DF|IDE_ERR\)\) != 0\)) show
0 144 moveto (4142     return -1;) show
0 132 moveto (4143   return 0;) show
0 120 moveto (4144 }) show
0 108 moveto (4145 ) show
0 96 moveto (4146 ) show
0 84 moveto (4147 ) show
0 72 moveto (4148 ) show
0 60 moveto (4149 ) show
0 24 moveto (Sheet 41) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/ide.c  Page 2) show
0 648 moveto (4150 void) show
0 636 moveto (4151 ideinit\(void\)) show
0 624 moveto (4152 {) show
0 612 moveto (4153   int i;) show
0 600 moveto (4154 ) show
0 588 moveto (4155   initlock\(&idelock, "ide"\);) show
0 576 moveto (4156   picenable\(IRQ_IDE\);) show
0 564 moveto (4157   ioapicenable\(IRQ_IDE, ncpu - 1\);) show
0 552 moveto (4158   idewait\(0\);) show
0 540 moveto (4159 ) show
0 528 moveto (4160   // Check if disk 1 is present) show
0 516 moveto (4161   outb\(0x1f6, 0xe0 | \(1<<4\)\);) show
0 504 moveto (4162   for\(i=0; i<1000; i++\){) show
0 492 moveto (4163     if\(inb\(0x1f7\) != 0\){) show
0 480 moveto (4164       havedisk1 = 1;) show
0 468 moveto (4165       break;) show
0 456 moveto (4166     }) show
0 444 moveto (4167   }) show
0 432 moveto (4168 ) show
0 420 moveto (4169   // Switch back to disk 0.) show
0 408 moveto (4170   outb\(0x1f6, 0xe0 | \(0<<4\)\);) show
0 396 moveto (4171 }) show
0 384 moveto (4172 ) show
0 372 moveto (4173 // Start the request for b.  Caller must hold idelock.) show
0 360 moveto (4174 static void) show
0 348 moveto (4175 idestart\(struct buf *b\)) show
0 336 moveto (4176 {) show
0 324 moveto (4177   if\(b == 0\)) show
0 312 moveto (4178     panic\("idestart"\);) show
0 300 moveto (4179   if\(b->blockno >= FSSIZE\)) show
0 288 moveto (4180     panic\("incorrect blockno"\);) show
0 276 moveto (4181   int sector_per_block =  BSIZE/SECTOR_SIZE;) show
0 264 moveto (4182   int sector = b->blockno * sector_per_block;) show
0 252 moveto (4183 ) show
0 240 moveto (4184   if \(sector_per_block > 7\) panic\("idestart"\);) show
0 228 moveto (4185 ) show
0 216 moveto (4186   idewait\(0\);) show
0 204 moveto (4187   outb\(0x3f6, 0\);  // generate interrupt) show
0 192 moveto (4188   outb\(0x1f2, sector_per_block\);  // number of sectors) show
0 180 moveto (4189   outb\(0x1f3, sector & 0xff\);) show
0 168 moveto (4190   outb\(0x1f4, \(sector >> 8\) & 0xff\);) show
0 156 moveto (4191   outb\(0x1f5, \(sector >> 16\) & 0xff\);) show
0 144 moveto (4192   outb\(0x1f6, 0xe0 | \(\(b->dev&1\)<<4\) | \(\(sector>>24\)&0x0f\)\);) show
0 132 moveto (4193   if\(b->flags & B_DIRTY\){) show
0 120 moveto (4194     outb\(0x1f7, IDE_CMD_WRITE\);) show
0 108 moveto (4195     outsl\(0x1f0, b->data, BSIZE/4\);) show
0 96 moveto (4196   } else {) show
0 84 moveto (4197     outb\(0x1f7, IDE_CMD_READ\);) show
0 72 moveto (4198   }) show
0 60 moveto (4199 }) show
0 24 moveto (Sheet 41) show
grestore
restore
showpage
%%Page: 50 50
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/ide.c  Page 3) show
0 648 moveto (4200 // Interrupt handler.) show
0 636 moveto (4201 void) show
0 624 moveto (4202 ideintr\(void\)) show
0 612 moveto (4203 {) show
0 600 moveto (4204   struct buf *b;) show
0 588 moveto (4205 ) show
0 576 moveto (4206   // First queued buffer is the active request.) show
0 564 moveto (4207   acquire\(&idelock\);) show
0 552 moveto (4208   if\(\(b = idequeue\) == 0\){) show
0 540 moveto (4209     release\(&idelock\);) show
0 528 moveto (4210     // cprintf\("spurious IDE interrupt\\n"\);) show
0 516 moveto (4211     return;) show
0 504 moveto (4212   }) show
0 492 moveto (4213   idequeue = b->qnext;) show
0 480 moveto (4214 ) show
0 468 moveto (4215   // Read data if needed.) show
0 456 moveto (4216   if\(!\(b->flags & B_DIRTY\) && idewait\(1\) >= 0\)) show
0 444 moveto (4217     insl\(0x1f0, b->data, BSIZE/4\);) show
0 432 moveto (4218 ) show
0 420 moveto (4219   // Wake process waiting for this buf.) show
0 408 moveto (4220   b->flags |= B_VALID;) show
0 396 moveto (4221   b->flags &= ~B_DIRTY;) show
0 384 moveto (4222   wakeup\(b\);) show
0 372 moveto (4223 ) show
0 360 moveto (4224   // Start disk on next buf in queue.) show
0 348 moveto (4225   if\(idequeue != 0\)) show
0 336 moveto (4226     idestart\(idequeue\);) show
0 324 moveto (4227 ) show
0 312 moveto (4228   release\(&idelock\);) show
0 300 moveto (4229 }) show
0 288 moveto (4230 ) show
0 276 moveto (4231 // Sync buf with disk.) show
0 264 moveto (4232 // If B_DIRTY is set, write buf to disk, clear B_DIRTY, set B_VALID.) show
0 252 moveto (4233 // Else if B_VALID is not set, read buf from disk, set B_VALID.) show
0 240 moveto (4234 void) show
0 228 moveto (4235 iderw\(struct buf *b\)) show
0 216 moveto (4236 {) show
0 204 moveto (4237   struct buf **pp;) show
0 192 moveto (4238 ) show
0 180 moveto (4239   if\(!\(b->flags & B_BUSY\)\)) show
0 168 moveto (4240     panic\("iderw: buf not busy"\);) show
0 156 moveto (4241   if\(\(b->flags & \(B_VALID|B_DIRTY\)\) == B_VALID\)) show
0 144 moveto (4242     panic\("iderw: nothing to do"\);) show
0 132 moveto (4243   if\(b->dev != 0 && !havedisk1\)) show
0 120 moveto (4244     panic\("iderw: ide disk 1 not present"\);) show
0 108 moveto (4245 ) show
0 96 moveto (4246   acquire\(&idelock\);  ) show
0 84 moveto (4247 ) show
0 72 moveto (4248 ) show
0 60 moveto (4249 ) show
0 24 moveto (Sheet 42) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/ide.c  Page 4) show
0 648 moveto (4250   // Append b to idequeue.) show
0 636 moveto (4251   b->qnext = 0;) show
0 624 moveto (4252   for\(pp=&idequeue; *pp; pp=&\(*pp\)->qnext\)  ) show
0 612 moveto (4253     ;) show
0 600 moveto (4254   *pp = b;) show
0 588 moveto (4255 ) show
0 576 moveto (4256   // Start disk if necessary.) show
0 564 moveto (4257   if\(idequeue == b\)) show
0 552 moveto (4258     idestart\(b\);) show
0 540 moveto (4259 ) show
0 528 moveto (4260   // Wait for request to finish.) show
0 516 moveto (4261   while\(\(b->flags & \(B_VALID|B_DIRTY\)\) != B_VALID\){) show
0 504 moveto (4262     sleep\(b, &idelock\);) show
0 492 moveto (4263   }) show
0 480 moveto (4264 ) show
0 468 moveto (4265   release\(&idelock\);) show
0 456 moveto (4266 }) show
0 444 moveto (4267 ) show
0 432 moveto (4268 ) show
0 420 moveto (4269 ) show
0 408 moveto (4270 ) show
0 396 moveto (4271 ) show
0 384 moveto (4272 ) show
0 372 moveto (4273 ) show
0 360 moveto (4274 ) show
0 348 moveto (4275 ) show
0 336 moveto (4276 ) show
0 324 moveto (4277 ) show
0 312 moveto (4278 ) show
0 300 moveto (4279 ) show
0 288 moveto (4280 ) show
0 276 moveto (4281 ) show
0 264 moveto (4282 ) show
0 252 moveto (4283 ) show
0 240 moveto (4284 ) show
0 228 moveto (4285 ) show
0 216 moveto (4286 ) show
0 204 moveto (4287 ) show
0 192 moveto (4288 ) show
0 180 moveto (4289 ) show
0 168 moveto (4290 ) show
0 156 moveto (4291 ) show
0 144 moveto (4292 ) show
0 132 moveto (4293 ) show
0 120 moveto (4294 ) show
0 108 moveto (4295 ) show
0 96 moveto (4296 ) show
0 84 moveto (4297 ) show
0 72 moveto (4298 ) show
0 60 moveto (4299 ) show
0 24 moveto (Sheet 42) show
grestore
restore
showpage
%%Page: 51 51
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/bio.c  Page 1) show
0 648 moveto (4300 // Buffer cache.) show
0 636 moveto (4301 //) show
0 624 moveto (4302 // The buffer cache is a linked list of buf structures holding) show
0 612 moveto (4303 // cached copies of disk block contents.  Caching disk blocks) show
0 600 moveto (4304 // in memory reduces the number of disk reads and also provides) show
0 588 moveto (4305 // a synchronization point for disk blocks used by multiple processes.) show
0 576 moveto (4306 //) show
0 564 moveto (4307 // Interface:) show
0 552 moveto (4308 // * To get a buffer for a particular disk block, call bread.) show
0 540 moveto (4309 // * After changing buffer data, call bwrite to write it to disk.) show
0 528 moveto (4310 // * When done with the buffer, call brelse.) show
0 516 moveto (4311 // * Do not use the buffer after calling brelse.) show
0 504 moveto (4312 // * Only one process at a time can use a buffer,) show
0 492 moveto (4313 //     so do not keep them longer than necessary.) show
0 480 moveto (4314 //) show
0 468 moveto (4315 // The implementation uses three state flags internally:) show
0 456 moveto (4316 // * B_BUSY: the block has been returned from bread) show
0 444 moveto (4317 //     and has not been passed back to brelse.) show
0 432 moveto (4318 // * B_VALID: the buffer data has been read from the disk.) show
0 420 moveto (4319 // * B_DIRTY: the buffer data has been modified) show
0 408 moveto (4320 //     and needs to be written to disk.) show
0 396 moveto (4321 ) show
0 384 moveto (4322 #include "types.h") show
0 372 moveto (4323 #include "defs.h") show
0 360 moveto (4324 #include "param.h") show
0 348 moveto (4325 #include "spinlock.h") show
0 336 moveto (4326 #include "fs.h") show
0 324 moveto (4327 #include "buf.h") show
0 312 moveto (4328 ) show
0 300 moveto (4329 struct {) show
0 288 moveto (4330   struct spinlock lock;) show
0 276 moveto (4331   struct buf buf[NBUF];) show
0 264 moveto (4332 ) show
0 252 moveto (4333   // Linked list of all buffers, through prev/next.) show
0 240 moveto (4334   // head.next is most recently used.) show
0 228 moveto (4335   struct buf head;) show
0 216 moveto (4336 } bcache;) show
0 204 moveto (4337 ) show
0 192 moveto (4338 void) show
0 180 moveto (4339 binit\(void\)) show
0 168 moveto (4340 {) show
0 156 moveto (4341   struct buf *b;) show
0 144 moveto (4342 ) show
0 132 moveto (4343   initlock\(&bcache.lock, "bcache"\);) show
0 120 moveto (4344 ) show
0 108 moveto (4345   // Create linked list of buffers) show
0 96 moveto (4346   bcache.head.prev = &bcache.head;) show
0 84 moveto (4347   bcache.head.next = &bcache.head;) show
0 72 moveto (4348   for\(b = bcache.buf; b < bcache.buf+NBUF; b++\){) show
0 60 moveto (4349     b->next = bcache.head.next;) show
0 24 moveto (Sheet 43) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/bio.c  Page 2) show
0 648 moveto (4350     b->prev = &bcache.head;) show
0 636 moveto (4351     b->dev = -1;) show
0 624 moveto (4352     bcache.head.next->prev = b;) show
0 612 moveto (4353     bcache.head.next = b;) show
0 600 moveto (4354   }) show
0 588 moveto (4355 }) show
0 576 moveto (4356 ) show
0 564 moveto (4357 // Look through buffer cache for block on device dev.) show
0 552 moveto (4358 // If not found, allocate a buffer.) show
0 540 moveto (4359 // In either case, return B_BUSY buffer.) show
0 528 moveto (4360 static struct buf*) show
0 516 moveto (4361 bget\(uint dev, uint blockno\)) show
0 504 moveto (4362 {) show
0 492 moveto (4363   struct buf *b;) show
0 480 moveto (4364 ) show
0 468 moveto (4365   acquire\(&bcache.lock\);) show
0 456 moveto (4366 ) show
0 444 moveto (4367  loop:) show
0 432 moveto (4368   // Is the block already cached?) show
0 420 moveto (4369   for\(b = bcache.head.next; b != &bcache.head; b = b->next\){) show
0 408 moveto (4370     if\(b->dev == dev && b->blockno == blockno\){) show
0 396 moveto (4371       if\(!\(b->flags & B_BUSY\)\){) show
0 384 moveto (4372         b->flags |= B_BUSY;) show
0 372 moveto (4373         release\(&bcache.lock\);) show
0 360 moveto (4374         return b;) show
0 348 moveto (4375       }) show
0 336 moveto (4376       sleep\(b, &bcache.lock\);) show
0 324 moveto (4377       goto loop;) show
0 312 moveto (4378     }) show
0 300 moveto (4379   }) show
0 288 moveto (4380 ) show
0 276 moveto (4381   // Not cached; recycle some non-busy and clean buffer.) show
0 264 moveto (4382   // "clean" because B_DIRTY and !B_BUSY means log.c) show
0 252 moveto (4383   // hasn't yet committed the changes to the buffer.) show
0 240 moveto (4384   for\(b = bcache.head.prev; b != &bcache.head; b = b->prev\){) show
0 228 moveto (4385     if\(\(b->flags & B_BUSY\) == 0 && \(b->flags & B_DIRTY\) == 0\){) show
0 216 moveto (4386       b->dev = dev;) show
0 204 moveto (4387       b->blockno = blockno;) show
0 192 moveto (4388       b->flags = B_BUSY;) show
0 180 moveto (4389       release\(&bcache.lock\);) show
0 168 moveto (4390       return b;) show
0 156 moveto (4391     }) show
0 144 moveto (4392   }) show
0 132 moveto (4393   panic\("bget: no buffers"\);) show
0 120 moveto (4394 }) show
0 108 moveto (4395 ) show
0 96 moveto (4396 ) show
0 84 moveto (4397 ) show
0 72 moveto (4398 ) show
0 60 moveto (4399 ) show
0 24 moveto (Sheet 43) show
grestore
restore
showpage
%%Page: 52 52
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/bio.c  Page 3) show
0 648 moveto (4400 // Return a B_BUSY buf with the contents of the indicated block.) show
0 636 moveto (4401 struct buf*) show
0 624 moveto (4402 bread\(uint dev, uint blockno\)) show
0 612 moveto (4403 {) show
0 600 moveto (4404   struct buf *b;) show
0 588 moveto (4405 ) show
0 576 moveto (4406   b = bget\(dev, blockno\);) show
0 564 moveto (4407   if\(!\(b->flags & B_VALID\)\) {) show
0 552 moveto (4408     iderw\(b\);) show
0 540 moveto (4409   }) show
0 528 moveto (4410   return b;) show
0 516 moveto (4411 }) show
0 504 moveto (4412 ) show
0 492 moveto (4413 // Write b's contents to disk.  Must be B_BUSY.) show
0 480 moveto (4414 void) show
0 468 moveto (4415 bwrite\(struct buf *b\)) show
0 456 moveto (4416 {) show
0 444 moveto (4417   if\(\(b->flags & B_BUSY\) == 0\)) show
0 432 moveto (4418     panic\("bwrite"\);) show
0 420 moveto (4419   b->flags |= B_DIRTY;) show
0 408 moveto (4420   iderw\(b\);) show
0 396 moveto (4421 }) show
0 384 moveto (4422 ) show
0 372 moveto (4423 // Release a B_BUSY buffer.) show
0 360 moveto (4424 // Move to the head of the MRU list.) show
0 348 moveto (4425 void) show
0 336 moveto (4426 brelse\(struct buf *b\)) show
0 324 moveto (4427 {) show
0 312 moveto (4428   if\(\(b->flags & B_BUSY\) == 0\)) show
0 300 moveto (4429     panic\("brelse"\);) show
0 288 moveto (4430 ) show
0 276 moveto (4431   acquire\(&bcache.lock\);) show
0 264 moveto (4432 ) show
0 252 moveto (4433   b->next->prev = b->prev;) show
0 240 moveto (4434   b->prev->next = b->next;) show
0 228 moveto (4435   b->next = bcache.head.next;) show
0 216 moveto (4436   b->prev = &bcache.head;) show
0 204 moveto (4437   bcache.head.next->prev = b;) show
0 192 moveto (4438   bcache.head.next = b;) show
0 180 moveto (4439 ) show
0 168 moveto (4440   b->flags &= ~B_BUSY;) show
0 156 moveto (4441   wakeup\(b\);) show
0 144 moveto (4442 ) show
0 132 moveto (4443   release\(&bcache.lock\);) show
0 120 moveto (4444 }) show
0 108 moveto (4445 // Blank page.) show
0 96 moveto (4446 ) show
0 84 moveto (4447 ) show
0 72 moveto (4448 ) show
0 60 moveto (4449 ) show
0 24 moveto (Sheet 44) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/log.c  Page 1) show
0 648 moveto (4450 #include "types.h") show
0 636 moveto (4451 #include "defs.h") show
0 624 moveto (4452 #include "param.h") show
0 612 moveto (4453 #include "spinlock.h") show
0 600 moveto (4454 #include "fs.h") show
0 588 moveto (4455 #include "buf.h") show
0 576 moveto (4456 ) show
0 564 moveto (4457 // Simple logging that allows concurrent FS system calls.) show
0 552 moveto (4458 //) show
0 540 moveto (4459 // A log transaction contains the updates of multiple FS system) show
0 528 moveto (4460 // calls. The logging system only commits when there are) show
0 516 moveto (4461 // no FS system calls active. Thus there is never) show
0 504 moveto (4462 // any reasoning required about whether a commit might) show
0 492 moveto (4463 // write an uncommitted system call's updates to disk.) show
0 480 moveto (4464 //) show
0 468 moveto (4465 // A system call should call begin_op\(\)/end_op\(\) to mark) show
0 456 moveto (4466 // its start and end. Usually begin_op\(\) just increments) show
0 444 moveto (4467 // the count of in-progress FS system calls and returns.) show
0 432 moveto (4468 // But if it thinks the log is close to running out, it) show
0 420 moveto (4469 // sleeps until the last outstanding end_op\(\) commits.) show
0 408 moveto (4470 //) show
0 396 moveto (4471 // The log is a physical re-do log containing disk blocks.) show
0 384 moveto (4472 // The on-disk log format:) show
0 372 moveto (4473 //   header block, containing block #s for block A, B, C, ...) show
0 360 moveto (4474 //   block A) show
0 348 moveto (4475 //   block B) show
0 336 moveto (4476 //   block C) show
0 324 moveto (4477 //   ...) show
0 312 moveto (4478 // Log appends are synchronous.) show
0 300 moveto (4479 ) show
0 288 moveto (4480 // Contents of the header block, used for both the on-disk header block) show
0 276 moveto (4481 // and to keep track in memory of logged block# before commit.) show
0 264 moveto (4482 struct logheader {) show
0 252 moveto (4483   int n;) show
0 240 moveto (4484   int block[LOGSIZE];) show
0 228 moveto (4485 };) show
0 216 moveto (4486 ) show
0 204 moveto (4487 struct log {) show
0 192 moveto (4488   struct spinlock lock;) show
0 180 moveto (4489   int start;) show
0 168 moveto (4490   int size;) show
0 156 moveto (4491   int outstanding; // how many FS sys calls are executing.) show
0 144 moveto (4492   int committing;  // in commit\(\), please wait.) show
0 132 moveto (4493   int dev;) show
0 120 moveto (4494   struct logheader lh;) show
0 108 moveto (4495 };) show
0 96 moveto (4496 ) show
0 84 moveto (4497 ) show
0 72 moveto (4498 ) show
0 60 moveto (4499 ) show
0 24 moveto (Sheet 44) show
grestore
restore
showpage
%%Page: 53 53
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/log.c  Page 2) show
0 648 moveto (4500 struct log log;) show
0 636 moveto (4501 ) show
0 624 moveto (4502 static void recover_from_log\(void\);) show
0 612 moveto (4503 static void commit\(\);) show
0 600 moveto (4504 ) show
0 588 moveto (4505 void) show
0 576 moveto (4506 initlog\(int dev\)) show
0 564 moveto (4507 {) show
0 552 moveto (4508   if \(sizeof\(struct logheader\) >= BSIZE\)) show
0 540 moveto (4509     panic\("initlog: too big logheader"\);) show
0 528 moveto (4510 ) show
0 516 moveto (4511   struct superblock sb;) show
0 504 moveto (4512   initlock\(&log.lock, "log"\);) show
0 492 moveto (4513   readsb\(dev, &sb\);) show
0 480 moveto (4514   log.start = sb.logstart;) show
0 468 moveto (4515   log.size = sb.nlog;) show
0 456 moveto (4516   log.dev = dev;) show
0 444 moveto (4517   recover_from_log\(\);) show
0 432 moveto (4518 }) show
0 420 moveto (4519 ) show
0 408 moveto (4520 // Copy committed blocks from log to their home location) show
0 396 moveto (4521 static void) show
0 384 moveto (4522 install_trans\(void\)) show
0 372 moveto (4523 {) show
0 360 moveto (4524   int tail;) show
0 348 moveto (4525 ) show
0 336 moveto (4526   for \(tail = 0; tail < log.lh.n; tail++\) {) show
0 324 moveto (4527     struct buf *lbuf = bread\(log.dev, log.start+tail+1\); // read log block) show
0 312 moveto (4528     struct buf *dbuf = bread\(log.dev, log.lh.block[tail]\); // read dst) show
0 300 moveto (4529     memmove\(dbuf->data, lbuf->data, BSIZE\);  // copy block to dst) show
0 288 moveto (4530     bwrite\(dbuf\);  // write dst to disk) show
0 276 moveto (4531     brelse\(lbuf\);) show
0 264 moveto (4532     brelse\(dbuf\);) show
0 252 moveto (4533   }) show
0 240 moveto (4534 }) show
0 228 moveto (4535 ) show
0 216 moveto (4536 // Read the log header from disk into the in-memory log header) show
0 204 moveto (4537 static void) show
0 192 moveto (4538 read_head\(void\)) show
0 180 moveto (4539 {) show
0 168 moveto (4540   struct buf *buf = bread\(log.dev, log.start\);) show
0 156 moveto (4541   struct logheader *lh = \(struct logheader *\) \(buf->data\);) show
0 144 moveto (4542   int i;) show
0 132 moveto (4543   log.lh.n = lh->n;) show
0 120 moveto (4544   for \(i = 0; i < log.lh.n; i++\) {) show
0 108 moveto (4545     log.lh.block[i] = lh->block[i];) show
0 96 moveto (4546   }) show
0 84 moveto (4547   brelse\(buf\);) show
0 72 moveto (4548 }) show
0 60 moveto (4549 ) show
0 24 moveto (Sheet 45) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/log.c  Page 3) show
0 648 moveto (4550 // Write in-memory log header to disk.) show
0 636 moveto (4551 // This is the true point at which the) show
0 624 moveto (4552 // current transaction commits.) show
0 612 moveto (4553 static void) show
0 600 moveto (4554 write_head\(void\)) show
0 588 moveto (4555 {) show
0 576 moveto (4556   struct buf *buf = bread\(log.dev, log.start\);) show
0 564 moveto (4557   struct logheader *hb = \(struct logheader *\) \(buf->data\);) show
0 552 moveto (4558   int i;) show
0 540 moveto (4559   hb->n = log.lh.n;) show
0 528 moveto (4560   for \(i = 0; i < log.lh.n; i++\) {) show
0 516 moveto (4561     hb->block[i] = log.lh.block[i];) show
0 504 moveto (4562   }) show
0 492 moveto (4563   bwrite\(buf\);) show
0 480 moveto (4564   brelse\(buf\);) show
0 468 moveto (4565 }) show
0 456 moveto (4566 ) show
0 444 moveto (4567 static void) show
0 432 moveto (4568 recover_from_log\(void\)) show
0 420 moveto (4569 {) show
0 408 moveto (4570   read_head\(\);) show
0 396 moveto (4571   install_trans\(\); // if committed, copy from log to disk) show
0 384 moveto (4572   log.lh.n = 0;) show
0 372 moveto (4573   write_head\(\); // clear the log) show
0 360 moveto (4574 }) show
0 348 moveto (4575 ) show
0 336 moveto (4576 // called at the start of each FS system call.) show
0 324 moveto (4577 void) show
0 312 moveto (4578 begin_op\(void\)) show
0 300 moveto (4579 {) show
0 288 moveto (4580   acquire\(&log.lock\);) show
0 276 moveto (4581   while\(1\){) show
0 264 moveto (4582     if\(log.committing\){) show
0 252 moveto (4583       sleep\(&log, &log.lock\);) show
0 240 moveto (4584     } else if\(log.lh.n + \(log.outstanding+1\)*MAXOPBLOCKS > LOGSIZE\){) show
0 228 moveto (4585       // this op might exhaust log space; wait for commit.) show
0 216 moveto (4586       sleep\(&log, &log.lock\);) show
0 204 moveto (4587     } else {) show
0 192 moveto (4588       log.outstanding += 1;) show
0 180 moveto (4589       release\(&log.lock\);) show
0 168 moveto (4590       break;) show
0 156 moveto (4591     }) show
0 144 moveto (4592   }) show
0 132 moveto (4593 }) show
0 120 moveto (4594 ) show
0 108 moveto (4595 ) show
0 96 moveto (4596 ) show
0 84 moveto (4597 ) show
0 72 moveto (4598 ) show
0 60 moveto (4599 ) show
0 24 moveto (Sheet 45) show
grestore
restore
showpage
%%Page: 54 54
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/log.c  Page 4) show
0 648 moveto (4600 // called at the end of each FS system call.) show
0 636 moveto (4601 // commits if this was the last outstanding operation.) show
0 624 moveto (4602 void) show
0 612 moveto (4603 end_op\(void\)) show
0 600 moveto (4604 {) show
0 588 moveto (4605   int do_commit = 0;) show
0 576 moveto (4606 ) show
0 564 moveto (4607   acquire\(&log.lock\);) show
0 552 moveto (4608   log.outstanding -= 1;) show
0 540 moveto (4609   if\(log.committing\)) show
0 528 moveto (4610     panic\("log.committing"\);) show
0 516 moveto (4611   if\(log.outstanding == 0\){) show
0 504 moveto (4612     do_commit = 1;) show
0 492 moveto (4613     log.committing = 1;) show
0 480 moveto (4614   } else {) show
0 468 moveto (4615     // begin_op\(\) may be waiting for log space.) show
0 456 moveto (4616     wakeup\(&log\);) show
0 444 moveto (4617   }) show
0 432 moveto (4618   release\(&log.lock\);) show
0 420 moveto (4619 ) show
0 408 moveto (4620   if\(do_commit\){) show
0 396 moveto (4621     // call commit w/o holding locks, since not allowed) show
0 384 moveto (4622     // to sleep with locks.) show
0 372 moveto (4623     commit\(\);) show
0 360 moveto (4624     acquire\(&log.lock\);) show
0 348 moveto (4625     log.committing = 0;) show
0 336 moveto (4626     wakeup\(&log\);) show
0 324 moveto (4627     release\(&log.lock\);) show
0 312 moveto (4628   }) show
0 300 moveto (4629 }) show
0 288 moveto (4630 ) show
0 276 moveto (4631 // Copy modified blocks from cache to log.) show
0 264 moveto (4632 static void) show
0 252 moveto (4633 write_log\(void\)) show
0 240 moveto (4634 {) show
0 228 moveto (4635   int tail;) show
0 216 moveto (4636 ) show
0 204 moveto (4637   for \(tail = 0; tail < log.lh.n; tail++\) {) show
0 192 moveto (4638     struct buf *to = bread\(log.dev, log.start+tail+1\); // log block) show
0 180 moveto (4639     struct buf *from = bread\(log.dev, log.lh.block[tail]\); // cache block) show
0 168 moveto (4640     memmove\(to->data, from->data, BSIZE\);) show
0 156 moveto (4641     bwrite\(to\);  // write the log) show
0 144 moveto (4642     brelse\(from\);) show
0 132 moveto (4643     brelse\(to\);) show
0 120 moveto (4644   }) show
0 108 moveto (4645 }) show
0 96 moveto (4646 ) show
0 84 moveto (4647 ) show
0 72 moveto (4648 ) show
0 60 moveto (4649 ) show
0 24 moveto (Sheet 46) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/log.c  Page 5) show
0 648 moveto (4650 static void) show
0 636 moveto (4651 commit\(\)) show
0 624 moveto (4652 {) show
0 612 moveto (4653   if \(log.lh.n > 0\) {) show
0 600 moveto (4654     write_log\(\);     // Write modified blocks from cache to log) show
0 588 moveto (4655     write_head\(\);    // Write header to disk -- the real commit) show
0 576 moveto (4656     install_trans\(\); // Now install writes to home locations) show
0 564 moveto (4657     log.lh.n = 0;) show
0 552 moveto (4658     write_head\(\);    // Erase the transaction from the log) show
0 540 moveto (4659   }) show
0 528 moveto (4660 }) show
0 516 moveto (4661 ) show
0 504 moveto (4662 // Caller has modified b->data and is done with the buffer.) show
0 492 moveto (4663 // Record the block number and pin in the cache with B_DIRTY.) show
0 480 moveto (4664 // commit\(\)/write_log\(\) will do the disk write.) show
0 468 moveto (4665 //) show
0 456 moveto (4666 // log_write\(\) replaces bwrite\(\); a typical use is:) show
0 444 moveto (4667 //   bp = bread\(...\)) show
0 432 moveto (4668 //   modify bp->data[]) show
0 420 moveto (4669 //   log_write\(bp\)) show
0 408 moveto (4670 //   brelse\(bp\)) show
0 396 moveto (4671 void) show
0 384 moveto (4672 log_write\(struct buf *b\)) show
0 372 moveto (4673 {) show
0 360 moveto (4674   int i;) show
0 348 moveto (4675 ) show
0 336 moveto (4676   if \(log.lh.n >= LOGSIZE || log.lh.n >= log.size - 1\)) show
0 324 moveto (4677     panic\("too big a transaction"\);) show
0 312 moveto (4678   if \(log.outstanding < 1\)) show
0 300 moveto (4679     panic\("log_write outside of trans"\);) show
0 288 moveto (4680 ) show
0 276 moveto (4681   acquire\(&log.lock\);) show
0 264 moveto (4682   for \(i = 0; i < log.lh.n; i++\) {) show
0 252 moveto (4683     if \(log.lh.block[i] == b->blockno\)   // log absorbtion) show
0 240 moveto (4684       break;) show
0 228 moveto (4685   }) show
0 216 moveto (4686   log.lh.block[i] = b->blockno;) show
0 204 moveto (4687   if \(i == log.lh.n\)) show
0 192 moveto (4688     log.lh.n++;) show
0 180 moveto (4689   b->flags |= B_DIRTY; // prevent eviction) show
0 168 moveto (4690   release\(&log.lock\);) show
0 156 moveto (4691 }) show
0 144 moveto (4692 ) show
0 132 moveto (4693 ) show
0 120 moveto (4694 ) show
0 108 moveto (4695 ) show
0 96 moveto (4696 ) show
0 84 moveto (4697 ) show
0 72 moveto (4698 ) show
0 60 moveto (4699 ) show
0 24 moveto (Sheet 46) show
grestore
restore
showpage
%%Page: 55 55
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/fs.c  Page 1) show
0 648 moveto (4700 // File system implementation.  Five layers:) show
0 636 moveto (4701 //   + Blocks: allocator for raw disk blocks.) show
0 624 moveto (4702 //   + Log: crash recovery for multi-step updates.) show
0 612 moveto (4703 //   + Files: inode allocator, reading, writing, metadata.) show
0 600 moveto (4704 //   + Directories: inode with special contents \(list of other inodes!\)) show
0 588 moveto (4705 //   + Names: paths like /usr/rtm/xv6/fs.c for convenient naming.) show
0 576 moveto (4706 //) show
0 564 moveto (4707 // This file contains the low-level file system manipulation) show
0 552 moveto (4708 // routines.  The \(higher-level\) system call implementations) show
0 540 moveto (4709 // are in sysfile.c.) show
0 528 moveto (4710 ) show
0 516 moveto (4711 #include "types.h") show
0 504 moveto (4712 #include "defs.h") show
0 492 moveto (4713 #include "param.h") show
0 480 moveto (4714 #include "stat.h") show
0 468 moveto (4715 #include "mmu.h") show
0 456 moveto (4716 #include "proc.h") show
0 444 moveto (4717 #include "spinlock.h") show
0 432 moveto (4718 #include "fs.h") show
0 420 moveto (4719 #include "buf.h") show
0 408 moveto (4720 #include "file.h") show
0 396 moveto (4721 ) show
0 384 moveto (4722 #define min\(a, b\) \(\(a\) < \(b\) ? \(a\) : \(b\)\)) show
0 372 moveto (4723 static void itrunc\(struct inode*\);) show
0 360 moveto (4724 struct superblock sb;   // there should be one per dev, but we run with one dev) show
0 348 moveto (4725 ) show
0 336 moveto (4726 // Read the super block.) show
0 324 moveto (4727 void) show
0 312 moveto (4728 readsb\(int dev, struct superblock *sb\)) show
0 300 moveto (4729 {) show
0 288 moveto (4730   struct buf *bp;) show
0 276 moveto (4731 ) show
0 264 moveto (4732   bp = bread\(dev, 1\);) show
0 252 moveto (4733   memmove\(sb, bp->data, sizeof\(*sb\)\);) show
0 240 moveto (4734   brelse\(bp\);) show
0 228 moveto (4735 }) show
0 216 moveto (4736 ) show
0 204 moveto (4737 // Zero a block.) show
0 192 moveto (4738 static void) show
0 180 moveto (4739 bzero\(int dev, int bno\)) show
0 168 moveto (4740 {) show
0 156 moveto (4741   struct buf *bp;) show
0 144 moveto (4742 ) show
0 132 moveto (4743   bp = bread\(dev, bno\);) show
0 120 moveto (4744   memset\(bp->data, 0, BSIZE\);) show
0 108 moveto (4745   log_write\(bp\);) show
0 96 moveto (4746   brelse\(bp\);) show
0 84 moveto (4747 }) show
0 72 moveto (4748 ) show
0 60 moveto (4749 ) show
0 24 moveto (Sheet 47) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/fs.c  Page 2) show
0 648 moveto (4750 // Blocks.) show
0 636 moveto (4751 ) show
0 624 moveto (4752 // Allocate a zeroed disk block.) show
0 612 moveto (4753 static uint) show
0 600 moveto (4754 balloc\(uint dev\)) show
0 588 moveto (4755 {) show
0 576 moveto (4756   int b, bi, m;) show
0 564 moveto (4757   struct buf *bp;) show
0 552 moveto (4758 ) show
0 540 moveto (4759   bp = 0;) show
0 528 moveto (4760   for\(b = 0; b < sb.size; b += BPB\){) show
0 516 moveto (4761     bp = bread\(dev, BBLOCK\(b, sb\)\);) show
0 504 moveto (4762     for\(bi = 0; bi < BPB && b + bi < sb.size; bi++\){) show
0 492 moveto (4763       m = 1 << \(bi % 8\);) show
0 480 moveto (4764       if\(\(bp->data[bi/8] & m\) == 0\){  // Is block free?) show
0 468 moveto (4765         bp->data[bi/8] |= m;  // Mark block in use.) show
0 456 moveto (4766         log_write\(bp\);) show
0 444 moveto (4767         brelse\(bp\);) show
0 432 moveto (4768         bzero\(dev, b + bi\);) show
0 420 moveto (4769         return b + bi;) show
0 408 moveto (4770       }) show
0 396 moveto (4771     }) show
0 384 moveto (4772     brelse\(bp\);) show
0 372 moveto (4773   }) show
0 360 moveto (4774   panic\("balloc: out of blocks"\);) show
0 348 moveto (4775 }) show
0 336 moveto (4776 ) show
0 324 moveto (4777 // Free a disk block.) show
0 312 moveto (4778 static void) show
0 300 moveto (4779 bfree\(int dev, uint b\)) show
0 288 moveto (4780 {) show
0 276 moveto (4781   struct buf *bp;) show
0 264 moveto (4782   int bi, m;) show
0 252 moveto (4783 ) show
0 240 moveto (4784   readsb\(dev, &sb\);) show
0 228 moveto (4785   bp = bread\(dev, BBLOCK\(b, sb\)\);) show
0 216 moveto (4786   bi = b % BPB;) show
0 204 moveto (4787   m = 1 << \(bi % 8\);) show
0 192 moveto (4788   if\(\(bp->data[bi/8] & m\) == 0\)) show
0 180 moveto (4789     panic\("freeing free block"\);) show
0 168 moveto (4790   bp->data[bi/8] &= ~m;) show
0 156 moveto (4791   log_write\(bp\);) show
0 144 moveto (4792   brelse\(bp\);) show
0 132 moveto (4793 }) show
0 120 moveto (4794 ) show
0 108 moveto (4795 ) show
0 96 moveto (4796 ) show
0 84 moveto (4797 ) show
0 72 moveto (4798 ) show
0 60 moveto (4799 ) show
0 24 moveto (Sheet 47) show
grestore
restore
showpage
%%Page: 56 56
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/fs.c  Page 3) show
0 648 moveto (4800 // Inodes.) show
0 636 moveto (4801 //) show
0 624 moveto (4802 // An inode describes a single unnamed file.) show
0 612 moveto (4803 // The inode disk structure holds metadata: the file's type,) show
0 600 moveto (4804 // its size, the number of links referring to it, and the) show
0 588 moveto (4805 // list of blocks holding the file's content.) show
0 576 moveto (4806 //) show
0 564 moveto (4807 // The inodes are laid out sequentially on disk at) show
0 552 moveto (4808 // sb.startinode. Each inode has a number, indicating its) show
0 540 moveto (4809 // position on the disk.) show
0 528 moveto (4810 //) show
0 516 moveto (4811 // The kernel keeps a cache of in-use inodes in memory) show
0 504 moveto (4812 // to provide a place for synchronizing access) show
0 492 moveto (4813 // to inodes used by multiple processes. The cached) show
0 480 moveto (4814 // inodes include book-keeping information that is) show
0 468 moveto (4815 // not stored on disk: ip->ref and ip->flags.) show
0 456 moveto (4816 //) show
0 444 moveto (4817 // An inode and its in-memory represtative go through a) show
0 432 moveto (4818 // sequence of states before they can be used by the) show
0 420 moveto (4819 // rest of the file system code.) show
0 408 moveto (4820 //) show
0 396 moveto (4821 // * Allocation: an inode is allocated if its type \(on disk\)) show
0 384 moveto (4822 //   is non-zero. ialloc\(\) allocates, iput\(\) frees if) show
0 372 moveto (4823 //   the link count has fallen to zero.) show
0 360 moveto (4824 //) show
0 348 moveto (4825 // * Referencing in cache: an entry in the inode cache) show
0 336 moveto (4826 //   is free if ip->ref is zero. Otherwise ip->ref tracks) show
0 324 moveto (4827 //   the number of in-memory pointers to the entry \(open) show
0 312 moveto (4828 //   files and current directories\). iget\(\) to find or) show
0 300 moveto (4829 //   create a cache entry and increment its ref, iput\(\)) show
0 288 moveto (4830 //   to decrement ref.) show
0 276 moveto (4831 //) show
0 264 moveto (4832 // * Valid: the information \(type, size, &c\) in an inode) show
0 252 moveto (4833 //   cache entry is only correct when the I_VALID bit) show
0 240 moveto (4834 //   is set in ip->flags. ilock\(\) reads the inode from) show
0 228 moveto (4835 //   the disk and sets I_VALID, while iput\(\) clears) show
0 216 moveto (4836 //   I_VALID if ip->ref has fallen to zero.) show
0 204 moveto (4837 //) show
0 192 moveto (4838 // * Locked: file system code may only examine and modify) show
0 180 moveto (4839 //   the information in an inode and its content if it) show
0 168 moveto (4840 //   has first locked the inode. The I_BUSY flag indicates) show
0 156 moveto (4841 //   that the inode is locked. ilock\(\) sets I_BUSY,) show
0 144 moveto (4842 //   while iunlock clears it.) show
0 132 moveto (4843 //) show
0 120 moveto (4844 // Thus a typical sequence is:) show
0 108 moveto (4845 //   ip = iget\(dev, inum\)) show
0 96 moveto (4846 //   ilock\(ip\)) show
0 84 moveto (4847 //   ... examine and modify ip->xxx ...) show
0 72 moveto (4848 //   iunlock\(ip\)) show
0 60 moveto (4849 //   iput\(ip\)) show
0 24 moveto (Sheet 48) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/fs.c  Page 4) show
0 648 moveto (4850 //) show
0 636 moveto (4851 // ilock\(\) is separate from iget\(\) so that system calls can) show
0 624 moveto (4852 // get a long-term reference to an inode \(as for an open file\)) show
0 612 moveto (4853 // and only lock it for short periods \(e.g., in read\(\)\).) show
0 600 moveto (4854 // The separation also helps avoid deadlock and races during) show
0 588 moveto (4855 // pathname lookup. iget\(\) increments ip->ref so that the inode) show
0 576 moveto (4856 // stays cached and pointers to it remain valid.) show
0 564 moveto (4857 //) show
0 552 moveto (4858 // Many internal file system functions expect the caller to) show
0 540 moveto (4859 // have locked the inodes involved; this lets callers create) show
0 528 moveto (4860 // multi-step atomic operations.) show
0 516 moveto (4861 ) show
0 504 moveto (4862 struct {) show
0 492 moveto (4863   struct spinlock lock;) show
0 480 moveto (4864   struct inode inode[NINODE];) show
0 468 moveto (4865 } icache;) show
0 456 moveto (4866 ) show
0 444 moveto (4867 void) show
0 432 moveto (4868 iinit\(int dev\)) show
0 420 moveto (4869 {) show
0 408 moveto (4870   initlock\(&icache.lock, "icache"\);) show
0 396 moveto (4871   readsb\(dev, &sb\);) show
0 384 moveto (4872   cprintf\("sb: size %d nblocks %d ninodes %d nlog %d logstart %d inodestart %d bmap start %d\\n", sb.size,) show
0 372 moveto (4873           sb.nblocks, sb.ninodes, sb.nlog, sb.logstart, sb.inodestart, sb.bmapstart\);) show
0 360 moveto (4874 }) show
0 348 moveto (4875 ) show
0 336 moveto (4876 static struct inode* iget\(uint dev, uint inum\);) show
0 324 moveto (4877 ) show
0 312 moveto (4878 // Allocate a new inode with the given type on device dev.) show
0 300 moveto (4879 // A free inode has a type of zero.) show
0 288 moveto (4880 struct inode*) show
0 276 moveto (4881 ialloc\(uint dev, short type\)) show
0 264 moveto (4882 {) show
0 252 moveto (4883   int inum;) show
0 240 moveto (4884   struct buf *bp;) show
0 228 moveto (4885   struct dinode *dip;) show
0 216 moveto (4886 ) show
0 204 moveto (4887   for\(inum = 1; inum < sb.ninodes; inum++\){) show
0 192 moveto (4888     bp = bread\(dev, IBLOCK\(inum, sb\)\);) show
0 180 moveto (4889     dip = \(struct dinode*\)bp->data + inum%IPB;) show
0 168 moveto (4890     if\(dip->type == 0\){  // a free inode) show
0 156 moveto (4891       memset\(dip, 0, sizeof\(*dip\)\);) show
0 144 moveto (4892       dip->type = type;) show
0 132 moveto (4893       log_write\(bp\);   // mark it allocated on the disk) show
0 120 moveto (4894       brelse\(bp\);) show
0 108 moveto (4895       return iget\(dev, inum\);) show
0 96 moveto (4896     }) show
0 84 moveto (4897     brelse\(bp\);) show
0 72 moveto (4898   }) show
0 60 moveto (4899   panic\("ialloc: no inodes"\);) show
0 24 moveto (Sheet 48) show
grestore
restore
showpage
%%Page: 57 57
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/fs.c  Page 5) show
0 648 moveto (4900 }) show
0 636 moveto (4901 ) show
0 624 moveto (4902 // Copy a modified in-memory inode to disk.) show
0 612 moveto (4903 void) show
0 600 moveto (4904 iupdate\(struct inode *ip\)) show
0 588 moveto (4905 {) show
0 576 moveto (4906   struct buf *bp;) show
0 564 moveto (4907   struct dinode *dip;) show
0 552 moveto (4908 ) show
0 540 moveto (4909   bp = bread\(ip->dev, IBLOCK\(ip->inum, sb\)\);) show
0 528 moveto (4910   dip = \(struct dinode*\)bp->data + ip->inum%IPB;) show
0 516 moveto (4911   dip->type = ip->type;) show
0 504 moveto (4912   dip->major = ip->major;) show
0 492 moveto (4913   dip->minor = ip->minor;) show
0 480 moveto (4914   dip->nlink = ip->nlink;) show
0 468 moveto (4915   dip->size = ip->size;) show
0 456 moveto (4916   memmove\(dip->addrs, ip->addrs, sizeof\(ip->addrs\)\);) show
0 444 moveto (4917   log_write\(bp\);) show
0 432 moveto (4918   brelse\(bp\);) show
0 420 moveto (4919 }) show
0 408 moveto (4920 ) show
0 396 moveto (4921 // Find the inode with number inum on device dev) show
0 384 moveto (4922 // and return the in-memory copy. Does not lock) show
0 372 moveto (4923 // the inode and does not read it from disk.) show
0 360 moveto (4924 static struct inode*) show
0 348 moveto (4925 iget\(uint dev, uint inum\)) show
0 336 moveto (4926 {) show
0 324 moveto (4927   struct inode *ip, *empty;) show
0 312 moveto (4928 ) show
0 300 moveto (4929   acquire\(&icache.lock\);) show
0 288 moveto (4930 ) show
0 276 moveto (4931   // Is the inode already cached?) show
0 264 moveto (4932   empty = 0;) show
0 252 moveto (4933   for\(ip = &icache.inode[0]; ip < &icache.inode[NINODE]; ip++\){) show
0 240 moveto (4934     if\(ip->ref > 0 && ip->dev == dev && ip->inum == inum\){) show
0 228 moveto (4935       ip->ref++;) show
0 216 moveto (4936       release\(&icache.lock\);) show
0 204 moveto (4937       return ip;) show
0 192 moveto (4938     }) show
0 180 moveto (4939     if\(empty == 0 && ip->ref == 0\)    // Remember empty slot.) show
0 168 moveto (4940       empty = ip;) show
0 156 moveto (4941   }) show
0 144 moveto (4942 ) show
0 132 moveto (4943   // Recycle an inode cache entry.) show
0 120 moveto (4944   if\(empty == 0\)) show
0 108 moveto (4945     panic\("iget: no inodes"\);) show
0 96 moveto (4946 ) show
0 84 moveto (4947 ) show
0 72 moveto (4948 ) show
0 60 moveto (4949 ) show
0 24 moveto (Sheet 49) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/fs.c  Page 6) show
0 648 moveto (4950   ip = empty;) show
0 636 moveto (4951   ip->dev = dev;) show
0 624 moveto (4952   ip->inum = inum;) show
0 612 moveto (4953   ip->ref = 1;) show
0 600 moveto (4954   ip->flags = 0;) show
0 588 moveto (4955   release\(&icache.lock\);) show
0 576 moveto (4956 ) show
0 564 moveto (4957   return ip;) show
0 552 moveto (4958 }) show
0 540 moveto (4959 ) show
0 528 moveto (4960 // Increment reference count for ip.) show
0 516 moveto (4961 // Returns ip to enable ip = idup\(ip1\) idiom.) show
0 504 moveto (4962 struct inode*) show
0 492 moveto (4963 idup\(struct inode *ip\)) show
0 480 moveto (4964 {) show
0 468 moveto (4965   acquire\(&icache.lock\);) show
0 456 moveto (4966   ip->ref++;) show
0 444 moveto (4967   release\(&icache.lock\);) show
0 432 moveto (4968   return ip;) show
0 420 moveto (4969 }) show
0 408 moveto (4970 ) show
0 396 moveto (4971 // Lock the given inode.) show
0 384 moveto (4972 // Reads the inode from disk if necessary.) show
0 372 moveto (4973 void) show
0 360 moveto (4974 ilock\(struct inode *ip\)) show
0 348 moveto (4975 {) show
0 336 moveto (4976   struct buf *bp;) show
0 324 moveto (4977   struct dinode *dip;) show
0 312 moveto (4978 ) show
0 300 moveto (4979   if\(ip == 0 || ip->ref < 1\)) show
0 288 moveto (4980     panic\("ilock"\);) show
0 276 moveto (4981 ) show
0 264 moveto (4982   acquire\(&icache.lock\);) show
0 252 moveto (4983   while\(ip->flags & I_BUSY\)) show
0 240 moveto (4984     sleep\(ip, &icache.lock\);) show
0 228 moveto (4985   ip->flags |= I_BUSY;) show
0 216 moveto (4986   release\(&icache.lock\);) show
0 204 moveto (4987 ) show
0 192 moveto (4988   if\(!\(ip->flags & I_VALID\)\){) show
0 180 moveto (4989     bp = bread\(ip->dev, IBLOCK\(ip->inum, sb\)\);) show
0 168 moveto (4990     dip = \(struct dinode*\)bp->data + ip->inum%IPB;) show
0 156 moveto (4991     ip->type = dip->type;) show
0 144 moveto (4992     ip->major = dip->major;) show
0 132 moveto (4993     ip->minor = dip->minor;) show
0 120 moveto (4994     ip->nlink = dip->nlink;) show
0 108 moveto (4995     ip->size = dip->size;) show
0 96 moveto (4996     memmove\(ip->addrs, dip->addrs, sizeof\(ip->addrs\)\);) show
0 84 moveto (4997     brelse\(bp\);) show
0 72 moveto (4998     ip->flags |= I_VALID;) show
0 60 moveto (4999     if\(ip->type == 0\)) show
0 24 moveto (Sheet 49) show
grestore
restore
showpage
%%Page: 58 58
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/fs.c  Page 7) show
0 648 moveto (5000       panic\("ilock: no type"\);) show
0 636 moveto (5001   }) show
0 624 moveto (5002 }) show
0 612 moveto (5003 ) show
0 600 moveto (5004 // Unlock the given inode.) show
0 588 moveto (5005 void) show
0 576 moveto (5006 iunlock\(struct inode *ip\)) show
0 564 moveto (5007 {) show
0 552 moveto (5008   if\(ip == 0 || !\(ip->flags & I_BUSY\) || ip->ref < 1\)) show
0 540 moveto (5009     panic\("iunlock"\);) show
0 528 moveto (5010 ) show
0 516 moveto (5011   acquire\(&icache.lock\);) show
0 504 moveto (5012   ip->flags &= ~I_BUSY;) show
0 492 moveto (5013   wakeup\(ip\);) show
0 480 moveto (5014   release\(&icache.lock\);) show
0 468 moveto (5015 }) show
0 456 moveto (5016 ) show
0 444 moveto (5017 // Drop a reference to an in-memory inode.) show
0 432 moveto (5018 // If that was the last reference, the inode cache entry can) show
0 420 moveto (5019 // be recycled.) show
0 408 moveto (5020 // If that was the last reference and the inode has no links) show
0 396 moveto (5021 // to it, free the inode \(and its content\) on disk.) show
0 384 moveto (5022 // All calls to iput\(\) must be inside a transaction in) show
0 372 moveto (5023 // case it has to free the inode.) show
0 360 moveto (5024 void) show
0 348 moveto (5025 iput\(struct inode *ip\)) show
0 336 moveto (5026 {) show
0 324 moveto (5027   acquire\(&icache.lock\);) show
0 312 moveto (5028   if\(ip->ref == 1 && \(ip->flags & I_VALID\) && ip->nlink == 0\){) show
0 300 moveto (5029     // inode has no links and no other references: truncate and free.) show
0 288 moveto (5030     if\(ip->flags & I_BUSY\)) show
0 276 moveto (5031       panic\("iput busy"\);) show
0 264 moveto (5032     ip->flags |= I_BUSY;) show
0 252 moveto (5033     release\(&icache.lock\);) show
0 240 moveto (5034     itrunc\(ip\);) show
0 228 moveto (5035     ip->type = 0;) show
0 216 moveto (5036     iupdate\(ip\);) show
0 204 moveto (5037     acquire\(&icache.lock\);) show
0 192 moveto (5038     ip->flags = 0;) show
0 180 moveto (5039     wakeup\(ip\);) show
0 168 moveto (5040   }) show
0 156 moveto (5041   ip->ref--;) show
0 144 moveto (5042   release\(&icache.lock\);) show
0 132 moveto (5043 }) show
0 120 moveto (5044 ) show
0 108 moveto (5045 ) show
0 96 moveto (5046 ) show
0 84 moveto (5047 ) show
0 72 moveto (5048 ) show
0 60 moveto (5049 ) show
0 24 moveto (Sheet 50) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/fs.c  Page 8) show
0 648 moveto (5050 // Common idiom: unlock, then put.) show
0 636 moveto (5051 void) show
0 624 moveto (5052 iunlockput\(struct inode *ip\)) show
0 612 moveto (5053 {) show
0 600 moveto (5054   iunlock\(ip\);) show
0 588 moveto (5055   iput\(ip\);) show
0 576 moveto (5056 }) show
0 564 moveto (5057 ) show
0 552 moveto (5058 // Inode content) show
0 540 moveto (5059 //) show
0 528 moveto (5060 // The content \(data\) associated with each inode is stored) show
0 516 moveto (5061 // in blocks on the disk. The first NDIRECT block numbers) show
0 504 moveto (5062 // are listed in ip->addrs[].  The next NINDIRECT blocks are) show
0 492 moveto (5063 // listed in block ip->addrs[NDIRECT].) show
0 480 moveto (5064 ) show
0 468 moveto (5065 // Return the disk block address of the nth block in inode ip.) show
0 456 moveto (5066 // If there is no such block, bmap allocates one.) show
0 444 moveto (5067 static uint) show
0 432 moveto (5068 bmap\(struct inode *ip, uint bn\)) show
0 420 moveto (5069 {) show
0 408 moveto (5070   uint addr, *a;) show
0 396 moveto (5071   struct buf *bp;) show
0 384 moveto (5072 ) show
0 372 moveto (5073   if\(bn < NDIRECT\){) show
0 360 moveto (5074     if\(\(addr = ip->addrs[bn]\) == 0\)) show
0 348 moveto (5075       ip->addrs[bn] = addr = balloc\(ip->dev\);) show
0 336 moveto (5076     return addr;) show
0 324 moveto (5077   }) show
0 312 moveto (5078   bn -= NDIRECT;) show
0 300 moveto (5079 ) show
0 288 moveto (5080   if\(bn < NINDIRECT\){) show
0 276 moveto (5081     // Load indirect block, allocating if necessary.) show
0 264 moveto (5082     if\(\(addr = ip->addrs[NDIRECT]\) == 0\)) show
0 252 moveto (5083       ip->addrs[NDIRECT] = addr = balloc\(ip->dev\);) show
0 240 moveto (5084     bp = bread\(ip->dev, addr\);) show
0 228 moveto (5085     a = \(uint*\)bp->data;) show
0 216 moveto (5086     if\(\(addr = a[bn]\) == 0\){) show
0 204 moveto (5087       a[bn] = addr = balloc\(ip->dev\);) show
0 192 moveto (5088       log_write\(bp\);) show
0 180 moveto (5089     }) show
0 168 moveto (5090     brelse\(bp\);) show
0 156 moveto (5091     return addr;) show
0 144 moveto (5092   }) show
0 132 moveto (5093 ) show
0 120 moveto (5094   panic\("bmap: out of range"\);) show
0 108 moveto (5095 }) show
0 96 moveto (5096 ) show
0 84 moveto (5097 ) show
0 72 moveto (5098 ) show
0 60 moveto (5099 ) show
0 24 moveto (Sheet 50) show
grestore
restore
showpage
%%Page: 59 59
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/fs.c  Page 9) show
0 648 moveto (5100 // Truncate inode \(discard contents\).) show
0 636 moveto (5101 // Only called when the inode has no links) show
0 624 moveto (5102 // to it \(no directory entries referring to it\)) show
0 612 moveto (5103 // and has no in-memory reference to it \(is) show
0 600 moveto (5104 // not an open file or current directory\).) show
0 588 moveto (5105 static void) show
0 576 moveto (5106 itrunc\(struct inode *ip\)) show
0 564 moveto (5107 {) show
0 552 moveto (5108   int i, j;) show
0 540 moveto (5109   struct buf *bp;) show
0 528 moveto (5110   uint *a;) show
0 516 moveto (5111 ) show
0 504 moveto (5112   for\(i = 0; i < NDIRECT; i++\){) show
0 492 moveto (5113     if\(ip->addrs[i]\){) show
0 480 moveto (5114       bfree\(ip->dev, ip->addrs[i]\);) show
0 468 moveto (5115       ip->addrs[i] = 0;) show
0 456 moveto (5116     }) show
0 444 moveto (5117   }) show
0 432 moveto (5118 ) show
0 420 moveto (5119   if\(ip->addrs[NDIRECT]\){) show
0 408 moveto (5120     bp = bread\(ip->dev, ip->addrs[NDIRECT]\);) show
0 396 moveto (5121     a = \(uint*\)bp->data;) show
0 384 moveto (5122     for\(j = 0; j < NINDIRECT; j++\){) show
0 372 moveto (5123       if\(a[j]\)) show
0 360 moveto (5124         bfree\(ip->dev, a[j]\);) show
0 348 moveto (5125     }) show
0 336 moveto (5126     brelse\(bp\);) show
0 324 moveto (5127     bfree\(ip->dev, ip->addrs[NDIRECT]\);) show
0 312 moveto (5128     ip->addrs[NDIRECT] = 0;) show
0 300 moveto (5129   }) show
0 288 moveto (5130 ) show
0 276 moveto (5131   ip->size = 0;) show
0 264 moveto (5132   iupdate\(ip\);) show
0 252 moveto (5133 }) show
0 240 moveto (5134 ) show
0 228 moveto (5135 // Copy stat information from inode.) show
0 216 moveto (5136 void) show
0 204 moveto (5137 stati\(struct inode *ip, struct stat *st\)) show
0 192 moveto (5138 {) show
0 180 moveto (5139   st->dev = ip->dev;) show
0 168 moveto (5140   st->ino = ip->inum;) show
0 156 moveto (5141   st->type = ip->type;) show
0 144 moveto (5142   st->nlink = ip->nlink;) show
0 132 moveto (5143   st->size = ip->size;) show
0 120 moveto (5144 }) show
0 108 moveto (5145 ) show
0 96 moveto (5146 ) show
0 84 moveto (5147 ) show
0 72 moveto (5148 ) show
0 60 moveto (5149 ) show
0 24 moveto (Sheet 51) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/fs.c  Page 10) show
0 648 moveto (5150 // Read data from inode.) show
0 636 moveto (5151 int) show
0 624 moveto (5152 readi\(struct inode *ip, char *dst, uint off, uint n\)) show
0 612 moveto (5153 {) show
0 600 moveto (5154   uint tot, m;) show
0 588 moveto (5155   struct buf *bp;) show
0 576 moveto (5156 ) show
0 564 moveto (5157   if\(ip->type == T_DEV\){) show
0 552 moveto (5158     if\(ip->major < 0 || ip->major >= NDEV || !devsw[ip->major].read\)) show
0 540 moveto (5159       return -1;) show
0 528 moveto (5160     return devsw[ip->major].read\(ip, dst, n\);) show
0 516 moveto (5161   }) show
0 504 moveto (5162 ) show
0 492 moveto (5163   if\(off > ip->size || off + n < off\)) show
0 480 moveto (5164     return -1;) show
0 468 moveto (5165   if\(off + n > ip->size\)) show
0 456 moveto (5166     n = ip->size - off;) show
0 444 moveto (5167 ) show
0 432 moveto (5168   for\(tot=0; tot<n; tot+=m, off+=m, dst+=m\){) show
0 420 moveto (5169     bp = bread\(ip->dev, bmap\(ip, off/BSIZE\)\);) show
0 408 moveto (5170     m = min\(n - tot, BSIZE - off%BSIZE\);) show
0 396 moveto (5171     memmove\(dst, bp->data + off%BSIZE, m\);) show
0 384 moveto (5172     brelse\(bp\);) show
0 372 moveto (5173   }) show
0 360 moveto (5174   return n;) show
0 348 moveto (5175 }) show
0 336 moveto (5176 ) show
0 324 moveto (5177 // Write data to inode.) show
0 312 moveto (5178 int) show
0 300 moveto (5179 writei\(struct inode *ip, char *src, uint off, uint n\)) show
0 288 moveto (5180 {) show
0 276 moveto (5181   uint tot, m;) show
0 264 moveto (5182   struct buf *bp;) show
0 252 moveto (5183 ) show
0 240 moveto (5184   if\(ip->type == T_DEV\){) show
0 228 moveto (5185     if\(ip->major < 0 || ip->major >= NDEV || !devsw[ip->major].write\)) show
0 216 moveto (5186       return -1;) show
0 204 moveto (5187     return devsw[ip->major].write\(ip, src, n\);) show
0 192 moveto (5188   }) show
0 180 moveto (5189 ) show
0 168 moveto (5190   if\(off > ip->size || off + n < off\)) show
0 156 moveto (5191     return -1;) show
0 144 moveto (5192   if\(off + n > MAXFILE*BSIZE\)) show
0 132 moveto (5193     return -1;) show
0 120 moveto (5194 ) show
0 108 moveto (5195   for\(tot=0; tot<n; tot+=m, off+=m, src+=m\){) show
0 96 moveto (5196     bp = bread\(ip->dev, bmap\(ip, off/BSIZE\)\);) show
0 84 moveto (5197     m = min\(n - tot, BSIZE - off%BSIZE\);) show
0 72 moveto (5198     memmove\(bp->data + off%BSIZE, src, m\);) show
0 60 moveto (5199     log_write\(bp\);) show
0 24 moveto (Sheet 51) show
grestore
restore
showpage
%%Page: 60 60
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/fs.c  Page 11) show
0 648 moveto (5200     brelse\(bp\);) show
0 636 moveto (5201   }) show
0 624 moveto (5202 ) show
0 612 moveto (5203   if\(n > 0 && off > ip->size\){) show
0 600 moveto (5204     ip->size = off;) show
0 588 moveto (5205     iupdate\(ip\);) show
0 576 moveto (5206   }) show
0 564 moveto (5207   return n;) show
0 552 moveto (5208 }) show
0 540 moveto (5209 ) show
0 528 moveto (5210 // Directories) show
0 516 moveto (5211 ) show
0 504 moveto (5212 int) show
0 492 moveto (5213 namecmp\(const char *s, const char *t\)) show
0 480 moveto (5214 {) show
0 468 moveto (5215   return strncmp\(s, t, DIRSIZ\);) show
0 456 moveto (5216 }) show
0 444 moveto (5217 ) show
0 432 moveto (5218 // Look for a directory entry in a directory.) show
0 420 moveto (5219 // If found, set *poff to byte offset of entry.) show
0 408 moveto (5220 struct inode*) show
0 396 moveto (5221 dirlookup\(struct inode *dp, char *name, uint *poff\)) show
0 384 moveto (5222 {) show
0 372 moveto (5223   uint off, inum;) show
0 360 moveto (5224   struct dirent de;) show
0 348 moveto (5225 ) show
0 336 moveto (5226   if\(dp->type != T_DIR\)) show
0 324 moveto (5227     panic\("dirlookup not DIR"\);) show
0 312 moveto (5228 ) show
0 300 moveto (5229   for\(off = 0; off < dp->size; off += sizeof\(de\)\){) show
0 288 moveto (5230     if\(readi\(dp, \(char*\)&de, off, sizeof\(de\)\) != sizeof\(de\)\)) show
0 276 moveto (5231       panic\("dirlink read"\);) show
0 264 moveto (5232     if\(de.inum == 0\)) show
0 252 moveto (5233       continue;) show
0 240 moveto (5234     if\(namecmp\(name, de.name\) == 0\){) show
0 228 moveto (5235       // entry matches path element) show
0 216 moveto (5236       if\(poff\)) show
0 204 moveto (5237         *poff = off;) show
0 192 moveto (5238       inum = de.inum;) show
0 180 moveto (5239       return iget\(dp->dev, inum\);) show
0 168 moveto (5240     }) show
0 156 moveto (5241   }) show
0 144 moveto (5242 ) show
0 132 moveto (5243   return 0;) show
0 120 moveto (5244 }) show
0 108 moveto (5245 ) show
0 96 moveto (5246 ) show
0 84 moveto (5247 ) show
0 72 moveto (5248 ) show
0 60 moveto (5249 ) show
0 24 moveto (Sheet 52) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/fs.c  Page 12) show
0 648 moveto (5250 // Write a new directory entry \(name, inum\) into the directory dp.) show
0 636 moveto (5251 int) show
0 624 moveto (5252 dirlink\(struct inode *dp, char *name, uint inum\)) show
0 612 moveto (5253 {) show
0 600 moveto (5254   int off;) show
0 588 moveto (5255   struct dirent de;) show
0 576 moveto (5256   struct inode *ip;) show
0 564 moveto (5257 ) show
0 552 moveto (5258   // Check that name is not present.) show
0 540 moveto (5259   if\(\(ip = dirlookup\(dp, name, 0\)\) != 0\){) show
0 528 moveto (5260     iput\(ip\);) show
0 516 moveto (5261     return -1;) show
0 504 moveto (5262   }) show
0 492 moveto (5263 ) show
0 480 moveto (5264   // Look for an empty dirent.) show
0 468 moveto (5265   for\(off = 0; off < dp->size; off += sizeof\(de\)\){) show
0 456 moveto (5266     if\(readi\(dp, \(char*\)&de, off, sizeof\(de\)\) != sizeof\(de\)\)) show
0 444 moveto (5267       panic\("dirlink read"\);) show
0 432 moveto (5268     if\(de.inum == 0\)) show
0 420 moveto (5269       break;) show
0 408 moveto (5270   }) show
0 396 moveto (5271 ) show
0 384 moveto (5272   strncpy\(de.name, name, DIRSIZ\);) show
0 372 moveto (5273   de.inum = inum;) show
0 360 moveto (5274   if\(writei\(dp, \(char*\)&de, off, sizeof\(de\)\) != sizeof\(de\)\)) show
0 348 moveto (5275     panic\("dirlink"\);) show
0 336 moveto (5276 ) show
0 324 moveto (5277   return 0;) show
0 312 moveto (5278 }) show
0 300 moveto (5279 ) show
0 288 moveto (5280 // Paths) show
0 276 moveto (5281 ) show
0 264 moveto (5282 // Copy the next path element from path into name.) show
0 252 moveto (5283 // Return a pointer to the element following the copied one.) show
0 240 moveto (5284 // The returned path has no leading slashes,) show
0 228 moveto (5285 // so the caller can check *path=='\\0' to see if the name is the last one.) show
0 216 moveto (5286 // If no name to remove, return 0.) show
0 204 moveto (5287 //) show
0 192 moveto (5288 // Examples:) show
0 180 moveto (5289 //   skipelem\("a/bb/c", name\) = "bb/c", setting name = "a") show
0 168 moveto (5290 //   skipelem\("///a//bb", name\) = "bb", setting name = "a") show
0 156 moveto (5291 //   skipelem\("a", name\) = "", setting name = "a") show
0 144 moveto (5292 //   skipelem\("", name\) = skipelem\("////", name\) = 0) show
0 132 moveto (5293 //) show
0 120 moveto (5294 static char*) show
0 108 moveto (5295 skipelem\(char *path, char *name\)) show
0 96 moveto (5296 {) show
0 84 moveto (5297   char *s;) show
0 72 moveto (5298   int len;) show
0 60 moveto (5299 ) show
0 24 moveto (Sheet 52) show
grestore
restore
showpage
%%Page: 61 61
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/fs.c  Page 13) show
0 648 moveto (5300   while\(*path == '/'\)) show
0 636 moveto (5301     path++;) show
0 624 moveto (5302   if\(*path == 0\)) show
0 612 moveto (5303     return 0;) show
0 600 moveto (5304   s = path;) show
0 588 moveto (5305   while\(*path != '/' && *path != 0\)) show
0 576 moveto (5306     path++;) show
0 564 moveto (5307   len = path - s;) show
0 552 moveto (5308   if\(len >= DIRSIZ\)) show
0 540 moveto (5309     memmove\(name, s, DIRSIZ\);) show
0 528 moveto (5310   else {) show
0 516 moveto (5311     memmove\(name, s, len\);) show
0 504 moveto (5312     name[len] = 0;) show
0 492 moveto (5313   }) show
0 480 moveto (5314   while\(*path == '/'\)) show
0 468 moveto (5315     path++;) show
0 456 moveto (5316   return path;) show
0 444 moveto (5317 }) show
0 432 moveto (5318 ) show
0 420 moveto (5319 // Look up and return the inode for a path name.) show
0 408 moveto (5320 // If parent != 0, return the inode for the parent and copy the final) show
0 396 moveto (5321 // path element into name, which must have room for DIRSIZ bytes.) show
0 384 moveto (5322 // Must be called inside a transaction since it calls iput\(\).) show
0 372 moveto (5323 static struct inode*) show
0 360 moveto (5324 namex\(char *path, int nameiparent, char *name\)) show
0 348 moveto (5325 {) show
0 336 moveto (5326   struct inode *ip, *next;) show
0 324 moveto (5327 ) show
0 312 moveto (5328   if\(*path == '/'\)) show
0 300 moveto (5329     ip = iget\(ROOTDEV, ROOTINO\);) show
0 288 moveto (5330   else) show
0 276 moveto (5331     ip = idup\(proc->cwd\);) show
0 264 moveto (5332 ) show
0 252 moveto (5333   while\(\(path = skipelem\(path, name\)\) != 0\){) show
0 240 moveto (5334     ilock\(ip\);) show
0 228 moveto (5335     if\(ip->type != T_DIR\){) show
0 216 moveto (5336       iunlockput\(ip\);) show
0 204 moveto (5337       return 0;) show
0 192 moveto (5338     }) show
0 180 moveto (5339     if\(nameiparent && *path == '\\0'\){) show
0 168 moveto (5340       // Stop one level early.) show
0 156 moveto (5341       iunlock\(ip\);) show
0 144 moveto (5342       return ip;) show
0 132 moveto (5343     }) show
0 120 moveto (5344     if\(\(next = dirlookup\(ip, name, 0\)\) == 0\){) show
0 108 moveto (5345       iunlockput\(ip\);) show
0 96 moveto (5346       return 0;) show
0 84 moveto (5347     }) show
0 72 moveto (5348     iunlockput\(ip\);) show
0 60 moveto (5349     ip = next;) show
0 24 moveto (Sheet 53) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/fs.c  Page 14) show
0 648 moveto (5350   }) show
0 636 moveto (5351   if\(nameiparent\){) show
0 624 moveto (5352     iput\(ip\);) show
0 612 moveto (5353     return 0;) show
0 600 moveto (5354   }) show
0 588 moveto (5355   return ip;) show
0 576 moveto (5356 }) show
0 564 moveto (5357 ) show
0 552 moveto (5358 struct inode*) show
0 540 moveto (5359 namei\(char *path\)) show
0 528 moveto (5360 {) show
0 516 moveto (5361   char name[DIRSIZ];) show
0 504 moveto (5362   return namex\(path, 0, name\);) show
0 492 moveto (5363 }) show
0 480 moveto (5364 ) show
0 468 moveto (5365 struct inode*) show
0 456 moveto (5366 nameiparent\(char *path, char *name\)) show
0 444 moveto (5367 {) show
0 432 moveto (5368   return namex\(path, 1, name\);) show
0 420 moveto (5369 }) show
0 408 moveto (5370 ) show
0 396 moveto (5371 ) show
0 384 moveto (5372 ) show
0 372 moveto (5373 ) show
0 360 moveto (5374 ) show
0 348 moveto (5375 ) show
0 336 moveto (5376 ) show
0 324 moveto (5377 ) show
0 312 moveto (5378 ) show
0 300 moveto (5379 ) show
0 288 moveto (5380 ) show
0 276 moveto (5381 ) show
0 264 moveto (5382 ) show
0 252 moveto (5383 ) show
0 240 moveto (5384 ) show
0 228 moveto (5385 ) show
0 216 moveto (5386 ) show
0 204 moveto (5387 ) show
0 192 moveto (5388 ) show
0 180 moveto (5389 ) show
0 168 moveto (5390 ) show
0 156 moveto (5391 ) show
0 144 moveto (5392 ) show
0 132 moveto (5393 ) show
0 120 moveto (5394 ) show
0 108 moveto (5395 ) show
0 96 moveto (5396 ) show
0 84 moveto (5397 ) show
0 72 moveto (5398 ) show
0 60 moveto (5399 ) show
0 24 moveto (Sheet 53) show
grestore
restore
showpage
%%Page: 62 62
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/file.c  Page 1) show
0 648 moveto (5400 //) show
0 636 moveto (5401 // File descriptors) show
0 624 moveto (5402 //) show
0 612 moveto (5403 ) show
0 600 moveto (5404 #include "types.h") show
0 588 moveto (5405 #include "defs.h") show
0 576 moveto (5406 #include "param.h") show
0 564 moveto (5407 #include "fs.h") show
0 552 moveto (5408 #include "file.h") show
0 540 moveto (5409 #include "spinlock.h") show
0 528 moveto (5410 ) show
0 516 moveto (5411 struct devsw devsw[NDEV];) show
0 504 moveto (5412 struct {) show
0 492 moveto (5413   struct spinlock lock;) show
0 480 moveto (5414   struct file file[NFILE];) show
0 468 moveto (5415 } ftable;) show
0 456 moveto (5416 ) show
0 444 moveto (5417 void) show
0 432 moveto (5418 fileinit\(void\)) show
0 420 moveto (5419 {) show
0 408 moveto (5420   initlock\(&ftable.lock, "ftable"\);) show
0 396 moveto (5421 }) show
0 384 moveto (5422 ) show
0 372 moveto (5423 // Allocate a file structure.) show
0 360 moveto (5424 struct file*) show
0 348 moveto (5425 filealloc\(void\)) show
0 336 moveto (5426 {) show
0 324 moveto (5427   struct file *f;) show
0 312 moveto (5428 ) show
0 300 moveto (5429   acquire\(&ftable.lock\);) show
0 288 moveto (5430   for\(f = ftable.file; f < ftable.file + NFILE; f++\){) show
0 276 moveto (5431     if\(f->ref == 0\){) show
0 264 moveto (5432       f->ref = 1;) show
0 252 moveto (5433       release\(&ftable.lock\);) show
0 240 moveto (5434       return f;) show
0 228 moveto (5435     }) show
0 216 moveto (5436   }) show
0 204 moveto (5437   release\(&ftable.lock\);) show
0 192 moveto (5438   return 0;) show
0 180 moveto (5439 }) show
0 168 moveto (5440 ) show
0 156 moveto (5441 ) show
0 144 moveto (5442 ) show
0 132 moveto (5443 ) show
0 120 moveto (5444 ) show
0 108 moveto (5445 ) show
0 96 moveto (5446 ) show
0 84 moveto (5447 ) show
0 72 moveto (5448 ) show
0 60 moveto (5449 ) show
0 24 moveto (Sheet 54) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/file.c  Page 2) show
0 648 moveto (5450 // Increment ref count for file f.) show
0 636 moveto (5451 struct file*) show
0 624 moveto (5452 filedup\(struct file *f\)) show
0 612 moveto (5453 {) show
0 600 moveto (5454   acquire\(&ftable.lock\);) show
0 588 moveto (5455   if\(f->ref < 1\)) show
0 576 moveto (5456     panic\("filedup"\);) show
0 564 moveto (5457   f->ref++;) show
0 552 moveto (5458   release\(&ftable.lock\);) show
0 540 moveto (5459   return f;) show
0 528 moveto (5460 }) show
0 516 moveto (5461 ) show
0 504 moveto (5462 // Close file f.  \(Decrement ref count, close when reaches 0.\)) show
0 492 moveto (5463 void) show
0 480 moveto (5464 fileclose\(struct file *f\)) show
0 468 moveto (5465 {) show
0 456 moveto (5466   struct file ff;) show
0 444 moveto (5467 ) show
0 432 moveto (5468   acquire\(&ftable.lock\);) show
0 420 moveto (5469   if\(f->ref < 1\)) show
0 408 moveto (5470     panic\("fileclose"\);) show
0 396 moveto (5471   if\(--f->ref > 0\){) show
0 384 moveto (5472     release\(&ftable.lock\);) show
0 372 moveto (5473     return;) show
0 360 moveto (5474   }) show
0 348 moveto (5475   ff = *f;) show
0 336 moveto (5476   f->ref = 0;) show
0 324 moveto (5477   f->type = FD_NONE;) show
0 312 moveto (5478   release\(&ftable.lock\);) show
0 300 moveto (5479 ) show
0 288 moveto (5480   if\(ff.type == FD_PIPE\)) show
0 276 moveto (5481     pipeclose\(ff.pipe, ff.writable\);) show
0 264 moveto (5482   else if\(ff.type == FD_INODE\){) show
0 252 moveto (5483     begin_op\(\);) show
0 240 moveto (5484     iput\(ff.ip\);) show
0 228 moveto (5485     end_op\(\);) show
0 216 moveto (5486   }) show
0 204 moveto (5487 }) show
0 192 moveto (5488 ) show
0 180 moveto (5489 ) show
0 168 moveto (5490 ) show
0 156 moveto (5491 ) show
0 144 moveto (5492 ) show
0 132 moveto (5493 ) show
0 120 moveto (5494 ) show
0 108 moveto (5495 ) show
0 96 moveto (5496 ) show
0 84 moveto (5497 ) show
0 72 moveto (5498 ) show
0 60 moveto (5499 ) show
0 24 moveto (Sheet 54) show
grestore
restore
showpage
%%Page: 63 63
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/file.c  Page 3) show
0 648 moveto (5500 // Get metadata about file f.) show
0 636 moveto (5501 int) show
0 624 moveto (5502 filestat\(struct file *f, struct stat *st\)) show
0 612 moveto (5503 {) show
0 600 moveto (5504   if\(f->type == FD_INODE\){) show
0 588 moveto (5505     ilock\(f->ip\);) show
0 576 moveto (5506     stati\(f->ip, st\);) show
0 564 moveto (5507     iunlock\(f->ip\);) show
0 552 moveto (5508     return 0;) show
0 540 moveto (5509   }) show
0 528 moveto (5510   return -1;) show
0 516 moveto (5511 }) show
0 504 moveto (5512 ) show
0 492 moveto (5513 // Read from file f.) show
0 480 moveto (5514 int) show
0 468 moveto (5515 fileread\(struct file *f, char *addr, int n\)) show
0 456 moveto (5516 {) show
0 444 moveto (5517   int r;) show
0 432 moveto (5518 ) show
0 420 moveto (5519   if\(f->readable == 0\)) show
0 408 moveto (5520     return -1;) show
0 396 moveto (5521   if\(f->type == FD_PIPE\)) show
0 384 moveto (5522     return piperead\(f->pipe, addr, n\);) show
0 372 moveto (5523   if\(f->type == FD_INODE\){) show
0 360 moveto (5524     ilock\(f->ip\);) show
0 348 moveto (5525     if\(\(r = readi\(f->ip, addr, f->off, n\)\) > 0\)) show
0 336 moveto (5526       f->off += r;) show
0 324 moveto (5527     iunlock\(f->ip\);) show
0 312 moveto (5528     return r;) show
0 300 moveto (5529   }) show
0 288 moveto (5530   panic\("fileread"\);) show
0 276 moveto (5531 }) show
0 264 moveto (5532 ) show
0 252 moveto (5533 // Write to file f.) show
0 240 moveto (5534 int) show
0 228 moveto (5535 filewrite\(struct file *f, char *addr, int n\)) show
0 216 moveto (5536 {) show
0 204 moveto (5537   int r;) show
0 192 moveto (5538 ) show
0 180 moveto (5539   if\(f->writable == 0\)) show
0 168 moveto (5540     return -1;) show
0 156 moveto (5541   if\(f->type == FD_PIPE\)) show
0 144 moveto (5542     return pipewrite\(f->pipe, addr, n\);) show
0 132 moveto (5543   if\(f->type == FD_INODE\){) show
0 120 moveto (5544     // write a few blocks at a time to avoid exceeding) show
0 108 moveto (5545     // the maximum log transaction size, including) show
0 96 moveto (5546     // i-node, indirect block, allocation blocks,) show
0 84 moveto (5547     // and 2 blocks of slop for non-aligned writes.) show
0 72 moveto (5548     // this really belongs lower down, since writei\(\)) show
0 60 moveto (5549     // might be writing a device like the console.) show
0 24 moveto (Sheet 55) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/file.c  Page 4) show
0 648 moveto (5550     int max = \(\(LOGSIZE-1-1-2\) / 2\) * 512;) show
0 636 moveto (5551     int i = 0;) show
0 624 moveto (5552     while\(i < n\){) show
0 612 moveto (5553       int n1 = n - i;) show
0 600 moveto (5554       if\(n1 > max\)) show
0 588 moveto (5555         n1 = max;) show
0 576 moveto (5556 ) show
0 564 moveto (5557       begin_op\(\);) show
0 552 moveto (5558       ilock\(f->ip\);) show
0 540 moveto (5559       if \(\(r = writei\(f->ip, addr + i, f->off, n1\)\) > 0\)) show
0 528 moveto (5560         f->off += r;) show
0 516 moveto (5561       iunlock\(f->ip\);) show
0 504 moveto (5562       end_op\(\);) show
0 492 moveto (5563 ) show
0 480 moveto (5564       if\(r < 0\)) show
0 468 moveto (5565         break;) show
0 456 moveto (5566       if\(r != n1\)) show
0 444 moveto (5567         panic\("short filewrite"\);) show
0 432 moveto (5568       i += r;) show
0 420 moveto (5569     }) show
0 408 moveto (5570     return i == n ? n : -1;) show
0 396 moveto (5571   }) show
0 384 moveto (5572   panic\("filewrite"\);) show
0 372 moveto (5573 }) show
0 360 moveto (5574 ) show
0 348 moveto (5575 ) show
0 336 moveto (5576 ) show
0 324 moveto (5577 ) show
0 312 moveto (5578 ) show
0 300 moveto (5579 ) show
0 288 moveto (5580 ) show
0 276 moveto (5581 ) show
0 264 moveto (5582 ) show
0 252 moveto (5583 ) show
0 240 moveto (5584 ) show
0 228 moveto (5585 ) show
0 216 moveto (5586 ) show
0 204 moveto (5587 ) show
0 192 moveto (5588 ) show
0 180 moveto (5589 ) show
0 168 moveto (5590 ) show
0 156 moveto (5591 ) show
0 144 moveto (5592 ) show
0 132 moveto (5593 ) show
0 120 moveto (5594 ) show
0 108 moveto (5595 ) show
0 96 moveto (5596 ) show
0 84 moveto (5597 ) show
0 72 moveto (5598 ) show
0 60 moveto (5599 ) show
0 24 moveto (Sheet 55) show
grestore
restore
showpage
%%Page: 64 64
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/sysfile.c  Page 1) show
0 648 moveto (5600 //) show
0 636 moveto (5601 // File-system system calls.) show
0 624 moveto (5602 // Mostly argument checking, since we don't trust) show
0 612 moveto (5603 // user code, and calls into file.c and fs.c.) show
0 600 moveto (5604 //) show
0 588 moveto (5605 ) show
0 576 moveto (5606 #include "types.h") show
0 564 moveto (5607 #include "defs.h") show
0 552 moveto (5608 #include "param.h") show
0 540 moveto (5609 #include "stat.h") show
0 528 moveto (5610 #include "mmu.h") show
0 516 moveto (5611 #include "proc.h") show
0 504 moveto (5612 #include "fs.h") show
0 492 moveto (5613 #include "file.h") show
0 480 moveto (5614 #include "fcntl.h") show
0 468 moveto (5615 ) show
0 456 moveto (5616 // Fetch the nth word-sized system call argument as a file descriptor) show
0 444 moveto (5617 // and return both the descriptor and the corresponding struct file.) show
0 432 moveto (5618 static int) show
0 420 moveto (5619 argfd\(int n, int *pfd, struct file **pf\)) show
0 408 moveto (5620 {) show
0 396 moveto (5621   int fd;) show
0 384 moveto (5622   struct file *f;) show
0 372 moveto (5623 ) show
0 360 moveto (5624   if\(argint\(n, &fd\) < 0\)) show
0 348 moveto (5625     return -1;) show
0 336 moveto (5626   if\(fd < 0 || fd >= NOFILE || \(f=proc->ofile[fd]\) == 0\)) show
0 324 moveto (5627     return -1;) show
0 312 moveto (5628   if\(pfd\)) show
0 300 moveto (5629     *pfd = fd;) show
0 288 moveto (5630   if\(pf\)) show
0 276 moveto (5631     *pf = f;) show
0 264 moveto (5632   return 0;) show
0 252 moveto (5633 }) show
0 240 moveto (5634 ) show
0 228 moveto (5635 // Allocate a file descriptor for the given file.) show
0 216 moveto (5636 // Takes over file reference from caller on success.) show
0 204 moveto (5637 static int) show
0 192 moveto (5638 fdalloc\(struct file *f\)) show
0 180 moveto (5639 {) show
0 168 moveto (5640   int fd;) show
0 156 moveto (5641 ) show
0 144 moveto (5642   for\(fd = 0; fd < NOFILE; fd++\){) show
0 132 moveto (5643     if\(proc->ofile[fd] == 0\){) show
0 120 moveto (5644       proc->ofile[fd] = f;) show
0 108 moveto (5645       return fd;) show
0 96 moveto (5646     }) show
0 84 moveto (5647   }) show
0 72 moveto (5648   return -1;) show
0 60 moveto (5649 }) show
0 24 moveto (Sheet 56) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/sysfile.c  Page 2) show
0 648 moveto (5650 int) show
0 636 moveto (5651 sys_dup\(void\)) show
0 624 moveto (5652 {) show
0 612 moveto (5653   struct file *f;) show
0 600 moveto (5654   int fd;) show
0 588 moveto (5655 ) show
0 576 moveto (5656   if\(argfd\(0, 0, &f\) < 0\)) show
0 564 moveto (5657     return -1;) show
0 552 moveto (5658   if\(\(fd=fdalloc\(f\)\) < 0\)) show
0 540 moveto (5659     return -1;) show
0 528 moveto (5660   filedup\(f\);) show
0 516 moveto (5661   return fd;) show
0 504 moveto (5662 }) show
0 492 moveto (5663 ) show
0 480 moveto (5664 int) show
0 468 moveto (5665 sys_read\(void\)) show
0 456 moveto (5666 {) show
0 444 moveto (5667   struct file *f;) show
0 432 moveto (5668   int n;) show
0 420 moveto (5669   char *p;) show
0 408 moveto (5670 ) show
0 396 moveto (5671   if\(argfd\(0, 0, &f\) < 0 || argint\(2, &n\) < 0 || argptr\(1, &p, n\) < 0\)) show
0 384 moveto (5672     return -1;) show
0 372 moveto (5673   return fileread\(f, p, n\);) show
0 360 moveto (5674 }) show
0 348 moveto (5675 ) show
0 336 moveto (5676 int) show
0 324 moveto (5677 sys_write\(void\)) show
0 312 moveto (5678 {) show
0 300 moveto (5679   struct file *f;) show
0 288 moveto (5680   int n;) show
0 276 moveto (5681   char *p;) show
0 264 moveto (5682 ) show
0 252 moveto (5683   if\(argfd\(0, 0, &f\) < 0 || argint\(2, &n\) < 0 || argptr\(1, &p, n\) < 0\)) show
0 240 moveto (5684     return -1;) show
0 228 moveto (5685   return filewrite\(f, p, n\);) show
0 216 moveto (5686 }) show
0 204 moveto (5687 ) show
0 192 moveto (5688 int) show
0 180 moveto (5689 sys_close\(void\)) show
0 168 moveto (5690 {) show
0 156 moveto (5691   int fd;) show
0 144 moveto (5692   struct file *f;) show
0 132 moveto (5693 ) show
0 120 moveto (5694   if\(argfd\(0, &fd, &f\) < 0\)) show
0 108 moveto (5695     return -1;) show
0 96 moveto (5696   proc->ofile[fd] = 0;) show
0 84 moveto (5697   fileclose\(f\);) show
0 72 moveto (5698   return 0;) show
0 60 moveto (5699 }) show
0 24 moveto (Sheet 56) show
grestore
restore
showpage
%%Page: 65 65
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/sysfile.c  Page 3) show
0 648 moveto (5700 int) show
0 636 moveto (5701 sys_fstat\(void\)) show
0 624 moveto (5702 {) show
0 612 moveto (5703   struct file *f;) show
0 600 moveto (5704   struct stat *st;) show
0 588 moveto (5705 ) show
0 576 moveto (5706   if\(argfd\(0, 0, &f\) < 0 || argptr\(1, \(void*\)&st, sizeof\(*st\)\) < 0\)) show
0 564 moveto (5707     return -1;) show
0 552 moveto (5708   return filestat\(f, st\);) show
0 540 moveto (5709 }) show
0 528 moveto (5710 ) show
0 516 moveto (5711 // Create the path new as a link to the same inode as old.) show
0 504 moveto (5712 int) show
0 492 moveto (5713 sys_link\(void\)) show
0 480 moveto (5714 {) show
0 468 moveto (5715   char name[DIRSIZ], *new, *old;) show
0 456 moveto (5716   struct inode *dp, *ip;) show
0 444 moveto (5717 ) show
0 432 moveto (5718   if\(argstr\(0, &old\) < 0 || argstr\(1, &new\) < 0\)) show
0 420 moveto (5719     return -1;) show
0 408 moveto (5720 ) show
0 396 moveto (5721   begin_op\(\);) show
0 384 moveto (5722   if\(\(ip = namei\(old\)\) == 0\){) show
0 372 moveto (5723     end_op\(\);) show
0 360 moveto (5724     return -1;) show
0 348 moveto (5725   }) show
0 336 moveto (5726 ) show
0 324 moveto (5727   ilock\(ip\);) show
0 312 moveto (5728   if\(ip->type == T_DIR\){) show
0 300 moveto (5729     iunlockput\(ip\);) show
0 288 moveto (5730     end_op\(\);) show
0 276 moveto (5731     return -1;) show
0 264 moveto (5732   }) show
0 252 moveto (5733 ) show
0 240 moveto (5734   ip->nlink++;) show
0 228 moveto (5735   iupdate\(ip\);) show
0 216 moveto (5736   iunlock\(ip\);) show
0 204 moveto (5737 ) show
0 192 moveto (5738   if\(\(dp = nameiparent\(new, name\)\) == 0\)) show
0 180 moveto (5739     goto bad;) show
0 168 moveto (5740   ilock\(dp\);) show
0 156 moveto (5741   if\(dp->dev != ip->dev || dirlink\(dp, name, ip->inum\) < 0\){) show
0 144 moveto (5742     iunlockput\(dp\);) show
0 132 moveto (5743     goto bad;) show
0 120 moveto (5744   }) show
0 108 moveto (5745   iunlockput\(dp\);) show
0 96 moveto (5746   iput\(ip\);) show
0 84 moveto (5747 ) show
0 72 moveto (5748   end_op\(\);) show
0 60 moveto (5749 ) show
0 24 moveto (Sheet 57) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/sysfile.c  Page 4) show
0 648 moveto (5750   return 0;) show
0 636 moveto (5751 ) show
0 624 moveto (5752 bad:) show
0 612 moveto (5753   ilock\(ip\);) show
0 600 moveto (5754   ip->nlink--;) show
0 588 moveto (5755   iupdate\(ip\);) show
0 576 moveto (5756   iunlockput\(ip\);) show
0 564 moveto (5757   end_op\(\);) show
0 552 moveto (5758   return -1;) show
0 540 moveto (5759 }) show
0 528 moveto (5760 ) show
0 516 moveto (5761 // Is the directory dp empty except for "." and ".." ?) show
0 504 moveto (5762 static int) show
0 492 moveto (5763 isdirempty\(struct inode *dp\)) show
0 480 moveto (5764 {) show
0 468 moveto (5765   int off;) show
0 456 moveto (5766   struct dirent de;) show
0 444 moveto (5767 ) show
0 432 moveto (5768   for\(off=2*sizeof\(de\); off<dp->size; off+=sizeof\(de\)\){) show
0 420 moveto (5769     if\(readi\(dp, \(char*\)&de, off, sizeof\(de\)\) != sizeof\(de\)\)) show
0 408 moveto (5770       panic\("isdirempty: readi"\);) show
0 396 moveto (5771     if\(de.inum != 0\)) show
0 384 moveto (5772       return 0;) show
0 372 moveto (5773   }) show
0 360 moveto (5774   return 1;) show
0 348 moveto (5775 }) show
0 336 moveto (5776 ) show
0 324 moveto (5777 int) show
0 312 moveto (5778 sys_unlink\(void\)) show
0 300 moveto (5779 {) show
0 288 moveto (5780   struct inode *ip, *dp;) show
0 276 moveto (5781   struct dirent de;) show
0 264 moveto (5782   char name[DIRSIZ], *path;) show
0 252 moveto (5783   uint off;) show
0 240 moveto (5784 ) show
0 228 moveto (5785   if\(argstr\(0, &path\) < 0\)) show
0 216 moveto (5786     return -1;) show
0 204 moveto (5787 ) show
0 192 moveto (5788   begin_op\(\);) show
0 180 moveto (5789   if\(\(dp = nameiparent\(path, name\)\) == 0\){) show
0 168 moveto (5790     end_op\(\);) show
0 156 moveto (5791     return -1;) show
0 144 moveto (5792   }) show
0 132 moveto (5793 ) show
0 120 moveto (5794   ilock\(dp\);) show
0 108 moveto (5795 ) show
0 96 moveto (5796   // Cannot unlink "." or "..".) show
0 84 moveto (5797   if\(namecmp\(name, "."\) == 0 || namecmp\(name, ".."\) == 0\)) show
0 72 moveto (5798     goto bad;) show
0 60 moveto (5799 ) show
0 24 moveto (Sheet 57) show
grestore
restore
showpage
%%Page: 66 66
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/sysfile.c  Page 5) show
0 648 moveto (5800   if\(\(ip = dirlookup\(dp, name, &off\)\) == 0\)) show
0 636 moveto (5801     goto bad;) show
0 624 moveto (5802   ilock\(ip\);) show
0 612 moveto (5803 ) show
0 600 moveto (5804   if\(ip->nlink < 1\)) show
0 588 moveto (5805     panic\("unlink: nlink < 1"\);) show
0 576 moveto (5806   if\(ip->type == T_DIR && !isdirempty\(ip\)\){) show
0 564 moveto (5807     iunlockput\(ip\);) show
0 552 moveto (5808     goto bad;) show
0 540 moveto (5809   }) show
0 528 moveto (5810 ) show
0 516 moveto (5811   memset\(&de, 0, sizeof\(de\)\);) show
0 504 moveto (5812   if\(writei\(dp, \(char*\)&de, off, sizeof\(de\)\) != sizeof\(de\)\)) show
0 492 moveto (5813     panic\("unlink: writei"\);) show
0 480 moveto (5814   if\(ip->type == T_DIR\){) show
0 468 moveto (5815     dp->nlink--;) show
0 456 moveto (5816     iupdate\(dp\);) show
0 444 moveto (5817   }) show
0 432 moveto (5818   iunlockput\(dp\);) show
0 420 moveto (5819 ) show
0 408 moveto (5820   ip->nlink--;) show
0 396 moveto (5821   iupdate\(ip\);) show
0 384 moveto (5822   iunlockput\(ip\);) show
0 372 moveto (5823 ) show
0 360 moveto (5824   end_op\(\);) show
0 348 moveto (5825 ) show
0 336 moveto (5826   return 0;) show
0 324 moveto (5827 ) show
0 312 moveto (5828 bad:) show
0 300 moveto (5829   iunlockput\(dp\);) show
0 288 moveto (5830   end_op\(\);) show
0 276 moveto (5831   return -1;) show
0 264 moveto (5832 }) show
0 252 moveto (5833 ) show
0 240 moveto (5834 static struct inode*) show
0 228 moveto (5835 create\(char *path, short type, short major, short minor\)) show
0 216 moveto (5836 {) show
0 204 moveto (5837   uint off;) show
0 192 moveto (5838   struct inode *ip, *dp;) show
0 180 moveto (5839   char name[DIRSIZ];) show
0 168 moveto (5840 ) show
0 156 moveto (5841   if\(\(dp = nameiparent\(path, name\)\) == 0\)) show
0 144 moveto (5842     return 0;) show
0 132 moveto (5843   ilock\(dp\);) show
0 120 moveto (5844 ) show
0 108 moveto (5845   if\(\(ip = dirlookup\(dp, name, &off\)\) != 0\){) show
0 96 moveto (5846     iunlockput\(dp\);) show
0 84 moveto (5847     ilock\(ip\);) show
0 72 moveto (5848     if\(type == T_FILE && ip->type == T_FILE\)) show
0 60 moveto (5849       return ip;) show
0 24 moveto (Sheet 58) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/sysfile.c  Page 6) show
0 648 moveto (5850     iunlockput\(ip\);) show
0 636 moveto (5851     return 0;) show
0 624 moveto (5852   }) show
0 612 moveto (5853 ) show
0 600 moveto (5854   if\(\(ip = ialloc\(dp->dev, type\)\) == 0\)) show
0 588 moveto (5855     panic\("create: ialloc"\);) show
0 576 moveto (5856 ) show
0 564 moveto (5857   ilock\(ip\);) show
0 552 moveto (5858   ip->major = major;) show
0 540 moveto (5859   ip->minor = minor;) show
0 528 moveto (5860   ip->nlink = 1;) show
0 516 moveto (5861   iupdate\(ip\);) show
0 504 moveto (5862 ) show
0 492 moveto (5863   if\(type == T_DIR\){  // Create . and .. entries.) show
0 480 moveto (5864     dp->nlink++;  // for "..") show
0 468 moveto (5865     iupdate\(dp\);) show
0 456 moveto (5866     // No ip->nlink++ for ".": avoid cyclic ref count.) show
0 444 moveto (5867     if\(dirlink\(ip, ".", ip->inum\) < 0 || dirlink\(ip, "..", dp->inum\) < 0\)) show
0 432 moveto (5868       panic\("create dots"\);) show
0 420 moveto (5869   }) show
0 408 moveto (5870 ) show
0 396 moveto (5871   if\(dirlink\(dp, name, ip->inum\) < 0\)) show
0 384 moveto (5872     panic\("create: dirlink"\);) show
0 372 moveto (5873 ) show
0 360 moveto (5874   iunlockput\(dp\);) show
0 348 moveto (5875 ) show
0 336 moveto (5876   return ip;) show
0 324 moveto (5877 }) show
0 312 moveto (5878 ) show
0 300 moveto (5879 int) show
0 288 moveto (5880 sys_open\(void\)) show
0 276 moveto (5881 {) show
0 264 moveto (5882   char *path;) show
0 252 moveto (5883   int fd, omode;) show
0 240 moveto (5884   struct file *f;) show
0 228 moveto (5885   struct inode *ip;) show
0 216 moveto (5886 ) show
0 204 moveto (5887   if\(argstr\(0, &path\) < 0 || argint\(1, &omode\) < 0\)) show
0 192 moveto (5888     return -1;) show
0 180 moveto (5889 ) show
0 168 moveto (5890   begin_op\(\);) show
0 156 moveto (5891 ) show
0 144 moveto (5892   if\(omode & O_CREATE\){) show
0 132 moveto (5893     ip = create\(path, T_FILE, 0, 0\);) show
0 120 moveto (5894     if\(ip == 0\){) show
0 108 moveto (5895       end_op\(\);) show
0 96 moveto (5896       return -1;) show
0 84 moveto (5897     }) show
0 72 moveto (5898   } else {) show
0 60 moveto (5899     if\(\(ip = namei\(path\)\) == 0\){) show
0 24 moveto (Sheet 58) show
grestore
restore
showpage
%%Page: 67 67
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/sysfile.c  Page 7) show
0 648 moveto (5900       end_op\(\);) show
0 636 moveto (5901       return -1;) show
0 624 moveto (5902     }) show
0 612 moveto (5903     ilock\(ip\);) show
0 600 moveto (5904     if\(ip->type == T_DIR && omode != O_RDONLY\){) show
0 588 moveto (5905       iunlockput\(ip\);) show
0 576 moveto (5906       end_op\(\);) show
0 564 moveto (5907       return -1;) show
0 552 moveto (5908     }) show
0 540 moveto (5909   }) show
0 528 moveto (5910 ) show
0 516 moveto (5911   if\(\(f = filealloc\(\)\) == 0 || \(fd = fdalloc\(f\)\) < 0\){) show
0 504 moveto (5912     if\(f\)) show
0 492 moveto (5913       fileclose\(f\);) show
0 480 moveto (5914     iunlockput\(ip\);) show
0 468 moveto (5915     end_op\(\);) show
0 456 moveto (5916     return -1;) show
0 444 moveto (5917   }) show
0 432 moveto (5918   iunlock\(ip\);) show
0 420 moveto (5919   end_op\(\);) show
0 408 moveto (5920 ) show
0 396 moveto (5921   f->type = FD_INODE;) show
0 384 moveto (5922   f->ip = ip;) show
0 372 moveto (5923   f->off = 0;) show
0 360 moveto (5924   f->readable = !\(omode & O_WRONLY\);) show
0 348 moveto (5925   f->writable = \(omode & O_WRONLY\) || \(omode & O_RDWR\);) show
0 336 moveto (5926   return fd;) show
0 324 moveto (5927 }) show
0 312 moveto (5928 ) show
0 300 moveto (5929 int) show
0 288 moveto (5930 sys_mkdir\(void\)) show
0 276 moveto (5931 {) show
0 264 moveto (5932   char *path;) show
0 252 moveto (5933   struct inode *ip;) show
0 240 moveto (5934 ) show
0 228 moveto (5935   begin_op\(\);) show
0 216 moveto (5936   if\(argstr\(0, &path\) < 0 || \(ip = create\(path, T_DIR, 0, 0\)\) == 0\){) show
0 204 moveto (5937     end_op\(\);) show
0 192 moveto (5938     return -1;) show
0 180 moveto (5939   }) show
0 168 moveto (5940   iunlockput\(ip\);) show
0 156 moveto (5941   end_op\(\);) show
0 144 moveto (5942   return 0;) show
0 132 moveto (5943 }) show
0 120 moveto (5944 ) show
0 108 moveto (5945 ) show
0 96 moveto (5946 ) show
0 84 moveto (5947 ) show
0 72 moveto (5948 ) show
0 60 moveto (5949 ) show
0 24 moveto (Sheet 59) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/sysfile.c  Page 8) show
0 648 moveto (5950 int) show
0 636 moveto (5951 sys_mknod\(void\)) show
0 624 moveto (5952 {) show
0 612 moveto (5953   struct inode *ip;) show
0 600 moveto (5954   char *path;) show
0 588 moveto (5955   int len;) show
0 576 moveto (5956   int major, minor;) show
0 564 moveto (5957 ) show
0 552 moveto (5958   begin_op\(\);) show
0 540 moveto (5959   if\(\(len=argstr\(0, &path\)\) < 0 ||) show
0 528 moveto (5960      argint\(1, &major\) < 0 ||) show
0 516 moveto (5961      argint\(2, &minor\) < 0 ||) show
0 504 moveto (5962      \(ip = create\(path, T_DEV, major, minor\)\) == 0\){) show
0 492 moveto (5963     end_op\(\);) show
0 480 moveto (5964     return -1;) show
0 468 moveto (5965   }) show
0 456 moveto (5966   iunlockput\(ip\);) show
0 444 moveto (5967   end_op\(\);) show
0 432 moveto (5968   return 0;) show
0 420 moveto (5969 }) show
0 408 moveto (5970 ) show
0 396 moveto (5971 int) show
0 384 moveto (5972 sys_chdir\(void\)) show
0 372 moveto (5973 {) show
0 360 moveto (5974   char *path;) show
0 348 moveto (5975   struct inode *ip;) show
0 336 moveto (5976 ) show
0 324 moveto (5977   begin_op\(\);) show
0 312 moveto (5978   if\(argstr\(0, &path\) < 0 || \(ip = namei\(path\)\) == 0\){) show
0 300 moveto (5979     end_op\(\);) show
0 288 moveto (5980     return -1;) show
0 276 moveto (5981   }) show
0 264 moveto (5982   ilock\(ip\);) show
0 252 moveto (5983   if\(ip->type != T_DIR\){) show
0 240 moveto (5984     iunlockput\(ip\);) show
0 228 moveto (5985     end_op\(\);) show
0 216 moveto (5986     return -1;) show
0 204 moveto (5987   }) show
0 192 moveto (5988   iunlock\(ip\);) show
0 180 moveto (5989   iput\(proc->cwd\);) show
0 168 moveto (5990   end_op\(\);) show
0 156 moveto (5991   proc->cwd = ip;) show
0 144 moveto (5992   return 0;) show
0 132 moveto (5993 }) show
0 120 moveto (5994 ) show
0 108 moveto (5995 ) show
0 96 moveto (5996 ) show
0 84 moveto (5997 ) show
0 72 moveto (5998 ) show
0 60 moveto (5999 ) show
0 24 moveto (Sheet 59) show
grestore
restore
showpage
%%Page: 68 68
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/sysfile.c  Page 9) show
0 648 moveto (6000 int) show
0 636 moveto (6001 sys_exec\(void\)) show
0 624 moveto (6002 {) show
0 612 moveto (6003   char *path, *argv[MAXARG];) show
0 600 moveto (6004   int i;) show
0 588 moveto (6005   uint uargv, uarg;) show
0 576 moveto (6006 ) show
0 564 moveto (6007   if\(argstr\(0, &path\) < 0 || argint\(1, \(int*\)&uargv\) < 0\){) show
0 552 moveto (6008     return -1;) show
0 540 moveto (6009   }) show
0 528 moveto (6010   memset\(argv, 0, sizeof\(argv\)\);) show
0 516 moveto (6011   for\(i=0;; i++\){) show
0 504 moveto (6012     if\(i >= NELEM\(argv\)\)) show
0 492 moveto (6013       return -1;) show
0 480 moveto (6014     if\(fetchint\(uargv+4*i, \(int*\)&uarg\) < 0\)) show
0 468 moveto (6015       return -1;) show
0 456 moveto (6016     if\(uarg == 0\){) show
0 444 moveto (6017       argv[i] = 0;) show
0 432 moveto (6018       break;) show
0 420 moveto (6019     }) show
0 408 moveto (6020     if\(fetchstr\(uarg, &argv[i]\) < 0\)) show
0 396 moveto (6021       return -1;) show
0 384 moveto (6022   }) show
0 372 moveto (6023   return exec\(path, argv\);) show
0 360 moveto (6024 }) show
0 348 moveto (6025 ) show
0 336 moveto (6026 int) show
0 324 moveto (6027 sys_pipe\(void\)) show
0 312 moveto (6028 {) show
0 300 moveto (6029   int *fd;) show
0 288 moveto (6030   struct file *rf, *wf;) show
0 276 moveto (6031   int fd0, fd1;) show
0 264 moveto (6032 ) show
0 252 moveto (6033   if\(argptr\(0, \(void*\)&fd, 2*sizeof\(fd[0]\)\) < 0\)) show
0 240 moveto (6034     return -1;) show
0 228 moveto (6035   if\(pipealloc\(&rf, &wf\) < 0\)) show
0 216 moveto (6036     return -1;) show
0 204 moveto (6037   fd0 = -1;) show
0 192 moveto (6038   if\(\(fd0 = fdalloc\(rf\)\) < 0 || \(fd1 = fdalloc\(wf\)\) < 0\){) show
0 180 moveto (6039     if\(fd0 >= 0\)) show
0 168 moveto (6040       proc->ofile[fd0] = 0;) show
0 156 moveto (6041     fileclose\(rf\);) show
0 144 moveto (6042     fileclose\(wf\);) show
0 132 moveto (6043     return -1;) show
0 120 moveto (6044   }) show
0 108 moveto (6045   fd[0] = fd0;) show
0 96 moveto (6046   fd[1] = fd1;) show
0 84 moveto (6047   return 0;) show
0 72 moveto (6048 }) show
0 60 moveto (6049 ) show
0 24 moveto (Sheet 60) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/exec.c  Page 1) show
0 648 moveto (6050 #include "types.h") show
0 636 moveto (6051 #include "param.h") show
0 624 moveto (6052 #include "memlayout.h") show
0 612 moveto (6053 #include "mmu.h") show
0 600 moveto (6054 #include "proc.h") show
0 588 moveto (6055 #include "defs.h") show
0 576 moveto (6056 #include "x86.h") show
0 564 moveto (6057 #include "elf.h") show
0 552 moveto (6058 ) show
0 540 moveto (6059 int) show
0 528 moveto (6060 exec\(char *path, char **argv\)) show
0 516 moveto (6061 {) show
0 504 moveto (6062   char *s, *last;) show
0 492 moveto (6063   int i, off;) show
0 480 moveto (6064   uint argc, sz, sp, ustack[3+MAXARG+1];) show
0 468 moveto (6065   struct elfhdr elf;) show
0 456 moveto (6066   struct inode *ip;) show
0 444 moveto (6067   struct proghdr ph;) show
0 432 moveto (6068   pde_t *pgdir, *oldpgdir;) show
0 420 moveto (6069 ) show
0 408 moveto (6070   begin_op\(\);) show
0 396 moveto (6071   if\(\(ip = namei\(path\)\) == 0\){) show
0 384 moveto (6072     end_op\(\);) show
0 372 moveto (6073     return -1;) show
0 360 moveto (6074   }) show
0 348 moveto (6075   ilock\(ip\);) show
0 336 moveto (6076   pgdir = 0;) show
0 324 moveto (6077 ) show
0 312 moveto (6078   // Check ELF header) show
0 300 moveto (6079   if\(readi\(ip, \(char*\)&elf, 0, sizeof\(elf\)\) < sizeof\(elf\)\)) show
0 288 moveto (6080     goto bad;) show
0 276 moveto (6081   if\(elf.magic != ELF_MAGIC\)) show
0 264 moveto (6082     goto bad;) show
0 252 moveto (6083 ) show
0 240 moveto (6084   if\(\(pgdir = setupkvm\(\)\) == 0\)) show
0 228 moveto (6085     goto bad;) show
0 216 moveto (6086 ) show
0 204 moveto (6087   // Load program into memory.) show
0 192 moveto (6088   sz = 0;) show
0 180 moveto (6089   for\(i=0, off=elf.phoff; i<elf.phnum; i++, off+=sizeof\(ph\)\){) show
0 168 moveto (6090     if\(readi\(ip, \(char*\)&ph, off, sizeof\(ph\)\) != sizeof\(ph\)\)) show
0 156 moveto (6091       goto bad;) show
0 144 moveto (6092     if\(ph.type != ELF_PROG_LOAD\)) show
0 132 moveto (6093       continue;) show
0 120 moveto (6094     if\(ph.memsz < ph.filesz\)) show
0 108 moveto (6095       goto bad;) show
0 96 moveto (6096     if\(\(sz = allocuvm\(pgdir, sz, ph.vaddr + ph.memsz\)\) == 0\)) show
0 84 moveto (6097       goto bad;) show
0 72 moveto (6098     if\(loaduvm\(pgdir, \(char*\)ph.vaddr, ip, ph.off, ph.filesz\) < 0\)) show
0 60 moveto (6099       goto bad;) show
0 24 moveto (Sheet 60) show
grestore
restore
showpage
%%Page: 69 69
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/exec.c  Page 2) show
0 648 moveto (6100   }) show
0 636 moveto (6101   iunlockput\(ip\);) show
0 624 moveto (6102   end_op\(\);) show
0 612 moveto (6103   ip = 0;) show
0 600 moveto (6104 ) show
0 588 moveto (6105   // Allocate two pages at the next page boundary.) show
0 576 moveto (6106   // Make the first inaccessible.  Use the second as the user stack.) show
0 564 moveto (6107   sz = PGROUNDUP\(sz\);) show
0 552 moveto (6108   if\(\(sz = allocuvm\(pgdir, sz, sz + 2*PGSIZE\)\) == 0\)) show
0 540 moveto (6109     goto bad;) show
0 528 moveto (6110   clearpteu\(pgdir, \(char*\)\(sz - 2*PGSIZE\)\);) show
0 516 moveto (6111   sp = sz;) show
0 504 moveto (6112 ) show
0 492 moveto (6113   // Push argument strings, prepare rest of stack in ustack.) show
0 480 moveto (6114   for\(argc = 0; argv[argc]; argc++\) {) show
0 468 moveto (6115     if\(argc >= MAXARG\)) show
0 456 moveto (6116       goto bad;) show
0 444 moveto (6117     sp = \(sp - \(strlen\(argv[argc]\) + 1\)\) & ~3;) show
0 432 moveto (6118     if\(copyout\(pgdir, sp, argv[argc], strlen\(argv[argc]\) + 1\) < 0\)) show
0 420 moveto (6119       goto bad;) show
0 408 moveto (6120     ustack[3+argc] = sp;) show
0 396 moveto (6121   }) show
0 384 moveto (6122   ustack[3+argc] = 0;) show
0 372 moveto (6123 ) show
0 360 moveto (6124   ustack[0] = 0xffffffff;  // fake return PC) show
0 348 moveto (6125   ustack[1] = argc;) show
0 336 moveto (6126   ustack[2] = sp - \(argc+1\)*4;  // argv pointer) show
0 324 moveto (6127 ) show
0 312 moveto (6128   sp -= \(3+argc+1\) * 4;) show
0 300 moveto (6129   if\(copyout\(pgdir, sp, ustack, \(3+argc+1\)*4\) < 0\)) show
0 288 moveto (6130     goto bad;) show
0 276 moveto (6131 ) show
0 264 moveto (6132   // Save program name for debugging.) show
0 252 moveto (6133   for\(last=s=path; *s; s++\)) show
0 240 moveto (6134     if\(*s == '/'\)) show
0 228 moveto (6135       last = s+1;) show
0 216 moveto (6136   safestrcpy\(proc->name, last, sizeof\(proc->name\)\);) show
0 204 moveto (6137 ) show
0 192 moveto (6138   // Commit to the user image.) show
0 180 moveto (6139   oldpgdir = proc->pgdir;) show
0 168 moveto (6140   proc->pgdir = pgdir;) show
0 156 moveto (6141   proc->sz = sz;) show
0 144 moveto (6142   proc->tf->eip = elf.entry;  // main) show
0 132 moveto (6143   proc->tf->esp = sp;) show
0 120 moveto (6144   switchuvm\(proc\);) show
0 108 moveto (6145   freevm\(oldpgdir\);) show
0 96 moveto (6146   return 0;) show
0 84 moveto (6147 ) show
0 72 moveto (6148 ) show
0 60 moveto (6149 ) show
0 24 moveto (Sheet 61) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/exec.c  Page 3) show
0 648 moveto (6150  bad:) show
0 636 moveto (6151   if\(pgdir\)) show
0 624 moveto (6152     freevm\(pgdir\);) show
0 612 moveto (6153   if\(ip\){) show
0 600 moveto (6154     iunlockput\(ip\);) show
0 588 moveto (6155     end_op\(\);) show
0 576 moveto (6156   }) show
0 564 moveto (6157   return -1;) show
0 552 moveto (6158 }) show
0 540 moveto (6159 ) show
0 528 moveto (6160 ) show
0 516 moveto (6161 ) show
0 504 moveto (6162 ) show
0 492 moveto (6163 ) show
0 480 moveto (6164 ) show
0 468 moveto (6165 ) show
0 456 moveto (6166 ) show
0 444 moveto (6167 ) show
0 432 moveto (6168 ) show
0 420 moveto (6169 ) show
0 408 moveto (6170 ) show
0 396 moveto (6171 ) show
0 384 moveto (6172 ) show
0 372 moveto (6173 ) show
0 360 moveto (6174 ) show
0 348 moveto (6175 ) show
0 336 moveto (6176 ) show
0 324 moveto (6177 ) show
0 312 moveto (6178 ) show
0 300 moveto (6179 ) show
0 288 moveto (6180 ) show
0 276 moveto (6181 ) show
0 264 moveto (6182 ) show
0 252 moveto (6183 ) show
0 240 moveto (6184 ) show
0 228 moveto (6185 ) show
0 216 moveto (6186 ) show
0 204 moveto (6187 ) show
0 192 moveto (6188 ) show
0 180 moveto (6189 ) show
0 168 moveto (6190 ) show
0 156 moveto (6191 ) show
0 144 moveto (6192 ) show
0 132 moveto (6193 ) show
0 120 moveto (6194 ) show
0 108 moveto (6195 ) show
0 96 moveto (6196 ) show
0 84 moveto (6197 ) show
0 72 moveto (6198 ) show
0 60 moveto (6199 ) show
0 24 moveto (Sheet 61) show
grestore
restore
showpage
%%Page: 70 70
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/pipe.c  Page 1) show
0 648 moveto (6200 #include "types.h") show
0 636 moveto (6201 #include "defs.h") show
0 624 moveto (6202 #include "param.h") show
0 612 moveto (6203 #include "mmu.h") show
0 600 moveto (6204 #include "proc.h") show
0 588 moveto (6205 #include "fs.h") show
0 576 moveto (6206 #include "file.h") show
0 564 moveto (6207 #include "spinlock.h") show
0 552 moveto (6208 ) show
0 540 moveto (6209 #define PIPESIZE 512) show
0 528 moveto (6210 ) show
0 516 moveto (6211 struct pipe {) show
0 504 moveto (6212   struct spinlock lock;) show
0 492 moveto (6213   char data[PIPESIZE];) show
0 480 moveto (6214   uint nread;     // number of bytes read) show
0 468 moveto (6215   uint nwrite;    // number of bytes written) show
0 456 moveto (6216   int readopen;   // read fd is still open) show
0 444 moveto (6217   int writeopen;  // write fd is still open) show
0 432 moveto (6218 };) show
0 420 moveto (6219 ) show
0 408 moveto (6220 int) show
0 396 moveto (6221 pipealloc\(struct file **f0, struct file **f1\)) show
0 384 moveto (6222 {) show
0 372 moveto (6223   struct pipe *p;) show
0 360 moveto (6224 ) show
0 348 moveto (6225   p = 0;) show
0 336 moveto (6226   *f0 = *f1 = 0;) show
0 324 moveto (6227   if\(\(*f0 = filealloc\(\)\) == 0 || \(*f1 = filealloc\(\)\) == 0\)) show
0 312 moveto (6228     goto bad;) show
0 300 moveto (6229   if\(\(p = \(struct pipe*\)kalloc\(\)\) == 0\)) show
0 288 moveto (6230     goto bad;) show
0 276 moveto (6231   p->readopen = 1;) show
0 264 moveto (6232   p->writeopen = 1;) show
0 252 moveto (6233   p->nwrite = 0;) show
0 240 moveto (6234   p->nread = 0;) show
0 228 moveto (6235   initlock\(&p->lock, "pipe"\);) show
0 216 moveto (6236   \(*f0\)->type = FD_PIPE;) show
0 204 moveto (6237   \(*f0\)->readable = 1;) show
0 192 moveto (6238   \(*f0\)->writable = 0;) show
0 180 moveto (6239   \(*f0\)->pipe = p;) show
0 168 moveto (6240   \(*f1\)->type = FD_PIPE;) show
0 156 moveto (6241   \(*f1\)->readable = 0;) show
0 144 moveto (6242   \(*f1\)->writable = 1;) show
0 132 moveto (6243   \(*f1\)->pipe = p;) show
0 120 moveto (6244   return 0;) show
0 108 moveto (6245 ) show
0 96 moveto (6246 ) show
0 84 moveto (6247 ) show
0 72 moveto (6248 ) show
0 60 moveto (6249 ) show
0 24 moveto (Sheet 62) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/pipe.c  Page 2) show
0 648 moveto (6250  bad:) show
0 636 moveto (6251   if\(p\)) show
0 624 moveto (6252     kfree\(\(char*\)p\);) show
0 612 moveto (6253   if\(*f0\)) show
0 600 moveto (6254     fileclose\(*f0\);) show
0 588 moveto (6255   if\(*f1\)) show
0 576 moveto (6256     fileclose\(*f1\);) show
0 564 moveto (6257   return -1;) show
0 552 moveto (6258 }) show
0 540 moveto (6259 ) show
0 528 moveto (6260 void) show
0 516 moveto (6261 pipeclose\(struct pipe *p, int writable\)) show
0 504 moveto (6262 {) show
0 492 moveto (6263   acquire\(&p->lock\);) show
0 480 moveto (6264   if\(writable\){) show
0 468 moveto (6265     p->writeopen = 0;) show
0 456 moveto (6266     wakeup\(&p->nread\);) show
0 444 moveto (6267   } else {) show
0 432 moveto (6268     p->readopen = 0;) show
0 420 moveto (6269     wakeup\(&p->nwrite\);) show
0 408 moveto (6270   }) show
0 396 moveto (6271   if\(p->readopen == 0 && p->writeopen == 0\){) show
0 384 moveto (6272     release\(&p->lock\);) show
0 372 moveto (6273     kfree\(\(char*\)p\);) show
0 360 moveto (6274   } else) show
0 348 moveto (6275     release\(&p->lock\);) show
0 336 moveto (6276 }) show
0 324 moveto (6277 ) show
0 312 moveto (6278 int) show
0 300 moveto (6279 pipewrite\(struct pipe *p, char *addr, int n\)) show
0 288 moveto (6280 {) show
0 276 moveto (6281   int i;) show
0 264 moveto (6282 ) show
0 252 moveto (6283   acquire\(&p->lock\);) show
0 240 moveto (6284   for\(i = 0; i < n; i++\){) show
0 228 moveto (6285     while\(p->nwrite == p->nread + PIPESIZE\){  ) show
0 216 moveto (6286       if\(p->readopen == 0 || proc->killed\){) show
0 204 moveto (6287         release\(&p->lock\);) show
0 192 moveto (6288         return -1;) show
0 180 moveto (6289       }) show
0 168 moveto (6290       wakeup\(&p->nread\);) show
0 156 moveto (6291       sleep\(&p->nwrite, &p->lock\);  ) show
0 144 moveto (6292     }) show
0 132 moveto (6293     p->data[p->nwrite++ % PIPESIZE] = addr[i];) show
0 120 moveto (6294   }) show
0 108 moveto (6295   wakeup\(&p->nread\);  ) show
0 96 moveto (6296   release\(&p->lock\);) show
0 84 moveto (6297   return n;) show
0 72 moveto (6298 }) show
0 60 moveto (6299 ) show
0 24 moveto (Sheet 62) show
grestore
restore
showpage
%%Page: 71 71
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/pipe.c  Page 3) show
0 648 moveto (6300 int) show
0 636 moveto (6301 piperead\(struct pipe *p, char *addr, int n\)) show
0 624 moveto (6302 {) show
0 612 moveto (6303   int i;) show
0 600 moveto (6304 ) show
0 588 moveto (6305   acquire\(&p->lock\);) show
0 576 moveto (6306   while\(p->nread == p->nwrite && p->writeopen\){  ) show
0 564 moveto (6307     if\(proc->killed\){) show
0 552 moveto (6308       release\(&p->lock\);) show
0 540 moveto (6309       return -1;) show
0 528 moveto (6310     }) show
0 516 moveto (6311     sleep\(&p->nread, &p->lock\); ) show
0 504 moveto (6312   }) show
0 492 moveto (6313   for\(i = 0; i < n; i++\){  ) show
0 480 moveto (6314     if\(p->nread == p->nwrite\)) show
0 468 moveto (6315       break;) show
0 456 moveto (6316     addr[i] = p->data[p->nread++ % PIPESIZE];) show
0 444 moveto (6317   }) show
0 432 moveto (6318   wakeup\(&p->nwrite\);  ) show
0 420 moveto (6319   release\(&p->lock\);) show
0 408 moveto (6320   return i;) show
0 396 moveto (6321 }) show
0 384 moveto (6322 ) show
0 372 moveto (6323 ) show
0 360 moveto (6324 ) show
0 348 moveto (6325 ) show
0 336 moveto (6326 ) show
0 324 moveto (6327 ) show
0 312 moveto (6328 ) show
0 300 moveto (6329 ) show
0 288 moveto (6330 ) show
0 276 moveto (6331 ) show
0 264 moveto (6332 ) show
0 252 moveto (6333 ) show
0 240 moveto (6334 ) show
0 228 moveto (6335 ) show
0 216 moveto (6336 ) show
0 204 moveto (6337 ) show
0 192 moveto (6338 ) show
0 180 moveto (6339 ) show
0 168 moveto (6340 ) show
0 156 moveto (6341 ) show
0 144 moveto (6342 ) show
0 132 moveto (6343 ) show
0 120 moveto (6344 ) show
0 108 moveto (6345 ) show
0 96 moveto (6346 ) show
0 84 moveto (6347 ) show
0 72 moveto (6348 ) show
0 60 moveto (6349 ) show
0 24 moveto (Sheet 63) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/string.c  Page 1) show
0 648 moveto (6350 #include "types.h") show
0 636 moveto (6351 #include "x86.h") show
0 624 moveto (6352 ) show
0 612 moveto (6353 void*) show
0 600 moveto (6354 memset\(void *dst, int c, uint n\)) show
0 588 moveto (6355 {) show
0 576 moveto (6356   if \(\(int\)dst%4 == 0 && n%4 == 0\){) show
0 564 moveto (6357     c &= 0xFF;) show
0 552 moveto (6358     stosl\(dst, \(c<<24\)|\(c<<16\)|\(c<<8\)|c, n/4\);) show
0 540 moveto (6359   } else) show
0 528 moveto (6360     stosb\(dst, c, n\);) show
0 516 moveto (6361   return dst;) show
0 504 moveto (6362 }) show
0 492 moveto (6363 ) show
0 480 moveto (6364 int) show
0 468 moveto (6365 memcmp\(const void *v1, const void *v2, uint n\)) show
0 456 moveto (6366 {) show
0 444 moveto (6367   const uchar *s1, *s2;) show
0 432 moveto (6368 ) show
0 420 moveto (6369   s1 = v1;) show
0 408 moveto (6370   s2 = v2;) show
0 396 moveto (6371   while\(n-- > 0\){) show
0 384 moveto (6372     if\(*s1 != *s2\)) show
0 372 moveto (6373       return *s1 - *s2;) show
0 360 moveto (6374     s1++, s2++;) show
0 348 moveto (6375   }) show
0 336 moveto (6376 ) show
0 324 moveto (6377   return 0;) show
0 312 moveto (6378 }) show
0 300 moveto (6379 ) show
0 288 moveto (6380 void*) show
0 276 moveto (6381 memmove\(void *dst, const void *src, uint n\)) show
0 264 moveto (6382 {) show
0 252 moveto (6383   const char *s;) show
0 240 moveto (6384   char *d;) show
0 228 moveto (6385 ) show
0 216 moveto (6386   s = src;) show
0 204 moveto (6387   d = dst;) show
0 192 moveto (6388   if\(s < d && s + n > d\){) show
0 180 moveto (6389     s += n;) show
0 168 moveto (6390     d += n;) show
0 156 moveto (6391     while\(n-- > 0\)) show
0 144 moveto (6392       *--d = *--s;) show
0 132 moveto (6393   } else) show
0 120 moveto (6394     while\(n-- > 0\)) show
0 108 moveto (6395       *d++ = *s++;) show
0 96 moveto (6396 ) show
0 84 moveto (6397   return dst;) show
0 72 moveto (6398 }) show
0 60 moveto (6399 ) show
0 24 moveto (Sheet 63) show
grestore
restore
showpage
%%Page: 72 72
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/string.c  Page 2) show
0 648 moveto (6400 // memcpy exists to placate GCC.  Use memmove.) show
0 636 moveto (6401 void*) show
0 624 moveto (6402 memcpy\(void *dst, const void *src, uint n\)) show
0 612 moveto (6403 {) show
0 600 moveto (6404   return memmove\(dst, src, n\);) show
0 588 moveto (6405 }) show
0 576 moveto (6406 ) show
0 564 moveto (6407 int) show
0 552 moveto (6408 strncmp\(const char *p, const char *q, uint n\)) show
0 540 moveto (6409 {) show
0 528 moveto (6410   while\(n > 0 && *p && *p == *q\)) show
0 516 moveto (6411     n--, p++, q++;) show
0 504 moveto (6412   if\(n == 0\)) show
0 492 moveto (6413     return 0;) show
0 480 moveto (6414   return \(uchar\)*p - \(uchar\)*q;) show
0 468 moveto (6415 }) show
0 456 moveto (6416 ) show
0 444 moveto (6417 char*) show
0 432 moveto (6418 strncpy\(char *s, const char *t, int n\)) show
0 420 moveto (6419 {) show
0 408 moveto (6420   char *os;) show
0 396 moveto (6421 ) show
0 384 moveto (6422   os = s;) show
0 372 moveto (6423   while\(n-- > 0 && \(*s++ = *t++\) != 0\)) show
0 360 moveto (6424     ;) show
0 348 moveto (6425   while\(n-- > 0\)) show
0 336 moveto (6426     *s++ = 0;) show
0 324 moveto (6427   return os;) show
0 312 moveto (6428 }) show
0 300 moveto (6429 ) show
0 288 moveto (6430 // Like strncpy but guaranteed to NUL-terminate.) show
0 276 moveto (6431 char*) show
0 264 moveto (6432 safestrcpy\(char *s, const char *t, int n\)) show
0 252 moveto (6433 {) show
0 240 moveto (6434   char *os;) show
0 228 moveto (6435 ) show
0 216 moveto (6436   os = s;) show
0 204 moveto (6437   if\(n <= 0\)) show
0 192 moveto (6438     return os;) show
0 180 moveto (6439   while\(--n > 0 && \(*s++ = *t++\) != 0\)) show
0 168 moveto (6440     ;) show
0 156 moveto (6441   *s = 0;) show
0 144 moveto (6442   return os;) show
0 132 moveto (6443 }) show
0 120 moveto (6444 ) show
0 108 moveto (6445 ) show
0 96 moveto (6446 ) show
0 84 moveto (6447 ) show
0 72 moveto (6448 ) show
0 60 moveto (6449 ) show
0 24 moveto (Sheet 64) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/string.c  Page 3) show
0 648 moveto (6450 int) show
0 636 moveto (6451 strlen\(const char *s\)) show
0 624 moveto (6452 {) show
0 612 moveto (6453   int n;) show
0 600 moveto (6454 ) show
0 588 moveto (6455   for\(n = 0; s[n]; n++\)) show
0 576 moveto (6456     ;) show
0 564 moveto (6457   return n;) show
0 552 moveto (6458 }) show
0 540 moveto (6459 ) show
0 528 moveto (6460 ) show
0 516 moveto (6461 ) show
0 504 moveto (6462 ) show
0 492 moveto (6463 ) show
0 480 moveto (6464 ) show
0 468 moveto (6465 ) show
0 456 moveto (6466 ) show
0 444 moveto (6467 ) show
0 432 moveto (6468 ) show
0 420 moveto (6469 ) show
0 408 moveto (6470 ) show
0 396 moveto (6471 ) show
0 384 moveto (6472 ) show
0 372 moveto (6473 ) show
0 360 moveto (6474 ) show
0 348 moveto (6475 ) show
0 336 moveto (6476 ) show
0 324 moveto (6477 ) show
0 312 moveto (6478 ) show
0 300 moveto (6479 ) show
0 288 moveto (6480 ) show
0 276 moveto (6481 ) show
0 264 moveto (6482 ) show
0 252 moveto (6483 ) show
0 240 moveto (6484 ) show
0 228 moveto (6485 ) show
0 216 moveto (6486 ) show
0 204 moveto (6487 ) show
0 192 moveto (6488 ) show
0 180 moveto (6489 ) show
0 168 moveto (6490 ) show
0 156 moveto (6491 ) show
0 144 moveto (6492 ) show
0 132 moveto (6493 ) show
0 120 moveto (6494 ) show
0 108 moveto (6495 ) show
0 96 moveto (6496 ) show
0 84 moveto (6497 ) show
0 72 moveto (6498 ) show
0 60 moveto (6499 ) show
0 24 moveto (Sheet 64) show
grestore
restore
showpage
%%Page: 73 73
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/mp.h  Page 1) show
0 648 moveto (6500 // See MultiProcessor Specification Version 1.[14]) show
0 636 moveto (6501 ) show
0 624 moveto (6502 struct mp {             // floating pointer) show
0 612 moveto (6503   uchar signature[4];           // "_MP_") show
0 600 moveto (6504   void *physaddr;               // phys addr of MP config table) show
0 588 moveto (6505   uchar length;                 // 1) show
0 576 moveto (6506   uchar specrev;                // [14]) show
0 564 moveto (6507   uchar checksum;               // all bytes must add up to 0) show
0 552 moveto (6508   uchar type;                   // MP system config type) show
0 540 moveto (6509   uchar imcrp;) show
0 528 moveto (6510   uchar reserved[3];) show
0 516 moveto (6511 };) show
0 504 moveto (6512 ) show
0 492 moveto (6513 struct mpconf {         // configuration table header) show
0 480 moveto (6514   uchar signature[4];           // "PCMP") show
0 468 moveto (6515   ushort length;                // total table length) show
0 456 moveto (6516   uchar version;                // [14]) show
0 444 moveto (6517   uchar checksum;               // all bytes must add up to 0) show
0 432 moveto (6518   uchar product[20];            // product id) show
0 420 moveto (6519   uint *oemtable;               // OEM table pointer) show
0 408 moveto (6520   ushort oemlength;             // OEM table length) show
0 396 moveto (6521   ushort entry;                 // entry count) show
0 384 moveto (6522   uint *lapicaddr;              // address of local APIC) show
0 372 moveto (6523   ushort xlength;               // extended table length) show
0 360 moveto (6524   uchar xchecksum;              // extended table checksum) show
0 348 moveto (6525   uchar reserved;) show
0 336 moveto (6526 };) show
0 324 moveto (6527 ) show
0 312 moveto (6528 struct mpproc {         // processor table entry) show
0 300 moveto (6529   uchar type;                   // entry type \(0\)) show
0 288 moveto (6530   uchar apicid;                 // local APIC id) show
0 276 moveto (6531   uchar version;                // local APIC verison) show
0 264 moveto (6532   uchar flags;                  // CPU flags) show
0 252 moveto (6533     #define MPBOOT 0x02           // This proc is the bootstrap processor.) show
0 240 moveto (6534   uchar signature[4];           // CPU signature) show
0 228 moveto (6535   uint feature;                 // feature flags from CPUID instruction) show
0 216 moveto (6536   uchar reserved[8];) show
0 204 moveto (6537 };) show
0 192 moveto (6538 ) show
0 180 moveto (6539 struct mpioapic {       // I/O APIC table entry) show
0 168 moveto (6540   uchar type;                   // entry type \(2\)) show
0 156 moveto (6541   uchar apicno;                 // I/O APIC id) show
0 144 moveto (6542   uchar version;                // I/O APIC version) show
0 132 moveto (6543   uchar flags;                  // I/O APIC flags) show
0 120 moveto (6544   uint *addr;                  // I/O APIC address) show
0 108 moveto (6545 };) show
0 96 moveto (6546 ) show
0 84 moveto (6547 ) show
0 72 moveto (6548 ) show
0 60 moveto (6549 ) show
0 24 moveto (Sheet 65) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/mp.h  Page 2) show
0 648 moveto (6550 // Table entry types) show
0 636 moveto (6551 #define MPPROC    0x00  // One per processor) show
0 624 moveto (6552 #define MPBUS     0x01  // One per bus) show
0 612 moveto (6553 #define MPIOAPIC  0x02  // One per I/O APIC) show
0 600 moveto (6554 #define MPIOINTR  0x03  // One per bus interrupt source) show
0 588 moveto (6555 #define MPLINTR   0x04  // One per system interrupt source) show
0 576 moveto (6556 ) show
0 564 moveto (6557 // Blank page.) show
0 552 moveto (6558 ) show
0 540 moveto (6559 ) show
0 528 moveto (6560 ) show
0 516 moveto (6561 ) show
0 504 moveto (6562 ) show
0 492 moveto (6563 ) show
0 480 moveto (6564 ) show
0 468 moveto (6565 ) show
0 456 moveto (6566 ) show
0 444 moveto (6567 ) show
0 432 moveto (6568 ) show
0 420 moveto (6569 ) show
0 408 moveto (6570 ) show
0 396 moveto (6571 ) show
0 384 moveto (6572 ) show
0 372 moveto (6573 ) show
0 360 moveto (6574 ) show
0 348 moveto (6575 ) show
0 336 moveto (6576 ) show
0 324 moveto (6577 ) show
0 312 moveto (6578 ) show
0 300 moveto (6579 ) show
0 288 moveto (6580 ) show
0 276 moveto (6581 ) show
0 264 moveto (6582 ) show
0 252 moveto (6583 ) show
0 240 moveto (6584 ) show
0 228 moveto (6585 ) show
0 216 moveto (6586 ) show
0 204 moveto (6587 ) show
0 192 moveto (6588 ) show
0 180 moveto (6589 ) show
0 168 moveto (6590 ) show
0 156 moveto (6591 ) show
0 144 moveto (6592 ) show
0 132 moveto (6593 ) show
0 120 moveto (6594 ) show
0 108 moveto (6595 ) show
0 96 moveto (6596 ) show
0 84 moveto (6597 ) show
0 72 moveto (6598 ) show
0 60 moveto (6599 ) show
0 24 moveto (Sheet 65) show
grestore
restore
showpage
%%Page: 74 74
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/mp.c  Page 1) show
0 648 moveto (6600 // Multiprocessor support) show
0 636 moveto (6601 // Search memory for MP description structures.) show
0 624 moveto (6602 // http://developer.intel.com/design/pentium/datashts/24201606.pdf) show
0 612 moveto (6603 ) show
0 600 moveto (6604 #include "types.h") show
0 588 moveto (6605 #include "defs.h") show
0 576 moveto (6606 #include "param.h") show
0 564 moveto (6607 #include "memlayout.h") show
0 552 moveto (6608 #include "mp.h") show
0 540 moveto (6609 #include "x86.h") show
0 528 moveto (6610 #include "mmu.h") show
0 516 moveto (6611 #include "proc.h") show
0 504 moveto (6612 ) show
0 492 moveto (6613 struct cpu cpus[NCPU];) show
0 480 moveto (6614 static struct cpu *bcpu;) show
0 468 moveto (6615 int ismp;) show
0 456 moveto (6616 int ncpu;) show
0 444 moveto (6617 uchar ioapicid;) show
0 432 moveto (6618 ) show
0 420 moveto (6619 int) show
0 408 moveto (6620 mpbcpu\(void\)) show
0 396 moveto (6621 {) show
0 384 moveto (6622   return bcpu-cpus;) show
0 372 moveto (6623 }) show
0 360 moveto (6624 ) show
0 348 moveto (6625 static uchar) show
0 336 moveto (6626 sum\(uchar *addr, int len\)) show
0 324 moveto (6627 {) show
0 312 moveto (6628   int i, sum;) show
0 300 moveto (6629 ) show
0 288 moveto (6630   sum = 0;) show
0 276 moveto (6631   for\(i=0; i<len; i++\)) show
0 264 moveto (6632     sum += addr[i];) show
0 252 moveto (6633   return sum;) show
0 240 moveto (6634 }) show
0 228 moveto (6635 ) show
0 216 moveto (6636 // Look for an MP structure in the len bytes at addr.) show
0 204 moveto (6637 static struct mp*) show
0 192 moveto (6638 mpsearch1\(uint a, int len\)) show
0 180 moveto (6639 {) show
0 168 moveto (6640   uchar *e, *p, *addr;) show
0 156 moveto (6641 ) show
0 144 moveto (6642   addr = p2v\(a\);) show
0 132 moveto (6643   e = addr+len;) show
0 120 moveto (6644   for\(p = addr; p < e; p += sizeof\(struct mp\)\)) show
0 108 moveto (6645     if\(memcmp\(p, "_MP_", 4\) == 0 && sum\(p, sizeof\(struct mp\)\) == 0\)) show
0 96 moveto (6646       return \(struct mp*\)p;) show
0 84 moveto (6647   return 0;) show
0 72 moveto (6648 }) show
0 60 moveto (6649 ) show
0 24 moveto (Sheet 66) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/mp.c  Page 2) show
0 648 moveto (6650 // Search for the MP Floating Pointer Structure, which according to the) show
0 636 moveto (6651 // spec is in one of the following three locations:) show
0 624 moveto (6652 // 1\) in the first KB of the EBDA;) show
0 612 moveto (6653 // 2\) in the last KB of system base memory;) show
0 600 moveto (6654 // 3\) in the BIOS ROM between 0xE0000 and 0xFFFFF.) show
0 588 moveto (6655 static struct mp*) show
0 576 moveto (6656 mpsearch\(void\)) show
0 564 moveto (6657 {) show
0 552 moveto (6658   uchar *bda;) show
0 540 moveto (6659   uint p;) show
0 528 moveto (6660   struct mp *mp;) show
0 516 moveto (6661 ) show
0 504 moveto (6662   bda = \(uchar *\) P2V\(0x400\);) show
0 492 moveto (6663   if\(\(p = \(\(bda[0x0F]<<8\)| bda[0x0E]\) << 4\)\){) show
0 480 moveto (6664     if\(\(mp = mpsearch1\(p, 1024\)\)\)) show
0 468 moveto (6665       return mp;) show
0 456 moveto (6666   } else {) show
0 444 moveto (6667     p = \(\(bda[0x14]<<8\)|bda[0x13]\)*1024;) show
0 432 moveto (6668     if\(\(mp = mpsearch1\(p-1024, 1024\)\)\)) show
0 420 moveto (6669       return mp;) show
0 408 moveto (6670   }) show
0 396 moveto (6671   return mpsearch1\(0xF0000, 0x10000\);) show
0 384 moveto (6672 }) show
0 372 moveto (6673 ) show
0 360 moveto (6674 // Search for an MP configuration table.  For now,) show
0 348 moveto (6675 // don't accept the default configurations \(physaddr == 0\).) show
0 336 moveto (6676 // Check for correct signature, calculate the checksum and,) show
0 324 moveto (6677 // if correct, check the version.) show
0 312 moveto (6678 // To do: check extended table checksum.) show
0 300 moveto (6679 static struct mpconf*) show
0 288 moveto (6680 mpconfig\(struct mp **pmp\)) show
0 276 moveto (6681 {) show
0 264 moveto (6682   struct mpconf *conf;) show
0 252 moveto (6683   struct mp *mp;) show
0 240 moveto (6684 ) show
0 228 moveto (6685   if\(\(mp = mpsearch\(\)\) == 0 || mp->physaddr == 0\)) show
0 216 moveto (6686     return 0;) show
0 204 moveto (6687   conf = \(struct mpconf*\) p2v\(\(uint\) mp->physaddr\);) show
0 192 moveto (6688   if\(memcmp\(conf, "PCMP", 4\) != 0\)) show
0 180 moveto (6689     return 0;) show
0 168 moveto (6690   if\(conf->version != 1 && conf->version != 4\)) show
0 156 moveto (6691     return 0;) show
0 144 moveto (6692   if\(sum\(\(uchar*\)conf, conf->length\) != 0\)) show
0 132 moveto (6693     return 0;) show
0 120 moveto (6694   *pmp = mp;) show
0 108 moveto (6695   return conf;) show
0 96 moveto (6696 }) show
0 84 moveto (6697 ) show
0 72 moveto (6698 ) show
0 60 moveto (6699 ) show
0 24 moveto (Sheet 66) show
grestore
restore
showpage
%%Page: 75 75
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/mp.c  Page 3) show
0 648 moveto (6700 void) show
0 636 moveto (6701 mpinit\(void\)) show
0 624 moveto (6702 {) show
0 612 moveto (6703   uchar *p, *e;) show
0 600 moveto (6704   struct mp *mp;) show
0 588 moveto (6705   struct mpconf *conf;) show
0 576 moveto (6706   struct mpproc *proc;) show
0 564 moveto (6707   struct mpioapic *ioapic;) show
0 552 moveto (6708 ) show
0 540 moveto (6709   bcpu = &cpus[0];) show
0 528 moveto (6710   if\(\(conf = mpconfig\(&mp\)\) == 0\)) show
0 516 moveto (6711     return;) show
0 504 moveto (6712   ismp = 1;) show
0 492 moveto (6713   lapic = \(uint*\)conf->lapicaddr;) show
0 480 moveto (6714   for\(p=\(uchar*\)\(conf+1\), e=\(uchar*\)conf+conf->length; p<e; \){) show
0 468 moveto (6715     switch\(*p\){) show
0 456 moveto (6716     case MPPROC:) show
0 444 moveto (6717       proc = \(struct mpproc*\)p;) show
0 432 moveto (6718       if\(ncpu != proc->apicid\){) show
0 420 moveto (6719         cprintf\("mpinit: ncpu=%d apicid=%d\\n", ncpu, proc->apicid\);) show
0 408 moveto (6720         ismp = 0;) show
0 396 moveto (6721       }) show
0 384 moveto (6722       if\(proc->flags & MPBOOT\)) show
0 372 moveto (6723         bcpu = &cpus[ncpu];) show
0 360 moveto (6724       cpus[ncpu].id = ncpu;) show
0 348 moveto (6725       ncpu++;) show
0 336 moveto (6726       p += sizeof\(struct mpproc\);) show
0 324 moveto (6727       continue;) show
0 312 moveto (6728     case MPIOAPIC:) show
0 300 moveto (6729       ioapic = \(struct mpioapic*\)p;) show
0 288 moveto (6730       ioapicid = ioapic->apicno;) show
0 276 moveto (6731       p += sizeof\(struct mpioapic\);) show
0 264 moveto (6732       continue;) show
0 252 moveto (6733     case MPBUS:) show
0 240 moveto (6734     case MPIOINTR:) show
0 228 moveto (6735     case MPLINTR:) show
0 216 moveto (6736       p += 8;) show
0 204 moveto (6737       continue;) show
0 192 moveto (6738     default:) show
0 180 moveto (6739       cprintf\("mpinit: unknown config type %x\\n", *p\);) show
0 168 moveto (6740       ismp = 0;) show
0 156 moveto (6741     }) show
0 144 moveto (6742   }) show
0 132 moveto (6743   if\(!ismp\){) show
0 120 moveto (6744     // Didn't like what we found; fall back to no MP.) show
0 108 moveto (6745     ncpu = 1;) show
0 96 moveto (6746     lapic = 0;) show
0 84 moveto (6747     ioapicid = 0;) show
0 72 moveto (6748     return;) show
0 60 moveto (6749   }) show
0 24 moveto (Sheet 67) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/mp.c  Page 4) show
0 648 moveto (6750   if\(mp->imcrp\){) show
0 636 moveto (6751     // Bochs doesn't support IMCR, so this doesn't run on Bochs.) show
0 624 moveto (6752     // But it would on real hardware.) show
0 612 moveto (6753     outb\(0x22, 0x70\);   // Select IMCR) show
0 600 moveto (6754     outb\(0x23, inb\(0x23\) | 1\);  // Mask external interrupts.) show
0 588 moveto (6755   }) show
0 576 moveto (6756 }) show
0 564 moveto (6757 ) show
0 552 moveto (6758 ) show
0 540 moveto (6759 ) show
0 528 moveto (6760 ) show
0 516 moveto (6761 ) show
0 504 moveto (6762 ) show
0 492 moveto (6763 ) show
0 480 moveto (6764 ) show
0 468 moveto (6765 ) show
0 456 moveto (6766 ) show
0 444 moveto (6767 ) show
0 432 moveto (6768 ) show
0 420 moveto (6769 ) show
0 408 moveto (6770 ) show
0 396 moveto (6771 ) show
0 384 moveto (6772 ) show
0 372 moveto (6773 ) show
0 360 moveto (6774 ) show
0 348 moveto (6775 ) show
0 336 moveto (6776 ) show
0 324 moveto (6777 ) show
0 312 moveto (6778 ) show
0 300 moveto (6779 ) show
0 288 moveto (6780 ) show
0 276 moveto (6781 ) show
0 264 moveto (6782 ) show
0 252 moveto (6783 ) show
0 240 moveto (6784 ) show
0 228 moveto (6785 ) show
0 216 moveto (6786 ) show
0 204 moveto (6787 ) show
0 192 moveto (6788 ) show
0 180 moveto (6789 ) show
0 168 moveto (6790 ) show
0 156 moveto (6791 ) show
0 144 moveto (6792 ) show
0 132 moveto (6793 ) show
0 120 moveto (6794 ) show
0 108 moveto (6795 ) show
0 96 moveto (6796 ) show
0 84 moveto (6797 ) show
0 72 moveto (6798 ) show
0 60 moveto (6799 ) show
0 24 moveto (Sheet 67) show
grestore
restore
showpage
%%Page: 76 76
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/lapic.c  Page 1) show
0 648 moveto (6800 // The local APIC manages internal \(non-I/O\) interrupts.) show
0 636 moveto (6801 // See Chapter 8 & Appendix C of Intel processor manual volume 3.) show
0 624 moveto (6802 // As of 7/26/2016, Intel processor manual Chapter 10 of Volume 3) show
0 612 moveto (6803 ) show
0 600 moveto (6804 #include "types.h") show
0 588 moveto (6805 #include "defs.h") show
0 576 moveto (6806 #include "date.h") show
0 564 moveto (6807 #include "memlayout.h") show
0 552 moveto (6808 #include "traps.h") show
0 540 moveto (6809 #include "mmu.h") show
0 528 moveto (6810 #include "x86.h") show
0 516 moveto (6811 ) show
0 504 moveto (6812 // Local APIC registers, divided by 4 for use as uint[] indices.) show
0 492 moveto (6813 #define ID      \(0x0020/4\)   // ID) show
0 480 moveto (6814 #define VER     \(0x0030/4\)   // Version) show
0 468 moveto (6815 #define TPR     \(0x0080/4\)   // Task Priority) show
0 456 moveto (6816 #define EOI     \(0x00B0/4\)   // EOI) show
0 444 moveto (6817 #define SVR     \(0x00F0/4\)   // Spurious Interrupt Vector) show
0 432 moveto (6818   #define ENABLE     0x00000100   // Unit Enable) show
0 420 moveto (6819 #define ESR     \(0x0280/4\)   // Error Status) show
0 408 moveto (6820 #define ICRLO   \(0x0300/4\)   // Interrupt Command) show
0 396 moveto (6821   #define INIT       0x00000500   // INIT/RESET) show
0 384 moveto (6822   #define STARTUP    0x00000600   // Startup IPI) show
0 372 moveto (6823   #define DELIVS     0x00001000   // Delivery status) show
0 360 moveto (6824   #define ASSERT     0x00004000   // Assert interrupt \(vs deassert\)) show
0 348 moveto (6825   #define DEASSERT   0x00000000) show
0 336 moveto (6826   #define LEVEL      0x00008000   // Level triggered) show
0 324 moveto (6827   #define BCAST      0x00080000   // Send to all APICs, including self.) show
0 312 moveto (6828   #define BUSY       0x00001000) show
0 300 moveto (6829   #define FIXED      0x00000000) show
0 288 moveto (6830 #define ICRHI   \(0x0310/4\)   // Interrupt Command [63:32]) show
0 276 moveto (6831 #define TIMER   \(0x0320/4\)   // Local Vector Table 0 \(TIMER\)) show
0 264 moveto (6832   #define X1         0x0000000B   // divide counts by 1) show
0 252 moveto (6833   #define PERIODIC   0x00020000   // Periodic) show
0 240 moveto (6834 #define PCINT   \(0x0340/4\)   // Performance Counter LVT) show
0 228 moveto (6835 #define LINT0   \(0x0350/4\)   // Local Vector Table 1 \(LINT0\)) show
0 216 moveto (6836 #define LINT1   \(0x0360/4\)   // Local Vector Table 2 \(LINT1\)) show
0 204 moveto (6837 #define ERROR   \(0x0370/4\)   // Local Vector Table 3 \(ERROR\)) show
0 192 moveto (6838   #define MASKED     0x00010000   // Interrupt masked) show
0 180 moveto (6839 #define TICR    \(0x0380/4\)   // Timer Initial Count) show
0 168 moveto (6840 #define TCCR    \(0x0390/4\)   // Timer Current Count) show
0 156 moveto (6841 #define TDCR    \(0x03E0/4\)   // Timer Divide Configuration) show
0 144 moveto (6842 ) show
0 132 moveto (6843 volatile uint *lapic;  // Initialized in mp.c) show
0 120 moveto (6844 ) show
0 108 moveto (6845 static void) show
0 96 moveto (6846 lapicw\(int index, int value\)) show
0 84 moveto (6847 {) show
0 72 moveto (6848   lapic[index] = value;) show
0 60 moveto (6849   lapic[ID];  // wait for write to finish, by reading) show
0 24 moveto (Sheet 68) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/lapic.c  Page 2) show
0 648 moveto (6850 }) show
0 636 moveto (6851 ) show
0 624 moveto (6852 void) show
0 612 moveto (6853 lapicinit\(void\)) show
0 600 moveto (6854 {) show
0 588 moveto (6855   if\(!lapic\)) show
0 576 moveto (6856     return;) show
0 564 moveto (6857 ) show
0 552 moveto (6858   // Enable local APIC; set spurious interrupt vector.) show
0 540 moveto (6859   lapicw\(SVR, ENABLE | \(T_IRQ0 + IRQ_SPURIOUS\)\);) show
0 528 moveto (6860 ) show
0 516 moveto (6861   // The timer repeatedly counts down at bus frequency) show
0 504 moveto (6862   // from lapic[TICR] and then issues an interrupt.) show
0 492 moveto (6863   // If xv6 cared more about precise timekeeping,) show
0 480 moveto (6864   // TICR would be calibrated using an external time source.) show
0 468 moveto (6865   lapicw\(TDCR, X1\);) show
0 456 moveto (6866   lapicw\(TIMER, PERIODIC | \(T_IRQ0 + IRQ_TIMER\)\);) show
0 444 moveto (6867   lapicw\(TICR, 10000000\);) show
0 432 moveto (6868 ) show
0 420 moveto (6869   // Disable logical interrupt lines.) show
0 408 moveto (6870   lapicw\(LINT0, MASKED\);) show
0 396 moveto (6871   lapicw\(LINT1, MASKED\);) show
0 384 moveto (6872 ) show
0 372 moveto (6873   // Disable performance counter overflow interrupts) show
0 360 moveto (6874   // on machines that provide that interrupt entry.) show
0 348 moveto (6875   if\(\(\(lapic[VER]>>16\) & 0xFF\) >= 4\)) show
0 336 moveto (6876     lapicw\(PCINT, MASKED\);) show
0 324 moveto (6877 ) show
0 312 moveto (6878   // Map error interrupt to IRQ_ERROR.) show
0 300 moveto (6879   lapicw\(ERROR, T_IRQ0 + IRQ_ERROR\);) show
0 288 moveto (6880 ) show
0 276 moveto (6881   // Clear error status register \(requires back-to-back writes\).) show
0 264 moveto (6882   lapicw\(ESR, 0\);) show
0 252 moveto (6883   lapicw\(ESR, 0\);) show
0 240 moveto (6884 ) show
0 228 moveto (6885   // Ack any outstanding interrupts.) show
0 216 moveto (6886   lapicw\(EOI, 0\);) show
0 204 moveto (6887 ) show
0 192 moveto (6888   // Send an Init Level De-Assert to synchronise arbitration ID's.) show
0 180 moveto (6889   lapicw\(ICRHI, 0\);) show
0 168 moveto (6890   lapicw\(ICRLO, BCAST | INIT | LEVEL\);) show
0 156 moveto (6891   while\(lapic[ICRLO] & DELIVS\)) show
0 144 moveto (6892     ;) show
0 132 moveto (6893 ) show
0 120 moveto (6894   // Enable interrupts on the APIC \(but not on the processor\).) show
0 108 moveto (6895   lapicw\(TPR, 0\);) show
0 96 moveto (6896 }) show
0 84 moveto (6897 ) show
0 72 moveto (6898 ) show
0 60 moveto (6899 ) show
0 24 moveto (Sheet 68) show
grestore
restore
showpage
%%Page: 77 77
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/lapic.c  Page 3) show
0 648 moveto (6900 int) show
0 636 moveto (6901 cpunum\(void\)) show
0 624 moveto (6902 {) show
0 612 moveto (6903   // Cannot call cpu when interrupts are enabled:) show
0 600 moveto (6904   // result not guaranteed to last long enough to be used!) show
0 588 moveto (6905   // Would prefer to panic but even printing is chancy here:) show
0 576 moveto (6906   // almost everything, including cprintf and panic, calls cpu,) show
0 564 moveto (6907   // often indirectly through acquire and release.) show
0 552 moveto (6908   if\(readeflags\(\)&FL_IF\){) show
0 540 moveto (6909     static int n;) show
0 528 moveto (6910     if\(n++ == 0\)) show
0 516 moveto (6911       cprintf\("cpu called from %x with interrupts enabled\\n",) show
0 504 moveto (6912         __builtin_return_address\(0\)\);) show
0 492 moveto (6913   }) show
0 480 moveto (6914 ) show
0 468 moveto (6915   if\(lapic\)) show
0 456 moveto (6916     return lapic[ID]>>24;) show
0 444 moveto (6917   return 0;) show
0 432 moveto (6918 }) show
0 420 moveto (6919 ) show
0 408 moveto (6920 // Acknowledge interrupt.) show
0 396 moveto (6921 void) show
0 384 moveto (6922 lapiceoi\(void\)) show
0 372 moveto (6923 {) show
0 360 moveto (6924   if\(lapic\)) show
0 348 moveto (6925     lapicw\(EOI, 0\);) show
0 336 moveto (6926 }) show
0 324 moveto (6927 ) show
0 312 moveto (6928 // Spin for a given number of microseconds.) show
0 300 moveto (6929 // On real hardware would want to tune this dynamically.) show
0 288 moveto (6930 void) show
0 276 moveto (6931 microdelay\(int us\)) show
0 264 moveto (6932 {) show
0 252 moveto (6933 }) show
0 240 moveto (6934 ) show
0 228 moveto (6935 #define CMOS_PORT    0x70) show
0 216 moveto (6936 #define CMOS_RETURN  0x71) show
0 204 moveto (6937 ) show
0 192 moveto (6938 // Start additional processor running entry code at addr.) show
0 180 moveto (6939 // See Appendix B of MultiProcessor Specification.) show
0 168 moveto (6940 void) show
0 156 moveto (6941 lapicstartap\(uchar apicid, uint addr\)) show
0 144 moveto (6942 {) show
0 132 moveto (6943   int i;) show
0 120 moveto (6944   ushort *wrv;) show
0 108 moveto (6945 ) show
0 96 moveto (6946   // "The BSP must initialize CMOS shutdown code to 0AH) show
0 84 moveto (6947   // and the warm reset vector \(DWORD based at 40:67\) to point at) show
0 72 moveto (6948   // the AP startup code prior to the [universal startup algorithm].") show
0 60 moveto (6949   outb\(CMOS_PORT, 0xF\);  // offset 0xF is shutdown code) show
0 24 moveto (Sheet 69) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/lapic.c  Page 4) show
0 648 moveto (6950   outb\(CMOS_PORT+1, 0x0A\);) show
0 636 moveto (6951   wrv = \(ushort*\)P2V\(\(0x40<<4 | 0x67\)\);  // Warm reset vector) show
0 624 moveto (6952   wrv[0] = 0;) show
0 612 moveto (6953   wrv[1] = addr >> 4;) show
0 600 moveto (6954 ) show
0 588 moveto (6955   // "Universal startup algorithm.") show
0 576 moveto (6956   // Send INIT \(level-triggered\) interrupt to reset other CPU.) show
0 564 moveto (6957   lapicw\(ICRHI, apicid<<24\);) show
0 552 moveto (6958   lapicw\(ICRLO, INIT | LEVEL | ASSERT\);) show
0 540 moveto (6959   microdelay\(200\);) show
0 528 moveto (6960   lapicw\(ICRLO, INIT | LEVEL\);) show
0 516 moveto (6961   microdelay\(100\);    // should be 10ms, but too slow in Bochs!) show
0 504 moveto (6962 ) show
0 492 moveto (6963   // Send startup IPI \(twice!\) to enter code.) show
0 480 moveto (6964   // Regular hardware is supposed to only accept a STARTUP) show
0 468 moveto (6965   // when it is in the halted state due to an INIT.  So the second) show
0 456 moveto (6966   // should be ignored, but it is part of the official Intel algorithm.) show
0 444 moveto (6967   // Bochs complains about the second one.  Too bad for Bochs.) show
0 432 moveto (6968   for\(i = 0; i < 2; i++\){) show
0 420 moveto (6969     lapicw\(ICRHI, apicid<<24\);) show
0 408 moveto (6970     lapicw\(ICRLO, STARTUP | \(addr>>12\)\);) show
0 396 moveto (6971     microdelay\(200\);) show
0 384 moveto (6972   }) show
0 372 moveto (6973 }) show
0 360 moveto (6974 ) show
0 348 moveto (6975 #define CMOS_STATA   0x0a) show
0 336 moveto (6976 #define CMOS_STATB   0x0b) show
0 324 moveto (6977 #define CMOS_UIP    \(1 << 7\)        // RTC update in progress) show
0 312 moveto (6978 ) show
0 300 moveto (6979 #define SECS    0x00) show
0 288 moveto (6980 #define MINS    0x02) show
0 276 moveto (6981 #define HOURS   0x04) show
0 264 moveto (6982 #define DAY     0x07) show
0 252 moveto (6983 #define MONTH   0x08) show
0 240 moveto (6984 #define YEAR    0x09) show
0 228 moveto (6985 ) show
0 216 moveto (6986 static uint cmos_read\(uint reg\)) show
0 204 moveto (6987 {) show
0 192 moveto (6988   outb\(CMOS_PORT,  reg\);) show
0 180 moveto (6989   microdelay\(200\);) show
0 168 moveto (6990 ) show
0 156 moveto (6991   return inb\(CMOS_RETURN\);) show
0 144 moveto (6992 }) show
0 132 moveto (6993 ) show
0 120 moveto (6994 ) show
0 108 moveto (6995 ) show
0 96 moveto (6996 ) show
0 84 moveto (6997 ) show
0 72 moveto (6998 ) show
0 60 moveto (6999 ) show
0 24 moveto (Sheet 69) show
grestore
restore
showpage
%%Page: 78 78
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/lapic.c  Page 5) show
0 648 moveto (7000 static void fill_rtcdate\(struct rtcdate *r\)) show
0 636 moveto (7001 {) show
0 624 moveto (7002   r->second = cmos_read\(SECS\);) show
0 612 moveto (7003   r->minute = cmos_read\(MINS\);) show
0 600 moveto (7004   r->hour   = cmos_read\(HOURS\);) show
0 588 moveto (7005   r->day    = cmos_read\(DAY\);) show
0 576 moveto (7006   r->month  = cmos_read\(MONTH\);) show
0 564 moveto (7007   r->year   = cmos_read\(YEAR\);) show
0 552 moveto (7008 }) show
0 540 moveto (7009 ) show
0 528 moveto (7010 // qemu seems to use 24-hour GWT and the values are BCD encoded) show
0 516 moveto (7011 void cmostime\(struct rtcdate *r\)) show
0 504 moveto (7012 {) show
0 492 moveto (7013   struct rtcdate t1, t2;) show
0 480 moveto (7014   int sb, bcd;) show
0 468 moveto (7015 ) show
0 456 moveto (7016   sb = cmos_read\(CMOS_STATB\);) show
0 444 moveto (7017 ) show
0 432 moveto (7018   bcd = \(sb & \(1 << 2\)\) == 0;) show
0 420 moveto (7019 ) show
0 408 moveto (7020   // make sure CMOS doesn't modify time while we read it) show
0 396 moveto (7021   for \(;;\) {) show
0 384 moveto (7022     fill_rtcdate\(&t1\);) show
0 372 moveto (7023     if \(cmos_read\(CMOS_STATA\) & CMOS_UIP\)) show
0 360 moveto (7024         continue;) show
0 348 moveto (7025     fill_rtcdate\(&t2\);) show
0 336 moveto (7026     if \(memcmp\(&t1, &t2, sizeof\(t1\)\) == 0\)) show
0 324 moveto (7027       break;) show
0 312 moveto (7028   }) show
0 300 moveto (7029 ) show
0 288 moveto (7030   // convert) show
0 276 moveto (7031   if \(bcd\) {) show
0 264 moveto (7032 #define    CONV\(x\)     \(t1.x = \(\(t1.x >> 4\) * 10\) + \(t1.x & 0xf\)\)) show
0 252 moveto (7033     CONV\(second\);) show
0 240 moveto (7034     CONV\(minute\);) show
0 228 moveto (7035     CONV\(hour  \);) show
0 216 moveto (7036     CONV\(day   \);) show
0 204 moveto (7037     CONV\(month \);) show
0 192 moveto (7038     CONV\(year  \);) show
0 180 moveto (7039 #undef     CONV) show
0 168 moveto (7040   }) show
0 156 moveto (7041 ) show
0 144 moveto (7042   *r = t1;) show
0 132 moveto (7043   r->year += 2000;) show
0 120 moveto (7044 }) show
0 108 moveto (7045 ) show
0 96 moveto (7046 ) show
0 84 moveto (7047 ) show
0 72 moveto (7048 ) show
0 60 moveto (7049 ) show
0 24 moveto (Sheet 70) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/ioapic.c  Page 1) show
0 648 moveto (7050 // The I/O APIC manages hardware interrupts for an SMP system.) show
0 636 moveto (7051 // http://www.intel.com/design/chipsets/datashts/29056601.pdf) show
0 624 moveto (7052 // See also picirq.c.) show
0 612 moveto (7053 ) show
0 600 moveto (7054 #include "types.h") show
0 588 moveto (7055 #include "defs.h") show
0 576 moveto (7056 #include "traps.h") show
0 564 moveto (7057 ) show
0 552 moveto (7058 #define IOAPIC  0xFEC00000   // Default physical address of IO APIC) show
0 540 moveto (7059 ) show
0 528 moveto (7060 #define REG_ID     0x00  // Register index: ID) show
0 516 moveto (7061 #define REG_VER    0x01  // Register index: version) show
0 504 moveto (7062 #define REG_TABLE  0x10  // Redirection table base) show
0 492 moveto (7063 ) show
0 480 moveto (7064 // The redirection table starts at REG_TABLE and uses) show
0 468 moveto (7065 // two registers to configure each interrupt.) show
0 456 moveto (7066 // The first \(low\) register in a pair contains configuration bits.) show
0 444 moveto (7067 // The second \(high\) register contains a bitmask telling which) show
0 432 moveto (7068 // CPUs can serve that interrupt.) show
0 420 moveto (7069 #define INT_DISABLED   0x00010000  // Interrupt disabled) show
0 408 moveto (7070 #define INT_LEVEL      0x00008000  // Level-triggered \(vs edge-\)) show
0 396 moveto (7071 #define INT_ACTIVELOW  0x00002000  // Active low \(vs high\)) show
0 384 moveto (7072 #define INT_LOGICAL    0x00000800  // Destination is CPU id \(vs APIC ID\)) show
0 372 moveto (7073 ) show
0 360 moveto (7074 volatile struct ioapic *ioapic;) show
0 348 moveto (7075 ) show
0 336 moveto (7076 // IO APIC MMIO structure: write reg, then read or write data.) show
0 324 moveto (7077 struct ioapic {) show
0 312 moveto (7078   uint reg;) show
0 300 moveto (7079   uint pad[3];) show
0 288 moveto (7080   uint data;) show
0 276 moveto (7081 };) show
0 264 moveto (7082 ) show
0 252 moveto (7083 static uint) show
0 240 moveto (7084 ioapicread\(int reg\)) show
0 228 moveto (7085 {) show
0 216 moveto (7086   ioapic->reg = reg;) show
0 204 moveto (7087   return ioapic->data;) show
0 192 moveto (7088 }) show
0 180 moveto (7089 ) show
0 168 moveto (7090 static void) show
0 156 moveto (7091 ioapicwrite\(int reg, uint data\)) show
0 144 moveto (7092 {) show
0 132 moveto (7093   ioapic->reg = reg;) show
0 120 moveto (7094   ioapic->data = data;) show
0 108 moveto (7095 }) show
0 96 moveto (7096 ) show
0 84 moveto (7097 ) show
0 72 moveto (7098 ) show
0 60 moveto (7099 ) show
0 24 moveto (Sheet 70) show
grestore
restore
showpage
%%Page: 79 79
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/ioapic.c  Page 2) show
0 648 moveto (7100 void) show
0 636 moveto (7101 ioapicinit\(void\)) show
0 624 moveto (7102 {) show
0 612 moveto (7103   int i, id, maxintr;) show
0 600 moveto (7104 ) show
0 588 moveto (7105   if\(!ismp\)) show
0 576 moveto (7106     return;) show
0 564 moveto (7107 ) show
0 552 moveto (7108   ioapic = \(volatile struct ioapic*\)IOAPIC;) show
0 540 moveto (7109   maxintr = \(ioapicread\(REG_VER\) >> 16\) & 0xFF;) show
0 528 moveto (7110   id = ioapicread\(REG_ID\) >> 24;) show
0 516 moveto (7111   if\(id != ioapicid\)) show
0 504 moveto (7112     cprintf\("ioapicinit: id isn't equal to ioapicid; not a MP\\n"\);) show
0 492 moveto (7113 ) show
0 480 moveto (7114   // Mark all interrupts edge-triggered, active high, disabled,) show
0 468 moveto (7115   // and not routed to any CPUs.) show
0 456 moveto (7116   for\(i = 0; i <= maxintr; i++\){) show
0 444 moveto (7117     ioapicwrite\(REG_TABLE+2*i, INT_DISABLED | \(T_IRQ0 + i\)\);) show
0 432 moveto (7118     ioapicwrite\(REG_TABLE+2*i+1, 0\);) show
0 420 moveto (7119   }) show
0 408 moveto (7120 }) show
0 396 moveto (7121 ) show
0 384 moveto (7122 void) show
0 372 moveto (7123 ioapicenable\(int irq, int cpunum\)) show
0 360 moveto (7124 {) show
0 348 moveto (7125   if\(!ismp\)) show
0 336 moveto (7126     return;) show
0 324 moveto (7127 ) show
0 312 moveto (7128   // Mark interrupt edge-triggered, active high,) show
0 300 moveto (7129   // enabled, and routed to the given cpunum,) show
0 288 moveto (7130   // which happens to be that cpu's APIC ID.) show
0 276 moveto (7131   ioapicwrite\(REG_TABLE+2*irq, T_IRQ0 + irq\);) show
0 264 moveto (7132   ioapicwrite\(REG_TABLE+2*irq+1, cpunum << 24\);) show
0 252 moveto (7133 }) show
0 240 moveto (7134 ) show
0 228 moveto (7135 ) show
0 216 moveto (7136 ) show
0 204 moveto (7137 ) show
0 192 moveto (7138 ) show
0 180 moveto (7139 ) show
0 168 moveto (7140 ) show
0 156 moveto (7141 ) show
0 144 moveto (7142 ) show
0 132 moveto (7143 ) show
0 120 moveto (7144 ) show
0 108 moveto (7145 ) show
0 96 moveto (7146 ) show
0 84 moveto (7147 ) show
0 72 moveto (7148 ) show
0 60 moveto (7149 ) show
0 24 moveto (Sheet 71) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/picirq.c  Page 1) show
0 648 moveto (7150 // Intel 8259A programmable interrupt controllers.) show
0 636 moveto (7151 ) show
0 624 moveto (7152 #include "types.h") show
0 612 moveto (7153 #include "x86.h") show
0 600 moveto (7154 #include "traps.h") show
0 588 moveto (7155 ) show
0 576 moveto (7156 // I/O Addresses of the two programmable interrupt controllers) show
0 564 moveto (7157 #define IO_PIC1         0x20    // Master \(IRQs 0-7\)) show
0 552 moveto (7158 #define IO_PIC2         0xA0    // Slave \(IRQs 8-15\)) show
0 540 moveto (7159 ) show
0 528 moveto (7160 #define IRQ_SLAVE       2       // IRQ at which slave connects to master) show
0 516 moveto (7161 ) show
0 504 moveto (7162 // Current IRQ mask.) show
0 492 moveto (7163 // Initial IRQ mask has interrupt 2 enabled \(for slave 8259A\).) show
0 480 moveto (7164 static ushort irqmask = 0xFFFF & ~\(1<<IRQ_SLAVE\);) show
0 468 moveto (7165 ) show
0 456 moveto (7166 static void) show
0 444 moveto (7167 picsetmask\(ushort mask\)) show
0 432 moveto (7168 {) show
0 420 moveto (7169   irqmask = mask;) show
0 408 moveto (7170   outb\(IO_PIC1+1, mask\);) show
0 396 moveto (7171   outb\(IO_PIC2+1, mask >> 8\);) show
0 384 moveto (7172 }) show
0 372 moveto (7173 ) show
0 360 moveto (7174 void) show
0 348 moveto (7175 picenable\(int irq\)) show
0 336 moveto (7176 {) show
0 324 moveto (7177   picsetmask\(irqmask & ~\(1<<irq\)\);) show
0 312 moveto (7178 }) show
0 300 moveto (7179 ) show
0 288 moveto (7180 // Initialize the 8259A interrupt controllers.) show
0 276 moveto (7181 void) show
0 264 moveto (7182 picinit\(void\)) show
0 252 moveto (7183 {) show
0 240 moveto (7184   // mask all interrupts) show
0 228 moveto (7185   outb\(IO_PIC1+1, 0xFF\);) show
0 216 moveto (7186   outb\(IO_PIC2+1, 0xFF\);) show
0 204 moveto (7187 ) show
0 192 moveto (7188   // Set up master \(8259A-1\)) show
0 180 moveto (7189 ) show
0 168 moveto (7190   // ICW1:  0001g0hi) show
0 156 moveto (7191   //    g:  0 = edge triggering, 1 = level triggering) show
0 144 moveto (7192   //    h:  0 = cascaded PICs, 1 = master only) show
0 132 moveto (7193   //    i:  0 = no ICW4, 1 = ICW4 required) show
0 120 moveto (7194   outb\(IO_PIC1, 0x11\);) show
0 108 moveto (7195 ) show
0 96 moveto (7196   // ICW2:  Vector offset) show
0 84 moveto (7197   outb\(IO_PIC1+1, T_IRQ0\);) show
0 72 moveto (7198 ) show
0 60 moveto (7199 ) show
0 24 moveto (Sheet 71) show
grestore
restore
showpage
%%Page: 80 80
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/picirq.c  Page 2) show
0 648 moveto (7200   // ICW3:  \(master PIC\) bit mask of IR lines connected to slaves) show
0 636 moveto (7201   //        \(slave PIC\) 3-bit # of slave's connection to master) show
0 624 moveto (7202   outb\(IO_PIC1+1, 1<<IRQ_SLAVE\);) show
0 612 moveto (7203 ) show
0 600 moveto (7204   // ICW4:  000nbmap) show
0 588 moveto (7205   //    n:  1 = special fully nested mode) show
0 576 moveto (7206   //    b:  1 = buffered mode) show
0 564 moveto (7207   //    m:  0 = slave PIC, 1 = master PIC) show
0 552 moveto (7208   //      \(ignored when b is 0, as the master/slave role) show
0 540 moveto (7209   //      can be hardwired\).) show
0 528 moveto (7210   //    a:  1 = Automatic EOI mode) show
0 516 moveto (7211   //    p:  0 = MCS-80/85 mode, 1 = intel x86 mode) show
0 504 moveto (7212   outb\(IO_PIC1+1, 0x3\);) show
0 492 moveto (7213 ) show
0 480 moveto (7214   // Set up slave \(8259A-2\)) show
0 468 moveto (7215   outb\(IO_PIC2, 0x11\);                  // ICW1) show
0 456 moveto (7216   outb\(IO_PIC2+1, T_IRQ0 + 8\);      // ICW2) show
0 444 moveto (7217   outb\(IO_PIC2+1, IRQ_SLAVE\);           // ICW3) show
0 432 moveto (7218   // NB Automatic EOI mode doesn't tend to work on the slave.) show
0 420 moveto (7219   // Linux source code says it's "to be investigated".) show
0 408 moveto (7220   outb\(IO_PIC2+1, 0x3\);                 // ICW4) show
0 396 moveto (7221 ) show
0 384 moveto (7222   // OCW3:  0ef01prs) show
0 372 moveto (7223   //   ef:  0x = NOP, 10 = clear specific mask, 11 = set specific mask) show
0 360 moveto (7224   //    p:  0 = no polling, 1 = polling mode) show
0 348 moveto (7225   //   rs:  0x = NOP, 10 = read IRR, 11 = read ISR) show
0 336 moveto (7226   outb\(IO_PIC1, 0x68\);             // clear specific mask) show
0 324 moveto (7227   outb\(IO_PIC1, 0x0a\);             // read IRR by default) show
0 312 moveto (7228 ) show
0 300 moveto (7229   outb\(IO_PIC2, 0x68\);             // OCW3) show
0 288 moveto (7230   outb\(IO_PIC2, 0x0a\);             // OCW3) show
0 276 moveto (7231 ) show
0 264 moveto (7232   if\(irqmask != 0xFFFF\)) show
0 252 moveto (7233     picsetmask\(irqmask\);) show
0 240 moveto (7234 }) show
0 228 moveto (7235 ) show
0 216 moveto (7236 ) show
0 204 moveto (7237 ) show
0 192 moveto (7238 ) show
0 180 moveto (7239 ) show
0 168 moveto (7240 ) show
0 156 moveto (7241 ) show
0 144 moveto (7242 ) show
0 132 moveto (7243 ) show
0 120 moveto (7244 ) show
0 108 moveto (7245 ) show
0 96 moveto (7246 ) show
0 84 moveto (7247 ) show
0 72 moveto (7248 ) show
0 60 moveto (7249 ) show
0 24 moveto (Sheet 72) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/kbd.h  Page 1) show
0 648 moveto (7250 // PC keyboard interface constants) show
0 636 moveto (7251 ) show
0 624 moveto (7252 #define KBSTATP         0x64    // kbd controller status port\(I\)) show
0 612 moveto (7253 #define KBS_DIB         0x01    // kbd data in buffer) show
0 600 moveto (7254 #define KBDATAP         0x60    // kbd data port\(I\)) show
0 588 moveto (7255 ) show
0 576 moveto (7256 #define NO              0) show
0 564 moveto (7257 ) show
0 552 moveto (7258 #define SHIFT           \(1<<0\)) show
0 540 moveto (7259 #define CTL             \(1<<1\)) show
0 528 moveto (7260 #define ALT             \(1<<2\)) show
0 516 moveto (7261 ) show
0 504 moveto (7262 #define CAPSLOCK        \(1<<3\)) show
0 492 moveto (7263 #define NUMLOCK         \(1<<4\)) show
0 480 moveto (7264 #define SCROLLLOCK      \(1<<5\)) show
0 468 moveto (7265 ) show
0 456 moveto (7266 #define E0ESC           \(1<<6\)) show
0 444 moveto (7267 ) show
0 432 moveto (7268 // Special keycodes) show
0 420 moveto (7269 #define KEY_HOME        0xE0) show
0 408 moveto (7270 #define KEY_END         0xE1) show
0 396 moveto (7271 #define KEY_UP          0xE2) show
0 384 moveto (7272 #define KEY_DN          0xE3) show
0 372 moveto (7273 #define KEY_LF          0xE4) show
0 360 moveto (7274 #define KEY_RT          0xE5) show
0 348 moveto (7275 #define KEY_PGUP        0xE6) show
0 336 moveto (7276 #define KEY_PGDN        0xE7) show
0 324 moveto (7277 #define KEY_INS         0xE8) show
0 312 moveto (7278 #define KEY_DEL         0xE9) show
0 300 moveto (7279 ) show
0 288 moveto (7280 // C\('A'\) == Control-A) show
0 276 moveto (7281 #define C\(x\) \(x - '@'\)) show
0 264 moveto (7282 ) show
0 252 moveto (7283 static uchar shiftcode[256] =) show
0 240 moveto (7284 {) show
0 228 moveto (7285   [0x1D] CTL,) show
0 216 moveto (7286   [0x2A] SHIFT,) show
0 204 moveto (7287   [0x36] SHIFT,) show
0 192 moveto (7288   [0x38] ALT,) show
0 180 moveto (7289   [0x9D] CTL,) show
0 168 moveto (7290   [0xB8] ALT) show
0 156 moveto (7291 };) show
0 144 moveto (7292 ) show
0 132 moveto (7293 static uchar togglecode[256] =) show
0 120 moveto (7294 {) show
0 108 moveto (7295   [0x3A] CAPSLOCK,) show
0 96 moveto (7296   [0x45] NUMLOCK,) show
0 84 moveto (7297   [0x46] SCROLLLOCK) show
0 72 moveto (7298 };) show
0 60 moveto (7299 ) show
0 24 moveto (Sheet 72) show
grestore
restore
showpage
%%Page: 81 81
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/kbd.h  Page 2) show
0 648 moveto (7300 static uchar normalmap[256] =) show
0 636 moveto (7301 {) show
0 624 moveto (7302   NO,   0x1B, '1',  '2',  '3',  '4',  '5',  '6',  // 0x00) show
0 612 moveto (7303   '7',  '8',  '9',  '0',  '-',  '=',  '\\b', '\\t',) show
0 600 moveto (7304   'q',  'w',  'e',  'r',  't',  'y',  'u',  'i',  // 0x10) show
0 588 moveto (7305   'o',  'p',  '[',  ']',  '\\n', NO,   'a',  's',) show
0 576 moveto (7306   'd',  'f',  'g',  'h',  'j',  'k',  'l',  ';',  // 0x20) show
0 564 moveto (7307   '\\'', '`',  NO,   '\\\\', 'z',  'x',  'c',  'v',) show
0 552 moveto (7308   'b',  'n',  'm',  ',',  '.',  '/',  NO,   '*',  // 0x30) show
0 540 moveto (7309   NO,   ' ',  NO,   NO,   NO,   NO,   NO,   NO,) show
0 528 moveto (7310   NO,   NO,   NO,   NO,   NO,   NO,   NO,   '7',  // 0x40) show
0 516 moveto (7311   '8',  '9',  '-',  '4',  '5',  '6',  '+',  '1',) show
0 504 moveto (7312   '2',  '3',  '0',  '.',  NO,   NO,   NO,   NO,   // 0x50) show
0 492 moveto (7313   [0x9C] '\\n',      // KP_Enter) show
0 480 moveto (7314   [0xB5] '/',       // KP_Div) show
0 468 moveto (7315   [0xC8] KEY_UP,    [0xD0] KEY_DN,) show
0 456 moveto (7316   [0xC9] KEY_PGUP,  [0xD1] KEY_PGDN,) show
0 444 moveto (7317   [0xCB] KEY_LF,    [0xCD] KEY_RT,) show
0 432 moveto (7318   [0x97] KEY_HOME,  [0xCF] KEY_END,) show
0 420 moveto (7319   [0xD2] KEY_INS,   [0xD3] KEY_DEL) show
0 408 moveto (7320 };) show
0 396 moveto (7321 ) show
0 384 moveto (7322 static uchar shiftmap[256] =) show
0 372 moveto (7323 {) show
0 360 moveto (7324   NO,   033,  '!',  '@',  '#',  '$',  '%',  '^',  // 0x00) show
0 348 moveto (7325   '&',  '*',  '\(',  '\)',  '_',  '+',  '\\b', '\\t',) show
0 336 moveto (7326   'Q',  'W',  'E',  'R',  'T',  'Y',  'U',  'I',  // 0x10) show
0 324 moveto (7327   'O',  'P',  '{',  '}',  '\\n', NO,   'A',  'S',) show
0 312 moveto (7328   'D',  'F',  'G',  'H',  'J',  'K',  'L',  ':',  // 0x20) show
0 300 moveto (7329   '"',  '~',  NO,   '|',  'Z',  'X',  'C',  'V',) show
0 288 moveto (7330   'B',  'N',  'M',  '<',  '>',  '?',  NO,   '*',  // 0x30) show
0 276 moveto (7331   NO,   ' ',  NO,   NO,   NO,   NO,   NO,   NO,) show
0 264 moveto (7332   NO,   NO,   NO,   NO,   NO,   NO,   NO,   '7',  // 0x40) show
0 252 moveto (7333   '8',  '9',  '-',  '4',  '5',  '6',  '+',  '1',) show
0 240 moveto (7334   '2',  '3',  '0',  '.',  NO,   NO,   NO,   NO,   // 0x50) show
0 228 moveto (7335   [0x9C] '\\n',      // KP_Enter) show
0 216 moveto (7336   [0xB5] '/',       // KP_Div) show
0 204 moveto (7337   [0xC8] KEY_UP,    [0xD0] KEY_DN,) show
0 192 moveto (7338   [0xC9] KEY_PGUP,  [0xD1] KEY_PGDN,) show
0 180 moveto (7339   [0xCB] KEY_LF,    [0xCD] KEY_RT,) show
0 168 moveto (7340   [0x97] KEY_HOME,  [0xCF] KEY_END,) show
0 156 moveto (7341   [0xD2] KEY_INS,   [0xD3] KEY_DEL) show
0 144 moveto (7342 };) show
0 132 moveto (7343 ) show
0 120 moveto (7344 ) show
0 108 moveto (7345 ) show
0 96 moveto (7346 ) show
0 84 moveto (7347 ) show
0 72 moveto (7348 ) show
0 60 moveto (7349 ) show
0 24 moveto (Sheet 73) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/kbd.h  Page 3) show
0 648 moveto (7350 static uchar ctlmap[256] =) show
0 636 moveto (7351 {) show
0 624 moveto (7352   NO,      NO,      NO,      NO,      NO,      NO,      NO,      NO,) show
0 612 moveto (7353   NO,      NO,      NO,      NO,      NO,      NO,      NO,      NO,) show
0 600 moveto (7354   C\('Q'\),  C\('W'\),  C\('E'\),  C\('R'\),  C\('T'\),  C\('Y'\),  C\('U'\),  C\('I'\),) show
0 588 moveto (7355   C\('O'\),  C\('P'\),  NO,      NO,      '\\r',    NO,      C\('A'\),  C\('S'\),) show
0 576 moveto (7356   C\('D'\),  C\('F'\),  C\('G'\),  C\('H'\),  C\('J'\),  C\('K'\),  C\('L'\),  NO,) show
0 564 moveto (7357   NO,      NO,      NO,      C\('\\\\'\), C\('Z'\),  C\('X'\),  C\('C'\),  C\('V'\),) show
0 552 moveto (7358   C\('B'\),  C\('N'\),  C\('M'\),  NO,      NO,      C\('/'\),  NO,      NO,) show
0 540 moveto (7359   [0x9C] '\\r',      // KP_Enter) show
0 528 moveto (7360   [0xB5] C\('/'\),    // KP_Div) show
0 516 moveto (7361   [0xC8] KEY_UP,    [0xD0] KEY_DN,) show
0 504 moveto (7362   [0xC9] KEY_PGUP,  [0xD1] KEY_PGDN,) show
0 492 moveto (7363   [0xCB] KEY_LF,    [0xCD] KEY_RT,) show
0 480 moveto (7364   [0x97] KEY_HOME,  [0xCF] KEY_END,) show
0 468 moveto (7365   [0xD2] KEY_INS,   [0xD3] KEY_DEL) show
0 456 moveto (7366 };) show
0 444 moveto (7367 ) show
0 432 moveto (7368 ) show
0 420 moveto (7369 ) show
0 408 moveto (7370 ) show
0 396 moveto (7371 ) show
0 384 moveto (7372 ) show
0 372 moveto (7373 ) show
0 360 moveto (7374 ) show
0 348 moveto (7375 ) show
0 336 moveto (7376 ) show
0 324 moveto (7377 ) show
0 312 moveto (7378 ) show
0 300 moveto (7379 ) show
0 288 moveto (7380 ) show
0 276 moveto (7381 ) show
0 264 moveto (7382 ) show
0 252 moveto (7383 ) show
0 240 moveto (7384 ) show
0 228 moveto (7385 ) show
0 216 moveto (7386 ) show
0 204 moveto (7387 ) show
0 192 moveto (7388 ) show
0 180 moveto (7389 ) show
0 168 moveto (7390 ) show
0 156 moveto (7391 ) show
0 144 moveto (7392 ) show
0 132 moveto (7393 ) show
0 120 moveto (7394 ) show
0 108 moveto (7395 ) show
0 96 moveto (7396 ) show
0 84 moveto (7397 ) show
0 72 moveto (7398 ) show
0 60 moveto (7399 ) show
0 24 moveto (Sheet 73) show
grestore
restore
showpage
%%Page: 82 82
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/kbd.c  Page 1) show
0 648 moveto (7400 #include "types.h") show
0 636 moveto (7401 #include "x86.h") show
0 624 moveto (7402 #include "defs.h") show
0 612 moveto (7403 #include "kbd.h") show
0 600 moveto (7404 ) show
0 588 moveto (7405 int) show
0 576 moveto (7406 kbdgetc\(void\)) show
0 564 moveto (7407 {) show
0 552 moveto (7408   static uint shift;) show
0 540 moveto (7409   static uchar *charcode[4] = {) show
0 528 moveto (7410     normalmap, shiftmap, ctlmap, ctlmap) show
0 516 moveto (7411   };) show
0 504 moveto (7412   uint st, data, c;) show
0 492 moveto (7413 ) show
0 480 moveto (7414   st = inb\(KBSTATP\);) show
0 468 moveto (7415   if\(\(st & KBS_DIB\) == 0\)) show
0 456 moveto (7416     return -1;) show
0 444 moveto (7417   data = inb\(KBDATAP\);) show
0 432 moveto (7418 ) show
0 420 moveto (7419   if\(data == 0xE0\){) show
0 408 moveto (7420     shift |= E0ESC;) show
0 396 moveto (7421     return 0;) show
0 384 moveto (7422   } else if\(data & 0x80\){) show
0 372 moveto (7423     // Key released) show
0 360 moveto (7424     data = \(shift & E0ESC ? data : data & 0x7F\);) show
0 348 moveto (7425     shift &= ~\(shiftcode[data] | E0ESC\);) show
0 336 moveto (7426     return 0;) show
0 324 moveto (7427   } else if\(shift & E0ESC\){) show
0 312 moveto (7428     // Last character was an E0 escape; or with 0x80) show
0 300 moveto (7429     data |= 0x80;) show
0 288 moveto (7430     shift &= ~E0ESC;) show
0 276 moveto (7431   }) show
0 264 moveto (7432 ) show
0 252 moveto (7433   shift |= shiftcode[data];) show
0 240 moveto (7434   shift ^= togglecode[data];) show
0 228 moveto (7435   c = charcode[shift & \(CTL | SHIFT\)][data];) show
0 216 moveto (7436   if\(shift & CAPSLOCK\){) show
0 204 moveto (7437     if\('a' <= c && c <= 'z'\)) show
0 192 moveto (7438       c += 'A' - 'a';) show
0 180 moveto (7439     else if\('A' <= c && c <= 'Z'\)) show
0 168 moveto (7440       c += 'a' - 'A';) show
0 156 moveto (7441   }) show
0 144 moveto (7442   return c;) show
0 132 moveto (7443 }) show
0 120 moveto (7444 ) show
0 108 moveto (7445 void) show
0 96 moveto (7446 kbdintr\(void\)) show
0 84 moveto (7447 {) show
0 72 moveto (7448   consoleintr\(kbdgetc\);) show
0 60 moveto (7449 }) show
0 24 moveto (Sheet 74) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/console.c  Page 1) show
0 648 moveto (7450 // Console input and output.) show
0 636 moveto (7451 // Input is from the keyboard or serial port.) show
0 624 moveto (7452 // Output is written to the screen and serial port.) show
0 612 moveto (7453 ) show
0 600 moveto (7454 #include "types.h") show
0 588 moveto (7455 #include "defs.h") show
0 576 moveto (7456 #include "param.h") show
0 564 moveto (7457 #include "traps.h") show
0 552 moveto (7458 #include "spinlock.h") show
0 540 moveto (7459 #include "fs.h") show
0 528 moveto (7460 #include "file.h") show
0 516 moveto (7461 #include "memlayout.h") show
0 504 moveto (7462 #include "mmu.h") show
0 492 moveto (7463 #include "proc.h") show
0 480 moveto (7464 #include "x86.h") show
0 468 moveto (7465 ) show
0 456 moveto (7466 static void consputc\(int\);) show
0 444 moveto (7467 ) show
0 432 moveto (7468 static int panicked = 0;) show
0 420 moveto (7469 ) show
0 408 moveto (7470 static struct {) show
0 396 moveto (7471   struct spinlock lock;) show
0 384 moveto (7472   int locking;) show
0 372 moveto (7473 } cons;) show
0 360 moveto (7474 ) show
0 348 moveto (7475 static void) show
0 336 moveto (7476 printint\(int xx, int base, int sign\)) show
0 324 moveto (7477 {) show
0 312 moveto (7478   static char digits[] = "0123456789abcdef";) show
0 300 moveto (7479   char buf[16];) show
0 288 moveto (7480   int i;) show
0 276 moveto (7481   uint x;) show
0 264 moveto (7482 ) show
0 252 moveto (7483   if\(sign && \(sign = xx < 0\)\)) show
0 240 moveto (7484     x = -xx;) show
0 228 moveto (7485   else) show
0 216 moveto (7486     x = xx;) show
0 204 moveto (7487 ) show
0 192 moveto (7488   i = 0;) show
0 180 moveto (7489   do{) show
0 168 moveto (7490     buf[i++] = digits[x % base];) show
0 156 moveto (7491   }while\(\(x /= base\) != 0\);) show
0 144 moveto (7492 ) show
0 132 moveto (7493   if\(sign\)) show
0 120 moveto (7494     buf[i++] = '-';) show
0 108 moveto (7495 ) show
0 96 moveto (7496   while\(--i >= 0\)) show
0 84 moveto (7497     consputc\(buf[i]\);) show
0 72 moveto (7498 }) show
0 60 moveto (7499 ) show
0 24 moveto (Sheet 74) show
grestore
restore
showpage
%%Page: 83 83
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/console.c  Page 2) show
0 648 moveto (7500 // Print to the console. only understands %d, %x, %p, %s.) show
0 636 moveto (7501 void) show
0 624 moveto (7502 cprintf\(char *fmt, ...\)) show
0 612 moveto (7503 {) show
0 600 moveto (7504   int i, c, locking;) show
0 588 moveto (7505   uint *argp;) show
0 576 moveto (7506   char *s;) show
0 564 moveto (7507 ) show
0 552 moveto (7508   locking = cons.locking;) show
0 540 moveto (7509   if\(locking\)) show
0 528 moveto (7510     acquire\(&cons.lock\);) show
0 516 moveto (7511 ) show
0 504 moveto (7512   if \(fmt == 0\)) show
0 492 moveto (7513     panic\("null fmt"\);) show
0 480 moveto (7514 ) show
0 468 moveto (7515   argp = \(uint*\)\(void*\)\(&fmt + 1\);) show
0 456 moveto (7516   for\(i = 0; \(c = fmt[i] & 0xff\) != 0; i++\){) show
0 444 moveto (7517     if\(c != '%'\){) show
0 432 moveto (7518       consputc\(c\);) show
0 420 moveto (7519       continue;) show
0 408 moveto (7520     }) show
0 396 moveto (7521     c = fmt[++i] & 0xff;) show
0 384 moveto (7522     if\(c == 0\)) show
0 372 moveto (7523       break;) show
0 360 moveto (7524     switch\(c\){) show
0 348 moveto (7525     case 'd':) show
0 336 moveto (7526       printint\(*argp++, 10, 1\);) show
0 324 moveto (7527       break;) show
0 312 moveto (7528     case 'x':) show
0 300 moveto (7529     case 'p':) show
0 288 moveto (7530       printint\(*argp++, 16, 0\);) show
0 276 moveto (7531       break;) show
0 264 moveto (7532     case 's':) show
0 252 moveto (7533       if\(\(s = \(char*\)*argp++\) == 0\)) show
0 240 moveto (7534         s = "\(null\)";) show
0 228 moveto (7535       for\(; *s; s++\)) show
0 216 moveto (7536         consputc\(*s\);) show
0 204 moveto (7537       break;) show
0 192 moveto (7538     case '%':) show
0 180 moveto (7539       consputc\('%'\);) show
0 168 moveto (7540       break;) show
0 156 moveto (7541     default:) show
0 144 moveto (7542       // Print unknown % sequence to draw attention.) show
0 132 moveto (7543       consputc\('%'\);) show
0 120 moveto (7544       consputc\(c\);) show
0 108 moveto (7545       break;) show
0 96 moveto (7546     }) show
0 84 moveto (7547   }) show
0 72 moveto (7548 ) show
0 60 moveto (7549 ) show
0 24 moveto (Sheet 75) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/console.c  Page 3) show
0 648 moveto (7550   if\(locking\)) show
0 636 moveto (7551     release\(&cons.lock\);) show
0 624 moveto (7552 }) show
0 612 moveto (7553 ) show
0 600 moveto (7554 void) show
0 588 moveto (7555 panic\(char *s\)) show
0 576 moveto (7556 {) show
0 564 moveto (7557   int i;) show
0 552 moveto (7558   uint pcs[10];) show
0 540 moveto (7559 ) show
0 528 moveto (7560   cli\(\);) show
0 516 moveto (7561   cons.locking = 0;) show
0 504 moveto (7562   cprintf\("cpu%d: panic: ", cpu->id\);) show
0 492 moveto (7563   cprintf\(s\);) show
0 480 moveto (7564   cprintf\("\\n"\);) show
0 468 moveto (7565   getcallerpcs\(&s, pcs\);) show
0 456 moveto (7566   for\(i=0; i<10; i++\)) show
0 444 moveto (7567     cprintf\(" %p", pcs[i]\);) show
0 432 moveto (7568   panicked = 1; // freeze other CPU) show
0 420 moveto (7569   for\(;;\)) show
0 408 moveto (7570     ;) show
0 396 moveto (7571 }) show
0 384 moveto (7572 ) show
0 372 moveto (7573 #define BACKSPACE 0x100) show
0 360 moveto (7574 #define CRTPORT 0x3d4) show
0 348 moveto (7575 static ushort *crt = \(ushort*\)P2V\(0xb8000\);  // CGA memory) show
0 336 moveto (7576 ) show
0 324 moveto (7577 static void) show
0 312 moveto (7578 cgaputc\(int c\)) show
0 300 moveto (7579 {) show
0 288 moveto (7580   int pos;) show
0 276 moveto (7581 ) show
0 264 moveto (7582   // Cursor position: col + 80*row.) show
0 252 moveto (7583   outb\(CRTPORT, 14\);) show
0 240 moveto (7584   pos = inb\(CRTPORT+1\) << 8;) show
0 228 moveto (7585   outb\(CRTPORT, 15\);) show
0 216 moveto (7586   pos |= inb\(CRTPORT+1\);) show
0 204 moveto (7587 ) show
0 192 moveto (7588   if\(c == '\\n'\)) show
0 180 moveto (7589     pos += 80 - pos%80;) show
0 168 moveto (7590   else if\(c == BACKSPACE\){) show
0 156 moveto (7591     if\(pos > 0\) --pos;) show
0 144 moveto (7592   } else) show
0 132 moveto (7593     crt[pos++] = \(c&0xff\) | 0x0700;  // black on white) show
0 120 moveto (7594 ) show
0 108 moveto (7595   if\(pos < 0 || pos > 25*80\)) show
0 96 moveto (7596     panic\("pos under/overflow"\);) show
0 84 moveto (7597 ) show
0 72 moveto (7598 ) show
0 60 moveto (7599 ) show
0 24 moveto (Sheet 75) show
grestore
restore
showpage
%%Page: 84 84
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/console.c  Page 4) show
0 648 moveto (7600   if\(\(pos/80\) >= 24\){  // Scroll up.) show
0 636 moveto (7601     memmove\(crt, crt+80, sizeof\(crt[0]\)*23*80\);) show
0 624 moveto (7602     pos -= 80;) show
0 612 moveto (7603     memset\(crt+pos, 0, sizeof\(crt[0]\)*\(24*80 - pos\)\);) show
0 600 moveto (7604   }) show
0 588 moveto (7605 ) show
0 576 moveto (7606   outb\(CRTPORT, 14\);) show
0 564 moveto (7607   outb\(CRTPORT+1, pos>>8\);) show
0 552 moveto (7608   outb\(CRTPORT, 15\);) show
0 540 moveto (7609   outb\(CRTPORT+1, pos\);) show
0 528 moveto (7610   crt[pos] = ' ' | 0x0700;) show
0 516 moveto (7611 }) show
0 504 moveto (7612 ) show
0 492 moveto (7613 void) show
0 480 moveto (7614 consputc\(int c\)) show
0 468 moveto (7615 {) show
0 456 moveto (7616   if\(panicked\){) show
0 444 moveto (7617     cli\(\);) show
0 432 moveto (7618     for\(;;\)) show
0 420 moveto (7619       ;) show
0 408 moveto (7620   }) show
0 396 moveto (7621 ) show
0 384 moveto (7622   if\(c == BACKSPACE\){) show
0 372 moveto (7623     uartputc\('\\b'\); uartputc\(' '\); uartputc\('\\b'\);) show
0 360 moveto (7624   } else) show
0 348 moveto (7625     uartputc\(c\);) show
0 336 moveto (7626   cgaputc\(c\);) show
0 324 moveto (7627 }) show
0 312 moveto (7628 ) show
0 300 moveto (7629 #define INPUT_BUF 128) show
0 288 moveto (7630 struct {) show
0 276 moveto (7631   char buf[INPUT_BUF];) show
0 264 moveto (7632   uint r;  // Read index) show
0 252 moveto (7633   uint w;  // Write index) show
0 240 moveto (7634   uint e;  // Edit index) show
0 228 moveto (7635 } input;) show
0 216 moveto (7636 ) show
0 204 moveto (7637 #define C\(x\)  \(\(x\)-'@'\)  // Control-x) show
0 192 moveto (7638 ) show
0 180 moveto (7639 void) show
0 168 moveto (7640 consoleintr\(int \(*getc\)\(void\)\)) show
0 156 moveto (7641 {) show
0 144 moveto (7642   int c, doprocdump = 0;) show
0 132 moveto (7643 ) show
0 120 moveto (7644   acquire\(&cons.lock\);) show
0 108 moveto (7645   while\(\(c = getc\(\)\) >= 0\){) show
0 96 moveto (7646     switch\(c\){) show
0 84 moveto (7647     case C\('P'\):  // Process listing.) show
0 72 moveto (7648       doprocdump = 1;   // procdump\(\) locks cons.lock indirectly; invoke later) show
0 60 moveto (7649       break;) show
0 24 moveto (Sheet 76) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/console.c  Page 5) show
0 648 moveto (7650     case C\('U'\):  // Kill line.) show
0 636 moveto (7651       while\(input.e != input.w &&) show
0 624 moveto (7652             input.buf[\(input.e-1\) % INPUT_BUF] != '\\n'\){) show
0 612 moveto (7653         input.e--;) show
0 600 moveto (7654         consputc\(BACKSPACE\);) show
0 588 moveto (7655       }) show
0 576 moveto (7656       break;) show
0 564 moveto (7657     case C\('H'\): case '\\x7f':  // Backspace) show
0 552 moveto (7658       if\(input.e != input.w\){) show
0 540 moveto (7659         input.e--;) show
0 528 moveto (7660         consputc\(BACKSPACE\);) show
0 516 moveto (7661       }) show
0 504 moveto (7662       break;) show
0 492 moveto (7663     default:) show
0 480 moveto (7664       if\(c != 0 && input.e-input.r < INPUT_BUF\){) show
0 468 moveto (7665         c = \(c == '\\r'\) ? '\\n' : c;) show
0 456 moveto (7666         input.buf[input.e++ % INPUT_BUF] = c;) show
0 444 moveto (7667         consputc\(c\);) show
0 432 moveto (7668         if\(c == '\\n' || c == C\('D'\) || input.e == input.r+INPUT_BUF\){) show
0 420 moveto (7669           input.w = input.e;) show
0 408 moveto (7670           wakeup\(&input.r\);) show
0 396 moveto (7671         }) show
0 384 moveto (7672       }) show
0 372 moveto (7673       break;) show
0 360 moveto (7674     }) show
0 348 moveto (7675   }) show
0 336 moveto (7676   release\(&cons.lock\);) show
0 324 moveto (7677   if\(doprocdump\) {) show
0 312 moveto (7678     procdump\(\);  // now call procdump\(\) wo. cons.lock held) show
0 300 moveto (7679   }) show
0 288 moveto (7680 }) show
0 276 moveto (7681 ) show
0 264 moveto (7682 int) show
0 252 moveto (7683 consoleread\(struct inode *ip, char *dst, int n\)) show
0 240 moveto (7684 {) show
0 228 moveto (7685   uint target;) show
0 216 moveto (7686   int c;) show
0 204 moveto (7687 ) show
0 192 moveto (7688   iunlock\(ip\);) show
0 180 moveto (7689   target = n;) show
0 168 moveto (7690   acquire\(&cons.lock\);) show
0 156 moveto (7691   while\(n > 0\){) show
0 144 moveto (7692     while\(input.r == input.w\){) show
0 132 moveto (7693       if\(proc->killed\){) show
0 120 moveto (7694         release\(&cons.lock\);) show
0 108 moveto (7695         ilock\(ip\);) show
0 96 moveto (7696         return -1;) show
0 84 moveto (7697       }) show
0 72 moveto (7698       sleep\(&input.r, &cons.lock\);) show
0 60 moveto (7699     }) show
0 24 moveto (Sheet 76) show
grestore
restore
showpage
%%Page: 85 85
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/console.c  Page 6) show
0 648 moveto (7700     c = input.buf[input.r++ % INPUT_BUF];) show
0 636 moveto (7701     if\(c == C\('D'\)\){  // EOF) show
0 624 moveto (7702       if\(n < target\){) show
0 612 moveto (7703         // Save ^D for next time, to make sure) show
0 600 moveto (7704         // caller gets a 0-byte result.) show
0 588 moveto (7705         input.r--;) show
0 576 moveto (7706       }) show
0 564 moveto (7707       break;) show
0 552 moveto (7708     }) show
0 540 moveto (7709     *dst++ = c;) show
0 528 moveto (7710     --n;) show
0 516 moveto (7711     if\(c == '\\n'\)) show
0 504 moveto (7712       break;) show
0 492 moveto (7713   }) show
0 480 moveto (7714   release\(&cons.lock\);) show
0 468 moveto (7715   ilock\(ip\);) show
0 456 moveto (7716 ) show
0 444 moveto (7717   return target - n;) show
0 432 moveto (7718 }) show
0 420 moveto (7719 ) show
0 408 moveto (7720 int) show
0 396 moveto (7721 consolewrite\(struct inode *ip, char *buf, int n\)) show
0 384 moveto (7722 {) show
0 372 moveto (7723   int i;) show
0 360 moveto (7724 ) show
0 348 moveto (7725   iunlock\(ip\);) show
0 336 moveto (7726   acquire\(&cons.lock\);) show
0 324 moveto (7727   for\(i = 0; i < n; i++\)) show
0 312 moveto (7728     consputc\(buf[i] & 0xff\);) show
0 300 moveto (7729   release\(&cons.lock\);) show
0 288 moveto (7730   ilock\(ip\);) show
0 276 moveto (7731 ) show
0 264 moveto (7732   return n;) show
0 252 moveto (7733 }) show
0 240 moveto (7734 ) show
0 228 moveto (7735 void) show
0 216 moveto (7736 consoleinit\(void\)) show
0 204 moveto (7737 {) show
0 192 moveto (7738   initlock\(&cons.lock, "console"\);) show
0 180 moveto (7739 ) show
0 168 moveto (7740   devsw[CONSOLE].write = consolewrite;) show
0 156 moveto (7741   devsw[CONSOLE].read = consoleread;) show
0 144 moveto (7742   cons.locking = 1;) show
0 132 moveto (7743 ) show
0 120 moveto (7744   picenable\(IRQ_KBD\);) show
0 108 moveto (7745   ioapicenable\(IRQ_KBD, 0\);) show
0 96 moveto (7746 }) show
0 84 moveto (7747 ) show
0 72 moveto (7748 ) show
0 60 moveto (7749 ) show
0 24 moveto (Sheet 77) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/timer.c  Page 1) show
0 648 moveto (7750 // Intel 8253/8254/82C54 Programmable Interval Timer \(PIT\).) show
0 636 moveto (7751 // Only used on uniprocessors;) show
0 624 moveto (7752 // SMP machines use the local APIC timer.) show
0 612 moveto (7753 ) show
0 600 moveto (7754 #include "types.h") show
0 588 moveto (7755 #include "defs.h") show
0 576 moveto (7756 #include "traps.h") show
0 564 moveto (7757 #include "x86.h") show
0 552 moveto (7758 ) show
0 540 moveto (7759 #define IO_TIMER1       0x040           // 8253 Timer #1) show
0 528 moveto (7760 ) show
0 516 moveto (7761 // Frequency of all three count-down timers;) show
0 504 moveto (7762 // \(TIMER_FREQ/freq\) is the appropriate count) show
0 492 moveto (7763 // to generate a frequency of freq Hz.) show
0 480 moveto (7764 ) show
0 468 moveto (7765 #define TIMER_FREQ      1193182) show
0 456 moveto (7766 #define TIMER_DIV\(x\)    \(\(TIMER_FREQ+\(x\)/2\)/\(x\)\)) show
0 444 moveto (7767 ) show
0 432 moveto (7768 #define TIMER_MODE      \(IO_TIMER1 + 3\) // timer mode port) show
0 420 moveto (7769 #define TIMER_SEL0      0x00    // select counter 0) show
0 408 moveto (7770 #define TIMER_RATEGEN   0x04    // mode 2, rate generator) show
0 396 moveto (7771 #define TIMER_16BIT     0x30    // r/w counter 16 bits, LSB first) show
0 384 moveto (7772 ) show
0 372 moveto (7773 void) show
0 360 moveto (7774 timerinit\(void\)) show
0 348 moveto (7775 {) show
0 336 moveto (7776   // Interrupt 100 times/sec.) show
0 324 moveto (7777   outb\(TIMER_MODE, TIMER_SEL0 | TIMER_RATEGEN | TIMER_16BIT\);) show
0 312 moveto (7778   outb\(IO_TIMER1, TIMER_DIV\(100\) % 256\);) show
0 300 moveto (7779   outb\(IO_TIMER1, TIMER_DIV\(100\) / 256\);) show
0 288 moveto (7780   picenable\(IRQ_TIMER\);) show
0 276 moveto (7781 }) show
0 264 moveto (7782 ) show
0 252 moveto (7783 ) show
0 240 moveto (7784 ) show
0 228 moveto (7785 ) show
0 216 moveto (7786 ) show
0 204 moveto (7787 ) show
0 192 moveto (7788 ) show
0 180 moveto (7789 ) show
0 168 moveto (7790 ) show
0 156 moveto (7791 ) show
0 144 moveto (7792 ) show
0 132 moveto (7793 ) show
0 120 moveto (7794 ) show
0 108 moveto (7795 ) show
0 96 moveto (7796 ) show
0 84 moveto (7797 ) show
0 72 moveto (7798 ) show
0 60 moveto (7799 ) show
0 24 moveto (Sheet 77) show
grestore
restore
showpage
%%Page: 86 86
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/uart.c  Page 1) show
0 648 moveto (7800 // Intel 8250 serial port \(UART\).) show
0 636 moveto (7801 ) show
0 624 moveto (7802 #include "types.h") show
0 612 moveto (7803 #include "defs.h") show
0 600 moveto (7804 #include "param.h") show
0 588 moveto (7805 #include "traps.h") show
0 576 moveto (7806 #include "spinlock.h") show
0 564 moveto (7807 #include "fs.h") show
0 552 moveto (7808 #include "file.h") show
0 540 moveto (7809 #include "mmu.h") show
0 528 moveto (7810 #include "proc.h") show
0 516 moveto (7811 #include "x86.h") show
0 504 moveto (7812 ) show
0 492 moveto (7813 #define COM1    0x3f8) show
0 480 moveto (7814 ) show
0 468 moveto (7815 static int uart;    // is there a uart?) show
0 456 moveto (7816 ) show
0 444 moveto (7817 void) show
0 432 moveto (7818 uartinit\(void\)) show
0 420 moveto (7819 {) show
0 408 moveto (7820   char *p;) show
0 396 moveto (7821 ) show
0 384 moveto (7822   // Turn off the FIFO) show
0 372 moveto (7823   outb\(COM1+2, 0\);) show
0 360 moveto (7824 ) show
0 348 moveto (7825   // 9600 baud, 8 data bits, 1 stop bit, parity off.) show
0 336 moveto (7826   outb\(COM1+3, 0x80\);    // Unlock divisor) show
0 324 moveto (7827   outb\(COM1+0, 115200/9600\);) show
0 312 moveto (7828   outb\(COM1+1, 0\);) show
0 300 moveto (7829   outb\(COM1+3, 0x03\);    // Lock divisor, 8 data bits.) show
0 288 moveto (7830   outb\(COM1+4, 0\);) show
0 276 moveto (7831   outb\(COM1+1, 0x01\);    // Enable receive interrupts.) show
0 264 moveto (7832 ) show
0 252 moveto (7833   // If status is 0xFF, no serial port.) show
0 240 moveto (7834   if\(inb\(COM1+5\) == 0xFF\)) show
0 228 moveto (7835     return;) show
0 216 moveto (7836   uart = 1;) show
0 204 moveto (7837 ) show
0 192 moveto (7838   // Acknowledge pre-existing interrupt conditions;) show
0 180 moveto (7839   // enable interrupts.) show
0 168 moveto (7840   inb\(COM1+2\);) show
0 156 moveto (7841   inb\(COM1+0\);) show
0 144 moveto (7842   picenable\(IRQ_COM1\);) show
0 132 moveto (7843   ioapicenable\(IRQ_COM1, 0\);) show
0 120 moveto (7844 ) show
0 108 moveto (7845   // Announce that we're here.) show
0 96 moveto (7846   for\(p="xv6...\\n"; *p; p++\)) show
0 84 moveto (7847     uartputc\(*p\);) show
0 72 moveto (7848 }) show
0 60 moveto (7849 ) show
0 24 moveto (Sheet 78) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/uart.c  Page 2) show
0 648 moveto (7850 void) show
0 636 moveto (7851 uartputc\(int c\)) show
0 624 moveto (7852 {) show
0 612 moveto (7853   int i;) show
0 600 moveto (7854 ) show
0 588 moveto (7855   if\(!uart\)) show
0 576 moveto (7856     return;) show
0 564 moveto (7857   for\(i = 0; i < 128 && !\(inb\(COM1+5\) & 0x20\); i++\)) show
0 552 moveto (7858     microdelay\(10\);) show
0 540 moveto (7859   outb\(COM1+0, c\);) show
0 528 moveto (7860 }) show
0 516 moveto (7861 ) show
0 504 moveto (7862 static int) show
0 492 moveto (7863 uartgetc\(void\)) show
0 480 moveto (7864 {) show
0 468 moveto (7865   if\(!uart\)) show
0 456 moveto (7866     return -1;) show
0 444 moveto (7867   if\(!\(inb\(COM1+5\) & 0x01\)\)) show
0 432 moveto (7868     return -1;) show
0 420 moveto (7869   return inb\(COM1+0\);) show
0 408 moveto (7870 }) show
0 396 moveto (7871 ) show
0 384 moveto (7872 void) show
0 372 moveto (7873 uartintr\(void\)) show
0 360 moveto (7874 {) show
0 348 moveto (7875   consoleintr\(uartgetc\);) show
0 336 moveto (7876 }) show
0 324 moveto (7877 ) show
0 312 moveto (7878 ) show
0 300 moveto (7879 ) show
0 288 moveto (7880 ) show
0 276 moveto (7881 ) show
0 264 moveto (7882 ) show
0 252 moveto (7883 ) show
0 240 moveto (7884 ) show
0 228 moveto (7885 ) show
0 216 moveto (7886 ) show
0 204 moveto (7887 ) show
0 192 moveto (7888 ) show
0 180 moveto (7889 ) show
0 168 moveto (7890 ) show
0 156 moveto (7891 ) show
0 144 moveto (7892 ) show
0 132 moveto (7893 ) show
0 120 moveto (7894 ) show
0 108 moveto (7895 ) show
0 96 moveto (7896 ) show
0 84 moveto (7897 ) show
0 72 moveto (7898 ) show
0 60 moveto (7899 ) show
0 24 moveto (Sheet 78) show
grestore
restore
showpage
%%Page: 87 87
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/initcode.S  Page 1) show
0 648 moveto (7900 # Initial process execs /init.) show
0 636 moveto (7901 ) show
0 624 moveto (7902 #include "syscall.h") show
0 612 moveto (7903 #include "traps.h") show
0 600 moveto (7904 ) show
0 588 moveto (7905 ) show
0 576 moveto (7906 # exec\(init, argv\)) show
0 564 moveto (7907 .globl start) show
0 552 moveto (7908 start:) show
0 540 moveto (7909   pushl $argv) show
0 528 moveto (7910   pushl $init) show
0 516 moveto (7911   pushl $0  // where caller pc would be) show
0 504 moveto (7912   movl $SYS_exec, %eax) show
0 492 moveto (7913   int $T_SYSCALL) show
0 480 moveto (7914 ) show
0 468 moveto (7915 # for\(;;\) exit\(\);) show
0 456 moveto (7916 exit:) show
0 444 moveto (7917   movl $SYS_exit, %eax) show
0 432 moveto (7918   int $T_SYSCALL) show
0 420 moveto (7919   jmp exit) show
0 408 moveto (7920 ) show
0 396 moveto (7921 # char init[] = "/init\\0";) show
0 384 moveto (7922 init:) show
0 372 moveto (7923   .string "/init\\0") show
0 360 moveto (7924 ) show
0 348 moveto (7925 # char *argv[] = { init, 0 };) show
0 336 moveto (7926 .p2align 2) show
0 324 moveto (7927 argv:) show
0 312 moveto (7928   .long init) show
0 300 moveto (7929   .long 0) show
0 288 moveto (7930 ) show
0 276 moveto (7931 ) show
0 264 moveto (7932 ) show
0 252 moveto (7933 ) show
0 240 moveto (7934 ) show
0 228 moveto (7935 ) show
0 216 moveto (7936 ) show
0 204 moveto (7937 ) show
0 192 moveto (7938 ) show
0 180 moveto (7939 ) show
0 168 moveto (7940 ) show
0 156 moveto (7941 ) show
0 144 moveto (7942 ) show
0 132 moveto (7943 ) show
0 120 moveto (7944 ) show
0 108 moveto (7945 ) show
0 96 moveto (7946 ) show
0 84 moveto (7947 ) show
0 72 moveto (7948 ) show
0 60 moveto (7949 ) show
0 24 moveto (Sheet 79) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/usys.S  Page 1) show
0 648 moveto (7950 #include "syscall.h") show
0 636 moveto (7951 #include "traps.h") show
0 624 moveto (7952 ) show
0 612 moveto (7953 #define SYSCALL\(name\) \\) show
0 600 moveto (7954   .globl name; \\) show
0 588 moveto (7955   name: \\) show
0 576 moveto (7956     movl $SYS_ ## name, %eax; \\) show
0 564 moveto (7957     int $T_SYSCALL; \\) show
0 552 moveto (7958     ret) show
0 540 moveto (7959 ) show
0 528 moveto (7960 SYSCALL\(fork\)) show
0 516 moveto (7961 SYSCALL\(exit\)) show
0 504 moveto (7962 SYSCALL\(wait\)) show
0 492 moveto (7963 SYSCALL\(pipe\)) show
0 480 moveto (7964 SYSCALL\(read\)) show
0 468 moveto (7965 SYSCALL\(write\)) show
0 456 moveto (7966 SYSCALL\(close\)) show
0 444 moveto (7967 SYSCALL\(kill\)) show
0 432 moveto (7968 SYSCALL\(exec\)) show
0 420 moveto (7969 SYSCALL\(open\)) show
0 408 moveto (7970 SYSCALL\(mknod\)) show
0 396 moveto (7971 SYSCALL\(unlink\)) show
0 384 moveto (7972 SYSCALL\(fstat\)) show
0 372 moveto (7973 SYSCALL\(link\)) show
0 360 moveto (7974 SYSCALL\(mkdir\)) show
0 348 moveto (7975 SYSCALL\(chdir\)) show
0 336 moveto (7976 SYSCALL\(dup\)) show
0 324 moveto (7977 SYSCALL\(getpid\)) show
0 312 moveto (7978 SYSCALL\(sbrk\)) show
0 300 moveto (7979 SYSCALL\(sleep\)) show
0 288 moveto (7980 SYSCALL\(uptime\)) show
0 276 moveto (7981 SYSCALL\(halt\)) show
0 264 moveto (7982 SYSCALL\(date\)) show
0 252 moveto (7983 SYSCALL\(getuid\)) show
0 240 moveto (7984 SYSCALL\(getgid\)) show
0 228 moveto (7985 SYSCALL\(getppid\)) show
0 216 moveto (7986 SYSCALL\(setuid\)) show
0 204 moveto (7987 SYSCALL\(setgid\)) show
0 192 moveto (7988 SYSCALL\(getprocs\)) show
0 180 moveto (7989 ) show
0 168 moveto (7990 ) show
0 156 moveto (7991 ) show
0 144 moveto (7992 ) show
0 132 moveto (7993 ) show
0 120 moveto (7994 ) show
0 108 moveto (7995 ) show
0 96 moveto (7996 ) show
0 84 moveto (7997 ) show
0 72 moveto (7998 ) show
0 60 moveto (7999 ) show
0 24 moveto (Sheet 79) show
grestore
restore
showpage
%%Page: 88 88
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/init.c  Page 1) show
0 648 moveto (8000 // init: The initial user-level program) show
0 636 moveto (8001 ) show
0 624 moveto (8002 #include "types.h") show
0 612 moveto (8003 #include "stat.h") show
0 600 moveto (8004 #include "user.h") show
0 588 moveto (8005 #include "fcntl.h") show
0 576 moveto (8006 ) show
0 564 moveto (8007 char *argv[] = { "sh", 0 };) show
0 552 moveto (8008 ) show
0 540 moveto (8009 int) show
0 528 moveto (8010 main\(void\)) show
0 516 moveto (8011 {) show
0 504 moveto (8012   int pid, wpid;) show
0 492 moveto (8013 ) show
0 480 moveto (8014   if\(open\("console", O_RDWR\) < 0\){) show
0 468 moveto (8015     mknod\("console", 1, 1\);) show
0 456 moveto (8016     open\("console", O_RDWR\);) show
0 444 moveto (8017   }) show
0 432 moveto (8018   dup\(0\);  // stdout) show
0 420 moveto (8019   dup\(0\);  // stderr) show
0 408 moveto (8020 ) show
0 396 moveto (8021   for\(;;\){) show
0 384 moveto (8022     printf\(1, "init: starting sh\\n"\);) show
0 372 moveto (8023     pid = fork\(\);) show
0 360 moveto (8024     if\(pid < 0\){) show
0 348 moveto (8025       printf\(1, "init: fork failed\\n"\);) show
0 336 moveto (8026       exit\(\);) show
0 324 moveto (8027     }) show
0 312 moveto (8028     if\(pid == 0\){) show
0 300 moveto (8029       exec\("sh", argv\);) show
0 288 moveto (8030       printf\(1, "init: exec sh failed\\n"\);) show
0 276 moveto (8031       exit\(\);) show
0 264 moveto (8032     }) show
0 252 moveto (8033     while\(\(wpid=wait\(\)\) >= 0 && wpid != pid\)) show
0 240 moveto (8034       printf\(1, "zombie!\\n"\);) show
0 228 moveto (8035   }) show
0 216 moveto (8036 }) show
0 204 moveto (8037 ) show
0 192 moveto (8038 ) show
0 180 moveto (8039 ) show
0 168 moveto (8040 ) show
0 156 moveto (8041 ) show
0 144 moveto (8042 ) show
0 132 moveto (8043 ) show
0 120 moveto (8044 ) show
0 108 moveto (8045 ) show
0 96 moveto (8046 ) show
0 84 moveto (8047 ) show
0 72 moveto (8048 ) show
0 60 moveto (8049 ) show
0 24 moveto (Sheet 80) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/sh.c  Page 1) show
0 648 moveto (8050 // Shell.) show
0 636 moveto (8051 // 2015-12-21. Added very simple processing for builtin commands) show
0 624 moveto (8052 ) show
0 612 moveto (8053 #include "types.h") show
0 600 moveto (8054 #include "user.h") show
0 588 moveto (8055 #include "fcntl.h") show
0 576 moveto (8056 ) show
0 564 moveto (8057 // Parsed command representation) show
0 552 moveto (8058 #define EXEC  1) show
0 540 moveto (8059 #define REDIR 2) show
0 528 moveto (8060 #define PIPE  3) show
0 516 moveto (8061 #define LIST  4) show
0 504 moveto (8062 #define BACK  5) show
0 492 moveto (8063 ) show
0 480 moveto (8064 #define MAXARGS 10) show
0 468 moveto (8065 ) show
0 456 moveto (8066 struct cmd {) show
0 444 moveto (8067   int type;) show
0 432 moveto (8068 };) show
0 420 moveto (8069 ) show
0 408 moveto (8070 struct execcmd {) show
0 396 moveto (8071   int type;) show
0 384 moveto (8072   char *argv[MAXARGS];) show
0 372 moveto (8073   char *eargv[MAXARGS];) show
0 360 moveto (8074 };) show
0 348 moveto (8075 ) show
0 336 moveto (8076 struct redircmd {) show
0 324 moveto (8077   int type;) show
0 312 moveto (8078   struct cmd *cmd;) show
0 300 moveto (8079   char *file;) show
0 288 moveto (8080   char *efile;) show
0 276 moveto (8081   int mode;) show
0 264 moveto (8082   int fd;) show
0 252 moveto (8083 };) show
0 240 moveto (8084 ) show
0 228 moveto (8085 struct pipecmd {) show
0 216 moveto (8086   int type;) show
0 204 moveto (8087   struct cmd *left;) show
0 192 moveto (8088   struct cmd *right;) show
0 180 moveto (8089 };) show
0 168 moveto (8090 ) show
0 156 moveto (8091 struct listcmd {) show
0 144 moveto (8092   int type;) show
0 132 moveto (8093   struct cmd *left;) show
0 120 moveto (8094   struct cmd *right;) show
0 108 moveto (8095 };) show
0 96 moveto (8096 ) show
0 84 moveto (8097 ) show
0 72 moveto (8098 ) show
0 60 moveto (8099 ) show
0 24 moveto (Sheet 80) show
grestore
restore
showpage
%%Page: 89 89
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/sh.c  Page 2) show
0 648 moveto (8100 struct backcmd {) show
0 636 moveto (8101   int type;) show
0 624 moveto (8102   struct cmd *cmd;) show
0 612 moveto (8103 };) show
0 600 moveto (8104 ) show
0 588 moveto (8105 int fork1\(void\);  // Fork but panics on failure.) show
0 576 moveto (8106 void panic\(char*\);) show
0 564 moveto (8107 struct cmd *parsecmd\(char*\);) show
0 552 moveto (8108 ) show
0 540 moveto (8109 // Execute cmd.  Never returns.) show
0 528 moveto (8110 void) show
0 516 moveto (8111 runcmd\(struct cmd *cmd\)) show
0 504 moveto (8112 {) show
0 492 moveto (8113   int p[2];) show
0 480 moveto (8114   struct backcmd *bcmd;) show
0 468 moveto (8115   struct execcmd *ecmd;) show
0 456 moveto (8116   struct listcmd *lcmd;) show
0 444 moveto (8117   struct pipecmd *pcmd;) show
0 432 moveto (8118   struct redircmd *rcmd;) show
0 420 moveto (8119 ) show
0 408 moveto (8120   if\(cmd == 0\)) show
0 396 moveto (8121     exit\(\);) show
0 384 moveto (8122 ) show
0 372 moveto (8123   switch\(cmd->type\){) show
0 360 moveto (8124   default:) show
0 348 moveto (8125     panic\("runcmd"\);) show
0 336 moveto (8126 ) show
0 324 moveto (8127   case EXEC:) show
0 312 moveto (8128     ecmd = \(struct execcmd*\)cmd;) show
0 300 moveto (8129     if\(ecmd->argv[0] == 0\)) show
0 288 moveto (8130       exit\(\);) show
0 276 moveto (8131     exec\(ecmd->argv[0], ecmd->argv\);) show
0 264 moveto (8132     printf\(2, "exec %s failed\\n", ecmd->argv[0]\);) show
0 252 moveto (8133     break;) show
0 240 moveto (8134 ) show
0 228 moveto (8135   case REDIR:) show
0 216 moveto (8136     rcmd = \(struct redircmd*\)cmd;) show
0 204 moveto (8137     close\(rcmd->fd\);) show
0 192 moveto (8138     if\(open\(rcmd->file, rcmd->mode\) < 0\){) show
0 180 moveto (8139       printf\(2, "open %s failed\\n", rcmd->file\);) show
0 168 moveto (8140       exit\(\);) show
0 156 moveto (8141     }) show
0 144 moveto (8142     runcmd\(rcmd->cmd\);) show
0 132 moveto (8143     break;) show
0 120 moveto (8144 ) show
0 108 moveto (8145   case LIST:) show
0 96 moveto (8146     lcmd = \(struct listcmd*\)cmd;) show
0 84 moveto (8147     if\(fork1\(\) == 0\)) show
0 72 moveto (8148       runcmd\(lcmd->left\);) show
0 60 moveto (8149     wait\(\);) show
0 24 moveto (Sheet 81) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/sh.c  Page 3) show
0 648 moveto (8150     runcmd\(lcmd->right\);) show
0 636 moveto (8151     break;) show
0 624 moveto (8152 ) show
0 612 moveto (8153   case PIPE:) show
0 600 moveto (8154     pcmd = \(struct pipecmd*\)cmd;) show
0 588 moveto (8155     if\(pipe\(p\) < 0\)) show
0 576 moveto (8156       panic\("pipe"\);) show
0 564 moveto (8157     if\(fork1\(\) == 0\){) show
0 552 moveto (8158       close\(1\);) show
0 540 moveto (8159       dup\(p[1]\);) show
0 528 moveto (8160       close\(p[0]\);) show
0 516 moveto (8161       close\(p[1]\);) show
0 504 moveto (8162       runcmd\(pcmd->left\);) show
0 492 moveto (8163     }) show
0 480 moveto (8164     if\(fork1\(\) == 0\){) show
0 468 moveto (8165       close\(0\);) show
0 456 moveto (8166       dup\(p[0]\);) show
0 444 moveto (8167       close\(p[0]\);) show
0 432 moveto (8168       close\(p[1]\);) show
0 420 moveto (8169       runcmd\(pcmd->right\);) show
0 408 moveto (8170     }) show
0 396 moveto (8171     close\(p[0]\);) show
0 384 moveto (8172     close\(p[1]\);) show
0 372 moveto (8173     wait\(\);) show
0 360 moveto (8174     wait\(\);) show
0 348 moveto (8175     break;) show
0 336 moveto (8176 ) show
0 324 moveto (8177   case BACK:) show
0 312 moveto (8178     bcmd = \(struct backcmd*\)cmd;) show
0 300 moveto (8179     if\(fork1\(\) == 0\)) show
0 288 moveto (8180       runcmd\(bcmd->cmd\);) show
0 276 moveto (8181     break;) show
0 264 moveto (8182   }) show
0 252 moveto (8183   exit\(\);) show
0 240 moveto (8184 }) show
0 228 moveto (8185 ) show
0 216 moveto (8186 int) show
0 204 moveto (8187 getcmd\(char *buf, int nbuf\)) show
0 192 moveto (8188 {) show
0 180 moveto (8189   printf\(2, "$ "\);) show
0 168 moveto (8190   memset\(buf, 0, nbuf\);) show
0 156 moveto (8191   gets\(buf, nbuf\);) show
0 144 moveto (8192   if\(buf[0] == 0\) // EOF) show
0 132 moveto (8193     return -1;) show
0 120 moveto (8194   return 0;) show
0 108 moveto (8195 }) show
0 96 moveto (8196 ) show
0 84 moveto (8197 ) show
0 72 moveto (8198 ) show
0 60 moveto (8199 ) show
0 24 moveto (Sheet 81) show
grestore
restore
showpage
%%Page: 90 90
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/sh.c  Page 4) show
0 648 moveto (8200 #ifdef USE_BUILTINS) show
0 636 moveto (8201 // ***** processing for shell builtins begins here *****) show
0 624 moveto (8202 ) show
0 612 moveto (8203 int) show
0 600 moveto (8204 strncmp\(const char *p, const char *q, uint n\)) show
0 588 moveto (8205 {) show
0 576 moveto (8206     while\(n > 0 && *p && *p == *q\)) show
0 564 moveto (8207       n--, p++, q++;) show
0 552 moveto (8208     if\(n == 0\)) show
0 540 moveto (8209       return 0;) show
0 528 moveto (8210     return \(uchar\)*p - \(uchar\)*q;) show
0 516 moveto (8211 }) show
0 504 moveto (8212 ) show
0 492 moveto (8213 int) show
0 480 moveto (8214 makeint\(char *p\)) show
0 468 moveto (8215 {) show
0 456 moveto (8216   int val = 0;) show
0 444 moveto (8217 ) show
0 432 moveto (8218   while \(\(*p >= '0'\) && \(*p <= '9'\)\) {) show
0 420 moveto (8219     val = 10*val + \(*p-'0'\);) show
0 408 moveto (8220     ++p;) show
0 396 moveto (8221   }) show
0 384 moveto (8222   return val;) show
0 372 moveto (8223 }) show
0 360 moveto (8224 ) show
0 348 moveto (8225 int) show
0 336 moveto (8226 setbuiltin\(char *p\)) show
0 324 moveto (8227 {) show
0 312 moveto (8228   int i;) show
0 300 moveto (8229 ) show
0 288 moveto (8230   p += strlen\("_set"\);) show
0 276 moveto (8231   while \(strncmp\(p, " ", 1\) == 0\) p++; // chomp spaces) show
0 264 moveto (8232   if \(strncmp\("uid", p, 3\) == 0\) {) show
0 252 moveto (8233     p += strlen\("uid"\);) show
0 240 moveto (8234     while \(strncmp\(p, " ", 1\) == 0\) p++; // chomp spaces) show
0 228 moveto (8235     i = makeint\(p\); // ugly) show
0 216 moveto (8236     return \(setuid\(i\)\);) show
0 204 moveto (8237   } else) show
0 192 moveto (8238   if \(strncmp\("gid", p, 3\) == 0\) {) show
0 180 moveto (8239     p += strlen\("gid"\);) show
0 168 moveto (8240     while \(strncmp\(p, " ", 1\) == 0\) p++; // chomp spaces) show
0 156 moveto (8241     i = makeint\(p\); // ugly) show
0 144 moveto (8242     return \(setgid\(i\)\);) show
0 132 moveto (8243   }) show
0 120 moveto (8244   printf\(2, "Invalid _set parameter\\n"\);) show
0 108 moveto (8245   return -1;) show
0 96 moveto (8246 }) show
0 84 moveto (8247 ) show
0 72 moveto (8248 ) show
0 60 moveto (8249 ) show
0 24 moveto (Sheet 82) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/sh.c  Page 5) show
0 648 moveto (8250 int) show
0 636 moveto (8251 getbuiltin\(char *p\)) show
0 624 moveto (8252 {) show
0 612 moveto (8253   p += strlen\("_get"\);) show
0 600 moveto (8254   while \(strncmp\(p, " ", 1\) == 0\) p++; // chomp spaces) show
0 588 moveto (8255   if \(strncmp\("uid", p, 3\) == 0\) {) show
0 576 moveto (8256     printf\(2, "%d\\n", getuid\(\)\);) show
0 564 moveto (8257     return 0;) show
0 552 moveto (8258   }) show
0 540 moveto (8259   if \(strncmp\("gid", p, 3\) == 0\) {) show
0 528 moveto (8260     printf\(2, "%d\\n", getgid\(\)\);) show
0 516 moveto (8261     return 0;) show
0 504 moveto (8262   }) show
0 492 moveto (8263   printf\(2, "Invalid _get parameter\\n"\);) show
0 480 moveto (8264   return -1;) show
0 468 moveto (8265 }) show
0 456 moveto (8266 ) show
0 444 moveto (8267 typedef int funcPtr_t\(char *\);) show
0 432 moveto (8268 typedef struct {) show
0 420 moveto (8269   char       *cmd;) show
0 408 moveto (8270   funcPtr_t  *name;) show
0 396 moveto (8271 } dispatchTableEntry_t;) show
0 384 moveto (8272 ) show
0 372 moveto (8273 // Use a simple function dispatch table \(FDT\) to process builtin commands) show
0 360 moveto (8274 dispatchTableEntry_t fdt[] = {) show
0 348 moveto (8275   {"_set", setbuiltin},) show
0 336 moveto (8276   {"_get", getbuiltin}) show
0 324 moveto (8277 };) show
0 312 moveto (8278 int FDTcount = sizeof\(fdt\) / sizeof\(fdt[0]\); // # entris in FDT) show
0 300 moveto (8279 ) show
0 288 moveto (8280 void) show
0 276 moveto (8281 dobuiltin\(char *cmd\) {) show
0 264 moveto (8282   int i;) show
0 252 moveto (8283 ) show
0 240 moveto (8284   for \(i=0; i<FDTcount; i++\)) show
0 228 moveto (8285     if \(strncmp\(cmd, fdt[i].cmd, strlen\(fdt[i].cmd\)\) == 0\)) show
0 216 moveto (8286      \(*fdt[i].name\)\(cmd\);) show
0 204 moveto (8287 }) show
0 192 moveto (8288 ) show
0 180 moveto (8289 ) show
0 168 moveto (8290 ) show
0 156 moveto (8291 ) show
0 144 moveto (8292 ) show
0 132 moveto (8293 ) show
0 120 moveto (8294 ) show
0 108 moveto (8295 ) show
0 96 moveto (8296 ) show
0 84 moveto (8297 ) show
0 72 moveto (8298 ) show
0 60 moveto (8299 ) show
0 24 moveto (Sheet 82) show
grestore
restore
showpage
%%Page: 91 91
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/sh.c  Page 6) show
0 648 moveto (8300 // ***** processing for shell builtins ends here *****) show
0 636 moveto (8301 #endif) show
0 624 moveto (8302 ) show
0 612 moveto (8303 int) show
0 600 moveto (8304 main\(void\)) show
0 588 moveto (8305 {) show
0 576 moveto (8306   static char buf[100];) show
0 564 moveto (8307   int fd;) show
0 552 moveto (8308 ) show
0 540 moveto (8309   // Assumes three file descriptors open.) show
0 528 moveto (8310   while\(\(fd = open\("console", O_RDWR\)\) >= 0\){) show
0 516 moveto (8311     if\(fd >= 3\){) show
0 504 moveto (8312       close\(fd\);) show
0 492 moveto (8313       break;) show
0 480 moveto (8314     }) show
0 468 moveto (8315   }) show
0 456 moveto (8316 ) show
0 444 moveto (8317   // Read and run input commands.) show
0 432 moveto (8318   while\(getcmd\(buf, sizeof\(buf\)\) >= 0\){) show
0 420 moveto (8319 // add support for built-ins here. cd is a built-in) show
0 408 moveto (8320     if\(buf[0] == 'c' && buf[1] == 'd' && buf[2] == ' '\){) show
0 396 moveto (8321       // Clumsy but will have to do for now.) show
0 384 moveto (8322       // Chdir has no effect on the parent if run in the child.) show
0 372 moveto (8323       buf[strlen\(buf\)-1] = 0;  // chop \\n) show
0 360 moveto (8324       if\(chdir\(buf+3\) < 0\)) show
0 348 moveto (8325         printf\(2, "cannot cd %s\\n", buf+3\);) show
0 336 moveto (8326       continue;) show
0 324 moveto (8327     }) show
0 312 moveto (8328 #ifdef USE_BUILTINS) show
0 300 moveto (8329     if \(buf[0]=='_'\) {     // assume it is a builtin command) show
0 288 moveto (8330       dobuiltin\(buf\);) show
0 276 moveto (8331       continue;) show
0 264 moveto (8332     }) show
0 252 moveto (8333 #endif) show
0 240 moveto (8334     if\(fork1\(\) == 0\)) show
0 228 moveto (8335       runcmd\(parsecmd\(buf\)\);) show
0 216 moveto (8336     wait\(\);) show
0 204 moveto (8337   }) show
0 192 moveto (8338   exit\(\);) show
0 180 moveto (8339 }) show
0 168 moveto (8340 ) show
0 156 moveto (8341 void) show
0 144 moveto (8342 panic\(char *s\)) show
0 132 moveto (8343 {) show
0 120 moveto (8344   printf\(2, "%s\\n", s\);) show
0 108 moveto (8345   exit\(\);) show
0 96 moveto (8346 }) show
0 84 moveto (8347 ) show
0 72 moveto (8348 ) show
0 60 moveto (8349 ) show
0 24 moveto (Sheet 83) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/sh.c  Page 7) show
0 648 moveto (8350 int) show
0 636 moveto (8351 fork1\(void\)) show
0 624 moveto (8352 {) show
0 612 moveto (8353   int pid;) show
0 600 moveto (8354 ) show
0 588 moveto (8355   pid = fork\(\);) show
0 576 moveto (8356   if\(pid == -1\)) show
0 564 moveto (8357     panic\("fork"\);) show
0 552 moveto (8358   return pid;) show
0 540 moveto (8359 }) show
0 528 moveto (8360 ) show
0 516 moveto (8361 // Constructors) show
0 504 moveto (8362 ) show
0 492 moveto (8363 struct cmd*) show
0 480 moveto (8364 execcmd\(void\)) show
0 468 moveto (8365 {) show
0 456 moveto (8366   struct execcmd *cmd;) show
0 444 moveto (8367 ) show
0 432 moveto (8368   cmd = malloc\(sizeof\(*cmd\)\);) show
0 420 moveto (8369   memset\(cmd, 0, sizeof\(*cmd\)\);) show
0 408 moveto (8370   cmd->type = EXEC;) show
0 396 moveto (8371   return \(struct cmd*\)cmd;) show
0 384 moveto (8372 }) show
0 372 moveto (8373 ) show
0 360 moveto (8374 struct cmd*) show
0 348 moveto (8375 redircmd\(struct cmd *subcmd, char *file, char *efile, int mode, int fd\)) show
0 336 moveto (8376 {) show
0 324 moveto (8377   struct redircmd *cmd;) show
0 312 moveto (8378 ) show
0 300 moveto (8379   cmd = malloc\(sizeof\(*cmd\)\);) show
0 288 moveto (8380   memset\(cmd, 0, sizeof\(*cmd\)\);) show
0 276 moveto (8381   cmd->type = REDIR;) show
0 264 moveto (8382   cmd->cmd = subcmd;) show
0 252 moveto (8383   cmd->file = file;) show
0 240 moveto (8384   cmd->efile = efile;) show
0 228 moveto (8385   cmd->mode = mode;) show
0 216 moveto (8386   cmd->fd = fd;) show
0 204 moveto (8387   return \(struct cmd*\)cmd;) show
0 192 moveto (8388 }) show
0 180 moveto (8389 ) show
0 168 moveto (8390 ) show
0 156 moveto (8391 ) show
0 144 moveto (8392 ) show
0 132 moveto (8393 ) show
0 120 moveto (8394 ) show
0 108 moveto (8395 ) show
0 96 moveto (8396 ) show
0 84 moveto (8397 ) show
0 72 moveto (8398 ) show
0 60 moveto (8399 ) show
0 24 moveto (Sheet 83) show
grestore
restore
showpage
%%Page: 92 92
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/sh.c  Page 8) show
0 648 moveto (8400 struct cmd*) show
0 636 moveto (8401 pipecmd\(struct cmd *left, struct cmd *right\)) show
0 624 moveto (8402 {) show
0 612 moveto (8403   struct pipecmd *cmd;) show
0 600 moveto (8404 ) show
0 588 moveto (8405   cmd = malloc\(sizeof\(*cmd\)\);) show
0 576 moveto (8406   memset\(cmd, 0, sizeof\(*cmd\)\);) show
0 564 moveto (8407   cmd->type = PIPE;) show
0 552 moveto (8408   cmd->left = left;) show
0 540 moveto (8409   cmd->right = right;) show
0 528 moveto (8410   return \(struct cmd*\)cmd;) show
0 516 moveto (8411 }) show
0 504 moveto (8412 ) show
0 492 moveto (8413 struct cmd*) show
0 480 moveto (8414 listcmd\(struct cmd *left, struct cmd *right\)) show
0 468 moveto (8415 {) show
0 456 moveto (8416   struct listcmd *cmd;) show
0 444 moveto (8417 ) show
0 432 moveto (8418   cmd = malloc\(sizeof\(*cmd\)\);) show
0 420 moveto (8419   memset\(cmd, 0, sizeof\(*cmd\)\);) show
0 408 moveto (8420   cmd->type = LIST;) show
0 396 moveto (8421   cmd->left = left;) show
0 384 moveto (8422   cmd->right = right;) show
0 372 moveto (8423   return \(struct cmd*\)cmd;) show
0 360 moveto (8424 }) show
0 348 moveto (8425 ) show
0 336 moveto (8426 struct cmd*) show
0 324 moveto (8427 backcmd\(struct cmd *subcmd\)) show
0 312 moveto (8428 {) show
0 300 moveto (8429   struct backcmd *cmd;) show
0 288 moveto (8430 ) show
0 276 moveto (8431   cmd = malloc\(sizeof\(*cmd\)\);) show
0 264 moveto (8432   memset\(cmd, 0, sizeof\(*cmd\)\);) show
0 252 moveto (8433   cmd->type = BACK;) show
0 240 moveto (8434   cmd->cmd = subcmd;) show
0 228 moveto (8435   return \(struct cmd*\)cmd;) show
0 216 moveto (8436 }) show
0 204 moveto (8437 ) show
0 192 moveto (8438 ) show
0 180 moveto (8439 ) show
0 168 moveto (8440 ) show
0 156 moveto (8441 ) show
0 144 moveto (8442 ) show
0 132 moveto (8443 ) show
0 120 moveto (8444 ) show
0 108 moveto (8445 ) show
0 96 moveto (8446 ) show
0 84 moveto (8447 ) show
0 72 moveto (8448 ) show
0 60 moveto (8449 ) show
0 24 moveto (Sheet 84) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/sh.c  Page 9) show
0 648 moveto (8450 // Parsing) show
0 636 moveto (8451 ) show
0 624 moveto (8452 char whitespace[] = " \\t\\r\\n\\v";) show
0 612 moveto (8453 char symbols[] = "<|>&;\(\)";) show
0 600 moveto (8454 ) show
0 588 moveto (8455 int) show
0 576 moveto (8456 gettoken\(char **ps, char *es, char **q, char **eq\)) show
0 564 moveto (8457 {) show
0 552 moveto (8458   char *s;) show
0 540 moveto (8459   int ret;) show
0 528 moveto (8460 ) show
0 516 moveto (8461   s = *ps;) show
0 504 moveto (8462   while\(s < es && strchr\(whitespace, *s\)\)) show
0 492 moveto (8463     s++;) show
0 480 moveto (8464   if\(q\)) show
0 468 moveto (8465     *q = s;) show
0 456 moveto (8466   ret = *s;) show
0 444 moveto (8467   switch\(*s\){) show
0 432 moveto (8468   case 0:) show
0 420 moveto (8469     break;) show
0 408 moveto (8470   case '|':) show
0 396 moveto (8471   case '\(':) show
0 384 moveto (8472   case '\)':) show
0 372 moveto (8473   case ';':) show
0 360 moveto (8474   case '&':) show
0 348 moveto (8475   case '<':) show
0 336 moveto (8476     s++;) show
0 324 moveto (8477     break;) show
0 312 moveto (8478   case '>':) show
0 300 moveto (8479     s++;) show
0 288 moveto (8480     if\(*s == '>'\){) show
0 276 moveto (8481       ret = '+';) show
0 264 moveto (8482       s++;) show
0 252 moveto (8483     }) show
0 240 moveto (8484     break;) show
0 228 moveto (8485   default:) show
0 216 moveto (8486     ret = 'a';) show
0 204 moveto (8487     while\(s < es && !strchr\(whitespace, *s\) && !strchr\(symbols, *s\)\)) show
0 192 moveto (8488       s++;) show
0 180 moveto (8489     break;) show
0 168 moveto (8490   }) show
0 156 moveto (8491   if\(eq\)) show
0 144 moveto (8492     *eq = s;) show
0 132 moveto (8493 ) show
0 120 moveto (8494   while\(s < es && strchr\(whitespace, *s\)\)) show
0 108 moveto (8495     s++;) show
0 96 moveto (8496   *ps = s;) show
0 84 moveto (8497   return ret;) show
0 72 moveto (8498 }) show
0 60 moveto (8499 ) show
0 24 moveto (Sheet 84) show
grestore
restore
showpage
%%Page: 93 93
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/sh.c  Page 10) show
0 648 moveto (8500 int) show
0 636 moveto (8501 peek\(char **ps, char *es, char *toks\)) show
0 624 moveto (8502 {) show
0 612 moveto (8503   char *s;) show
0 600 moveto (8504 ) show
0 588 moveto (8505   s = *ps;) show
0 576 moveto (8506   while\(s < es && strchr\(whitespace, *s\)\)) show
0 564 moveto (8507     s++;) show
0 552 moveto (8508   *ps = s;) show
0 540 moveto (8509   return *s && strchr\(toks, *s\);) show
0 528 moveto (8510 }) show
0 516 moveto (8511 ) show
0 504 moveto (8512 struct cmd *parseline\(char**, char*\);) show
0 492 moveto (8513 struct cmd *parsepipe\(char**, char*\);) show
0 480 moveto (8514 struct cmd *parseexec\(char**, char*\);) show
0 468 moveto (8515 struct cmd *nulterminate\(struct cmd*\);) show
0 456 moveto (8516 ) show
0 444 moveto (8517 struct cmd*) show
0 432 moveto (8518 parsecmd\(char *s\)) show
0 420 moveto (8519 {) show
0 408 moveto (8520   char *es;) show
0 396 moveto (8521   struct cmd *cmd;) show
0 384 moveto (8522 ) show
0 372 moveto (8523   es = s + strlen\(s\);) show
0 360 moveto (8524   cmd = parseline\(&s, es\);) show
0 348 moveto (8525   peek\(&s, es, ""\);) show
0 336 moveto (8526   if\(s != es\){) show
0 324 moveto (8527     printf\(2, "leftovers: %s\\n", s\);) show
0 312 moveto (8528     panic\("syntax"\);) show
0 300 moveto (8529   }) show
0 288 moveto (8530   nulterminate\(cmd\);) show
0 276 moveto (8531   return cmd;) show
0 264 moveto (8532 }) show
0 252 moveto (8533 ) show
0 240 moveto (8534 struct cmd*) show
0 228 moveto (8535 parseline\(char **ps, char *es\)) show
0 216 moveto (8536 {) show
0 204 moveto (8537   struct cmd *cmd;) show
0 192 moveto (8538 ) show
0 180 moveto (8539   cmd = parsepipe\(ps, es\);) show
0 168 moveto (8540   while\(peek\(ps, es, "&"\)\){) show
0 156 moveto (8541     gettoken\(ps, es, 0, 0\);) show
0 144 moveto (8542     cmd = backcmd\(cmd\);) show
0 132 moveto (8543   }) show
0 120 moveto (8544   if\(peek\(ps, es, ";"\)\){) show
0 108 moveto (8545     gettoken\(ps, es, 0, 0\);) show
0 96 moveto (8546     cmd = listcmd\(cmd, parseline\(ps, es\)\);) show
0 84 moveto (8547   }) show
0 72 moveto (8548   return cmd;) show
0 60 moveto (8549 }) show
0 24 moveto (Sheet 85) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/sh.c  Page 11) show
0 648 moveto (8550 struct cmd*) show
0 636 moveto (8551 parsepipe\(char **ps, char *es\)) show
0 624 moveto (8552 {) show
0 612 moveto (8553   struct cmd *cmd;) show
0 600 moveto (8554 ) show
0 588 moveto (8555   cmd = parseexec\(ps, es\);) show
0 576 moveto (8556   if\(peek\(ps, es, "|"\)\){) show
0 564 moveto (8557     gettoken\(ps, es, 0, 0\);) show
0 552 moveto (8558     cmd = pipecmd\(cmd, parsepipe\(ps, es\)\);) show
0 540 moveto (8559   }) show
0 528 moveto (8560   return cmd;) show
0 516 moveto (8561 }) show
0 504 moveto (8562 ) show
0 492 moveto (8563 struct cmd*) show
0 480 moveto (8564 parseredirs\(struct cmd *cmd, char **ps, char *es\)) show
0 468 moveto (8565 {) show
0 456 moveto (8566   int tok;) show
0 444 moveto (8567   char *q, *eq;) show
0 432 moveto (8568 ) show
0 420 moveto (8569   while\(peek\(ps, es, "<>"\)\){) show
0 408 moveto (8570     tok = gettoken\(ps, es, 0, 0\);) show
0 396 moveto (8571     if\(gettoken\(ps, es, &q, &eq\) != 'a'\)) show
0 384 moveto (8572       panic\("missing file for redirection"\);) show
0 372 moveto (8573     switch\(tok\){) show
0 360 moveto (8574     case '<':) show
0 348 moveto (8575       cmd = redircmd\(cmd, q, eq, O_RDONLY, 0\);) show
0 336 moveto (8576       break;) show
0 324 moveto (8577     case '>':) show
0 312 moveto (8578       cmd = redircmd\(cmd, q, eq, O_WRONLY|O_CREATE, 1\);) show
0 300 moveto (8579       break;) show
0 288 moveto (8580     case '+':  // >>) show
0 276 moveto (8581       cmd = redircmd\(cmd, q, eq, O_WRONLY|O_CREATE, 1\);) show
0 264 moveto (8582       break;) show
0 252 moveto (8583     }) show
0 240 moveto (8584   }) show
0 228 moveto (8585   return cmd;) show
0 216 moveto (8586 }) show
0 204 moveto (8587 ) show
0 192 moveto (8588 ) show
0 180 moveto (8589 ) show
0 168 moveto (8590 ) show
0 156 moveto (8591 ) show
0 144 moveto (8592 ) show
0 132 moveto (8593 ) show
0 120 moveto (8594 ) show
0 108 moveto (8595 ) show
0 96 moveto (8596 ) show
0 84 moveto (8597 ) show
0 72 moveto (8598 ) show
0 60 moveto (8599 ) show
0 24 moveto (Sheet 85) show
grestore
restore
showpage
%%Page: 94 94
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/sh.c  Page 12) show
0 648 moveto (8600 struct cmd*) show
0 636 moveto (8601 parseblock\(char **ps, char *es\)) show
0 624 moveto (8602 {) show
0 612 moveto (8603   struct cmd *cmd;) show
0 600 moveto (8604 ) show
0 588 moveto (8605   if\(!peek\(ps, es, "\("\)\)) show
0 576 moveto (8606     panic\("parseblock"\);) show
0 564 moveto (8607   gettoken\(ps, es, 0, 0\);) show
0 552 moveto (8608   cmd = parseline\(ps, es\);) show
0 540 moveto (8609   if\(!peek\(ps, es, "\)"\)\)) show
0 528 moveto (8610     panic\("syntax - missing \)"\);) show
0 516 moveto (8611   gettoken\(ps, es, 0, 0\);) show
0 504 moveto (8612   cmd = parseredirs\(cmd, ps, es\);) show
0 492 moveto (8613   return cmd;) show
0 480 moveto (8614 }) show
0 468 moveto (8615 ) show
0 456 moveto (8616 struct cmd*) show
0 444 moveto (8617 parseexec\(char **ps, char *es\)) show
0 432 moveto (8618 {) show
0 420 moveto (8619   char *q, *eq;) show
0 408 moveto (8620   int tok, argc;) show
0 396 moveto (8621   struct execcmd *cmd;) show
0 384 moveto (8622   struct cmd *ret;) show
0 372 moveto (8623 ) show
0 360 moveto (8624   if\(peek\(ps, es, "\("\)\)) show
0 348 moveto (8625     return parseblock\(ps, es\);) show
0 336 moveto (8626 ) show
0 324 moveto (8627   ret = execcmd\(\);) show
0 312 moveto (8628   cmd = \(struct execcmd*\)ret;) show
0 300 moveto (8629 ) show
0 288 moveto (8630   argc = 0;) show
0 276 moveto (8631   ret = parseredirs\(ret, ps, es\);) show
0 264 moveto (8632   while\(!peek\(ps, es, "|\)&;"\)\){) show
0 252 moveto (8633     if\(\(tok=gettoken\(ps, es, &q, &eq\)\) == 0\)) show
0 240 moveto (8634       break;) show
0 228 moveto (8635     if\(tok != 'a'\)) show
0 216 moveto (8636       panic\("syntax"\);) show
0 204 moveto (8637     cmd->argv[argc] = q;) show
0 192 moveto (8638     cmd->eargv[argc] = eq;) show
0 180 moveto (8639     argc++;) show
0 168 moveto (8640     if\(argc >= MAXARGS\)) show
0 156 moveto (8641       panic\("too many args"\);) show
0 144 moveto (8642     ret = parseredirs\(ret, ps, es\);) show
0 132 moveto (8643   }) show
0 120 moveto (8644   cmd->argv[argc] = 0;) show
0 108 moveto (8645   cmd->eargv[argc] = 0;) show
0 96 moveto (8646   return ret;) show
0 84 moveto (8647 }) show
0 72 moveto (8648 ) show
0 60 moveto (8649 ) show
0 24 moveto (Sheet 86) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/sh.c  Page 13) show
0 648 moveto (8650 // NUL-terminate all the counted strings.) show
0 636 moveto (8651 struct cmd*) show
0 624 moveto (8652 nulterminate\(struct cmd *cmd\)) show
0 612 moveto (8653 {) show
0 600 moveto (8654   int i;) show
0 588 moveto (8655   struct backcmd *bcmd;) show
0 576 moveto (8656   struct execcmd *ecmd;) show
0 564 moveto (8657   struct listcmd *lcmd;) show
0 552 moveto (8658   struct pipecmd *pcmd;) show
0 540 moveto (8659   struct redircmd *rcmd;) show
0 528 moveto (8660 ) show
0 516 moveto (8661   if\(cmd == 0\)) show
0 504 moveto (8662     return 0;) show
0 492 moveto (8663 ) show
0 480 moveto (8664   switch\(cmd->type\){) show
0 468 moveto (8665   case EXEC:) show
0 456 moveto (8666     ecmd = \(struct execcmd*\)cmd;) show
0 444 moveto (8667     for\(i=0; ecmd->argv[i]; i++\)) show
0 432 moveto (8668       *ecmd->eargv[i] = 0;) show
0 420 moveto (8669     break;) show
0 408 moveto (8670 ) show
0 396 moveto (8671   case REDIR:) show
0 384 moveto (8672     rcmd = \(struct redircmd*\)cmd;) show
0 372 moveto (8673     nulterminate\(rcmd->cmd\);) show
0 360 moveto (8674     *rcmd->efile = 0;) show
0 348 moveto (8675     break;) show
0 336 moveto (8676 ) show
0 324 moveto (8677   case PIPE:) show
0 312 moveto (8678     pcmd = \(struct pipecmd*\)cmd;) show
0 300 moveto (8679     nulterminate\(pcmd->left\);) show
0 288 moveto (8680     nulterminate\(pcmd->right\);) show
0 276 moveto (8681     break;) show
0 264 moveto (8682 ) show
0 252 moveto (8683   case LIST:) show
0 240 moveto (8684     lcmd = \(struct listcmd*\)cmd;) show
0 228 moveto (8685     nulterminate\(lcmd->left\);) show
0 216 moveto (8686     nulterminate\(lcmd->right\);) show
0 204 moveto (8687     break;) show
0 192 moveto (8688 ) show
0 180 moveto (8689   case BACK:) show
0 168 moveto (8690     bcmd = \(struct backcmd*\)cmd;) show
0 156 moveto (8691     nulterminate\(bcmd->cmd\);) show
0 144 moveto (8692     break;) show
0 132 moveto (8693   }) show
0 120 moveto (8694   return cmd;) show
0 108 moveto (8695 }) show
0 96 moveto (8696 ) show
0 84 moveto (8697 ) show
0 72 moveto (8698 ) show
0 60 moveto (8699 ) show
0 24 moveto (Sheet 86) show
grestore
restore
showpage
%%Page: 95 95
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/bootasm.S  Page 1) show
0 648 moveto (8700 #include "asm.h") show
0 636 moveto (8701 #include "memlayout.h") show
0 624 moveto (8702 #include "mmu.h") show
0 612 moveto (8703 ) show
0 600 moveto (8704 # Start the first CPU: switch to 32-bit protected mode, jump into C.) show
0 588 moveto (8705 # The BIOS loads this code from the first sector of the hard disk into) show
0 576 moveto (8706 # memory at physical address 0x7c00 and starts executing in real mode) show
0 564 moveto (8707 # with %cs=0 %ip=7c00.) show
0 552 moveto (8708 ) show
0 540 moveto (8709 .code16                       # Assemble for 16-bit mode) show
0 528 moveto (8710 .globl start) show
0 516 moveto (8711 start:) show
0 504 moveto (8712   cli                         # BIOS enabled interrupts; disable) show
0 492 moveto (8713 ) show
0 480 moveto (8714   # Zero data segment registers DS, ES, and SS.) show
0 468 moveto (8715   xorw    %ax,%ax             # Set %ax to zero) show
0 456 moveto (8716   movw    %ax,%ds             # -> Data Segment) show
0 444 moveto (8717   movw    %ax,%es             # -> Extra Segment) show
0 432 moveto (8718   movw    %ax,%ss             # -> Stack Segment) show
0 420 moveto (8719 ) show
0 408 moveto (8720   # Physical address line A20 is tied to zero so that the first PCs) show
0 396 moveto (8721   # with 2 MB would run software that assumed 1 MB.  Undo that.) show
0 384 moveto (8722 seta20.1:) show
0 372 moveto (8723   inb     $0x64,%al               # Wait for not busy) show
0 360 moveto (8724   testb   $0x2,%al) show
0 348 moveto (8725   jnz     seta20.1) show
0 336 moveto (8726 ) show
0 324 moveto (8727   movb    $0xd1,%al               # 0xd1 -> port 0x64) show
0 312 moveto (8728   outb    %al,$0x64) show
0 300 moveto (8729 ) show
0 288 moveto (8730 seta20.2:) show
0 276 moveto (8731   inb     $0x64,%al               # Wait for not busy) show
0 264 moveto (8732   testb   $0x2,%al) show
0 252 moveto (8733   jnz     seta20.2) show
0 240 moveto (8734 ) show
0 228 moveto (8735   movb    $0xdf,%al               # 0xdf -> port 0x60) show
0 216 moveto (8736   outb    %al,$0x60) show
0 204 moveto (8737 ) show
0 192 moveto (8738   # Switch from real to protected mode.  Use a bootstrap GDT that makes) show
0 180 moveto (8739   # virtual addresses map directly to physical addresses so that the) show
0 168 moveto (8740   # effective memory map doesn't change during the transition.) show
0 156 moveto (8741   lgdt    gdtdesc) show
0 144 moveto (8742   movl    %cr0, %eax) show
0 132 moveto (8743   orl     $CR0_PE, %eax) show
0 120 moveto (8744   movl    %eax, %cr0) show
0 108 moveto (8745 ) show
0 96 moveto (8746   # Complete transition to 32-bit protected mode by using long jmp) show
0 84 moveto (8747   # to reload %cs and %eip.  The segment descriptors are set up with no) show
0 72 moveto (8748   # translation, so that the mapping is still the identity mapping.) show
0 60 moveto (8749   ljmp    $\(SEG_KCODE<<3\), $start32) show
0 24 moveto (Sheet 87) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/bootasm.S  Page 2) show
0 648 moveto (8750 .code32  # Tell assembler to generate 32-bit code now.) show
0 636 moveto (8751 start32:) show
0 624 moveto (8752   # Set up the protected-mode data segment registers) show
0 612 moveto (8753   movw    $\(SEG_KDATA<<3\), %ax    # Our data segment selector) show
0 600 moveto (8754   movw    %ax, %ds                # -> DS: Data Segment) show
0 588 moveto (8755   movw    %ax, %es                # -> ES: Extra Segment) show
0 576 moveto (8756   movw    %ax, %ss                # -> SS: Stack Segment) show
0 564 moveto (8757   movw    $0, %ax                 # Zero segments not ready for use) show
0 552 moveto (8758   movw    %ax, %fs                # -> FS) show
0 540 moveto (8759   movw    %ax, %gs                # -> GS) show
0 528 moveto (8760 ) show
0 516 moveto (8761   # Set up the stack pointer and call into C.) show
0 504 moveto (8762   movl    $start, %esp) show
0 492 moveto (8763   call    bootmain) show
0 480 moveto (8764 ) show
0 468 moveto (8765   # If bootmain returns \(it shouldn't\), trigger a Bochs) show
0 456 moveto (8766   # breakpoint if running under Bochs, then loop.) show
0 444 moveto (8767   movw    $0x8a00, %ax            # 0x8a00 -> port 0x8a00) show
0 432 moveto (8768   movw    %ax, %dx) show
0 420 moveto (8769   outw    %ax, %dx) show
0 408 moveto (8770   movw    $0x8ae0, %ax            # 0x8ae0 -> port 0x8a00) show
0 396 moveto (8771   outw    %ax, %dx) show
0 384 moveto (8772 spin:) show
0 372 moveto (8773   jmp     spin) show
0 360 moveto (8774 ) show
0 348 moveto (8775 # Bootstrap GDT) show
0 336 moveto (8776 .p2align 2                                # force 4 byte alignment) show
0 324 moveto (8777 gdt:) show
0 312 moveto (8778   SEG_NULLASM                             # null seg) show
0 300 moveto (8779   SEG_ASM\(STA_X|STA_R, 0x0, 0xffffffff\)   # code seg) show
0 288 moveto (8780   SEG_ASM\(STA_W, 0x0, 0xffffffff\)         # data seg) show
0 276 moveto (8781 ) show
0 264 moveto (8782 gdtdesc:) show
0 252 moveto (8783   .word   \(gdtdesc - gdt - 1\)             # sizeof\(gdt\) - 1) show
0 240 moveto (8784   .long   gdt                             # address gdt) show
0 228 moveto (8785 ) show
0 216 moveto (8786 ) show
0 204 moveto (8787 ) show
0 192 moveto (8788 ) show
0 180 moveto (8789 ) show
0 168 moveto (8790 ) show
0 156 moveto (8791 ) show
0 144 moveto (8792 ) show
0 132 moveto (8793 ) show
0 120 moveto (8794 ) show
0 108 moveto (8795 ) show
0 96 moveto (8796 ) show
0 84 moveto (8797 ) show
0 72 moveto (8798 ) show
0 60 moveto (8799 ) show
0 24 moveto (Sheet 87) show
grestore
restore
showpage
%%Page: 96 96
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/bootmain.c  Page 1) show
0 648 moveto (8800 // Boot loader.) show
0 636 moveto (8801 //) show
0 624 moveto (8802 // Part of the boot block, along with bootasm.S, which calls bootmain\(\).) show
0 612 moveto (8803 // bootasm.S has put the processor into protected 32-bit mode.) show
0 600 moveto (8804 // bootmain\(\) loads an ELF kernel image from the disk starting at) show
0 588 moveto (8805 // sector 1 and then jumps to the kernel entry routine.) show
0 576 moveto (8806 ) show
0 564 moveto (8807 #include "types.h") show
0 552 moveto (8808 #include "elf.h") show
0 540 moveto (8809 #include "x86.h") show
0 528 moveto (8810 #include "memlayout.h") show
0 516 moveto (8811 ) show
0 504 moveto (8812 #define SECTSIZE  512) show
0 492 moveto (8813 ) show
0 480 moveto (8814 void readseg\(uchar*, uint, uint\);) show
0 468 moveto (8815 ) show
0 456 moveto (8816 void) show
0 444 moveto (8817 bootmain\(void\)) show
0 432 moveto (8818 {) show
0 420 moveto (8819   struct elfhdr *elf;) show
0 408 moveto (8820   struct proghdr *ph, *eph;) show
0 396 moveto (8821   void \(*entry\)\(void\);) show
0 384 moveto (8822   uchar* pa;) show
0 372 moveto (8823 ) show
0 360 moveto (8824   elf = \(struct elfhdr*\)0x10000;  // scratch space) show
0 348 moveto (8825 ) show
0 336 moveto (8826   // Read 1st page off disk) show
0 324 moveto (8827   readseg\(\(uchar*\)elf, 4096, 0\);) show
0 312 moveto (8828 ) show
0 300 moveto (8829   // Is this an ELF executable?) show
0 288 moveto (8830   if\(elf->magic != ELF_MAGIC\)) show
0 276 moveto (8831     return;  // let bootasm.S handle error) show
0 264 moveto (8832 ) show
0 252 moveto (8833   // Load each program segment \(ignores ph flags\).) show
0 240 moveto (8834   ph = \(struct proghdr*\)\(\(uchar*\)elf + elf->phoff\);) show
0 228 moveto (8835   eph = ph + elf->phnum;) show
0 216 moveto (8836   for\(; ph < eph; ph++\){) show
0 204 moveto (8837     pa = \(uchar*\)ph->paddr;) show
0 192 moveto (8838     readseg\(pa, ph->filesz, ph->off\);) show
0 180 moveto (8839     if\(ph->memsz > ph->filesz\)) show
0 168 moveto (8840       stosb\(pa + ph->filesz, 0, ph->memsz - ph->filesz\);) show
0 156 moveto (8841   }) show
0 144 moveto (8842 ) show
0 132 moveto (8843   // Call the entry point from the ELF header.) show
0 120 moveto (8844   // Does not return!) show
0 108 moveto (8845   entry = \(void\(*\)\(void\)\)\(elf->entry\);) show
0 96 moveto (8846   entry\(\);) show
0 84 moveto (8847 }) show
0 72 moveto (8848 ) show
0 60 moveto (8849 ) show
0 24 moveto (Sheet 88) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/bootmain.c  Page 2) show
0 648 moveto (8850 void) show
0 636 moveto (8851 waitdisk\(void\)) show
0 624 moveto (8852 {) show
0 612 moveto (8853   // Wait for disk ready.) show
0 600 moveto (8854   while\(\(inb\(0x1F7\) & 0xC0\) != 0x40\)) show
0 588 moveto (8855     ;) show
0 576 moveto (8856 }) show
0 564 moveto (8857 ) show
0 552 moveto (8858 // Read a single sector at offset into dst.) show
0 540 moveto (8859 void) show
0 528 moveto (8860 readsect\(void *dst, uint offset\)) show
0 516 moveto (8861 {) show
0 504 moveto (8862   // Issue command.) show
0 492 moveto (8863   waitdisk\(\);) show
0 480 moveto (8864   outb\(0x1F2, 1\);   // count = 1) show
0 468 moveto (8865   outb\(0x1F3, offset\);) show
0 456 moveto (8866   outb\(0x1F4, offset >> 8\);) show
0 444 moveto (8867   outb\(0x1F5, offset >> 16\);) show
0 432 moveto (8868   outb\(0x1F6, \(offset >> 24\) | 0xE0\);) show
0 420 moveto (8869   outb\(0x1F7, 0x20\);  // cmd 0x20 - read sectors) show
0 408 moveto (8870 ) show
0 396 moveto (8871   // Read data.) show
0 384 moveto (8872   waitdisk\(\);) show
0 372 moveto (8873   insl\(0x1F0, dst, SECTSIZE/4\);) show
0 360 moveto (8874 }) show
0 348 moveto (8875 ) show
0 336 moveto (8876 // Read 'count' bytes at 'offset' from kernel into physical address 'pa'.) show
0 324 moveto (8877 // Might copy more than asked.) show
0 312 moveto (8878 void) show
0 300 moveto (8879 readseg\(uchar* pa, uint count, uint offset\)) show
0 288 moveto (8880 {) show
0 276 moveto (8881   uchar* epa;) show
0 264 moveto (8882 ) show
0 252 moveto (8883   epa = pa + count;) show
0 240 moveto (8884 ) show
0 228 moveto (8885   // Round down to sector boundary.) show
0 216 moveto (8886   pa -= offset % SECTSIZE;) show
0 204 moveto (8887 ) show
0 192 moveto (8888   // Translate from bytes to sectors; kernel starts at sector 1.) show
0 180 moveto (8889   offset = \(offset / SECTSIZE\) + 1;) show
0 168 moveto (8890 ) show
0 156 moveto (8891   // If this is too slow, we could read lots of sectors at a time.) show
0 144 moveto (8892   // We'd write more to memory than asked, but it doesn't matter --) show
0 132 moveto (8893   // we load in increasing order.) show
0 120 moveto (8894   for\(; pa < epa; pa += SECTSIZE, offset++\)) show
0 108 moveto (8895     readsect\(pa, offset\);) show
0 96 moveto (8896 }) show
0 84 moveto (8897 ) show
0 72 moveto (8898 ) show
0 60 moveto (8899 ) show
0 24 moveto (Sheet 88) show
grestore
restore
showpage
%%Page: 97 97
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/print_mode.c  Page 1) show
0 648 moveto (8900 #ifdef CS333_P4) show
0 636 moveto (8901 // this is an ugly series of if statements but it works) show
0 624 moveto (8902 void) show
0 612 moveto (8903 print_mode\(struct stat* st\)) show
0 600 moveto (8904 {) show
0 588 moveto (8905   switch \(st->type\) {) show
0 576 moveto (8906     case T_DIR: printf\(1, "d"\); break;) show
0 564 moveto (8907     case T_FILE: printf\(1, "-"\); break;) show
0 552 moveto (8908     case T_DEV: printf\(1, "c"\); break;) show
0 540 moveto (8909     default: printf\(1, "?"\);) show
0 528 moveto (8910   }) show
0 516 moveto (8911 ) show
0 504 moveto (8912   if \(st->mode.flags.u_r\)) show
0 492 moveto (8913     printf\(1, "r"\);) show
0 480 moveto (8914   else) show
0 468 moveto (8915     printf\(1, "-"\);) show
0 456 moveto (8916 ) show
0 444 moveto (8917   if \(st->mode.flags.u_w\)) show
0 432 moveto (8918     printf\(1, "w"\);) show
0 420 moveto (8919   else) show
0 408 moveto (8920     printf\(1, "-"\);) show
0 396 moveto (8921 ) show
0 384 moveto (8922   if \(\(st->mode.flags.u_x\) & \(st->mode.flags.setuid\)\)) show
0 372 moveto (8923     printf\(1, "S"\);) show
0 360 moveto (8924   else if \(st->mode.flags.u_x\)) show
0 348 moveto (8925     printf\(1, "x"\);) show
0 336 moveto (8926   else) show
0 324 moveto (8927     printf\(1, "-"\);) show
0 312 moveto (8928 ) show
0 300 moveto (8929   if \(st->mode.flags.g_r\)) show
0 288 moveto (8930     printf\(1, "r"\);) show
0 276 moveto (8931   else) show
0 264 moveto (8932     printf\(1, "-"\);) show
0 252 moveto (8933 ) show
0 240 moveto (8934   if \(st->mode.flags.g_w\)) show
0 228 moveto (8935     printf\(1, "w"\);) show
0 216 moveto (8936   else) show
0 204 moveto (8937     printf\(1, "-"\);) show
0 192 moveto (8938 ) show
0 180 moveto (8939   if \(st->mode.flags.g_x\)) show
0 168 moveto (8940     printf\(1, "x"\);) show
0 156 moveto (8941   else) show
0 144 moveto (8942     printf\(1, "-"\);) show
0 132 moveto (8943 ) show
0 120 moveto (8944   if \(st->mode.flags.o_r\)) show
0 108 moveto (8945     printf\(1, "r"\);) show
0 96 moveto (8946   else) show
0 84 moveto (8947     printf\(1, "-"\);) show
0 72 moveto (8948 ) show
0 60 moveto (8949 ) show
0 24 moveto (Sheet 89) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/print_mode.c  Page 2) show
0 648 moveto (8950   if \(st->mode.flags.o_w\)) show
0 636 moveto (8951     printf\(1, "w"\);) show
0 624 moveto (8952   else) show
0 612 moveto (8953     printf\(1, "-"\);) show
0 600 moveto (8954 ) show
0 588 moveto (8955   if \(st->mode.flags.o_x\)) show
0 576 moveto (8956     printf\(1, "x"\);) show
0 564 moveto (8957   else) show
0 552 moveto (8958     printf\(1, "-"\);) show
0 540 moveto (8959 ) show
0 528 moveto (8960   return;) show
0 516 moveto (8961 }) show
0 504 moveto (8962 #endif) show
0 492 moveto (8963 ) show
0 480 moveto (8964 ) show
0 468 moveto (8965 ) show
0 456 moveto (8966 ) show
0 444 moveto (8967 ) show
0 432 moveto (8968 ) show
0 420 moveto (8969 ) show
0 408 moveto (8970 ) show
0 396 moveto (8971 ) show
0 384 moveto (8972 ) show
0 372 moveto (8973 ) show
0 360 moveto (8974 ) show
0 348 moveto (8975 ) show
0 336 moveto (8976 ) show
0 324 moveto (8977 ) show
0 312 moveto (8978 ) show
0 300 moveto (8979 ) show
0 288 moveto (8980 ) show
0 276 moveto (8981 ) show
0 264 moveto (8982 ) show
0 252 moveto (8983 ) show
0 240 moveto (8984 ) show
0 228 moveto (8985 ) show
0 216 moveto (8986 ) show
0 204 moveto (8987 ) show
0 192 moveto (8988 ) show
0 180 moveto (8989 ) show
0 168 moveto (8990 ) show
0 156 moveto (8991 ) show
0 144 moveto (8992 ) show
0 132 moveto (8993 ) show
0 120 moveto (8994 ) show
0 108 moveto (8995 ) show
0 96 moveto (8996 ) show
0 84 moveto (8997 ) show
0 72 moveto (8998 ) show
0 60 moveto (8999 ) show
0 24 moveto (Sheet 89) show
grestore
restore
showpage
%%Page: 98 98
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/date.c  Page 1) show
0 648 moveto (9000 #include "types.h") show
0 636 moveto (9001 #include "user.h") show
0 624 moveto (9002 #include "date.h") show
0 612 moveto (9003 ) show
0 600 moveto (9004 ) show
0 588 moveto (9005 int) show
0 576 moveto (9006 main\(int argc, char *argv[]\)) show
0 564 moveto (9007 {) show
0 552 moveto (9008   struct rtcdate r;) show
0 540 moveto (9009   if\(date\(&r\)\) {) show
0 528 moveto (9010     printf\(2,"date failed\\n"\);) show
0 516 moveto (9011     exit\(\);) show
0 504 moveto (9012   }) show
0 492 moveto (9013   printf\(1, "Current UTC time is: %d/%d/%d - %d:%d:%d\\n",r.year, r.month, r.day, r.hour, r.minute, r.second\);) show
0 480 moveto (9014 ) show
0 468 moveto (9015   exit\(\);) show
0 456 moveto (9016 }) show
0 444 moveto (9017 ) show
0 432 moveto (9018 ) show
0 420 moveto (9019 ) show
0 408 moveto (9020 ) show
0 396 moveto (9021 ) show
0 384 moveto (9022 ) show
0 372 moveto (9023 ) show
0 360 moveto (9024 ) show
0 348 moveto (9025 ) show
0 336 moveto (9026 ) show
0 324 moveto (9027 ) show
0 312 moveto (9028 ) show
0 300 moveto (9029 ) show
0 288 moveto (9030 ) show
0 276 moveto (9031 ) show
0 264 moveto (9032 ) show
0 252 moveto (9033 ) show
0 240 moveto (9034 ) show
0 228 moveto (9035 ) show
0 216 moveto (9036 ) show
0 204 moveto (9037 ) show
0 192 moveto (9038 ) show
0 180 moveto (9039 ) show
0 168 moveto (9040 ) show
0 156 moveto (9041 ) show
0 144 moveto (9042 ) show
0 132 moveto (9043 ) show
0 120 moveto (9044 ) show
0 108 moveto (9045 ) show
0 96 moveto (9046 ) show
0 84 moveto (9047 ) show
0 72 moveto (9048 ) show
0 60 moveto (9049 ) show
0 24 moveto (Sheet 90) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/uproc.h  Page 1) show
0 648 moveto (9050 #define STRMAX 32) show
0 636 moveto (9051 ) show
0 624 moveto (9052 struct uproc {) show
0 612 moveto (9053 ) show
8 mp_a_x mul 612 moveto (uint pid;) show
0 600 moveto (9054 ) show
8 mp_a_x mul 600 moveto (uint uid;) show
0 588 moveto (9055 ) show
8 mp_a_x mul 588 moveto (uint gid;) show
0 576 moveto (9056 ) show
8 mp_a_x mul 576 moveto (uint ppid;) show
0 564 moveto (9057 ) show
8 mp_a_x mul 564 moveto (uint elapsed_ticks;) show
0 552 moveto (9058 ) show
8 mp_a_x mul 552 moveto (uint CPU_total_ticks;) show
0 540 moveto (9059 ) show
8 mp_a_x mul 540 moveto (char state[STRMAX];) show
0 528 moveto (9060 ) show
8 mp_a_x mul 528 moveto (uint size;) show
0 516 moveto (9061 ) show
8 mp_a_x mul 516 moveto (char name[STRMAX];) show
0 504 moveto (9062 };) show
0 492 moveto (9063 ) show
0 480 moveto (9064 ) show
0 468 moveto (9065 ) show
0 456 moveto (9066 ) show
0 444 moveto (9067 ) show
0 432 moveto (9068 ) show
0 420 moveto (9069 ) show
0 408 moveto (9070 ) show
0 396 moveto (9071 ) show
0 384 moveto (9072 ) show
0 372 moveto (9073 ) show
0 360 moveto (9074 ) show
0 348 moveto (9075 ) show
0 336 moveto (9076 ) show
0 324 moveto (9077 ) show
0 312 moveto (9078 ) show
0 300 moveto (9079 ) show
0 288 moveto (9080 ) show
0 276 moveto (9081 ) show
0 264 moveto (9082 ) show
0 252 moveto (9083 ) show
0 240 moveto (9084 ) show
0 228 moveto (9085 ) show
0 216 moveto (9086 ) show
0 204 moveto (9087 ) show
0 192 moveto (9088 ) show
0 180 moveto (9089 ) show
0 168 moveto (9090 ) show
0 156 moveto (9091 ) show
0 144 moveto (9092 ) show
0 132 moveto (9093 ) show
0 120 moveto (9094 ) show
0 108 moveto (9095 ) show
0 96 moveto (9096 ) show
0 84 moveto (9097 ) show
0 72 moveto (9098 ) show
0 60 moveto (9099 ) show
0 24 moveto (Sheet 90) show
grestore
restore
showpage
%%Page: 99 99
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/testgiduid.c  Page 1) show
0 648 moveto (9100 #include "types.h") show
0 636 moveto (9101 #include "user.h") show
0 624 moveto (9102 ) show
0 612 moveto (9103 // Test GID and UID to be in the correct range) show
0 600 moveto (9104 #ifdef CS333_P2) show
0 588 moveto (9105 int) show
0 576 moveto (9106 testgiduid\(void\)) show
0 564 moveto (9107 {) show
0 552 moveto (9108 ) show
8 mp_a_x mul 552 moveto (uint uid, gid, ppid;) show
0 540 moveto (9109 ) show
0 528 moveto (9110 ) show
8 mp_a_x mul 528 moveto (uid = getuid\(\);) show
0 516 moveto (9111 ) show
8 mp_a_x mul 516 moveto (printf\(2, "Current UID is : %d\\n", uid\);) show
0 504 moveto (9112 ) show
8 mp_a_x mul 504 moveto (printf\(2, "Setting UID to 100\\n"\);) show
0 492 moveto (9113 ) show
8 mp_a_x mul 492 moveto (setuid\(100\);) show
0 480 moveto (9114 ) show
8 mp_a_x mul 480 moveto (uid = getuid\(\);) show
0 468 moveto (9115 ) show
8 mp_a_x mul 468 moveto (printf\(2, "Current UID is : %d\\n", uid\);) show
0 456 moveto (9116 ) show
0 444 moveto (9117 ) show
8 mp_a_x mul 444 moveto (gid = getgid\(\);) show
0 432 moveto (9118 ) show
8 mp_a_x mul 432 moveto (printf\(2, "Current GID is : %d\\n", gid\);) show
0 420 moveto (9119 ) show
8 mp_a_x mul 420 moveto (printf\(2, "Setting GID to 100\\n"\);) show
0 408 moveto (9120 ) show
8 mp_a_x mul 408 moveto (setgid\(100\);) show
0 396 moveto (9121 ) show
8 mp_a_x mul 396 moveto (gid = getgid\(\);) show
0 384 moveto (9122 ) show
8 mp_a_x mul 384 moveto (printf\(2, "Current UID is : %d\\n", gid\);) show
0 372 moveto (9123 ) show
0 360 moveto (9124 ) show
8 mp_a_x mul 360 moveto (ppid = getppid\(\);) show
0 348 moveto (9125 ) show
8 mp_a_x mul 348 moveto (printf\(2, "My parent process is : %d\\n", ppid\);) show
0 336 moveto (9126 ) show
8 mp_a_x mul 336 moveto (printf\(2, "Done!\\n"\);) show
0 324 moveto (9127 ) show
0 312 moveto (9128 ) show
8 mp_a_x mul 312 moveto (return 0;) show
0 300 moveto (9129 }) show
0 288 moveto (9130 ) show
0 276 moveto (9131 int) show
0 264 moveto (9132 main\(int argc, char *argv[]\)) show
0 252 moveto (9133 {) show
0 240 moveto (9134 ) show
8 mp_a_x mul 240 moveto (testgiduid\(\);) show
0 228 moveto (9135 ) show
8 mp_a_x mul 228 moveto (exit\(\);) show
0 216 moveto (9136 }) show
0 204 moveto (9137 #else) show
0 192 moveto (9138 int) show
0 180 moveto (9139 main\(int argc, char *argv[]\)) show
0 168 moveto (9140 {) show
0 156 moveto (9141 ) show
8 mp_a_x mul 156 moveto (printf\(2, "Please compile with CS333_P2 on to enable this feature.\\n"\);) show
0 144 moveto (9142 ) show
8 mp_a_x mul 144 moveto (exit\(\);) show
0 132 moveto (9143 }) show
0 120 moveto (9144 #endif) show
0 108 moveto (9145 ) show
0 96 moveto (9146 ) show
0 84 moveto (9147 ) show
0 72 moveto (9148 ) show
0 60 moveto (9149 ) show
0 24 moveto (Sheet 91) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/ps.c  Page 1) show
0 648 moveto (9150 #include "types.h") show
0 636 moveto (9151 #include "uproc.h") show
0 624 moveto (9152 #include "user.h") show
0 612 moveto (9153 ) show
0 600 moveto (9154 #ifdef CS333_P2) show
0 588 moveto (9155 int) show
0 576 moveto (9156 main\(int argc, char *argv[]\)) show
0 564 moveto (9157 {) show
0 552 moveto (9158 ) show
8 mp_a_x mul 552 moveto (int ptable_size;) show
0 540 moveto (9159 ) show
8 mp_a_x mul 540 moveto (uint display_size;) show
0 528 moveto (9160 ) show
8 mp_a_x mul 528 moveto (display_size = 64;) show
0 516 moveto (9161 ) show
8 mp_a_x mul 516 moveto (struct uproc* ps;) show
0 504 moveto (9162 ) show
8 mp_a_x mul 504 moveto (ps = malloc\(sizeof\(struct uproc\) * display_size\);) show
0 492 moveto (9163 ) show
8 mp_a_x mul 492 moveto (ptable_size = getprocs\(display_size, ps\);) show
0 480 moveto (9164 ) show
8 mp_a_x mul 480 moveto (if\(ptable_size <= 0\) {) show
0 468 moveto (9165 ) show
16 mp_a_x mul 468 moveto (printf\(1,"\\nGetting processes information failed\\n"\);) show
0 456 moveto (9166 ) show
16 mp_a_x mul 456 moveto (exit\(\);) show
0 444 moveto (9167 ) show
8 mp_a_x mul 444 moveto (}) show
0 432 moveto (9168 ) show
8 mp_a_x mul 432 moveto (printf\(1,"\\nNumber of processes is :%d\\n",ptable_size\);) show
0 420 moveto (9169 ) show
8 mp_a_x mul 420 moveto (printf\(1,"\\nPID       State     Name      UID       GID       PPID       Elapsed   CPU       Size\\n"\);) show
0 408 moveto (9170 ) show
8 mp_a_x mul 408 moveto (int i;) show
0 396 moveto (9171 ) show
8 mp_a_x mul 396 moveto (for\(i=0; i < ptable_size; ++i\){) show
0 384 moveto (9172     printf\(1,"\\n%d         %s    %s    %d    %d    %d    %d.%d    %d.%d    %d\\n", ps->pid,\\) show
0 372 moveto (9173 ) show
16 mp_a_x mul 372 moveto (ps->state,\\) show
0 360 moveto (9174 ) show
16 mp_a_x mul 360 moveto (ps->name,\\) show
0 348 moveto (9175 ) show
16 mp_a_x mul 348 moveto (ps->uid,\\) show
0 336 moveto (9176 ) show
16 mp_a_x mul 336 moveto (ps->gid,\\) show
0 324 moveto (9177 ) show
16 mp_a_x mul 324 moveto (ps->ppid, ps->elapsed_ticks/100, ps->elapsed_ticks%100, ps->CPU_total_ticks/100, ps->CPU_total_ticks%100, ps->size\);) show
0 312 moveto (9178 ) show
16 mp_a_x mul 312 moveto (++ps;) show
0 300 moveto (9179 ) show
8 mp_a_x mul 300 moveto (}) show
0 288 moveto (9180   exit\(\);) show
0 276 moveto (9181 }) show
0 264 moveto (9182 #else) show
0 252 moveto (9183 int) show
0 240 moveto (9184 main\(int argc, char *argv[]\)) show
0 228 moveto (9185 {) show
0 216 moveto (9186 ) show
8 mp_a_x mul 216 moveto (printf\(2, "Please compile with CS333_P2 on to enable this feature.\\n"\);) show
0 204 moveto (9187 ) show
8 mp_a_x mul 204 moveto (exit\(\);) show
0 192 moveto (9188 }) show
0 180 moveto (9189 #endif) show
0 168 moveto (9190 ) show
0 156 moveto (9191 ) show
0 144 moveto (9192 ) show
0 132 moveto (9193 ) show
0 120 moveto (9194 ) show
0 108 moveto (9195 ) show
0 96 moveto (9196 ) show
0 84 moveto (9197 ) show
0 72 moveto (9198 ) show
0 60 moveto (9199 ) show
0 24 moveto (Sheet 91) show
grestore
restore
showpage
%%Page: 100 100
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
0 684 moveto (Oct 15 20:55 2016  xv6/time.c  Page 1) show
0 648 moveto (9200 #include "types.h") show
0 636 moveto (9201 #include "user.h") show
0 624 moveto (9202 ) show
0 612 moveto (9203 #ifdef CS333_P2) show
0 600 moveto (9204 int) show
0 588 moveto (9205 main\(int argc, char *argv[]\)) show
0 576 moveto (9206 {) show
0 564 moveto (9207 ) show
8 mp_a_x mul 564 moveto (int elapsed_t = 0;) show
0 552 moveto (9208 ) show
8 mp_a_x mul 552 moveto (int pid;) show
0 540 moveto (9209 ) show
8 mp_a_x mul 540 moveto (int start_t = uptime\(\);) show
0 528 moveto (9210 ) show
8 mp_a_x mul 528 moveto (int end_t = start_t;) show
0 516 moveto (9211 ) show
8 mp_a_x mul 516 moveto (if\(argc > 1\) {) show
0 504 moveto (9212 ) show
16 mp_a_x mul 504 moveto (pid = fork\(\);) show
0 492 moveto (9213 ) show
16 mp_a_x mul 492 moveto (if\(pid > 0\) {) show
0 480 moveto (9214 ) show
24 mp_a_x mul 480 moveto (pid = wait\(\);) show
0 468 moveto (9215 ) show
24 mp_a_x mul 468 moveto (end_t= uptime\(\);) show
0 456 moveto (9216 ) show
24 mp_a_x mul 456 moveto (}) show
0 444 moveto (9217 ) show
16 mp_a_x mul 444 moveto (else if\(pid == 0\) {) show
0 432 moveto (9218 ) show
24 mp_a_x mul 432 moveto (//child process running) show
0 420 moveto (9219 ) show
24 mp_a_x mul 420 moveto (char **nargv = ++argv;) show
0 408 moveto (9220 ) show
24 mp_a_x mul 408 moveto (exec\(argv[0], nargv\);) show
0 396 moveto (9221 ) show
24 mp_a_x mul 396 moveto (exit\(\);) show
0 384 moveto (9222 ) show
24 mp_a_x mul 384 moveto (}) show
0 372 moveto (9223 ) show
16 mp_a_x mul 372 moveto (else {) show
0 360 moveto (9224 ) show
24 mp_a_x mul 360 moveto (// error) show
0 348 moveto (9225 ) show
24 mp_a_x mul 348 moveto (exit\(\);) show
0 336 moveto (9226 ) show
24 mp_a_x mul 336 moveto (}) show
0 324 moveto (9227 ) show
16 mp_a_x mul 324 moveto (}) show
0 312 moveto (9228 ) show
8 mp_a_x mul 312 moveto (elapsed_t = end_t - start_t;) show
0 300 moveto (9229 ) show
8 mp_a_x mul 300 moveto (char *proc_name = argv[1] ? argv[1] : "";) show
0 288 moveto (9230   printf\(1,"%s ran in %d.%d seconds\\n",proc_name, elapsed_t/100, elapsed_t%100\);) show
0 276 moveto (9231 ) show
0 264 moveto (9232   exit\(\);) show
0 252 moveto (9233 }) show
0 240 moveto (9234 #else) show
0 228 moveto (9235 int) show
0 216 moveto (9236 main\(int argc, char *argv[]\)) show
0 204 moveto (9237 {) show
0 192 moveto (9238 ) show
8 mp_a_x mul 192 moveto (printf\(2, "Please compile with CS333_P2 on to enable this feature.\\n"\);) show
0 180 moveto (9239 ) show
8 mp_a_x mul 180 moveto (exit\(\);) show
0 168 moveto (9240 }) show
0 156 moveto (9241 #endif) show
0 144 moveto (9242 ) show
0 132 moveto (9243 ) show
0 120 moveto (9244 ) show
0 108 moveto (9245 ) show
0 96 moveto (9246 ) show
0 84 moveto (9247 ) show
0 72 moveto (9248 ) show
0 60 moveto (9249 ) show
0 24 moveto (Sheet 92) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
grestore
restore
showpage
%%Trailer
%%Pages: 100
